(function(global) {

global.__DEV__ = true;

global.__BUNDLE_START_TIME__ = global.nativePerformanceNow ? global.nativePerformanceNow() : Date.now();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

'use strict';

global.require = _require;
global.__d = define;

var modules = Object.create(null);
if (__DEV__) {
  var verboseNamesToModuleIds = Object.create(null);
}

function define(factory, moduleId, dependencyMap) {
  if (moduleId in modules) {
    return;
  }
  modules[moduleId] = {
    dependencyMap: dependencyMap,
    exports: undefined,
    factory: factory,
    hasError: false,
    isInitialized: false
  };
  if (__DEV__) {
    modules[moduleId].hot = createHotReloadingObject();

    var _verboseName = arguments[3];
    if (_verboseName) {
      modules[moduleId].verboseName = _verboseName;
      verboseNamesToModuleIds[_verboseName] = moduleId;
    }
  }
}

function _require(moduleId) {
  if (__DEV__ && typeof moduleId === 'string') {
    var _verboseName2 = moduleId;
    moduleId = verboseNamesToModuleIds[moduleId];
    if (moduleId == null) {
      throw new Error('Unknown named module: \'' + _verboseName2 + '\'');
    } else {
      console.warn('Requiring module \'' + _verboseName2 + '\' by name is only supported for ' + 'debugging purposes and will BREAK IN PRODUCTION!');
    }
  }

  var moduleIdReallyIsNumber = moduleId;
  var module = modules[moduleIdReallyIsNumber];
  return module && module.isInitialized ? module.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
}

var inGuard = false;
function guardedLoadModule(moduleId, module) {
  if (!inGuard && global.ErrorUtils) {
    inGuard = true;
    var returnValue = void 0;
    try {
      returnValue = loadModuleImplementation(moduleId, module);
    } catch (e) {
      global.ErrorUtils.reportFatalError(e);
    }
    inGuard = false;
    return returnValue;
  } else {
    return loadModuleImplementation(moduleId, module);
  }
}

function loadModuleImplementation(moduleId, module) {
  var nativeRequire = global.nativeRequire;
  if (!module && nativeRequire) {
    nativeRequire(moduleId);
    module = modules[moduleId];
  }

  if (!module) {
    throw unknownModuleError(moduleId);
  }

  if (module.hasError) {
    throw moduleThrewError(moduleId, module.error);
  }

  if (__DEV__) {
    var Systrace = _require.Systrace;
  }

  module.isInitialized = true;
  var exports = module.exports = {};
  var _module = module,
      factory = _module.factory,
      dependencyMap = _module.dependencyMap;

  try {
    if (__DEV__) {
      Systrace.beginEvent('JS_require_' + (module.verboseName || moduleId));
    }

    var _moduleObject = { exports: exports };
    if (__DEV__ && module.hot) {
      _moduleObject.hot = module.hot;
    }

    factory(global, _require, _moduleObject, exports, dependencyMap);

    if (!__DEV__) {
      module.factory = undefined;
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
    return module.exports = _moduleObject.exports;
  } catch (e) {
    module.hasError = true;
    module.error = e;
    module.isInitialized = false;
    module.exports = undefined;
    throw e;
  }
}

function unknownModuleError(id) {
  var message = 'Requiring unknown module "' + id + '".';
  if (__DEV__) {
    message += 'If you are sure the module is there, try restarting the packager. ' + 'You may also want to run `npm install`, or `yarn` (depending on your environment).';
  }
  return Error(message);
}

function moduleThrewError(id, error) {
  var displayName = __DEV__ && modules[id] && modules[id].verboseName || id;
  return Error('Requiring module "' + displayName + '", which threw an exception: ' + error);
}

if (__DEV__) {
  _require.Systrace = { beginEvent: function beginEvent() {}, endEvent: function endEvent() {} };

  var createHotReloadingObject = function createHotReloadingObject() {
    var hot = {
      acceptCallback: null,
      accept: function accept(callback) {
        hot.acceptCallback = callback;
      }
    };
    return hot;
  };

  var acceptAll = function acceptAll(dependentModules, inverseDependencies) {
    if (!dependentModules || dependentModules.length === 0) {
      return true;
    }

    var notAccepted = dependentModules.filter(function (module) {
      return !_accept(module, undefined, inverseDependencies);
    });

    var parents = [];
    for (var i = 0; i < notAccepted.length; i++) {
      if (inverseDependencies[notAccepted[i]].length === 0) {
        return false;
      }

      parents.push.apply(parents, babelHelpers.toConsumableArray(inverseDependencies[notAccepted[i]]));
    }

    return acceptAll(parents, inverseDependencies);
  };

  var _accept = function _accept(id, factory, inverseDependencies) {
    var mod = modules[id];

    if (!mod && factory) {
      define(factory, id);
      return true;
    }

    var hot = mod.hot;

    if (!hot) {
      console.warn('Cannot accept module because Hot Module Replacement ' + 'API was not installed.');
      return false;
    }

    if (factory) {
      mod.factory = factory;
    }
    mod.hasError = false;
    mod.isInitialized = false;
    _require(id);

    if (hot.acceptCallback) {
      hot.acceptCallback();
      return true;
    } else {
      if (!inverseDependencies) {
        throw new Error('Undefined `inverseDependencies`');
      }

      return acceptAll(inverseDependencies[id], inverseDependencies);
    }
  };

  global.__accept = _accept;
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

Object.assign = function (target, sources) {
  if (__DEV__) {
    if (target == null) {
      throw new TypeError('Object.assign target cannot be null or undefined');
    }
    if (typeof target !== 'object' && typeof target !== 'function') {
      throw new TypeError('In this environment the target of assign MUST be an object.' + 'This error is a performance optimization and not spec compliant.');
    }
  }

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    if (__DEV__) {
      if (typeof nextSource !== 'object' && typeof nextSource !== 'function') {
        throw new TypeError('In this environment the sources for assign MUST be an object.' + 'This error is a performance optimization and not spec compliant.');
      }
    }

    for (var key in nextSource) {
      if (__DEV__) {
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        if (!hasOwnProperty.call(nextSource, key)) {
          throw new TypeError('One of the sources for assign has an enumerable key on the ' + 'prototype chain. Are you trying to assign a prototype property? ' + 'We don\'t allow it, as this is an edge case that we do not support. ' + 'This error is a performance optimization and not spec compliant.');
        }
      }
      target[key] = nextSource[key];
    }
  }

  return target;
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
var inspect = function () {

  function inspect(obj, opts) {
    var ctx = {
      seen: [],
      stylize: stylizeNoColor
    };
    return formatValue(ctx, obj, opts.depth);
  }

  function stylizeNoColor(str, styleType) {
    return str;
  }

  function arrayToHash(array) {
    var hash = {};

    array.forEach(function (val, idx) {
      hash[val] = true;
    });

    return hash;
  }

  function formatValue(ctx, value, recurseTimes) {
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }

    var keys = Object.keys(value);
    var visibleKeys = arrayToHash(keys);

    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
      return formatError(value);
    }

    if (keys.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ': ' + value.name : '';
        return ctx.stylize('[Function' + name + ']', 'special');
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), 'date');
      }
      if (isError(value)) {
        return formatError(value);
      }
    }

    var base = '',
        array = false,
        braces = ['{', '}'];

    if (isArray(value)) {
      array = true;
      braces = ['[', ']'];
    }

    if (isFunction(value)) {
      var n = value.name ? ': ' + value.name : '';
      base = ' [Function' + n + ']';
    }

    if (isRegExp(value)) {
      base = ' ' + RegExp.prototype.toString.call(value);
    }

    if (isDate(value)) {
      base = ' ' + Date.prototype.toUTCString.call(value);
    }

    if (isError(value)) {
      base = ' ' + formatError(value);
    }

    if (keys.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }

    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      } else {
        return ctx.stylize('[Object]', 'special');
      }
    }

    ctx.seen.push(value);

    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    } else {
      output = keys.map(function (key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }

    ctx.seen.pop();

    return reduceToSingleString(output, base, braces);
  }

  function formatPrimitive(ctx, value) {
    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
    if (isString(value)) {
      var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
      return ctx.stylize(simple, 'string');
    }
    if (isNumber(value)) return ctx.stylize('' + value, 'number');
    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');

    if (isNull(value)) return ctx.stylize('null', 'null');
  }

  function formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
  }

  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for (var i = 0, l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
      } else {
        output.push('');
      }
    }
    keys.forEach(function (key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
      }
    });
    return output;
  }

  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize('[Getter/Setter]', 'special');
      } else {
        str = ctx.stylize('[Getter]', 'special');
      }
    } else {
      if (desc.set) {
        str = ctx.stylize('[Setter]', 'special');
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = '[' + key + ']';
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf('\n') > -1) {
          if (array) {
            str = str.split('\n').map(function (line) {
              return '  ' + line;
            }).join('\n').substr(2);
          } else {
            str = '\n' + str.split('\n').map(function (line) {
              return '   ' + line;
            }).join('\n');
          }
        }
      } else {
        str = ctx.stylize('[Circular]', 'special');
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify('' + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, 'name');
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, 'string');
      }
    }

    return name + ': ' + str;
  }

  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function (prev, cur) {
      numLinesEst++;
      if (cur.indexOf('\n') >= 0) numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);

    if (length > 60) {
      return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    }

    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
  }

  function isArray(ar) {
    return Array.isArray(ar);
  }

  function isBoolean(arg) {
    return typeof arg === 'boolean';
  }

  function isNull(arg) {
    return arg === null;
  }

  function isNullOrUndefined(arg) {
    return arg == null;
  }

  function isNumber(arg) {
    return typeof arg === 'number';
  }

  function isString(arg) {
    return typeof arg === 'string';
  }

  function isSymbol(arg) {
    return typeof arg === 'symbol';
  }

  function isUndefined(arg) {
    return arg === void 0;
  }

  function isRegExp(re) {
    return isObject(re) && objectToString(re) === '[object RegExp]';
  }

  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }

  function isDate(d) {
    return isObject(d) && objectToString(d) === '[object Date]';
  }

  function isError(e) {
    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
  }

  function isFunction(arg) {
    return typeof arg === 'function';
  }

  function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
  }

  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }

  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  return inspect;
}();

var OBJECT_COLUMN_NAME = '(index)';
var LOG_LEVELS = {
  trace: 0,
  info: 1,
  warn: 2,
  error: 3
};
var INSPECTOR_LEVELS = [];
INSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';
INSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';
INSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';
INSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';

var INSPECTOR_FRAMES_TO_SKIP = __DEV__ ? 2 : 1;

function setupConsole(global) {
  if (!global.nativeLoggingHook) {
    return;
  }

  function getNativeLogFunction(level) {
    return function () {
      var str = void 0;
      if (arguments.length === 1 && typeof arguments[0] === 'string') {
        str = arguments[0];
      } else {
        str = Array.prototype.map.call(arguments, function (arg) {
          return inspect(arg, { depth: 10 });
        }).join(', ');
      }

      var logLevel = level;
      if (str.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {
        logLevel = LOG_LEVELS.warn;
      }
      if (global.__inspectorLog) {
        global.__inspectorLog(INSPECTOR_LEVELS[logLevel], str, [].slice.call(arguments), INSPECTOR_FRAMES_TO_SKIP);
      }
      global.nativeLoggingHook(str, logLevel);
    };
  }

  function repeat(element, n) {
    return Array.apply(null, Array(n)).map(function () {
      return element;
    });
  };

  function consoleTablePolyfill(rows) {
    if (!Array.isArray(rows)) {
      var data = rows;
      rows = [];
      for (var key in data) {
        if (data.hasOwnProperty(key)) {
          var row = data[key];
          row[OBJECT_COLUMN_NAME] = key;
          rows.push(row);
        }
      }
    }
    if (rows.length === 0) {
      global.nativeLoggingHook('', LOG_LEVELS.info);
      return;
    }

    var columns = Object.keys(rows[0]).sort();
    var stringRows = [];
    var columnWidths = [];

    columns.forEach(function (k, i) {
      columnWidths[i] = k.length;
      for (var j = 0; j < rows.length; j++) {
        var cellStr = (rows[j][k] || '?').toString();
        stringRows[j] = stringRows[j] || [];
        stringRows[j][i] = cellStr;
        columnWidths[i] = Math.max(columnWidths[i], cellStr.length);
      }
    });

    function joinRow(row, space) {
      var cells = row.map(function (cell, i) {
        var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');
        return cell + extraSpaces;
      });
      space = space || ' ';
      return cells.join(space + '|' + space);
    };

    var separators = columnWidths.map(function (columnWidth) {
      return repeat('-', columnWidth).join('');
    });
    var separatorRow = joinRow(separators, '-');
    var header = joinRow(columns);
    var table = [header, separatorRow];

    for (var i = 0; i < rows.length; i++) {
      table.push(joinRow(stringRows[i]));
    }

    global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.info);
  }

  var originalConsole = global.console;
  var descriptor = Object.getOwnPropertyDescriptor(global, 'console');
  if (descriptor) {
    Object.defineProperty(global, 'originalConsole', descriptor);
  }

  global.console = {
    error: getNativeLogFunction(LOG_LEVELS.error),
    info: getNativeLogFunction(LOG_LEVELS.info),
    log: getNativeLogFunction(LOG_LEVELS.info),
    warn: getNativeLogFunction(LOG_LEVELS.warn),
    trace: getNativeLogFunction(LOG_LEVELS.trace),
    debug: getNativeLogFunction(LOG_LEVELS.trace),
    table: consoleTablePolyfill
  };

  if (__DEV__ && originalConsole) {
    Object.keys(console).forEach(function (methodName) {
      var reactNativeMethod = console[methodName];
      if (originalConsole[methodName]) {
        console[methodName] = function () {
          originalConsole[methodName].apply(originalConsole, arguments);
          reactNativeMethod.apply(console, arguments);
        };
      }
    });
  }
}

if (typeof module !== 'undefined') {
  module.exports = setupConsole;
} else {
  setupConsole(global);
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var _inGuard = 0;

var _globalHandler = function onError(e) {
  throw e;
};

var ErrorUtils = {
  setGlobalHandler: function setGlobalHandler(fun) {
    _globalHandler = fun;
  },
  getGlobalHandler: function getGlobalHandler() {
    return _globalHandler;
  },
  reportError: function reportError(error) {
    _globalHandler && _globalHandler(error);
  },
  reportFatalError: function reportFatalError(error) {
    _globalHandler && _globalHandler(error, true);
  },
  applyWithGuard: function applyWithGuard(fun, context, args) {
    try {
      _inGuard++;
      return fun.apply(context, args);
    } catch (e) {
      ErrorUtils.reportError(e);
    } finally {
      _inGuard--;
    }
    return null;
  },
  applyWithGuardIfNeeded: function applyWithGuardIfNeeded(fun, context, args) {
    if (ErrorUtils.inGuard()) {
      return fun.apply(context, args);
    } else {
      ErrorUtils.applyWithGuard(fun, context, args);
    }
    return null;
  },
  inGuard: function inGuard() {
    return _inGuard;
  },
  guard: function guard(fun, name, context) {
    if (typeof fun !== 'function') {
      console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
      return null;
    }
    name = name || fun.name || '<generated guard>';
    function guarded() {
      return ErrorUtils.applyWithGuard(fun, context || this, arguments, null, name);
    }

    return guarded;
  }
};

global.ErrorUtils = ErrorUtils;
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (Number.EPSILON === undefined) {
  Object.defineProperty(Number, 'EPSILON', {
    value: Math.pow(2, -52)
  });
}
if (Number.MAX_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {
    value: Math.pow(2, 53) - 1
  });
}
if (Number.MIN_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {
    value: -(Math.pow(2, 53) - 1)
  });
}
if (!Number.isNaN) {
  var globalIsNaN = global.isNaN;
  Object.defineProperty(Number, 'isNaN', {
    configurable: true,
    enumerable: false,
    value: function isNaN(value) {
      return typeof value === 'number' && globalIsNaN(value);
    },
    writable: true
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : 0;
    var start = Math.min(Math.max(pos, 0), string.length);
    return string.indexOf(String(search), pos) === start;
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var stringLength = string.length;
    var searchString = String(search);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : stringLength;
    var end = Math.min(Math.max(pos, 0), stringLength);
    var start = end - searchString.length;
    if (start < 0) {
      return false;
    }
    return string.lastIndexOf(searchString, start) === start;
  };
}

if (!String.prototype.repeat) {
  String.prototype.repeat = function (count) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    count = Number(count) || 0;
    if (count < 0 || count === Infinity) {
      throw RangeError();
    }
    if (count === 1) {
      return string;
    }
    var result = '';
    while (count) {
      if (count & 1) {
        result += string;
      }
      if (count >>= 1) {
        string += string;
      }
    }
    return result;
  };
}

if (!String.prototype.includes) {
  String.prototype.includes = function (search, start) {
    'use strict';

    if (typeof start !== 'number') {
      start = 0;
    }

    if (start + search.length > this.length) {
      return false;
    } else {
      return this.indexOf(search, start) !== -1;
    }
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
function findIndex(predicate, context) {
  if (this == null) {
    throw new TypeError('Array.prototype.findIndex called on null or undefined');
  }
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate must be a function');
  }
  var list = Object(this);
  var length = list.length >>> 0;
  for (var i = 0; i < length; i++) {
    if (predicate.call(context, list[i], i, list)) {
      return i;
    }
  }
  return -1;
}

if (!Array.prototype.findIndex) {
  Object.defineProperty(Array.prototype, 'findIndex', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: findIndex
  });
}

if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, 'find', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(predicate, context) {
      if (this == null) {
        throw new TypeError('Array.prototype.find called on null or undefined');
      }
      var index = findIndex.call(this, predicate, context);
      return index === -1 ? undefined : this[index];
    }
  });
}

if (!Array.prototype.includes) {
  Object.defineProperty(Array.prototype, 'includes', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(searchElement) {
      var O = Object(this);
      var len = parseInt(O.length) || 0;
      if (len === 0) {
        return false;
      }
      var n = parseInt(arguments[1]) || 0;
      var k;
      if (n >= 0) {
        k = n;
      } else {
        k = len + n;
        if (k < 0) {
          k = 0;
        }
      }
      var currentElement;
      while (k < len) {
        currentElement = O[k];
        if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
          return true;
        }
        k++;
      }
      return false;
    }
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
if (!Array.from) {
  Array.from = function (arrayLike) {
    if (arrayLike == null) {
      throw new TypeError('Object is null or undefined');
    }

    var mapFn = arguments[1];
    var thisArg = arguments[2];

    var C = this;
    var items = Object(arrayLike);
    var symbolIterator = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
    var mapping = typeof mapFn === 'function';
    var usingIterator = typeof items[symbolIterator] === 'function';
    var key = 0;
    var ret;
    var value;

    if (usingIterator) {
      ret = typeof C === 'function' ? new C() : [];
      var it = items[symbolIterator]();
      var next;

      while (!(next = it.next()).done) {
        value = next.value;

        if (mapping) {
          value = mapFn.call(thisArg, value, key);
        }

        ret[key] = value;
        key += 1;
      }

      ret.length = key;
      return ret;
    }

    var len = items.length;
    if (isNaN(len) || len < 0) {
      len = 0;
    }

    ret = typeof C === 'function' ? new C(len) : new Array(len);

    while (key < len) {
      value = items[key];

      if (mapping) {
        value = mapFn.call(thisArg, value, key);
      }

      ret[key] = value;

      key += 1;
    }

    ret.length = key;
    return ret;
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

(function () {
  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  if (typeof Object.entries !== 'function') {
    Object.entries = function (object) {
      if (object == null) {
        throw new TypeError('Object.entries called on non-object');
      }

      var entries = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          entries.push([key, object[key]]);
        }
      }
      return entries;
    };
  }

  if (typeof Object.values !== 'function') {
    Object.values = function (object) {
      if (object == null) {
        throw new TypeError('Object.values called on non-object');
      }

      var values = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          values.push(object[key]);
        }
      }
      return values;
    };
  }
})();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var babelHelpers = global.babelHelpers = {};

babelHelpers.typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

babelHelpers.createRawReactElement = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 0xeac7;
  return function createRawReactElement(type, key, props) {
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: null,
      props: props,
      _owner: null
    };
  };
}();

babelHelpers.classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

babelHelpers.createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

babelHelpers.defineEnumerableProperties = function (obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ('value' in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }
  return obj;
};

babelHelpers.defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

babelHelpers._extends = babelHelpers.extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

babelHelpers.get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

babelHelpers.inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

babelHelpers.interopRequireDefault = function (obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
};

babelHelpers.interopRequireWildcard = function (obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
};

babelHelpers.objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

babelHelpers.possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

babelHelpers.slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

babelHelpers.taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

babelHelpers.toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

babelHelpers.toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
__d(/* Student_Counter/index.android.js */function(global, require, module, exports) {require(12        ); // 12 = ./app.js
}, 0, null, "Student_Counter/index.android.js");
__d(/* Student_Counter/app.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\app.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _CameraScreen = require(417                            ); // 417 = ./src/components/CameraScreen

var _CameraScreen2 = babelHelpers.interopRequireDefault(_CameraScreen);

var _HomeScreen = require(553                       ); // 553 = ./src/screens/HomeScreen

var _HomeScreen2 = babelHelpers.interopRequireDefault(_HomeScreen);

var _Home = require(785                 ); // 785 = ./src/screens/Home

var _Home2 = babelHelpers.interopRequireDefault(_Home);

var Class = require(818              ); // 818 = ./src/lib/Class
var Lesson = require(808               ); // 808 = ./src/lib/Lesson
var Presence = require(820                 ); // 820 = ./src/lib/Presence
var Student = require(819                ); // 819 = ./src/lib/Student
var Subject = require(809                ); // 809 = ./src/lib/Subject
var Teacher = require(810                ); // 810 = ./src/lib/Teacher


var firebase = require(419       ); // 419 = firebase

firebase.initializeApp({
    apiKey: "AIzaSyCJO-fJa5dlYXKK1zy8bt4TxzwoniSvtsU",
    authDomain: "gpbitteam-59ca2.firebaseapp.com",
    databaseURL: "https://gpbitteam-59ca2.firebaseio.com",
    projectId: "gpbitteam-59ca2",
    storageBucket: "gpbitteam-59ca2.appspot.com",
    messagingSenderId: "571714718837"
});

var App = function (_Component) {
    babelHelpers.inherits(App, _Component);

    function App() {
        babelHelpers.classCallCheck(this, App);
        return babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
    }

    babelHelpers.createClass(App, [{
        key: "componentWillMount",
        value: function componentWillMount() {}
    }, {
        key: "init",
        value: function init() {
            var teacher_jf, teacher_jv, student_ricardo, student_bruno, subject_gp, subject_dbm, clazz_1, clazz_2, lesson_gp_1, lesson_gp_2, lesson_gp_3, lesson_gp_4, lesson_dbm_1, lesson_dbm_2, lesson_dbm_3, lesson_dbm_4, presence_ricardo_gp_lesson_1, presence_ricardo_gp_lesson_2, presence_ricardo_gp_lesson_3, presence_ricardo_gp_lesson_4, presence_ricardo_dbm_lesson_1, presence_ricardo_dbm_lesson_2, presence_ricardo_dbm_lesson_3, presence_ricardo_dbm_lesson_4;
            return regeneratorRuntime.async(function init$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            this.signup("artur_esteves1995@hotmail.com", "pw_test1");
                            this.login("artur_esteves1995@hotmail.com", "pw_test1");
                            teacher_jf = new Teacher("Joaquim Filipe", "joaquim.filipe@gmail.com", "13-12-1980", "myphoto");
                            teacher_jv = new Teacher("João Ventura", "joao.ventura@gmail.com", "13-12-1980", "myphoto");
                            _context.next = 6;
                            return regeneratorRuntime.awrap(teacher_jf.save());

                        case 6:
                            _context.next = 8;
                            return regeneratorRuntime.awrap(teacher_jv.save());

                        case 8:
                            student_ricardo = new Student("140221066", "Ricardo Morais", new Date().toISOString(), "moraispgsi@gmail.com", "src/image1");
                            student_bruno = new Student("140221067", "Bruno Batista", new Date().toISOString(), "batistamofo@gmail.com", "src/image2");
                            _context.next = 12;
                            return regeneratorRuntime.awrap(student_ricardo.save());

                        case 12:
                            _context.next = 14;
                            return regeneratorRuntime.awrap(student_bruno.save());

                        case 14:
                            subject_gp = new Subject("Gestão de Projeto", "GP", [teacher_jf.id, teacher_jv.id]);
                            subject_dbm = new Subject("Desenvolvimento Baseado em Modelos", "DBM", [teacher_jf.id]);
                            _context.next = 18;
                            return regeneratorRuntime.awrap(subject_gp.save());

                        case 18:
                            _context.next = 20;
                            return regeneratorRuntime.awrap(subject_dbm.save());

                        case 20:
                            clazz_1 = new Class("Class 1", [student_ricardo.number, student_bruno.number], [subject_gp.id, subject_dbm.id]);
                            clazz_2 = new Class("Class 2", [student_ricardo.number], [subject_dbm.id]);
                            _context.next = 24;
                            return regeneratorRuntime.awrap(clazz_1.save());

                        case 24:
                            _context.next = 26;
                            return regeneratorRuntime.awrap(clazz_2.save());

                        case 26:
                            lesson_gp_1 = new Lesson(teacher_jv.id, subject_gp.id, new Date().toISOString(), new Date().toISOString(), "src/image3", "sumário..");
                            lesson_gp_2 = new Lesson(teacher_jv.id, subject_gp.id, new Date().toISOString(), new Date().toISOString(), "src/image4", "sumário..");
                            lesson_gp_3 = new Lesson(teacher_jv.id, subject_gp.id, new Date().toISOString(), new Date().toISOString(), "src/image5", "sumário..");
                            lesson_gp_4 = new Lesson(teacher_jv.id, subject_gp.id, new Date().toISOString(), new Date().toISOString(), "src/image6", "sumário..");
                            lesson_dbm_1 = new Lesson(teacher_jf.id, subject_dbm.id, new Date().toISOString(), new Date().toISOString(), "src/image7", "sumário..");
                            lesson_dbm_2 = new Lesson(teacher_jf.id, subject_dbm.id, new Date().toISOString(), new Date().toISOString(), "src/image8", "sumário..");
                            lesson_dbm_3 = new Lesson(teacher_jf.id, subject_dbm.id, new Date().toISOString(), new Date().toISOString(), "src/image9", "sumário..");
                            lesson_dbm_4 = new Lesson(teacher_jf.id, subject_dbm.id, new Date().toISOString(), new Date().toISOString(), "src/image10", "sumário..");


                            lesson_gp_1.save();
                            lesson_gp_2.save();

                            lesson_gp_3.save();
                            lesson_gp_4.save();
                            lesson_dbm_1.save();
                            lesson_dbm_2.save();
                            lesson_dbm_3.save();
                            lesson_dbm_4.save();

                            presence_ricardo_gp_lesson_1 = new Presence(student_ricardo.number, lesson_gp_1.id, true, true);
                            presence_ricardo_gp_lesson_2 = new Presence(student_ricardo.number, lesson_gp_2.id, false);
                            presence_ricardo_gp_lesson_3 = new Presence(student_ricardo.number, lesson_gp_3.id, true, true);
                            presence_ricardo_gp_lesson_4 = new Presence(student_ricardo.number, lesson_gp_4.id, true, false);
                            presence_ricardo_dbm_lesson_1 = new Presence(student_ricardo.number, lesson_dbm_1.id, true, true);
                            presence_ricardo_dbm_lesson_2 = new Presence(student_ricardo.number, lesson_dbm_2.id, false);
                            presence_ricardo_dbm_lesson_3 = new Presence(student_ricardo.number, lesson_dbm_3.id, false);
                            presence_ricardo_dbm_lesson_4 = new Presence(student_ricardo.number, lesson_dbm_4.id, false);


                            presence_ricardo_gp_lesson_1.save();
                            presence_ricardo_gp_lesson_2.save();
                            presence_ricardo_gp_lesson_3.save();
                            presence_ricardo_gp_lesson_4.save();
                            presence_ricardo_dbm_lesson_1.save();
                            presence_ricardo_dbm_lesson_2.save();
                            presence_ricardo_dbm_lesson_3.save();
                            presence_ricardo_dbm_lesson_4.save();

                            student_ricardo.getPresencesAsync(subject_gp.id).then(function (data) {
                                console.log("GP assiduity :", data);
                            });

                            student_ricardo.getPresencesAsync(subject_dbm.id).then(function (data) {
                                console.log("DBM assiduity :", data);
                            });

                            clazz_1.numberOfregisteredStudentsAsync().then(function (data) {});

                            Class.all().then(function (data) {});

                            Teacher.all().then(function (data) {});

                            Subject.all().then(function (data) {});

                            Student.all().then(function (data) {});

                            Presence.all().then(function (data) {});

                            Lesson.all().then(function (data) {});

                            this.logout();

                        case 68:
                        case "end":
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: "signup",
        value: function signup(email, pass) {
            return regeneratorRuntime.async(function signup$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            _context2.prev = 0;
                            _context2.next = 3;
                            return regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, pass));

                        case 3:
                            _context2.next = 7;
                            break;

                        case 5:
                            _context2.prev = 5;
                            _context2.t0 = _context2["catch"](0);

                        case 7:
                        case "end":
                            return _context2.stop();
                    }
                }
            }, null, this, [[0, 5]]);
        }
    }, {
        key: "login",
        value: function login(email, pass) {
            return regeneratorRuntime.async(function login$(_context3) {
                while (1) {
                    switch (_context3.prev = _context3.next) {
                        case 0:
                            _context3.prev = 0;
                            _context3.next = 3;
                            return regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, pass));

                        case 3:
                            _context3.next = 7;
                            break;

                        case 5:
                            _context3.prev = 5;
                            _context3.t0 = _context3["catch"](0);

                        case 7:
                        case "end":
                            return _context3.stop();
                    }
                }
            }, null, this, [[0, 5]]);
        }
    }, {
        key: "logout",
        value: function logout() {
            return regeneratorRuntime.async(function logout$(_context4) {
                while (1) {
                    switch (_context4.prev = _context4.next) {
                        case 0:
                            _context4.prev = 0;
                            _context4.next = 3;
                            return regeneratorRuntime.awrap(firebase.auth().signOut());

                        case 3:
                            _context4.next = 7;
                            break;

                        case 5:
                            _context4.prev = 5;
                            _context4.t0 = _context4["catch"](0);

                        case 7:
                        case "end":
                            return _context4.stop();
                    }
                }
            }, null, this, [[0, 5]]);
        }
    }, {
        key: "render",
        value: function render() {
            return _react2.default.createElement(_Home2.default, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 192
                }
            });
        }
    }]);
    return App;
}(_react.Component);

exports.default = App;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#F5FCFF'
    },
    welcome: {
        fontSize: 20,
        textAlign: 'center',
        margin: 10
    },
    instructions: {
        textAlign: 'center',
        color: '#333333',
        marginBottom: 5
    }
});

_reactNative.AppRegistry.registerComponent('Student_Counter', function () {
    return App;
});
}, 12, null, "Student_Counter/app.js");
__d(/* react/react.js */function(global, require, module, exports) {'use strict';

module.exports = require(14           ); // 14 = ./lib/React
}, 13, null, "react/react.js");
__d(/* react/lib/React.js */function(global, require, module, exports) {

'use strict';

var ReactBaseClasses = require(15                  ); // 15 = ./ReactBaseClasses
var ReactChildren = require(24               ); // 24 = ./ReactChildren
var ReactClass = require(32            ); // 32 = ./ReactClass
var ReactDOMFactories = require(33                   ); // 33 = ./ReactDOMFactories
var ReactElement = require(26              ); // 26 = ./ReactElement
var ReactPropTypes = require(43                ); // 43 = ./ReactPropTypes
var ReactVersion = require(44              ); // 44 = ./ReactVersion

var onlyChild = require(45           ); // 45 = ./onlyChild
var warning = require(19                ); // 19 = fbjs/lib/warning
var checkPropTypes = require(36                ); // 36 = ./checkPropTypes

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require(34                       ); // 34 = ./ReactElementValidator
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var createMixin = function createMixin(mixin) {
  return mixin;
};

if (process.env.NODE_ENV !== 'production') {
  var warnedForCreateMixin = false;

  createMixin = function createMixin(mixin) {
    process.env.NODE_ENV !== 'production' ? warning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. You ' + 'can use this mixin directly instead.') : void 0;
    warnedForCreateMixin = true;
    return mixin;
  };
}

var React = {

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  checkPropTypes: checkPropTypes,

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: createMixin,

  DOM: ReactDOMFactories,

  version: ReactVersion
};

module.exports = React;
}, 14, null, "react/lib/React.js");
__d(/* react/lib/ReactBaseClasses.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(16                    ), // 16 = ./reactProdInvariant
    _assign = require(17             ); // 17 = object-assign

var ReactNoopUpdateQueue = require(18                      ); // 18 = ./ReactNoopUpdateQueue

var canDefineProperty = require(21                   ); // 21 = ./canDefineProperty
var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;

  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function get() {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ReactPureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;

  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;

_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};
}, 15, null, "react/lib/ReactBaseClasses.js");
__d(/* react/lib/reactProdInvariant.js */function(global, require, module, exports) {
'use strict';

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1;

  throw error;
}

module.exports = reactProdInvariant;
}, 16, null, "react/lib/reactProdInvariant.js");
__d(/* object-assign/index.js */function(global, require, module, exports) {/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		var test1 = new String('abc');
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(babelHelpers.extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};
}, 17, null, "object-assign/index.js");
__d(/* react/lib/ReactNoopUpdateQueue.js */function(global, require, module, exports) {

'use strict';

var warning = require(19                ); // 19 = fbjs/lib/warning

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

var ReactNoopUpdateQueue = {
  isMounted: function isMounted(publicInstance) {
    return false;
  },

  enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
}, 18, null, "react/lib/ReactNoopUpdateQueue.js");
__d(/* fbjs/lib/warning.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(20               ); // 20 = ./emptyFunction

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return;
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
}, 19, null, "fbjs/lib/warning.js");
__d(/* fbjs/lib/emptyFunction.js */function(global, require, module, exports) {"use strict";

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}, 20, null, "fbjs/lib/emptyFunction.js");
__d(/* react/lib/canDefineProperty.js */function(global, require, module, exports) {

'use strict';

var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    Object.defineProperty({}, 'x', { get: function get() {} });
    canDefineProperty = true;
  } catch (x) {}
}

module.exports = canDefineProperty;
}, 21, null, "react/lib/canDefineProperty.js");
__d(/* fbjs/lib/emptyObject.js */function(global, require, module, exports) {

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}, 22, null, "fbjs/lib/emptyObject.js");
__d(/* fbjs/lib/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 23, null, "fbjs/lib/invariant.js");
__d(/* react/lib/ReactChildren.js */function(global, require, module, exports) {

'use strict';

var PooledClass = require(25             ); // 25 = ./PooledClass
var ReactElement = require(26              ); // 26 = ./ReactElement

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var traverseAllChildren = require(29                     ); // 29 = ./traverseAllChildren

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;

  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
}, 24, null, "react/lib/ReactChildren.js");
__d(/* react/lib/PooledClass.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(16                    ); // 16 = ./reactProdInvariant

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}, 25, null, "react/lib/PooledClass.js");
__d(/* react/lib/ReactElement.js */function(global, require, module, exports) {

'use strict';

var _assign = require(17             ); // 17 = object-assign

var ReactCurrentOwner = require(27                   ); // 27 = ./ReactCurrentOwner

var warning = require(19                ); // 19 = fbjs/lib/warning
var canDefineProperty = require(21                   ); // 21 = ./canDefineProperty
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = require(28                    ); // 28 = ./ReactElementSymbol

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function warnAboutAccessingKey() {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function warnAboutAccessingRef() {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
  var element = {
    $$typeof: REACT_ELEMENT_TYPE,

    type: type,
    key: key,
    ref: ref,
    props: props,

    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    element._store = {};

    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });

      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });

      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

ReactElement.createElement = function (type, config, children) {
  var propName;

  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);

  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

ReactElement.cloneElement = function (element, config, children) {
  var propName;

  var props = _assign({}, element.props);

  var key = element.key;
  var ref = element.ref;

  var self = element._self;

  var source = element._source;

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
}, 26, null, "react/lib/ReactElement.js");
__d(/* react/lib/ReactCurrentOwner.js */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = {
  current: null
};

module.exports = ReactCurrentOwner;
}, 27, null, "react/lib/ReactCurrentOwner.js");
__d(/* react/lib/ReactElementSymbol.js */function(global, require, module, exports) {

'use strict';

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
}, 28, null, "react/lib/ReactElementSymbol.js");
__d(/* react/lib/traverseAllChildren.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(16                    ); // 16 = ./reactProdInvariant

var ReactCurrentOwner = require(27                   ); // 27 = ./ReactCurrentOwner
var REACT_ELEMENT_TYPE = require(28                    ); // 28 = ./ReactElementSymbol

var getIteratorFn = require(30               ); // 30 = ./getIteratorFn
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var KeyEscapeUtils = require(31                ); // 31 = ./KeyEscapeUtils
var warning = require(19                ); // 19 = fbjs/lib/warning

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

var didWarnAboutMaps = false;

function getComponentKey(component, index) {
  if (component && typeof component === 'object' && component.key != null) {
    return KeyEscapeUtils.escape(component.key);
  }

  return index.toString(36);
}

function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0;
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      if (process.env.NODE_ENV !== 'production') {
        if (iteratorFn === children.entries) {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = '\n\nCheck the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.';
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += '\n\nCheck the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = '' + children;
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}, 29, null, "react/lib/traverseAllChildren.js");
__d(/* react/lib/getIteratorFn.js */function(global, require, module, exports) {

'use strict';

var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
}, 30, null, "react/lib/getIteratorFn.js");
__d(/* react/lib/KeyEscapeUtils.js */function(global, require, module, exports) {

'use strict';

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
}, 31, null, "react/lib/KeyEscapeUtils.js");
__d(/* react/lib/ReactClass.js */function(global, require, module, exports) {

'use strict';

var _assign = require(17             ), // 17 = object-assign
    _prodInvariant = require(16                    ); // 16 = ./reactProdInvariant

var ReactBaseClasses = require(15                  ); // 15 = ./ReactBaseClasses
var ReactElement = require(26              ); // 26 = ./ReactElement
var ReactNoopUpdateQueue = require(18                      ); // 18 = ./ReactNoopUpdateQueue

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var ReactComponent = ReactBaseClasses.Component;

var MIXINS_KEY = 'mixins';

function identity(fn) {
  return fn;
}

var ReactClassInterface = {
  mixins: 'DEFINE_MANY',

  statics: 'DEFINE_MANY',

  propTypes: 'DEFINE_MANY',

  contextTypes: 'DEFINE_MANY',

  childContextTypes: 'DEFINE_MANY',

  getDefaultProps: 'DEFINE_MANY_MERGED',

  getInitialState: 'DEFINE_MANY_MERGED',

  getChildContext: 'DEFINE_MANY_MERGED',

  render: 'DEFINE_ONCE',

  componentWillMount: 'DEFINE_MANY',

  componentDidMount: 'DEFINE_MANY',

  componentWillReceiveProps: 'DEFINE_MANY',

  shouldComponentUpdate: 'DEFINE_ONCE',

  componentWillUpdate: 'DEFINE_MANY',

  componentDidUpdate: 'DEFINE_MANY',

  componentWillUnmount: 'DEFINE_MANY',

  updateComponent: 'OVERRIDE_BASE'
};

var RESERVED_SPEC_KEYS = {
  displayName: function displayName(Constructor, _displayName) {
    Constructor.displayName = _displayName;
  },
  mixins: function mixins(Constructor, _mixins) {
    if (_mixins) {
      for (var i = 0; i < _mixins.length; i++) {
        mixSpecIntoComponent(Constructor, _mixins[i]);
      }
    }
  },
  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, _childContextTypes, 'child context');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
  },
  contextTypes: function contextTypes(Constructor, _contextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, _contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
  },

  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
    } else {
      Constructor.getDefaultProps = _getDefaultProps;
    }
  },
  propTypes: function propTypes(Constructor, _propTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, _propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
  },
  statics: function statics(Constructor, _statics) {
    mixStaticSpecIntoComponent(Constructor, _statics);
  },
  autobind: function autobind() {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', location, propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if (process.env.NODE_ENV !== 'production') {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, "%s: You're attempting to include a mixin that is either null " + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (process.env.NODE_ENV !== 'production') {
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (process.env.NODE_ENV !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance.\n\nSee %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call.\n\nSee %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

var ReactClassMixin = {
  replaceState: function replaceState(newState, callback) {
    this.updater.enqueueReplaceState(this, newState, callback, 'replaceState');
  },

  isMounted: function isMounted() {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function ReactClassComponent() {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

var ReactClass = {
  createClass: function createClass(spec) {
    var Constructor = identity(function (props, context, updater) {

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    mixSpecIntoComponent(Constructor, spec);

    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }
};

module.exports = ReactClass;
}, 32, null, "react/lib/ReactClass.js");
__d(/* react/lib/ReactDOMFactories.js */function(global, require, module, exports) {

'use strict';

var ReactElement = require(26              ); // 26 = ./ReactElement

var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require(34                       ); // 34 = ./ReactElementValidator
  createDOMFactory = ReactElementValidator.createFactory;
}

var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
}, 33, null, "react/lib/ReactDOMFactories.js");
__d(/* react/lib/ReactElementValidator.js */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(27                   ); // 27 = ./ReactCurrentOwner
var ReactElement = require(26              ); // 26 = ./ReactElement

var checkReactTypeSpec = require(35                    ); // 35 = ./checkReactTypeSpec

var canDefineProperty = require(21                   ); // 21 = ./canDefineProperty
var getComponentName = require(42                  ); // 42 = ./getComponentName
var getIteratorFn = require(30               ); // 30 = ./getIteratorFn

if (process.env.NODE_ENV !== 'production') {
  var warning = require(19                ); // 19 = fbjs/lib/warning
  var ReactDebugCurrentFrame = require(38                        ); // 38 = ./ReactDebugCurrentFrame

  var _require = require(39                        ), // 39 = ./ReactComponentTreeHook
      getCurrentStackAddendum = _require.getCurrentStackAddendum;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getCurrentStackAddendum(element)) : void 0;
}

function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;

  var propTypes = typeof componentClass.__propTypesSecretDontUseThesePlease === 'object' ? componentClass.__propTypesSecretDontUseThesePlease : componentClass.propTypes;

  if (propTypes) {
    checkReactTypeSpec(propTypes, element.props, 'prop', name);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {
  createElement: function createElement(type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';

    if (!validType) {
      var info = '';
      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(props);
      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      info += getCurrentStackAddendum();

      process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
    }

    var element = ReactElement.createElement.apply(this, arguments);

    if (element == null) {
      return element;
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactDebugCurrentFrame.element = element;
    }

    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    if (process.env.NODE_ENV !== 'production') {
      ReactDebugCurrentFrame.element = null;
    }

    return element;
  },

  createFactory: function createFactory(type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);

    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function get() {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function cloneElement(element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    if (process.env.NODE_ENV !== 'production') {
      ReactDebugCurrentFrame.element = newElement;
    }
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    if (process.env.NODE_ENV !== 'production') {
      ReactDebugCurrentFrame.element = null;
    }
    return newElement;
  }
};

module.exports = ReactElementValidator;
}, 34, null, "react/lib/ReactElementValidator.js");
__d(/* react/lib/checkReactTypeSpec.js */function(global, require, module, exports) {

'use strict';

var checkPropTypes = require(36                ); // 36 = ./checkPropTypes

var _require = require(38                        ), // 38 = ./ReactDebugCurrentFrame
    getStackAddendum = _require.getStackAddendum;

function checkReactTypeSpec(typeSpecs, values, location, componentName) {
  checkPropTypes(typeSpecs, values, location, componentName, getStackAddendum);
}

module.exports = checkReactTypeSpec;
}, 35, null, "react/lib/checkReactTypeSpec.js");
__d(/* react/lib/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(16                    ); // 16 = ./reactProdInvariant

var ReactPropTypesSecret = require(37                      ); // 37 = ./ReactPropTypesSecret

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var loggedTypeFailures = {};

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', location, typeSpecName) : _prodInvariant('84', componentName || 'React class', location, typeSpecName) : void 0;
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error) : void 0;
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '') : void 0;
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 36, null, "react/lib/checkPropTypes.js");
__d(/* react/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 37, null, "react/lib/ReactPropTypesSecret.js");
__d(/* react/lib/ReactDebugCurrentFrame.js */function(global, require, module, exports) {

'use strict';

var ReactDebugCurrentFrame = {};

if (process.env.NODE_ENV !== 'production') {
  var _require = require(39                        ), // 39 = ./ReactComponentTreeHook
      getStackAddendumByID = _require.getStackAddendumByID,
      getCurrentStackAddendum = _require.getCurrentStackAddendum;

  var _require2 = require(40                             ), // 40 = ./ReactFiberComponentTreeHook
      getStackAddendumByWorkInProgressFiber = _require2.getStackAddendumByWorkInProgressFiber;

  ReactDebugCurrentFrame.current = null;

  ReactDebugCurrentFrame.element = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = null;
    var current = ReactDebugCurrentFrame.current;
    var element = ReactDebugCurrentFrame.element;
    if (current !== null) {
      if (typeof current === 'number') {
        var debugID = current;
        stack = getStackAddendumByID(debugID);
      } else if (typeof current.tag === 'number') {
        var workInProgress = current;
        stack = getStackAddendumByWorkInProgressFiber(workInProgress);
      }
    } else if (element !== null) {
      stack = getCurrentStackAddendum(element);
    }
    return stack;
  };
}

module.exports = ReactDebugCurrentFrame;
}, 38, null, "react/lib/ReactDebugCurrentFrame.js");
__d(/* react/lib/ReactComponentTreeHook.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(16                    ); // 16 = ./reactProdInvariant

var ReactCurrentOwner = require(27                   ); // 27 = ./ReactCurrentOwner

var _require = require(40                             ), // 40 = ./ReactFiberComponentTreeHook
    getStackAddendumByWorkInProgressFiber = _require.getStackAddendumByWorkInProgressFiber,
    describeComponentFrame = _require.describeComponentFrame;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning
var getComponentName = require(42                  ); // 42 = ./getComponentName

function isNative(fn) {
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections = typeof Array.from === 'function' && typeof Map === 'function' && isNative(Map) && Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) && typeof Set === 'function' && isNative(Set) && Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function setItem(id, item) {
    itemMap.set(id, item);
  };
  getItem = function getItem(id) {
    return itemMap.get(id);
  };
  removeItem = function removeItem(id) {
    itemMap['delete'](id);
  };
  getItemIDs = function getItemIDs() {
    return Array.from(itemMap.keys());
  };

  addRoot = function addRoot(id) {
    rootIDSet.add(id);
  };
  removeRoot = function removeRoot(id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function getRootIDs() {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  var getKeyFromID = function getKeyFromID(id) {
    return '.' + id;
  };
  var getIDFromKey = function getIDFromKey(key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function setItem(id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function getItem(id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function removeItem(id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function getItemIDs() {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function addRoot(id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function removeRoot(id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function getRootIDs() {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function _getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName = void 0;

  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name || '', element && element._source, ownerName || '');
}

var ReactComponentTreeHook = {
  onSetChildren: function onSetChildren(id, nextChildIDs) {
    var item = getItem(id);
    invariant(item, 'Item must have been set');
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      return;
    }
    item.element = element;
  },
  onMountComponent: function onMountComponent(id) {
    var item = getItem(id);
    invariant(item, 'Item must have been set');
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function onUpdateComponent(id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function onUnmountComponent(id) {
    var item = getItem(id);
    if (item) {
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function purgeUnmountedComponents() {
    if (ReactComponentTreeHook._preventPurging) {
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function isMounted(id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
    var info = '';
    if (topElement) {
      var name = _getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && getComponentName(owner));
    }

    var currentOwner = ReactCurrentOwner.current;
    if (currentOwner) {
      if (typeof currentOwner.tag === 'number') {
        var workInProgress = currentOwner;

        info += getStackAddendumByWorkInProgressFiber(workInProgress);
      } else if (typeof currentOwner._debugID === 'number') {
        info += ReactComponentTreeHook.getStackAddendumByID(currentOwner._debugID);
      }
    }
    return info;
  },
  getStackAddendumByID: function getStackAddendumByID(id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function getChildIDs(id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function getDisplayName(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return _getDisplayName(element);
  },
  getElement: function getElement(id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function getOwnerID(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function getParentID(id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function getSource(id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function getText(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function getUpdateCount(id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },

  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;
}, 39, null, "react/lib/ReactComponentTreeHook.js");
__d(/* react/lib/ReactFiberComponentTreeHook.js */function(global, require, module, exports) {

'use strict';

var ReactTypeOfWork = require(41                 ); // 41 = ./ReactTypeOfWork
var IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostComponent = ReactTypeOfWork.HostComponent;

var getComponentName = require(42                  ); // 42 = ./getComponentName

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner);
      }
      return describeComponentFrame(name, source, ownerName);
    default:
      return '';
  }
}

function getStackAddendumByWorkInProgressFiber(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);

    node = node['return'];
  } while (node);
  return info;
}

module.exports = {
  getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber,
  describeComponentFrame: describeComponentFrame
};
}, 40, null, "react/lib/ReactFiberComponentTreeHook.js");
__d(/* react/lib/ReactTypeOfWork.js */function(global, require, module, exports) {

'use strict';

module.exports = {
  IndeterminateComponent: 0,
  FunctionalComponent: 1,
  ClassComponent: 2,
  HostRoot: 3,
  HostPortal: 4,
  HostComponent: 5,
  HostText: 6,
  CoroutineComponent: 7,
  CoroutineHandlerPhase: 8,
  YieldComponent: 9,
  Fragment: 10
};
}, 41, null, "react/lib/ReactTypeOfWork.js");
__d(/* react/lib/getComponentName.js */function(global, require, module, exports) {

'use strict';

function getComponentName(instanceOrFiber) {
  if (typeof instanceOrFiber.getName === 'function') {
    var instance = instanceOrFiber;
    return instance.getName();
  }
  if (typeof instanceOrFiber.tag === 'number') {
    var fiber = instanceOrFiber;
    var type = fiber.type;

    if (typeof type === 'string') {
      return type;
    }
    if (typeof type === 'function') {
      return type.displayName || type.name;
    }
  }
  return null;
}

module.exports = getComponentName;
}, 42, null, "react/lib/getComponentName.js");
__d(/* react/lib/ReactPropTypes.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(16                    ); // 16 = ./reactProdInvariant

var ReactElement = require(26              ); // 26 = ./ReactElement
var ReactPropTypesSecret = require(37                      ); // 37 = ./ReactPropTypesSecret

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var getIteratorFn = require(30               ); // 30 = ./getIteratorFn
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes;

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };
} else {
  var productionTypeChecker = function productionTypeChecker() {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.PropTypes type checking code is stripped in production.') : _prodInvariant('144') : void 0;
  };
  productionTypeChecker.isRequired = productionTypeChecker;
  var getProductionTypeChecker = function getProductionTypeChecker() {
    return productionTypeChecker;
  };

  ReactPropTypes = {
    array: productionTypeChecker,
    bool: productionTypeChecker,
    func: productionTypeChecker,
    number: productionTypeChecker,
    object: productionTypeChecker,
    string: productionTypeChecker,
    symbol: productionTypeChecker,

    any: productionTypeChecker,
    arrayOf: getProductionTypeChecker,
    element: productionTypeChecker,
    instanceOf: getProductionTypeChecker,
    node: productionTypeChecker,
    objectOf: getProductionTypeChecker,
    oneOf: getProductionTypeChecker,
    oneOfType: getProductionTypeChecker,
    shape: getProductionTypeChecker
  };
}

function is(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function PropTypeError(message) {
  this.message = message;
  this.stack = '';
}

PropTypeError.prototype = Error.prototype;

function createChainableTypeChecker(validate) {
  if (process.env.NODE_ENV !== 'production') {
    var manualPropTypeCallCache = {};
  }
  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (process.env.NODE_ENV !== 'production') {
      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
        var cacheKey = componentName + ':' + propName;
        if (!manualPropTypeCallCache[cacheKey]) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
          manualPropTypeCallCache[cacheKey] = true;
        }
      }
    }
    if (props[propName] == null) {
      if (isRequired) {
        if (props[propName] === null) {
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
        }
        return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName, secret) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var preciseType = getPreciseType(propValue);

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturnsNull);
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    if (!ReactElement.isValidElement(propValue)) {
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var valuesString = JSON.stringify(expectedValues);
    return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
        return null;
      }
    }

    return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

function isSymbol(propType, propValue) {
  if (propType === 'symbol') {
    return true;
  }

  if (propValue['@@toStringTag'] === 'Symbol') {
    return true;
  }

  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
    return true;
  }

  return false;
}

function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    return 'object';
  }
  if (isSymbol(propType, propValue)) {
    return 'symbol';
  }
  return propType;
}

function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
}, 43, null, "react/lib/ReactPropTypes.js");
__d(/* react/lib/ReactVersion.js */function(global, require, module, exports) {

'use strict';

module.exports = '16.0.0-alpha.6';
}, 44, null, "react/lib/ReactVersion.js");
__d(/* react/lib/onlyChild.js */function(global, require, module, exports) {
'use strict';

var _prodInvariant = require(16                    ); // 16 = ./reactProdInvariant

var ReactElement = require(26              ); // 26 = ./ReactElement

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
}, 45, null, "react/lib/onlyChild.js");
__d(/* react-native-implementation */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

if (__DEV__) {
  var warningDedupe = {};
  var addonWarn = function addonWarn(prevName, newPackageName) {
    warning(warningDedupe[prevName], 'React.addons.' + prevName + ' is deprecated. Please import the "' + newPackageName + '" package instead.');
    warningDedupe[prevName] = true;
  };
}

var ReactNative = {
  get AccessibilityInfo() {
    return require(47                 ); // 47 = AccessibilityInfo
  },
  get ActivityIndicator() {
    return require(81                 ); // 81 = ActivityIndicator
  },
  get ART() {
    return require(282             ); // 282 = ReactNativeART
  },
  get Button() {
    return require(288     ); // 288 = Button
  },
  get DatePickerIOS() {
    return require(322            ); // 322 = DatePickerIOS
  },
  get DrawerLayoutAndroid() {
    return require(323                  ); // 323 = DrawerLayoutAndroid
  },
  get FlatList() {
    return require(325       ); // 325 = FlatList
  },
  get Image() {
    return require(313    ); // 313 = Image
  },
  get ImageEditor() {
    return require(337          ); // 337 = ImageEditor
  },
  get ImageStore() {
    return require(338         ); // 338 = ImageStore
  },
  get KeyboardAvoidingView() {
    return require(339                   ); // 339 = KeyboardAvoidingView
  },
  get ListView() {
    return require(327       ); // 327 = ListView
  },
  get Modal() {
    return require(341    ); // 341 = Modal
  },
  get NavigatorIOS() {
    return require(364           ); // 364 = NavigatorIOS
  },
  get Picker() {
    return require(365     ); // 365 = Picker
  },
  get PickerIOS() {
    return require(366        ); // 366 = PickerIOS
  },
  get ProgressBarAndroid() {
    return require(368                 ); // 368 = ProgressBarAndroid
  },
  get ProgressViewIOS() {
    return require(369              ); // 369 = ProgressViewIOS
  },
  get ScrollView() {
    return require(315         ); // 315 = ScrollView
  },
  get SectionList() {
    return require(370          ); // 370 = SectionList
  },
  get SegmentedControlIOS() {
    return require(372                  ); // 372 = SegmentedControlIOS
  },
  get Slider() {
    return require(373     ); // 373 = Slider
  },
  get SnapshotViewIOS() {
    return require(374              ); // 374 = SnapshotViewIOS
  },
  get Switch() {
    return require(375     ); // 375 = Switch
  },
  get RefreshControl() {
    return require(332             ); // 332 = RefreshControl
  },
  get StatusBar() {
    return require(324        ); // 324 = StatusBar
  },
  get SwipeableListView() {
    return require(376                ); // 376 = SwipeableListView
  },
  get TabBarIOS() {
    return require(381        ); // 381 = TabBarIOS
  },
  get Text() {
    return require(289   ); // 289 = Text
  },
  get TextInput() {
    return require(383        ); // 383 = TextInput
  },
  get ToastAndroid() {
    return require(152           ); // 152 = ToastAndroid
  },
  get ToolbarAndroid() {
    return require(389             ); // 389 = ToolbarAndroid
  },
  get Touchable() {
    return require(290        ); // 290 = Touchable
  },
  get TouchableHighlight() {
    return require(353                 ); // 353 = TouchableHighlight
  },
  get TouchableNativeFeedback() {
    return require(296                      ); // 296 = TouchableNativeFeedback
  },
  get TouchableOpacity() {
    return require(300               ); // 300 = TouchableOpacity
  },
  get TouchableWithoutFeedback() {
    return require(297                       ); // 297 = TouchableWithoutFeedback
  },
  get View() {
    return require(234   ); // 234 = View
  },
  get ViewPagerAndroid() {
    return require(390               ); // 390 = ViewPagerAndroid
  },
  get VirtualizedList() {
    return require(333              ); // 333 = VirtualizedList
  },
  get WebView() {
    return require(391      ); // 391 = WebView
  },

  get ActionSheetIOS() {
    return require(392             ); // 392 = ActionSheetIOS
  },
  get AdSupportIOS() {
    return require(393           ); // 393 = AdSupportIOS
  },
  get Alert() {
    return require(154    ); // 154 = Alert
  },
  get AlertIOS() {
    return require(155       ); // 155 = AlertIOS
  },
  get Animated() {
    return require(301       ); // 301 = Animated
  },
  get AppRegistry() {
    return require(394          ); // 394 = AppRegistry
  },
  get AppState() {
    return require(79        ); // 79 = AppState
  },
  get AsyncStorage() {
    return require(401           ); // 401 = AsyncStorage
  },
  get BackAndroid() {
    return require(402          ); // 402 = BackAndroid
  },
  get BackHandler() {
    return require(398          ); // 398 = BackHandler
  },
  get CameraRoll() {
    return require(403         ); // 403 = CameraRoll
  },
  get Clipboard() {
    return require(404        ); // 404 = Clipboard
  },
  get DatePickerAndroid() {
    return require(405                ); // 405 = DatePickerAndroid
  },
  get DeviceInfo() {
    return require(265         ); // 265 = DeviceInfo
  },
  get Dimensions() {
    return require(264         ); // 264 = Dimensions
  },
  get Easing() {
    return require(311     ); // 311 = Easing
  },
  get I18nManager() {
    return require(363          ); // 363 = I18nManager
  },
  get ImagePickerIOS() {
    return require(406             ); // 406 = ImagePickerIOS
  },
  get InteractionManager() {
    return require(303                 ); // 303 = InteractionManager
  },
  get Keyboard() {
    return require(75        ); // 75 = Keyboard
  },
  get LayoutAnimation() {
    return require(340              ); // 340 = LayoutAnimation
  },
  get Linking() {
    return require(407      ); // 407 = Linking
  },
  get NativeEventEmitter() {
    return require(74                  ); // 74 = NativeEventEmitter
  },
  get NetInfo() {
    return require(408      ); // 408 = NetInfo
  },
  get PanResponder() {
    return require(379           ); // 379 = PanResponder
  },
  get PermissionsAndroid() {
    return require(409                 ); // 409 = PermissionsAndroid
  },
  get PixelRatio() {
    return require(263         ); // 263 = PixelRatio
  },
  get PushNotificationIOS() {
    return require(410                  ); // 410 = PushNotificationIOS
  },
  get Settings() {
    return require(411       ); // 411 = Settings
  },
  get Share() {
    return require(412    ); // 412 = Share
  },
  get StatusBarIOS() {
    return require(73            ); // 73 = StatusBarIOS
  },
  get StyleSheet() {
    return require(262         ); // 262 = StyleSheet
  },
  get Systrace() {
    return require(53        ); // 53 = Systrace
  },
  get TimePickerAndroid() {
    return require(413                ); // 413 = TimePickerAndroid
  },
  get TVEventHandler() {
    return require(293             ); // 293 = TVEventHandler
  },
  get UIManager() {
    return require(78         ); // 78 = UIManager
  },
  get Vibration() {
    return require(414        ); // 414 = Vibration
  },
  get VibrationIOS() {
    return require(415           ); // 415 = VibrationIOS
  },

  get DeviceEventEmitter() {
    return require(68                     ); // 68 = RCTDeviceEventEmitter
  },
  get NativeAppEventEmitter() {
    return require(182                       ); // 182 = RCTNativeAppEventEmitter
  },
  get NativeModules() {
    return require(48             ); // 48 = NativeModules
  },
  get Platform() {
    return require(61        ); // 61 = Platform
  },
  get processColor() {
    return require(246           ); // 246 = processColor
  },
  get requireNativeComponent() {
    return require(260                     ); // 260 = requireNativeComponent
  },

  get ColorPropType() {
    return require(82             ); // 82 = ColorPropType
  },
  get EdgeInsetsPropType() {
    return require(252                 ); // 252 = EdgeInsetsPropType
  },
  get PointPropType() {
    return require(316            ); // 316 = PointPropType
  },
  get ViewPropTypes() {
    return require(251            ); // 251 = ViewPropTypes
  },

  get Navigator() {
    invariant(false, 'Navigator is deprecated and has been removed from this package. It can now be installed ' + 'and imported from `react-native-deprecated-custom-components` instead of `react-native`. ' + 'Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html');
    return null;
  }
};

if (__DEV__) {
  (function () {
    var throwOnWrongReactAPI = require(416                   ); // 416 = throwOnWrongReactAPI
    var reactAPIs = ['createClass', 'Component'];

    var _loop = function _loop(key) {
      Object.defineProperty(ReactNative, key, {
        get: function get() {
          throwOnWrongReactAPI(key);
        },

        enumerable: false,
        configurable: false
      });
    };

    for (var _iterator = reactAPIs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var key = _ref;

      _loop(key);
    }
  })();
}

var ReactNativeInternal = require(85           ); // 85 = ReactNative
function applyForwarding(key) {
  if (__DEV__) {
    Object.defineProperty(ReactNative, key, Object.getOwnPropertyDescriptor(ReactNativeInternal, key));
    return;
  }
  ReactNative[key] = ReactNativeInternal[key];
}
for (var key in ReactNativeInternal) {
  applyForwarding(key);
}
module.exports = ReactNative;
}, 46, null, "react-native-implementation");
__d(/* AccessibilityInfo */function(global, require, module, exports) {
'use strict';

var NativeModules = require(48             ); // 48 = NativeModules
var RCTDeviceEventEmitter = require(68                     ); // 68 = RCTDeviceEventEmitter

var RCTAccessibilityInfo = NativeModules.AccessibilityInfo;

var TOUCH_EXPLORATION_EVENT = 'touchExplorationDidChange';

var _subscriptions = new Map();

var AccessibilityInfo = {

  fetch: function fetch() {
    return new Promise(function (resolve, reject) {
      RCTAccessibilityInfo.isTouchExplorationEnabled(function (resp) {
        resolve(resp);
      });
    });
  },

  addEventListener: function addEventListener(eventName, handler) {
    var listener = RCTDeviceEventEmitter.addListener(TOUCH_EXPLORATION_EVENT, function (enabled) {
      handler(enabled);
    });
    _subscriptions.set(handler, listener);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  }

};

module.exports = AccessibilityInfo;
}, 47, null, "AccessibilityInfo");
__d(/* NativeModules */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function genModule(config, moduleID) {
  if (!config) {
    return null;
  }

  var _config = babelHelpers.slicedToArray(config, 5),
      moduleName = _config[0],
      constants = _config[1],
      methods = _config[2],
      promiseMethods = _config[3],
      syncMethods = _config[4];

  invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), 'Module name prefixes should\'ve been stripped by the native side ' + 'but wasn\'t for ' + moduleName);

  if (!constants && !methods) {
    return { name: moduleName };
  }

  var module = {};
  methods && methods.forEach(function (methodName, methodID) {
    var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);
    var isSync = syncMethods && arrayContains(syncMethods, methodID);
    invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');
    var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';
    module[methodName] = genMethod(moduleID, methodID, methodType);
  });
  babelHelpers.extends(module, constants);

  if (__DEV__) {
    BatchedBridge.createDebugLookup(moduleID, moduleName, methods);
  }

  return { name: moduleName, module: module };
}

global.__fbGenNativeModule = genModule;

function loadModule(name, moduleID) {
  invariant(global.nativeRequireModuleConfig, 'Can\'t lazily create module without nativeRequireModuleConfig');
  var config = global.nativeRequireModuleConfig(name);
  var info = genModule(config, moduleID);
  return info && info.module;
}

function genMethod(moduleID, methodID, type) {
  var fn = null;
  if (type === 'promise') {
    fn = function fn() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return new Promise(function (resolve, reject) {
        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {
          return resolve(data);
        }, function (errorData) {
          return reject(createErrorFromErrorData(errorData));
        });
      });
    };
  } else if (type === 'sync') {
    fn = function fn() {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return global.nativeCallSyncHook(moduleID, methodID, args);
    };
  } else {
    fn = function fn() {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      var lastArg = args.length > 0 ? args[args.length - 1] : null;
      var secondLastArg = args.length > 1 ? args[args.length - 2] : null;
      var hasSuccessCallback = typeof lastArg === 'function';
      var hasErrorCallback = typeof secondLastArg === 'function';
      hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');
      var onSuccess = hasSuccessCallback ? lastArg : null;
      var onFail = hasErrorCallback ? secondLastArg : null;
      var callbackCount = hasSuccessCallback + hasErrorCallback;
      args = args.slice(0, args.length - callbackCount);
      BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);
    };
  }
  fn.type = type;
  return fn;
}

function arrayContains(array, value) {
  return array.indexOf(value) !== -1;
}

function createErrorFromErrorData(errorData) {
  var message = errorData.message,
      extraErrorInfo = babelHelpers.objectWithoutProperties(errorData, ['message']);

  var error = new Error(message);
  error.framesToPop = 1;
  return babelHelpers.extends(error, extraErrorInfo);
}

var NativeModules = {};
if (global.nativeModuleProxy) {
  NativeModules = global.nativeModuleProxy;
} else {
  var bridgeConfig = global.__fbBatchedBridgeConfig;
  invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');

  var defineLazyObjectProperty = require(67                        ); // 67 = defineLazyObjectProperty
  (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {
    var info = genModule(config, moduleID);
    if (!info) {
      return;
    }

    if (info.module) {
      NativeModules[info.name] = info.module;
    } else {
        defineLazyObjectProperty(NativeModules, info.name, {
          get: function get() {
            return loadModule(info.name, moduleID);
          }
        });
      }
  });
}

module.exports = NativeModules;
}, 48, null, "NativeModules");
__d(/* BatchedBridge */function(global, require, module, exports) {
'use strict';

var MessageQueue = require(50            ); // 50 = MessageQueue
var BatchedBridge = new MessageQueue();

Object.defineProperty(global, '__fbBatchedBridge', {
  configurable: true,
  value: BatchedBridge
});

module.exports = BatchedBridge;
}, 49, null, "BatchedBridge");
__d(/* MessageQueue */function(global, require, module, exports) {

'use strict';

var ErrorUtils = require(51          ); // 51 = ErrorUtils
var JSTimersExecution = require(52                 ); // 52 = JSTimersExecution
var Systrace = require(53        ); // 53 = Systrace

var deepFreezeAndThrowOnMutationInDev = require(65                                 ); // 65 = deepFreezeAndThrowOnMutationInDev
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var stringifySafe = require(66             ); // 66 = stringifySafe

var TO_JS = 0;
var TO_NATIVE = 1;

var MODULE_IDS = 0;
var METHOD_IDS = 1;
var PARAMS = 2;
var MIN_TIME_BETWEEN_FLUSHES_MS = 5;

var TRACE_TAG_REACT_APPS = 1 << 17;

var DEBUG_INFO_LIMIT = 32;

var MessageQueue = function () {
  function MessageQueue() {
    babelHelpers.classCallCheck(this, MessageQueue);

    this._callableModules = {};
    this._queue = [[], [], [], 0];
    this._callbacks = [];
    this._callbackID = 0;
    this._callID = 0;
    this._lastFlush = 0;
    this._eventLoopStartTime = new Date().getTime();

    if (__DEV__) {
      this._debugInfo = {};
      this._remoteModuleTable = {};
      this._remoteMethodTable = {};
    }

    this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);
    this.callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);
    this.flushedQueue = this.flushedQueue.bind(this);
    this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);
  }

  babelHelpers.createClass(MessageQueue, [{
    key: 'callFunctionReturnFlushedQueue',
    value: function callFunctionReturnFlushedQueue(module, method, args) {
      var _this = this;

      this.__guard(function () {
        _this.__callFunction(module, method, args);
        _this.__callImmediates();
      });

      return this.flushedQueue();
    }
  }, {
    key: 'callFunctionReturnResultAndFlushedQueue',
    value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {
      var _this2 = this;

      var result = void 0;
      this.__guard(function () {
        result = _this2.__callFunction(module, method, args);
        _this2.__callImmediates();
      });

      return [result, this.flushedQueue()];
    }
  }, {
    key: 'invokeCallbackAndReturnFlushedQueue',
    value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {
      var _this3 = this;

      this.__guard(function () {
        _this3.__invokeCallback(cbID, args);
        _this3.__callImmediates();
      });

      return this.flushedQueue();
    }
  }, {
    key: 'flushedQueue',
    value: function flushedQueue() {
      this.__callImmediates();

      var queue = this._queue;
      this._queue = [[], [], [], this._callID];
      return queue[0].length ? queue : null;
    }
  }, {
    key: 'getEventLoopRunningTime',
    value: function getEventLoopRunningTime() {
      return new Date().getTime() - this._eventLoopStartTime;
    }
  }, {
    key: 'registerCallableModule',
    value: function registerCallableModule(name, module) {
      this._callableModules[name] = module;
    }
  }, {
    key: 'enqueueNativeCall',
    value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {
      if (onFail || onSucc) {
        if (__DEV__) {
          var callId = this._callbackID >> 1;
          this._debugInfo[callId] = [moduleID, methodID];
          if (callId > DEBUG_INFO_LIMIT) {
            delete this._debugInfo[callId - DEBUG_INFO_LIMIT];
          }
        }
        onFail && params.push(this._callbackID);

        this._callbacks[this._callbackID++] = onFail;
        onSucc && params.push(this._callbackID);

        this._callbacks[this._callbackID++] = onSucc;
      }

      if (__DEV__) {
        global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);
      }
      this._callID++;

      this._queue[MODULE_IDS].push(moduleID);
      this._queue[METHOD_IDS].push(methodID);

      if (__DEV__) {
        JSON.stringify(params);

        deepFreezeAndThrowOnMutationInDev(params);
      }
      this._queue[PARAMS].push(params);

      var now = new Date().getTime();
      if (global.nativeFlushQueueImmediate && (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS || this._inCall === 0)) {
        var queue = this._queue;
        this._queue = [[], [], [], this._callID];
        this._lastFlush = now;
        global.nativeFlushQueueImmediate(queue);
      }
      Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);
      if (__DEV__ && this.__spy && isFinite(moduleID)) {
        this.__spy({ type: TO_NATIVE,
          module: this._remoteModuleTable[moduleID],
          method: this._remoteMethodTable[moduleID][methodID],
          args: params });
      } else if (this.__spy) {
        this.__spy({ type: TO_NATIVE, module: moduleID + '', method: methodID, args: params });
      }
    }
  }, {
    key: 'createDebugLookup',
    value: function createDebugLookup(moduleID, name, methods) {
      if (__DEV__) {
        this._remoteModuleTable[moduleID] = name;
        this._remoteMethodTable[moduleID] = methods;
      }
    }
  }, {
    key: '__guard',
    value: function __guard(fn) {
      this._inCall++;
      try {
        fn();
      } catch (error) {
        ErrorUtils.reportFatalError(error);
      } finally {
        this._inCall--;
      }
    }
  }, {
    key: '__callImmediates',
    value: function __callImmediates() {
      Systrace.beginEvent('JSTimersExecution.callImmediates()');
      this.__guard(function () {
        return JSTimersExecution.callImmediates();
      });
      Systrace.endEvent();
    }
  }, {
    key: '__callFunction',
    value: function __callFunction(module, method, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;
      Systrace.beginEvent(module + '.' + method + '()');
      if (this.__spy) {
        this.__spy({ type: TO_JS, module: module, method: method, args: args });
      }
      var moduleMethods = this._callableModules[module];
      invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);
      invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);
      var result = moduleMethods[method].apply(moduleMethods, args);
      Systrace.endEvent();
      return result;
    }
  }, {
    key: '__invokeCallback',
    value: function __invokeCallback(cbID, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;
      var callback = this._callbacks[cbID];

      if (__DEV__) {
        var debug = this._debugInfo[cbID >> 1];
        var _module = debug && this._remoteModuleTable[debug[0]];
        var _method = debug && this._remoteMethodTable[debug[0]][debug[1]];
        if (callback == null) {
          var errorMessage = 'Callback with id ' + cbID + ': ' + _module + '.' + _method + '() not found';
          if (_method) {
            errorMessage = 'The callback ' + _method + '() exists in module ' + _module + ', ' + 'but only one callback may be registered to a function in a native module.';
          }
          invariant(callback, errorMessage);
        }
        var profileName = debug ? '<callback for ' + _module + '.' + _method + '>' : cbID;
        if (callback && this.__spy) {
          this.__spy({ type: TO_JS, module: null, method: profileName, args: args });
        }
        Systrace.beginEvent('MessageQueue.invokeCallback(' + profileName + ', ' + stringifySafe(args) + ')');
      } else {
        if (!callback) {
          return;
        }
      }

      this._callbacks[cbID & ~1] = null;

      this._callbacks[cbID | 1] = null;

      callback.apply(null, args);

      if (__DEV__) {
        Systrace.endEvent();
      }
    }
  }], [{
    key: 'spy',
    value: function spy(spyOrToggle) {
      if (spyOrToggle === true) {
        MessageQueue.prototype.__spy = function (info) {
          console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + ' : ' + ('' + (info.module ? info.module + '.' : '') + info.method) + ('(' + JSON.stringify(info.args) + ')'));
        };
      } else if (spyOrToggle === false) {
        MessageQueue.prototype.__spy = null;
      } else {
        MessageQueue.prototype.__spy = spyOrToggle;
      }
    }
  }]);
  return MessageQueue;
}();

module.exports = MessageQueue;
}, 50, null, "MessageQueue");
__d(/* ErrorUtils */function(global, require, module, exports) {
module.exports = global.ErrorUtils;
}, 51, null, "ErrorUtils");
__d(/* JSTimersExecution */function(global, require, module, exports) {
'use strict';

var Systrace = require(53        ); // 53 = Systrace

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var performanceNow = require(58                       ); // 58 = fbjs/lib/performanceNow
var warning = require(19                ); // 19 = fbjs/lib/warning

var FRAME_DURATION = 1000 / 60;
var IDLE_CALLBACK_FRAME_DEADLINE = 1;

var hasEmittedTimeDriftWarning = false;

var JSTimersExecution = {
  GUID: 1,

  callbacks: [],
  types: [],
  timerIDs: [],
  immediates: [],
  requestIdleCallbacks: [],
  identifiers: [],

  errors: null,

  callTimer: function callTimer(timerID, frameTime) {
    warning(timerID <= JSTimersExecution.GUID, 'Tried to call timer with ID %s but no such timer exists.', timerID);

    var timerIndex = JSTimersExecution.timerIDs.indexOf(timerID);
    if (timerIndex === -1) {
      return;
    }

    var type = JSTimersExecution.types[timerIndex];
    var callback = JSTimersExecution.callbacks[timerIndex];
    if (!callback || !type) {
      console.error('No callback found for timerID ' + timerID);
      return;
    }

    if (__DEV__) {
      var identifier = JSTimersExecution.identifiers[timerIndex] || {};
      Systrace.beginEvent('Systrace.callTimer: ' + identifier.methodName);
    }

    if (type === 'setTimeout' || type === 'setImmediate' || type === 'requestAnimationFrame' || type === 'requestIdleCallback') {
      JSTimersExecution._clearIndex(timerIndex);
    }

    try {
      if (type === 'setTimeout' || type === 'setInterval' || type === 'setImmediate') {
        callback();
      } else if (type === 'requestAnimationFrame') {
        callback(performanceNow());
      } else if (type === 'requestIdleCallback') {
        callback({
          timeRemaining: function timeRemaining() {
            return Math.max(0, FRAME_DURATION - (performanceNow() - frameTime));
          }
        });
      } else {
        console.error('Tried to call a callback with invalid type: ' + type);
      }
    } catch (e) {
      if (!JSTimersExecution.errors) {
        JSTimersExecution.errors = [e];
      } else {
        JSTimersExecution.errors.push(e);
      }
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
  },
  callTimers: function callTimers(timerIDs) {
    invariant(timerIDs.length !== 0, 'Cannot call `callTimers` with an empty list of IDs.');

    JSTimersExecution.errors = null;
    for (var i = 0; i < timerIDs.length; i++) {
      JSTimersExecution.callTimer(timerIDs[i], 0);
    }

    var errors = JSTimersExecution.errors;
    if (errors) {
      var errorCount = errors.length;
      if (errorCount > 1) {
        for (var ii = 1; ii < errorCount; ii++) {
          require(60        ).setTimeout(function (error) { // 60 = JSTimers
            throw error;
          }.bind(null, errors[ii]), 0);
        }
      }
      throw errors[0];
    }
  },


  callIdleCallbacks: function callIdleCallbacks(frameTime) {
    if (FRAME_DURATION - (performanceNow() - frameTime) < IDLE_CALLBACK_FRAME_DEADLINE) {
      return;
    }

    JSTimersExecution.errors = null;
    if (JSTimersExecution.requestIdleCallbacks.length > 0) {
      var passIdleCallbacks = JSTimersExecution.requestIdleCallbacks.slice();
      JSTimersExecution.requestIdleCallbacks = [];

      for (var i = 0; i < passIdleCallbacks.length; ++i) {
        JSTimersExecution.callTimer(passIdleCallbacks[i], frameTime);
      }
    }

    if (JSTimersExecution.requestIdleCallbacks.length === 0) {
      var _require = require(48             ), // 48 = NativeModules
          Timing = _require.Timing;

      Timing.setSendIdleEvents(false);
    }

    if (JSTimersExecution.errors) {
      JSTimersExecution.errors.forEach(function (error) {
        return require(60        ).setTimeout(function () { // 60 = JSTimers
          throw error;
        }, 0);
      });
    }
  },

  callImmediatesPass: function callImmediatesPass() {
    Systrace.beginEvent('JSTimersExecution.callImmediatesPass()');

    if (JSTimersExecution.immediates.length > 0) {
      var passImmediates = JSTimersExecution.immediates.slice();
      JSTimersExecution.immediates = [];

      for (var i = 0; i < passImmediates.length; ++i) {
        JSTimersExecution.callTimer(passImmediates[i], 0);
      }
    }

    Systrace.endEvent();

    return JSTimersExecution.immediates.length > 0;
  },
  callImmediates: function callImmediates() {
    JSTimersExecution.errors = null;
    while (JSTimersExecution.callImmediatesPass()) {}
    if (JSTimersExecution.errors) {
      JSTimersExecution.errors.forEach(function (error) {
        return require(60        ).setTimeout(function () { // 60 = JSTimers
          throw error;
        }, 0);
      });
    }
  },
  emitTimeDriftWarning: function emitTimeDriftWarning(warningMessage) {
    if (hasEmittedTimeDriftWarning) {
      return;
    }
    hasEmittedTimeDriftWarning = true;
    console.warn(warningMessage);
  },
  _clearIndex: function _clearIndex(i) {
    JSTimersExecution.timerIDs[i] = null;
    JSTimersExecution.callbacks[i] = null;
    JSTimersExecution.types[i] = null;
    JSTimersExecution.identifiers[i] = null;
  }
};

module.exports = JSTimersExecution;
}, 52, null, "JSTimersExecution");
__d(/* Systrace */function(global, require, module, exports) {
'use strict';

var TRACE_TAG_REACT_APPS = 1 << 17;
var TRACE_TAG_JSC_CALLS = 1 << 27;

var _enabled = false;
var _asyncCookie = 0;

var ReactSystraceDevtool = __DEV__ ? {
  onBeforeMountComponent: function onBeforeMountComponent(debugID) {
    var displayName = require(39                                ).getDisplayName(debugID); // 39 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent('ReactReconciler.mountComponent(' + displayName + ')');
  },
  onMountComponent: function onMountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID) {
    var displayName = require(39                                ).getDisplayName(debugID); // 39 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent('ReactReconciler.updateComponent(' + displayName + ')');
  },
  onUpdateComponent: function onUpdateComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
    var displayName = require(39                                ).getDisplayName(debugID); // 39 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent('ReactReconciler.unmountComponent(' + displayName + ')');
  },
  onUnmountComponent: function onUnmountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    var displayName = require(39                                ).getDisplayName(debugID); // 39 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent(displayName + '.' + timerType + '()');
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    Systrace.endEvent();
  }
} : null;

var Systrace = {
  setEnabled: function setEnabled(enabled) {
    if (_enabled !== enabled) {
      if (__DEV__) {
        if (enabled) {
          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JSC_CALLS);
          require(54              ).addHook(ReactSystraceDevtool); // 54 = ReactDebugTool
        } else {
          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JSC_CALLS);
          require(54              ).removeHook(ReactSystraceDevtool); // 54 = ReactDebugTool
        }
      }
      _enabled = enabled;
    }
  },
  beginEvent: function beginEvent(profileName, args) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);
    }
  },
  endEvent: function endEvent() {
    if (_enabled) {
      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);
    }
  },
  beginAsyncEvent: function beginAsyncEvent(profileName) {
    var cookie = _asyncCookie;
    if (_enabled) {
      _asyncCookie++;
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
    return cookie;
  },
  endAsyncEvent: function endAsyncEvent(profileName, cookie) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
  },
  counterEvent: function counterEvent(profileName, value) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);
    }
  },
  attachToRelayProfiler: function attachToRelayProfiler(relayProfiler) {
    relayProfiler.attachProfileHandler('*', function (name) {
      var cookie = Systrace.beginAsyncEvent(name);
      return function () {
        Systrace.endAsyncEvent(name, cookie);
      };
    });

    relayProfiler.attachAggregateHandler('*', function (name, callback) {
      Systrace.beginEvent(name);
      callback();
      Systrace.endEvent();
    });
  },
  swizzleJSON: function swizzleJSON() {
    Systrace.measureMethods(JSON, 'JSON', ['parse', 'stringify']);
  },
  measureMethods: function measureMethods(object, objectName, methodNames) {
    if (!__DEV__) {
      return;
    }

    methodNames.forEach(function (methodName) {
      object[methodName] = Systrace.measure(objectName, methodName, object[methodName]);
    });
  },
  measure: function measure(objName, fnName, func) {
    if (!__DEV__) {
      return func;
    }

    var profileName = objName + '.' + fnName;
    return function () {
      if (!_enabled) {
        return func.apply(this, arguments);
      }

      Systrace.beginEvent(profileName);
      var ret = func.apply(this, arguments);
      Systrace.endEvent();
      return ret;
    };
  }
};

if (__DEV__) {
  require.Systrace = Systrace;
}

module.exports = Systrace;
}, 53, null, "Systrace");
__d(/* ReactDebugTool */function(global, require, module, exports) {

'use strict';

var ReactInvalidSetStateWarningHook = require(55                               ); // 55 = ReactInvalidSetStateWarningHook
var ReactHostOperationHistoryHook = require(56                             ); // 56 = ReactHostOperationHistoryHook
var ReactComponentTreeHook = require(39                                ); // 39 = react/lib/ReactComponentTreeHook
var ExecutionEnvironment = require(57                             ); // 57 = fbjs/lib/ExecutionEnvironment

var performanceNow = require(58                       ); // 58 = fbjs/lib/performanceNow
var warning = require(19                ); // 19 = fbjs/lib/warning

var ReactDebugTool = null;

if (__DEV__) {
  var hooks = [];
  var didHookThrowForEvent = {};

  var callHook = function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
    try {
      fn.call(context, arg1, arg2, arg3, arg4, arg5);
    } catch (e) {
      warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack);
      didHookThrowForEvent[event] = true;
    }
  };

  var emitEvent = function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
    for (var i = 0; i < hooks.length; i++) {
      var hook = hooks[i];
      var fn = hook[event];
      if (fn) {
        callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
      }
    }
  };

  var _isProfiling = false;
  var flushHistory = [];
  var lifeCycleTimerStack = [];
  var currentFlushNesting = 0;
  var currentFlushMeasurements = [];
  var currentFlushStartTime = 0;
  var currentTimerDebugID = null;
  var currentTimerStartTime = 0;
  var currentTimerNestedFlushDuration = 0;
  var currentTimerType = null;

  var lifeCycleTimerHasWarned = false;

  var clearHistory = function clearHistory() {
    ReactComponentTreeHook.purgeUnmountedComponents();
    ReactHostOperationHistoryHook.clearHistory();
  };

  var getTreeSnapshot = function getTreeSnapshot(registeredIDs) {
    return registeredIDs.reduce(function (tree, id) {
      var ownerID = ReactComponentTreeHook.getOwnerID(id);
      var parentID = ReactComponentTreeHook.getParentID(id);
      tree[id] = {
        displayName: ReactComponentTreeHook.getDisplayName(id),
        text: ReactComponentTreeHook.getText(id),
        updateCount: ReactComponentTreeHook.getUpdateCount(id),
        childIDs: ReactComponentTreeHook.getChildIDs(id),

        ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
        parentID: parentID
      };
      return tree;
    }, {});
  };

  var resetMeasurements = function resetMeasurements() {
    var previousStartTime = currentFlushStartTime;
    var previousMeasurements = currentFlushMeasurements;
    var previousOperations = ReactHostOperationHistoryHook.getHistory();

    if (currentFlushNesting === 0) {
      currentFlushStartTime = 0;
      currentFlushMeasurements = [];
      clearHistory();
      return;
    }

    if (previousMeasurements.length || previousOperations.length) {
      var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
      flushHistory.push({
        duration: performanceNow() - previousStartTime,
        measurements: previousMeasurements || [],
        operations: previousOperations || [],
        treeSnapshot: getTreeSnapshot(registeredIDs)
      });
    }

    clearHistory();
    currentFlushStartTime = performanceNow();
    currentFlushMeasurements = [];
  };

  var checkDebugID = function checkDebugID(debugID) {
    var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (allowRoot && debugID === 0) {
      return;
    }
    if (!debugID) {
      warning(false, 'ReactDebugTool: debugID may not be empty.');
    }
  };

  var beginLifeCycleTimer = function beginLifeCycleTimer(debugID, timerType) {
    if (currentFlushNesting === 0) {
      return;
    }
    if (currentTimerType && !lifeCycleTimerHasWarned) {
      warning(false, 'There is an internal error in the React performance measurement code.' + '\n\nDid not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another');
      lifeCycleTimerHasWarned = true;
    }
    currentTimerStartTime = performanceNow();
    currentTimerNestedFlushDuration = 0;
    currentTimerDebugID = debugID;
    currentTimerType = timerType;
  };

  var endLifeCycleTimer = function endLifeCycleTimer(debugID, timerType) {
    if (currentFlushNesting === 0) {
      return;
    }
    if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
      warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another');
      lifeCycleTimerHasWarned = true;
    }
    if (_isProfiling) {
      currentFlushMeasurements.push({
        timerType: timerType,
        instanceID: debugID,
        duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
      });
    }
    currentTimerStartTime = 0;
    currentTimerNestedFlushDuration = 0;
    currentTimerDebugID = null;
    currentTimerType = null;
  };

  var pauseCurrentLifeCycleTimer = function pauseCurrentLifeCycleTimer() {
    var currentTimer = {
      startTime: currentTimerStartTime,
      nestedFlushStartTime: performanceNow(),
      debugID: currentTimerDebugID,
      timerType: currentTimerType
    };
    lifeCycleTimerStack.push(currentTimer);
    currentTimerStartTime = 0;
    currentTimerNestedFlushDuration = 0;
    currentTimerDebugID = null;
    currentTimerType = null;
  };

  var resumeCurrentLifeCycleTimer = function resumeCurrentLifeCycleTimer() {
    var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
        startTime = _lifeCycleTimerStack$.startTime,
        nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
        debugID = _lifeCycleTimerStack$.debugID,
        timerType = _lifeCycleTimerStack$.timerType;

    var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
    currentTimerStartTime = startTime;
    currentTimerNestedFlushDuration += nestedFlushDuration;
    currentTimerDebugID = debugID;
    currentTimerType = timerType;
  };

  var lastMarkTimeStamp = 0;
  var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

  var shouldMark = function shouldMark(debugID) {
    if (!_isProfiling || !canUsePerformanceMeasure) {
      return false;
    }
    var element = ReactComponentTreeHook.getElement(debugID);
    if (element == null || typeof element !== 'object') {
      return false;
    }
    var isHostElement = typeof element.type === 'string';
    if (isHostElement) {
      return false;
    }
    return true;
  };

  var markBegin = function markBegin(debugID, markType) {
    if (!shouldMark(debugID)) {
      return;
    }

    var markName = debugID + '::' + markType;
    lastMarkTimeStamp = performanceNow();
    performance.mark(markName);
  };

  var markEnd = function markEnd(debugID, markType) {
    if (!shouldMark(debugID)) {
      return;
    }

    var markName = debugID + '::' + markType;
    var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

    var timeStamp = performanceNow();
    if (timeStamp - lastMarkTimeStamp > 0.1) {
      var measurementName = displayName + ' [' + markType + ']';
      performance.measure(measurementName, markName);
    }

    performance.clearMarks(markName);
    performance.clearMeasures(measurementName);
  };

  ReactDebugTool = {
    addHook: function addHook(hook) {
      hooks.push(hook);
    },
    removeHook: function removeHook(hook) {
      for (var i = 0; i < hooks.length; i++) {
        if (hooks[i] === hook) {
          hooks.splice(i, 1);
          i--;
        }
      }
    },
    isProfiling: function isProfiling() {
      return _isProfiling;
    },
    beginProfiling: function beginProfiling() {
      if (_isProfiling) {
        return;
      }

      _isProfiling = true;
      flushHistory.length = 0;
      resetMeasurements();
      ReactDebugTool.addHook(ReactHostOperationHistoryHook);
    },
    endProfiling: function endProfiling() {
      if (!_isProfiling) {
        return;
      }

      _isProfiling = false;
      resetMeasurements();
      ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
    },
    getFlushHistory: function getFlushHistory() {
      return flushHistory;
    },
    onBeginFlush: function onBeginFlush() {
      currentFlushNesting++;
      resetMeasurements();
      pauseCurrentLifeCycleTimer();
      emitEvent('onBeginFlush');
    },
    onEndFlush: function onEndFlush() {
      resetMeasurements();
      currentFlushNesting--;
      resumeCurrentLifeCycleTimer();
      emitEvent('onEndFlush');
    },
    onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
      checkDebugID(debugID);
      emitEvent('onBeginLifeCycleTimer', debugID, timerType);
      markBegin(debugID, timerType);
      beginLifeCycleTimer(debugID, timerType);
    },
    onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
      checkDebugID(debugID);
      endLifeCycleTimer(debugID, timerType);
      markEnd(debugID, timerType);
      emitEvent('onEndLifeCycleTimer', debugID, timerType);
    },
    onBeginProcessingChildContext: function onBeginProcessingChildContext() {
      emitEvent('onBeginProcessingChildContext');
    },
    onEndProcessingChildContext: function onEndProcessingChildContext() {
      emitEvent('onEndProcessingChildContext');
    },
    onHostOperation: function onHostOperation(operation) {
      checkDebugID(operation.instanceID);
      emitEvent('onHostOperation', operation);
    },
    onSetState: function onSetState() {
      emitEvent('onSetState');
    },
    onSetChildren: function onSetChildren(debugID, childDebugIDs) {
      checkDebugID(debugID);
      childDebugIDs.forEach(checkDebugID);
      emitEvent('onSetChildren', debugID, childDebugIDs);
    },
    onBeforeMountComponent: function onBeforeMountComponent(debugID, element, parentDebugID) {
      checkDebugID(debugID);
      checkDebugID(parentDebugID, true);
      emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
      markBegin(debugID, 'mount');
    },
    onMountComponent: function onMountComponent(debugID) {
      checkDebugID(debugID);
      markEnd(debugID, 'mount');
      emitEvent('onMountComponent', debugID);
    },
    onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
      checkDebugID(debugID);
      emitEvent('onBeforeUpdateComponent', debugID, element);
      markBegin(debugID, 'update');
    },
    onUpdateComponent: function onUpdateComponent(debugID) {
      checkDebugID(debugID);
      markEnd(debugID, 'update');
      emitEvent('onUpdateComponent', debugID);
    },
    onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
      checkDebugID(debugID);
      emitEvent('onBeforeUnmountComponent', debugID);
      markBegin(debugID, 'unmount');
    },
    onUnmountComponent: function onUnmountComponent(debugID) {
      checkDebugID(debugID);
      markEnd(debugID, 'unmount');
      emitEvent('onUnmountComponent', debugID);
    },
    onTestEvent: function onTestEvent() {
      emitEvent('onTestEvent');
    }
  };

  ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
  ReactDebugTool.addHook(ReactComponentTreeHook);
  var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
  if (/[?&]react_perf\b/.test(url)) {
    ReactDebugTool.beginProfiling();
  }
}

module.exports = ReactDebugTool;
}, 54, null, "ReactDebugTool");
__d(/* ReactInvalidSetStateWarningHook */function(global, require, module, exports) {

'use strict';

var warning = require(19                ); // 19 = fbjs/lib/warning

var ReactInvalidSetStateWarningHook = {};

if (__DEV__) {
  var processingChildContext = false;

  var warnInvalidSetState = function warnInvalidSetState() {
    warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()');
  };

  ReactInvalidSetStateWarningHook = {
    onBeginProcessingChildContext: function onBeginProcessingChildContext() {
      processingChildContext = true;
    },
    onEndProcessingChildContext: function onEndProcessingChildContext() {
      processingChildContext = false;
    },
    onSetState: function onSetState() {
      warnInvalidSetState();
    }
  };
}

module.exports = ReactInvalidSetStateWarningHook;
}, 55, null, "ReactInvalidSetStateWarningHook");
__d(/* ReactHostOperationHistoryHook */function(global, require, module, exports) {

'use strict';

var ReactHostOperationHistoryHook = null;

if (__DEV__) {
  var history = [];

  ReactHostOperationHistoryHook = {
    onHostOperation: function onHostOperation(operation) {
      history.push(operation);
    },
    clearHistory: function clearHistory() {
      if (ReactHostOperationHistoryHook._preventClearing) {
        return;
      }

      history = [];
    },
    getHistory: function getHistory() {
      return history;
    }
  };
}

module.exports = ReactHostOperationHistoryHook;
}, 56, null, "ReactHostOperationHistoryHook");
__d(/* fbjs/lib/ExecutionEnvironment.js */function(global, require, module, exports) {

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM };

module.exports = ExecutionEnvironment;
}, 57, null, "fbjs/lib/ExecutionEnvironment.js");
__d(/* fbjs/lib/performanceNow.js */function(global, require, module, exports) {'use strict';

var performance = require(59             ); // 59 = ./performance

var performanceNow;

if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
}, 58, null, "fbjs/lib/performanceNow.js");
__d(/* fbjs/lib/performance.js */function(global, require, module, exports) {

'use strict';

var ExecutionEnvironment = require(57                      ); // 57 = ./ExecutionEnvironment

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
}, 59, null, "fbjs/lib/performance.js");
__d(/* JSTimers */function(global, require, module, exports) {
'use strict';

var JSTimersExecution = require(52                 ); // 52 = JSTimersExecution
var Platform = require(61        ); // 61 = Platform

var _require = require(48             ), // 48 = NativeModules
    Timing = _require.Timing;

function _getFreeIndex() {
  var freeIndex = JSTimersExecution.timerIDs.indexOf(null);
  if (freeIndex === -1) {
    freeIndex = JSTimersExecution.timerIDs.length;
  }
  return freeIndex;
}

function _allocateCallback(func, type) {
  var id = JSTimersExecution.GUID++;
  var freeIndex = _getFreeIndex();
  JSTimersExecution.timerIDs[freeIndex] = id;
  JSTimersExecution.callbacks[freeIndex] = func;
  JSTimersExecution.types[freeIndex] = type;
  if (__DEV__) {
    var parseErrorStack = require(62               ); // 62 = parseErrorStack
    var e = new Error();
    e.framesToPop = 1;
    var stack = parseErrorStack(e);
    if (stack) {
      JSTimersExecution.identifiers[freeIndex] = stack.shift();
    }
  }
  return id;
}

function _freeCallback(timerID) {
  if (timerID == null) {
    return;
  }

  var index = JSTimersExecution.timerIDs.indexOf(timerID);

  if (index !== -1) {
    JSTimersExecution._clearIndex(index);
    var type = JSTimersExecution.types[index];
    if (type !== 'setImmediate' && type !== 'requestIdleCallback') {
      Timing.deleteTimer(timerID);
    }
  }
}

var MAX_TIMER_DURATION_MS = 60 * 1000;
var IS_ANDROID = Platform.OS === 'android';
var ANDROID_LONG_TIMER_MESSAGE = 'Setting a timer for a long period of time, i.e. multiple minutes, is a ' + 'performance and correctness issue on Android as it keeps the timer ' + 'module awake, and timers can only be called when the app is in the foreground. ' + 'See https://github.com/facebook/react-native/issues/12981 for more info.';

var JSTimers = {
  setTimeout: function setTimeout(func, duration) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setTimeout with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setTimeout');
    Timing.createTimer(id, duration || 0, Date.now(), false);
    return id;
  },

  setInterval: function setInterval(func, duration) {
    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      args[_key2 - 2] = arguments[_key2];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setInterval with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setInterval');
    Timing.createTimer(id, duration || 0, Date.now(), true);
    return id;
  },

  setImmediate: function setImmediate(func) {
    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setImmediate');
    JSTimersExecution.immediates.push(id);
    return id;
  },

  requestAnimationFrame: function requestAnimationFrame(func) {
    var id = _allocateCallback(func, 'requestAnimationFrame');
    Timing.createTimer(id, 1, Date.now(), false);
    return id;
  },

  requestIdleCallback: function requestIdleCallback(func) {
    if (JSTimersExecution.requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(true);
    }

    var id = _allocateCallback(func, 'requestIdleCallback');
    JSTimersExecution.requestIdleCallbacks.push(id);
    return id;
  },

  cancelIdleCallback: function cancelIdleCallback(timerID) {
    _freeCallback(timerID);
    var index = JSTimersExecution.requestIdleCallbacks.indexOf(timerID);
    if (index !== -1) {
      JSTimersExecution.requestIdleCallbacks.splice(index, 1);
    }

    if (JSTimersExecution.requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(false);
    }
  },

  clearTimeout: function clearTimeout(timerID) {
    _freeCallback(timerID);
  },

  clearInterval: function clearInterval(timerID) {
    _freeCallback(timerID);
  },

  clearImmediate: function clearImmediate(timerID) {
    _freeCallback(timerID);
    var index = JSTimersExecution.immediates.indexOf(timerID);
    if (index !== -1) {
      JSTimersExecution.immediates.splice(index, 1);
    }
  },

  cancelAnimationFrame: function cancelAnimationFrame(timerID) {
    _freeCallback(timerID);
  }
};

module.exports = JSTimers;
}, 60, null, "JSTimers");
__d(/* Platform */function(global, require, module, exports) {

'use strict';

var NativeModules = require(48             ); // 48 = NativeModules

var Platform = {
  OS: 'android',
  get Version() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.Version;
  },
  get isTesting() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.isTesting;
  },
  select: function select(obj) {
    return 'android' in obj ? obj.android : obj.default;
  }
};

module.exports = Platform;
}, 61, null, "Platform");
__d(/* parseErrorStack */function(global, require, module, exports) {
'use strict';

var stacktraceParser = require(63                 ); // 63 = stacktrace-parser

function parseErrorStack(e) {
  if (!e || !e.stack) {
    return [];
  }

  var stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);

  var framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;
  while (framesToPop--) {
    stack.shift();
  }

  return stack;
}

module.exports = parseErrorStack;
}, 62, null, "parseErrorStack");
__d(/* stacktrace-parser/index.js */function(global, require, module, exports) {module.exports = require(64                          ); // 64 = ./lib/stacktrace-parser.js
}, 63, null, "stacktrace-parser/index.js");
__d(/* stacktrace-parser/lib/stacktrace-parser.js */function(global, require, module, exports) {

var UNKNOWN_FUNCTION = '<unknown>';

var StackTraceParser = {
    parse: function parse(stackString) {
        var chrome = /^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            gecko = /^(?:\s*([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
            node = /^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            lines = stackString.split('\n'),
            stack = [],
            parts,
            element;

        for (var i = 0, j = lines.length; i < j; ++i) {
            if (parts = gecko.exec(lines[i])) {
                element = {
                    'file': parts[3],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[4],
                    'column': parts[5] ? +parts[5] : null
                };
            } else if (parts = chrome.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else if (parts = node.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else {
                continue;
            }

            stack.push(element);
        }

        return stack;
    }
};

module.exports = StackTraceParser;
}, 64, null, "stacktrace-parser/lib/stacktrace-parser.js");
__d(/* deepFreezeAndThrowOnMutationInDev */function(global, require, module, exports) {

'use strict';

function deepFreezeAndThrowOnMutationInDev(object) {
  if (__DEV__) {
    if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {
      return;
    }

    var keys = Object.keys(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        object.__defineGetter__(key, identity.bind(null, object[key]));
        object.__defineSetter__(key, throwOnImmutableMutation.bind(null, key));
      }
    }

    Object.freeze(object);
    Object.seal(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        deepFreezeAndThrowOnMutationInDev(object[key]);
      }
    }
  }
}

function throwOnImmutableMutation(key, value) {
  throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');
}

function identity(value) {
  return value;
}

module.exports = deepFreezeAndThrowOnMutationInDev;
}, 65, null, "deepFreezeAndThrowOnMutationInDev");
__d(/* stringifySafe */function(global, require, module, exports) {
'use strict';

function stringifySafe(arg) {
  var ret;
  var type = typeof arg;
  if (arg === undefined) {
    ret = 'undefined';
  } else if (arg === null) {
    ret = 'null';
  } else if (type === 'string') {
    ret = '"' + arg + '"';
  } else if (type === 'function') {
    try {
      ret = arg.toString();
    } catch (e) {
      ret = '[function unknown]';
    }
  } else {
    try {
      ret = JSON.stringify(arg);
    } catch (e) {
      if (typeof arg.toString === 'function') {
        try {
          ret = arg.toString();
        } catch (E) {}
      }
    }
  }
  return ret || '["' + type + '" failed to stringify]';
}

module.exports = stringifySafe;
}, 66, null, "stringifySafe");
__d(/* defineLazyObjectProperty */function(global, require, module, exports) {

'use strict';

function defineLazyObjectProperty(object, name, descriptor) {
  var get = descriptor.get;

  var enumerable = descriptor.enumerable !== false;
  var writable = descriptor.writable !== false;

  var value = void 0;
  var valueSet = false;
  function getValue() {
    if (!valueSet) {
      valueSet = true;
      setValue(get());
    }
    return value;
  }
  function setValue(newValue) {
    value = newValue;
    valueSet = true;
    Object.defineProperty(object, name, {
      value: newValue,
      configurable: true,
      enumerable: enumerable,
      writable: writable
    });
  }

  Object.defineProperty(object, name, {
    get: getValue,
    set: setValue,
    configurable: true,
    enumerable: enumerable
  });
}

module.exports = defineLazyObjectProperty;
}, 67, null, "defineLazyObjectProperty");
__d(/* RCTDeviceEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(69            ); // 69 = EventEmitter
var EventSubscriptionVendor = require(72                       ); // 72 = EventSubscriptionVendor
var BatchedBridge = require(49             ); // 49 = BatchedBridge

var RCTDeviceEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(RCTDeviceEventEmitter, _EventEmitter);

  function RCTDeviceEventEmitter() {
    babelHelpers.classCallCheck(this, RCTDeviceEventEmitter);

    var sharedSubscriber = new EventSubscriptionVendor();

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTDeviceEventEmitter.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter)).call(this, sharedSubscriber));

    _this.sharedSubscriber = sharedSubscriber;
    return _this;
  }

  babelHelpers.createClass(RCTDeviceEventEmitter, [{
    key: '_nativeEventModule',
    value: function _nativeEventModule(eventType) {
      if (eventType) {
        if (eventType.lastIndexOf('statusBar', 0) === 0) {
          console.warn('`%s` event should be registered via the StatusBarIOS module', eventType);
          return require(73            ); // 73 = StatusBarIOS
        }
        if (eventType.lastIndexOf('keyboard', 0) === 0) {
          console.warn('`%s` event should be registered via the Keyboard module', eventType);
          return require(75        ); // 75 = Keyboard
        }
        if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {
          console.warn('`%s` event should be registered via the AppState module', eventType);
          return require(79        ); // 79 = AppState
        }
      }
      return null;
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      var eventModule = this._nativeEventModule(eventType);
      return eventModule ? eventModule.addListener(eventType, listener, context) : babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      var eventModule = this._nativeEventModule(eventType);
      eventModule && eventType ? eventModule.removeAllListeners(eventType) : babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (subscription.emitter !== this) {
        subscription.emitter.removeSubscription(subscription);
      } else {
        babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
      }
    }
  }]);
  return RCTDeviceEventEmitter;
}(EventEmitter);

RCTDeviceEventEmitter = new RCTDeviceEventEmitter();

BatchedBridge.registerCallableModule('RCTDeviceEventEmitter', RCTDeviceEventEmitter);

module.exports = RCTDeviceEventEmitter;
}, 68, null, "RCTDeviceEventEmitter");
__d(/* EventEmitter */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(70                   ); // 70 = EmitterSubscription
var EventSubscriptionVendor = require(72                       ); // 72 = EventSubscriptionVendor

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var EventEmitter = function () {
  function EventEmitter(subscriber) {
    babelHelpers.classCallCheck(this, EventEmitter);

    this._subscriber = subscriber || new EventSubscriptionVendor();
  }

  babelHelpers.createClass(EventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {

      return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      var _this = this;

      return this.addListener(eventType, function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.removeCurrentListener();
        listener.apply(context, args);
      });
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._subscriber.removeAllSubscriptions(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');
      this.removeSubscription(this._currentSubscription);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');
      this._subscriber.removeSubscription(subscription);
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {
        return subscription.listener;
      }) : [];
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription) {
            this._currentSubscription = subscription;
            subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));
          }
        }
        this._currentSubscription = null;
      }
    }
  }, {
    key: 'removeListener',
    value: function removeListener(eventType, listener) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription && subscription.listener === listener) {
            subscription.remove();
          }
        }
      }
    }
  }]);
  return EventEmitter;
}();

module.exports = EventEmitter;
}, 69, null, "EventEmitter");
__d(/* EmitterSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = require(71                 ); // 71 = EventSubscription

var EmitterSubscription = function (_EventSubscription) {
  babelHelpers.inherits(EmitterSubscription, _EventSubscription);

  function EmitterSubscription(emitter, subscriber, listener, context) {
    babelHelpers.classCallCheck(this, EmitterSubscription);

    var _this = babelHelpers.possibleConstructorReturn(this, (EmitterSubscription.__proto__ || Object.getPrototypeOf(EmitterSubscription)).call(this, subscriber));

    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;
    return _this;
  }

  babelHelpers.createClass(EmitterSubscription, [{
    key: 'remove',
    value: function remove() {
      this.emitter.removeSubscription(this);
    }
  }]);
  return EmitterSubscription;
}(EventSubscription);

module.exports = EmitterSubscription;
}, 70, null, "EmitterSubscription");
__d(/* EventSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = function () {
  function EventSubscription(subscriber) {
    babelHelpers.classCallCheck(this, EventSubscription);

    this.subscriber = subscriber;
  }

  babelHelpers.createClass(EventSubscription, [{
    key: 'remove',
    value: function remove() {
      this.subscriber.removeSubscription(this);
    }
  }]);
  return EventSubscription;
}();

module.exports = EventSubscription;
}, 71, null, "EventSubscription");
__d(/* EventSubscriptionVendor */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var EventSubscriptionVendor = function () {
  function EventSubscriptionVendor() {
    babelHelpers.classCallCheck(this, EventSubscriptionVendor);

    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }

  babelHelpers.createClass(EventSubscriptionVendor, [{
    key: 'addSubscription',
    value: function addSubscription(eventType, subscription) {
      invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');
      if (!this._subscriptionsForType[eventType]) {
        this._subscriptionsForType[eventType] = [];
      }
      var key = this._subscriptionsForType[eventType].length;
      this._subscriptionsForType[eventType].push(subscription);
      subscription.eventType = eventType;
      subscription.key = key;
      return subscription;
    }
  }, {
    key: 'removeAllSubscriptions',
    value: function removeAllSubscriptions(eventType) {
      if (eventType === undefined) {
        this._subscriptionsForType = {};
      } else {
        delete this._subscriptionsForType[eventType];
      }
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      var eventType = subscription.eventType;
      var key = subscription.key;

      var subscriptionsForType = this._subscriptionsForType[eventType];
      if (subscriptionsForType) {
        delete subscriptionsForType[key];
      }
    }
  }, {
    key: 'getSubscriptionsForType',
    value: function getSubscriptionsForType(eventType) {
      return this._subscriptionsForType[eventType];
    }
  }]);
  return EventSubscriptionVendor;
}();

module.exports = EventSubscriptionVendor;
}, 72, null, "EventSubscriptionVendor");
__d(/* StatusBarIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter

module.exports = new NativeEventEmitter('StatusBarManager');
}, 73, null, "StatusBarIOS");
__d(/* NativeEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(69            ); // 69 = EventEmitter
var Platform = require(61        ); // 61 = Platform
var RCTDeviceEventEmitter = require(68                     ); // 68 = RCTDeviceEventEmitter
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var NativeEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(NativeEventEmitter, _EventEmitter);

  function NativeEventEmitter(nativeModule) {
    babelHelpers.classCallCheck(this, NativeEventEmitter);

    var _this = babelHelpers.possibleConstructorReturn(this, (NativeEventEmitter.__proto__ || Object.getPrototypeOf(NativeEventEmitter)).call(this, RCTDeviceEventEmitter.sharedSubscriber));

    if (Platform.OS === 'ios') {
      invariant(nativeModule, 'Native module cannot be null.');
      _this._nativeModule = nativeModule;
    }
    return _this;
  }

  babelHelpers.createClass(NativeEventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      if (Platform.OS === 'ios') {
        this._nativeModule.addListener(eventType);
      }
      return babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      invariant(eventType, 'eventType argument is required.');
      if (Platform.OS === 'ios') {
        var count = this.listeners(eventType).length;
        this._nativeModule.removeListeners(count);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (Platform.OS === 'ios') {
        this._nativeModule.removeListeners(1);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
    }
  }]);
  return NativeEventEmitter;
}(EventEmitter);

module.exports = NativeEventEmitter;
}, 74, null, "NativeEventEmitter");
__d(/* Keyboard */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var KeyboardObserver = require(48             ).KeyboardObserver; // 48 = NativeModules
var dismissKeyboard = require(76               ); // 76 = dismissKeyboard
var KeyboardEventEmitter = new NativeEventEmitter(KeyboardObserver);

var Keyboard = {
  addListener: function addListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeListener: function removeListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeAllListeners: function removeAllListeners(eventName) {
    invariant(false, 'Dummy method used for documentation');
  },
  dismiss: function dismiss() {
    invariant(false, 'Dummy method used for documentation');
  }
};

Keyboard = KeyboardEventEmitter;
Keyboard.dismiss = dismissKeyboard;

module.exports = Keyboard;
}, 75, null, "Keyboard");
__d(/* dismissKeyboard */function(global, require, module, exports) {
'use strict';

var TextInputState = require(77              ); // 77 = TextInputState

function dismissKeyboard() {
  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());
}

module.exports = dismissKeyboard;
}, 76, null, "dismissKeyboard");
__d(/* TextInputState */function(global, require, module, exports) {
'use strict';

var Platform = require(61        ); // 61 = Platform
var UIManager = require(78         ); // 78 = UIManager

var TextInputState = {
  _currentlyFocusedID: null,

  currentlyFocusedField: function currentlyFocusedField() {
    return this._currentlyFocusedID;
  },

  focusTextInput: function focusTextInput(textFieldID) {
    if (this._currentlyFocusedID !== textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = textFieldID;
      if (Platform.OS === 'ios') {
        UIManager.focus(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.focusTextInput, null);
      }
    }
  },

  blurTextInput: function blurTextInput(textFieldID) {
    if (this._currentlyFocusedID === textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = null;
      if (Platform.OS === 'ios') {
        UIManager.blur(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.blurTextInput, null);
      }
    }
  }
};

module.exports = TextInputState;
}, 77, null, "TextInputState");
__d(/* UIManager */function(global, require, module, exports) {
'use strict';

var NativeModules = require(48             ); // 48 = NativeModules
var Platform = require(61        ); // 61 = Platform

var defineLazyObjectProperty = require(67                        ); // 67 = defineLazyObjectProperty
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var UIManager = NativeModules.UIManager;


invariant(UIManager, 'UIManager is undefined. The native module config is probably incorrect.');

UIManager.__takeSnapshot = UIManager.takeSnapshot;
UIManager.takeSnapshot = function () {
  invariant(false, 'UIManager.takeSnapshot should not be called directly. ' + 'Use ReactNative.takeSnapshot instead.');
};

if (Platform.OS === 'ios') {
  Object.keys(UIManager).forEach(function (viewName) {
    var viewConfig = UIManager[viewName];
    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  });
} else if (Platform.OS === 'android' && UIManager.AndroidLazyViewManagersEnabled) {
  UIManager.ViewManagerNames.forEach(function (viewManagerName) {
    defineLazyObjectProperty(UIManager, viewManagerName, {
      get: function get() {
        return NativeModules[viewManagerName.replace(/^(RCT|RK)/, '')];
      }
    });
  });
}

module.exports = UIManager;
}, 78, null, "UIManager");
__d(/* AppState */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(69            ); // 69 = EventEmitter
var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var NativeModules = require(48             ); // 48 = NativeModules
var RCTAppState = NativeModules.AppState;

var logError = require(80        ); // 80 = logError
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var AppState = function (_NativeEventEmitter) {
  babelHelpers.inherits(AppState, _NativeEventEmitter);

  function AppState() {
    babelHelpers.classCallCheck(this, AppState);

    var _this = babelHelpers.possibleConstructorReturn(this, (AppState.__proto__ || Object.getPrototypeOf(AppState)).call(this, RCTAppState));

    _this.isAvailable = true;
    _this._eventHandlers = {
      change: new Map(),
      memoryWarning: new Map()
    };

    _this.currentState = RCTAppState.initialAppState || 'active';

    _this.addListener('appStateDidChange', function (appStateData) {
      _this.currentState = appStateData.app_state;
    });

    RCTAppState.getCurrentAppState(function (appStateData) {
      _this.currentState = appStateData.app_state;
    }, logError);
    return _this;
  }

  babelHelpers.createClass(AppState, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to subscribe to unknown event: "%s"', type);
      if (type === 'change') {
        this._eventHandlers[type].set(handler, this.addListener('appStateDidChange', function (appStateData) {
          handler(appStateData.app_state);
        }));
      } else if (type === 'memoryWarning') {
        this._eventHandlers[type].set(handler, this.addListener('memoryWarning', handler));
      }
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to remove listener for unknown event: "%s"', type);
      if (!this._eventHandlers[type].has(handler)) {
        return;
      }
      this._eventHandlers[type].get(handler).remove();
      this._eventHandlers[type].delete(handler);
    }
  }]);
  return AppState;
}(NativeEventEmitter);

function throwMissingNativeModule() {
  invariant(false, 'Cannot use AppState module when native RCTAppState is not included in the build.\n' + 'Either include it, or check AppState.isAvailable before calling any methods.');
}

var MissingNativeAppStateShim = function (_EventEmitter) {
  babelHelpers.inherits(MissingNativeAppStateShim, _EventEmitter);

  function MissingNativeAppStateShim() {
    var _ref;

    var _temp, _this2, _ret;

    babelHelpers.classCallCheck(this, MissingNativeAppStateShim);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this2 = babelHelpers.possibleConstructorReturn(this, (_ref = MissingNativeAppStateShim.__proto__ || Object.getPrototypeOf(MissingNativeAppStateShim)).call.apply(_ref, [this].concat(args))), _this2), _this2.isAvailable = false, _this2.currentState = null, _temp), babelHelpers.possibleConstructorReturn(_this2, _ret);
  }

  babelHelpers.createClass(MissingNativeAppStateShim, [{
    key: 'addEventListener',
    value: function addEventListener() {
      throwMissingNativeModule();
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener() {
      throwMissingNativeModule();
    }
  }, {
    key: 'addListener',
    value: function addListener() {
      throwMissingNativeModule();
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      throwMissingNativeModule();
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription() {
      throwMissingNativeModule();
    }
  }]);
  return MissingNativeAppStateShim;
}(EventEmitter);

if (RCTAppState) {
  AppState = new AppState();
} else {
  AppState = new MissingNativeAppStateShim();
}

module.exports = AppState;
}, 79, null, "AppState");
__d(/* logError */function(global, require, module, exports) {
'use strict';

var logError = function logError() {
  if (arguments.length === 1 && arguments[0] instanceof Error) {
    var err = arguments[0];
    console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);
  } else {
    console.error.apply(console, arguments);
  }
};

module.exports = logError;
}, 80, null, "logError");
__d(/* ActivityIndicator */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\ActivityIndicator\\ActivityIndicator.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var View = require(234   ); // 234 = View

var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var PropTypes = React.PropTypes;

var GRAY = '#999999';

var ActivityIndicator = React.createClass({
  displayName: 'ActivityIndicator',

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    animating: PropTypes.bool,

    color: ColorPropType,

    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'large']), PropTypes.number]),

    hidesWhenStopped: PropTypes.bool
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      animating: true,
      color: Platform.OS === 'ios' ? GRAY : undefined,
      hidesWhenStopped: true,
      size: 'small'
    };
  },
  render: function render() {
    var _props = this.props,
        onLayout = _props.onLayout,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['onLayout', 'style']);

    var sizeStyle = void 0;

    switch (props.size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        break;
      case 'large':
        sizeStyle = styles.sizeLarge;
        break;
      default:
        sizeStyle = { height: props.size, width: props.size };
        break;
    }

    return React.createElement(
      View,
      {
        onLayout: onLayout,
        style: [styles.container, style], __source: {
          fileName: _jsxFileName,
          lineNumber: 96
        }
      },
      React.createElement(RCTActivityIndicator, babelHelpers.extends({}, props, {
        style: sizeStyle,
        styleAttr: 'Normal',
        indeterminate: true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 99
        }
      }))
    );
  }
});

var styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  sizeSmall: {
    width: 20,
    height: 20
  },
  sizeLarge: {
    width: 36,
    height: 36
  }
});

if (Platform.OS === 'ios') {
  var RCTActivityIndicator = requireNativeComponent('RCTActivityIndicatorView', ActivityIndicator, { nativeOnly: { activityIndicatorViewStyle: true } });
} else if (Platform.OS === 'android') {
  var RCTActivityIndicator = requireNativeComponent('AndroidProgressBar', ActivityIndicator, { nativeOnly: {
      indeterminate: true,
      progress: true,
      styleAttr: true
    } });
}

module.exports = ActivityIndicator;
}, 81, null, "ActivityIndicator");
__d(/* ColorPropType */function(global, require, module, exports) {
'use strict';

var normalizeColor = require(83              ); // 83 = normalizeColor

var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
  var color = props[propName];
  if (color === undefined || color === null) {
    if (isRequired) {
      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
    }
    return;
  }

  if (typeof color === 'number') {
    return;
  }

  if (normalizeColor(color) === null) {
    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + 'Valid color formats are\n  - \'#f0f\' (#rgb)\n  - \'#f0fc\' (#rgba)\n  - \'#ff00ff\' (#rrggbb)\n  - \'#ff00ff00\' (#rrggbbaa)\n  - \'rgb(255, 255, 255)\'\n  - \'rgba(255, 255, 255, 1.0)\'\n  - \'hsl(360, 100%, 100%)\'\n  - \'hsla(360, 100%, 100%, 1.0)\'\n  - \'transparent\'\n  - \'red\'\n  - 0xff00ff00 (0xrrggbbaa)\n');
  }
};

var ColorPropType = colorPropType.bind(null, false);
ColorPropType.isRequired = colorPropType.bind(null, true);

module.exports = ColorPropType;
}, 82, null, "ColorPropType");
__d(/* normalizeColor */function(global, require, module, exports) {
'use strict';

function normalizeColor(color) {
  var match;

  if (typeof color === 'number') {
    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
      return color;
    }
    return null;
  }

  if (match = matchers.hex6.exec(color)) {
    return parseInt(match[1] + 'ff', 16) >>> 0;
  }

  if (names.hasOwnProperty(color)) {
    return names[color];
  }

  if (match = matchers.rgb.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
  }

  if (match = matchers.rgba.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
  }

  if (match = matchers.hex3.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
  }

  if (match = matchers.hex8.exec(color)) {
    return parseInt(match[1], 16) >>> 0;
  }

  if (match = matchers.hex4.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
  }

  if (match = matchers.hsl.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
  }

  if (match = matchers.hsla.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
  }

  return null;
}

function hue2rgb(p, q, t) {
  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p + (q - p) * 6 * t;
  }
  if (t < 1 / 2) {
    return q;
  }
  if (t < 2 / 3) {
    return p + (q - p) * (2 / 3 - t) * 6;
  }
  return p;
}

function hslToRgb(h, s, l) {
  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
  var p = 2 * l - q;
  var r = hue2rgb(p, q, h + 1 / 3);
  var g = hue2rgb(p, q, h);
  var b = hue2rgb(p, q, h - 1 / 3);

  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
}

var NUMBER = '[-+]?\\d*\\.?\\d+';
var PERCENTAGE = NUMBER + '%';

function call() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
}

var matchers = {
  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#([0-9a-fA-F]{6})$/,
  hex8: /^#([0-9a-fA-F]{8})$/
};

function parse255(str) {
  var int = parseInt(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 255) {
    return 255;
  }
  return int;
}

function parse360(str) {
  var int = parseFloat(str);
  return (int % 360 + 360) % 360 / 360;
}

function parse1(str) {
  var num = parseFloat(str);
  if (num < 0) {
    return 0;
  }
  if (num > 1) {
    return 255;
  }
  return Math.round(num * 255);
}

function parsePercentage(str) {
  var int = parseFloat(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 100) {
    return 1;
  }
  return int / 100;
}

var names = {
  transparent: 0x00000000,

  aliceblue: 0xf0f8ffff,
  antiquewhite: 0xfaebd7ff,
  aqua: 0x00ffffff,
  aquamarine: 0x7fffd4ff,
  azure: 0xf0ffffff,
  beige: 0xf5f5dcff,
  bisque: 0xffe4c4ff,
  black: 0x000000ff,
  blanchedalmond: 0xffebcdff,
  blue: 0x0000ffff,
  blueviolet: 0x8a2be2ff,
  brown: 0xa52a2aff,
  burlywood: 0xdeb887ff,
  burntsienna: 0xea7e5dff,
  cadetblue: 0x5f9ea0ff,
  chartreuse: 0x7fff00ff,
  chocolate: 0xd2691eff,
  coral: 0xff7f50ff,
  cornflowerblue: 0x6495edff,
  cornsilk: 0xfff8dcff,
  crimson: 0xdc143cff,
  cyan: 0x00ffffff,
  darkblue: 0x00008bff,
  darkcyan: 0x008b8bff,
  darkgoldenrod: 0xb8860bff,
  darkgray: 0xa9a9a9ff,
  darkgreen: 0x006400ff,
  darkgrey: 0xa9a9a9ff,
  darkkhaki: 0xbdb76bff,
  darkmagenta: 0x8b008bff,
  darkolivegreen: 0x556b2fff,
  darkorange: 0xff8c00ff,
  darkorchid: 0x9932ccff,
  darkred: 0x8b0000ff,
  darksalmon: 0xe9967aff,
  darkseagreen: 0x8fbc8fff,
  darkslateblue: 0x483d8bff,
  darkslategray: 0x2f4f4fff,
  darkslategrey: 0x2f4f4fff,
  darkturquoise: 0x00ced1ff,
  darkviolet: 0x9400d3ff,
  deeppink: 0xff1493ff,
  deepskyblue: 0x00bfffff,
  dimgray: 0x696969ff,
  dimgrey: 0x696969ff,
  dodgerblue: 0x1e90ffff,
  firebrick: 0xb22222ff,
  floralwhite: 0xfffaf0ff,
  forestgreen: 0x228b22ff,
  fuchsia: 0xff00ffff,
  gainsboro: 0xdcdcdcff,
  ghostwhite: 0xf8f8ffff,
  gold: 0xffd700ff,
  goldenrod: 0xdaa520ff,
  gray: 0x808080ff,
  green: 0x008000ff,
  greenyellow: 0xadff2fff,
  grey: 0x808080ff,
  honeydew: 0xf0fff0ff,
  hotpink: 0xff69b4ff,
  indianred: 0xcd5c5cff,
  indigo: 0x4b0082ff,
  ivory: 0xfffff0ff,
  khaki: 0xf0e68cff,
  lavender: 0xe6e6faff,
  lavenderblush: 0xfff0f5ff,
  lawngreen: 0x7cfc00ff,
  lemonchiffon: 0xfffacdff,
  lightblue: 0xadd8e6ff,
  lightcoral: 0xf08080ff,
  lightcyan: 0xe0ffffff,
  lightgoldenrodyellow: 0xfafad2ff,
  lightgray: 0xd3d3d3ff,
  lightgreen: 0x90ee90ff,
  lightgrey: 0xd3d3d3ff,
  lightpink: 0xffb6c1ff,
  lightsalmon: 0xffa07aff,
  lightseagreen: 0x20b2aaff,
  lightskyblue: 0x87cefaff,
  lightslategray: 0x778899ff,
  lightslategrey: 0x778899ff,
  lightsteelblue: 0xb0c4deff,
  lightyellow: 0xffffe0ff,
  lime: 0x00ff00ff,
  limegreen: 0x32cd32ff,
  linen: 0xfaf0e6ff,
  magenta: 0xff00ffff,
  maroon: 0x800000ff,
  mediumaquamarine: 0x66cdaaff,
  mediumblue: 0x0000cdff,
  mediumorchid: 0xba55d3ff,
  mediumpurple: 0x9370dbff,
  mediumseagreen: 0x3cb371ff,
  mediumslateblue: 0x7b68eeff,
  mediumspringgreen: 0x00fa9aff,
  mediumturquoise: 0x48d1ccff,
  mediumvioletred: 0xc71585ff,
  midnightblue: 0x191970ff,
  mintcream: 0xf5fffaff,
  mistyrose: 0xffe4e1ff,
  moccasin: 0xffe4b5ff,
  navajowhite: 0xffdeadff,
  navy: 0x000080ff,
  oldlace: 0xfdf5e6ff,
  olive: 0x808000ff,
  olivedrab: 0x6b8e23ff,
  orange: 0xffa500ff,
  orangered: 0xff4500ff,
  orchid: 0xda70d6ff,
  palegoldenrod: 0xeee8aaff,
  palegreen: 0x98fb98ff,
  paleturquoise: 0xafeeeeff,
  palevioletred: 0xdb7093ff,
  papayawhip: 0xffefd5ff,
  peachpuff: 0xffdab9ff,
  peru: 0xcd853fff,
  pink: 0xffc0cbff,
  plum: 0xdda0ddff,
  powderblue: 0xb0e0e6ff,
  purple: 0x800080ff,
  rebeccapurple: 0x663399ff,
  red: 0xff0000ff,
  rosybrown: 0xbc8f8fff,
  royalblue: 0x4169e1ff,
  saddlebrown: 0x8b4513ff,
  salmon: 0xfa8072ff,
  sandybrown: 0xf4a460ff,
  seagreen: 0x2e8b57ff,
  seashell: 0xfff5eeff,
  sienna: 0xa0522dff,
  silver: 0xc0c0c0ff,
  skyblue: 0x87ceebff,
  slateblue: 0x6a5acdff,
  slategray: 0x708090ff,
  slategrey: 0x708090ff,
  snow: 0xfffafaff,
  springgreen: 0x00ff7fff,
  steelblue: 0x4682b4ff,
  tan: 0xd2b48cff,
  teal: 0x008080ff,
  thistle: 0xd8bfd8ff,
  tomato: 0xff6347ff,
  turquoise: 0x40e0d0ff,
  violet: 0xee82eeff,
  wheat: 0xf5deb3ff,
  white: 0xffffffff,
  whitesmoke: 0xf5f5f5ff,
  yellow: 0xffff00ff,
  yellowgreen: 0x9acd32ff
};

module.exports = normalizeColor;
}, 83, null, "normalizeColor");
__d(/* NativeMethodsMixin */function(global, require, module, exports) {
'use strict';

var ReactNative = require(85           ); // 85 = ReactNative
var ReactNativeFeatureFlags = require(86                       ); // 86 = ReactNativeFeatureFlags
var ReactNativeAttributePayload = require(125                          ); // 125 = ReactNativeAttributePayload
var TextInputState = require(77              ); // 77 = TextInputState
var UIManager = require(78         ); // 78 = UIManager

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var findNodeHandle = require(204             ); // 204 = findNodeHandle

var _require = require(137                      ), // 137 = NativeMethodsMixinUtils
    mountSafeCallback = _require.mountSafeCallback,
    throwOnStylesProp = _require.throwOnStylesProp,
    warnForStyleProps = _require.warnForStyleProps;

var NativeMethodsMixin = {
  measure: function measure(callback) {
    UIManager.measure(ReactNative.findNodeHandle(this), mountSafeCallback(this, callback));
  },

  measureInWindow: function measureInWindow(callback) {
    UIManager.measureInWindow(ReactNative.findNodeHandle(this), mountSafeCallback(this, callback));
  },

  measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
    UIManager.measureLayout(ReactNative.findNodeHandle(this), relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
  },

  setNativeProps: function setNativeProps(nativeProps) {
    require(85           ); // 85 = ReactNative

    injectedSetNativeProps(this, nativeProps);
  },

  focus: function focus() {
    TextInputState.focusTextInput(ReactNative.findNodeHandle(this));
  },

  blur: function blur() {
    TextInputState.blurTextInput(ReactNative.findNodeHandle(this));
  }
};

function setNativePropsFiber(componentOrHandle, nativeProps) {
  var maybeInstance = void 0;

  try {
    maybeInstance = findNodeHandle(componentOrHandle);
  } catch (error) {}

  if (maybeInstance == null) {
    return;
  }

  var viewConfig = maybeInstance.viewConfig;

  if (__DEV__) {
    warnForStyleProps(nativeProps, viewConfig.validAttributes);
  }

  var updatePayload = ReactNativeAttributePayload.create(nativeProps, viewConfig.validAttributes);

  UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
}

function setNativePropsStack(componentOrHandle, nativeProps) {
  var maybeInstance = findNodeHandle(componentOrHandle);

  if (maybeInstance == null) {
    return;
  }

  var viewConfig = void 0;
  if (maybeInstance.viewConfig !== undefined) {
    viewConfig = maybeInstance.viewConfig;
  } else if (maybeInstance._instance !== undefined && maybeInstance._instance.viewConfig !== undefined) {
    viewConfig = maybeInstance._instance.viewConfig;
  } else {
    while (maybeInstance._renderedComponent !== undefined) {
      maybeInstance = maybeInstance._renderedComponent;
    }
    viewConfig = maybeInstance.viewConfig;
  }

  var tag = typeof maybeInstance.getHostNode === 'function' ? maybeInstance.getHostNode() : maybeInstance._rootNodeID;

  if (__DEV__) {
    warnForStyleProps(nativeProps, viewConfig.validAttributes);
  }

  var updatePayload = ReactNativeAttributePayload.create(nativeProps, viewConfig.validAttributes);

  UIManager.updateView(tag, viewConfig.uiViewClassName, updatePayload);
}

var injectedSetNativeProps = void 0;
if (ReactNativeFeatureFlags.useFiber) {
  injectedSetNativeProps = setNativePropsFiber;
} else {
  injectedSetNativeProps = setNativePropsStack;
}

if (__DEV__) {
  var NativeMethodsMixin_DEV = NativeMethodsMixin;
  invariant(!NativeMethodsMixin_DEV.componentWillMount && !NativeMethodsMixin_DEV.componentWillReceiveProps, 'Do not override existing functions.');
  NativeMethodsMixin_DEV.componentWillMount = function () {
    throwOnStylesProp(this, this.props);
  };
  NativeMethodsMixin_DEV.componentWillReceiveProps = function (newProps) {
    throwOnStylesProp(this, newProps);
  };
}

module.exports = NativeMethodsMixin;
}, 84, null, "NativeMethodsMixin");
__d(/* ReactNative */function(global, require, module, exports) {
'use strict';

var ReactNativeFeatureFlags = require(86                       ); // 86 = ReactNativeFeatureFlags

module.exports = ReactNativeFeatureFlags.useFiber ? require(87                ) : require(206               ); // 206 = ReactNativeStack // 87 = ReactNativeFiber
}, 85, null, "ReactNative");
__d(/* ReactNativeFeatureFlags */function(global, require, module, exports) {

'use strict';

var ReactNativeFeatureFlags = {
  useFiber: false
};

module.exports = ReactNativeFeatureFlags;
}, 86, null, "ReactNativeFeatureFlags");
__d(/* ReactNativeFiber */function(global, require, module, exports) {

'use strict';

var ReactFiberErrorLogger = require(88                     ); // 88 = ReactFiberErrorLogger
var ReactFiberReconciler = require(89                    ); // 89 = ReactFiberReconciler
var ReactGenericBatching = require(122                   ); // 122 = ReactGenericBatching
var ReactNativeAttributePayload = require(125                          ); // 125 = ReactNativeAttributePayload
var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree
var ReactNativeFiberErrorDialog = require(130                          ); // 130 = ReactNativeFiberErrorDialog
var ReactNativeFiberHostComponent = require(136                            ); // 136 = ReactNativeFiberHostComponent
var ReactNativeInjection = require(138                   ); // 138 = ReactNativeInjection
var ReactNativeTagHandles = require(196                    ); // 196 = ReactNativeTagHandles
var ReactNativeViewConfigRegistry = require(203                            ); // 203 = ReactNativeViewConfigRegistry
var ReactPortal = require(111          ); // 111 = ReactPortal
var UIManager = require(78         ); // 78 = UIManager

var deepFreezeAndThrowOnMutationInDev = require(65                                 ); // 65 = deepFreezeAndThrowOnMutationInDev
var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var _findNodeHandle = require(204             ); // 204 = findNodeHandle
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var takeSnapshot = require(205           ); // 205 = takeSnapshot

var _require = require(118                     ), // 118 = ReactFiberDevToolsHook
    injectInternals = _require.injectInternals;

var precacheFiberNode = ReactNativeComponentTree.precacheFiberNode,
    uncacheFiberNode = ReactNativeComponentTree.uncacheFiberNode,
    updateFiberProps = ReactNativeComponentTree.updateFiberProps;


ReactNativeInjection.inject();

function recursivelyUncacheFiberNode(node) {
  if (typeof node === 'number') {
    uncacheFiberNode(node);
  } else {
    uncacheFiberNode(node._nativeTag);

    node._children.forEach(recursivelyUncacheFiberNode);
  }
}

var NativeRenderer = ReactFiberReconciler({
  appendChild: function appendChild(parentInstance, child) {
    if (typeof parentInstance === 'number') {
      UIManager.setChildren(parentInstance, [child._nativeTag]);
    } else {
      var children = parentInstance._children;

      children.push(child);

      UIManager.manageChildren(parentInstance._nativeTag, [], [], [child._nativeTag], [children.length - 1], []);
    }
  },
  appendInitialChild: function appendInitialChild(parentInstance, child) {
    parentInstance._children.push(child);
  },
  commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
    UIManager.updateView(textInstance, 'RCTRawText', { text: newText });
  },
  commitMount: function commitMount(instance, type, newProps, internalInstanceHandle) {},
  commitUpdate: function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {
    var viewConfig = instance.viewConfig;

    updateFiberProps(instance._nativeTag, newProps);

    var updatePayload = ReactNativeAttributePayload.diff(oldProps, newProps, viewConfig.validAttributes);

    UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
  },
  createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
    var tag = ReactNativeTagHandles.allocateTag();
    var viewConfig = ReactNativeViewConfigRegistry.get(type);

    if (__DEV__) {
      for (var key in viewConfig.validAttributes) {
        if (props.hasOwnProperty(key)) {
          deepFreezeAndThrowOnMutationInDev(props[key]);
        }
      }
    }

    var updatePayload = ReactNativeAttributePayload.create(props, viewConfig.validAttributes);

    UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);

    var component = new ReactNativeFiberHostComponent(tag, viewConfig);

    precacheFiberNode(internalInstanceHandle, tag);
    updateFiberProps(tag, props);

    return component;
  },
  createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    var tag = ReactNativeTagHandles.allocateTag();

    UIManager.createView(tag, 'RCTRawText', rootContainerInstance, { text: text });

    precacheFiberNode(internalInstanceHandle, tag);

    return tag;
  },
  finalizeInitialChildren: function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance) {
    if (parentInstance._children.length === 0) {
      return false;
    }

    var nativeTags = parentInstance._children.map(function (child) {
      return typeof child === 'number' ? child : child._nativeTag;
    });

    UIManager.setChildren(parentInstance._nativeTag, nativeTags);

    return false;
  },
  getRootHostContext: function getRootHostContext() {
    return emptyObject;
  },
  getChildHostContext: function getChildHostContext() {
    return emptyObject;
  },
  getPublicInstance: function getPublicInstance(instance) {
    return instance;
  },
  insertBefore: function insertBefore(parentInstance, child, beforeChild) {
    invariant(typeof parentInstance !== 'number', 'Container does not support insertBefore operation');

    var children = parentInstance._children;

    var beforeChildIndex = children.indexOf(beforeChild);
    var index = children.indexOf(child);

    if (index >= 0) {
      children.splice(index, 1);
      children.splice(beforeChildIndex, 0, child);

      UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);
    } else {
      children.splice(beforeChildIndex, 0, child);

      UIManager.manageChildren(parentInstance._nativeTag, [], [], [child._nativeTag], [beforeChildIndex], []);
    }
  },
  prepareForCommit: function prepareForCommit() {},
  prepareUpdate: function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {
    return emptyObject;
  },
  removeChild: function removeChild(parentInstance, child) {
    recursivelyUncacheFiberNode(child);

    if (typeof parentInstance === 'number') {
      UIManager.manageChildren(parentInstance, [], [], [], [], [0]);
    } else {
      var children = parentInstance._children;
      var index = children.indexOf(child);

      children.splice(index, 1);

      UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);
    }
  },
  resetAfterCommit: function resetAfterCommit() {},
  resetTextContent: function resetTextContent(instance) {},
  shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
    return false;
  },


  scheduleAnimationCallback: global.requestAnimationFrame,

  scheduleDeferredCallback: global.requestIdleCallback,

  shouldSetTextContent: function shouldSetTextContent(props) {
    return false;
  },


  useSyncScheduling: true
});

ReactGenericBatching.injection.injectFiberBatchedUpdates(NativeRenderer.batchedUpdates);

var roots = new Map();

_findNodeHandle.injection.injectFindNode(function (fiber) {
  return NativeRenderer.findHostInstance(fiber);
});
_findNodeHandle.injection.injectFindRootNodeID(function (instance) {
  return instance;
});

ReactFiberErrorLogger.injection.injectDialog(ReactNativeFiberErrorDialog.showDialog);

var ReactNative = {
  findNodeHandle: function findNodeHandle(componentOrHandle) {
    var instance = _findNodeHandle(componentOrHandle);
    if (instance == null || typeof instance === 'number') {
      return instance;
    }
    return instance._nativeTag;
  },
  render: function render(element, containerTag, callback) {
    var root = roots.get(containerTag);

    if (!root) {
      root = NativeRenderer.createContainer(containerTag);
      roots.set(containerTag, root);
    }
    NativeRenderer.updateContainer(element, root, null, callback);

    return NativeRenderer.getPublicRootInstance(root);
  },


  takeSnapshot: takeSnapshot,

  unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
    var root = roots.get(containerTag);
    if (root) {
      NativeRenderer.updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    }
  },
  unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
    ReactNative.unmountComponentAtNode(containerTag);

    UIManager.removeRootView(containerTag);
  },
  unstable_createPortal: function unstable_createPortal(children, containerTag) {
    var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

    return ReactPortal.createPortal(children, containerTag, null, key);
  },


  unstable_batchedUpdates: ReactGenericBatching.batchedUpdates
};

if (typeof injectInternals === 'function') {
  injectInternals({
    findFiberByHostInstance: ReactNativeComponentTree.getClosestInstanceFromNode,
    findHostInstanceByFiber: NativeRenderer.findHostInstance
  });
}

module.exports = ReactNative;
}, 87, null, "ReactNativeFiber");
__d(/* ReactFiberErrorLogger */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var defaultShowDialog = function defaultShowDialog() {
  return true;
};

var showDialog = defaultShowDialog;

function logCapturedError(capturedError) {
  var logError = showDialog(capturedError);

  if (logError === false) {
    return;
  }

  if (__DEV__) {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        error = capturedError.error,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;
    var message = error.message,
        name = error.name,
        stack = error.stack;


    var errorSummary = message ? name + ': ' + message : name;

    var componentNameMessage = componentName ? 'React caught an error thrown by ' + componentName + '.' : 'React caught an error thrown by one of your components.';

    var formattedCallStack = stack.slice(0, errorSummary.length) === errorSummary ? stack.slice(errorSummary.length) : stack;
    formattedCallStack = formattedCallStack.trim().split('\n').map(function (line) {
      return '\n    ' + line.trim();
    }).join();

    var errorBoundaryMessage = void 0;

    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '. ' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.';
    }

    console.error(componentNameMessage + ' You should fix this error in your code. ' + errorBoundaryMessage + '\n\n' + (errorSummary + '\n\n') + ('The error is located at: ' + componentStack + '\n\n') + ('The error was thrown at: ' + formattedCallStack));
  }

  if (!__DEV__) {
    var _error = capturedError.error;

    console.error('React caught an error thrown by one of your components.\n\n' + _error.stack);
  }
}

exports.injection = {
  injectDialog: function injectDialog(fn) {
    invariant(showDialog === defaultShowDialog, 'The custom dialog was already injected.');
    invariant(typeof fn === 'function', 'Injected showDialog() must be a function.');
    showDialog = fn;
  }
};

exports.logCapturedError = logCapturedError;
}, 88, null, "ReactFiberErrorLogger");
__d(/* ReactFiberReconciler */function(global, require, module, exports) {

'use strict';

var _require = require(90                     ), // 90 = ReactFiberUpdateQueue
    addTopLevelUpdate = _require.addTopLevelUpdate;

var _require2 = require(93                 ), // 93 = ReactFiberContext
    findCurrentUnmaskedContext = _require2.findCurrentUnmaskedContext,
    isContextProvider = _require2.isContextProvider,
    processChildContext = _require2.processChildContext;

var _require3 = require(103             ), // 103 = ReactFiberRoot
    createFiberRoot = _require3.createFiberRoot;

var ReactFiberScheduler = require(105                  ); // 105 = ReactFiberScheduler

if (__DEV__) {
  var warning = require(19                ); // 19 = fbjs/lib/warning
  var ReactFiberInstrumentation = require(120                        ); // 120 = ReactFiberInstrumentation
  var ReactDebugCurrentFiber = require(100                     ); // 100 = ReactDebugCurrentFiber
  var getComponentName = require(94                ); // 94 = getComponentName
}

var _require4 = require(95                        ), // 95 = ReactFiberTreeReflection
    findCurrentHostFiber = _require4.findCurrentHostFiber;

var getContextForSubtree = require(121                   ); // 121 = getContextForSubtree

getContextForSubtree._injectFiber(function (fiber) {
  var parentContext = findCurrentUnmaskedContext(fiber);
  return isContextProvider(fiber) ? processChildContext(fiber, parentContext, false) : parentContext;
});

module.exports = function (config) {
  var _ReactFiberScheduler = ReactFiberScheduler(config),
      scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
      getPriorityContext = _ReactFiberScheduler.getPriorityContext,
      performWithPriority = _ReactFiberScheduler.performWithPriority,
      batchedUpdates = _ReactFiberScheduler.batchedUpdates,
      unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
      syncUpdates = _ReactFiberScheduler.syncUpdates,
      deferredUpdates = _ReactFiberScheduler.deferredUpdates;

  function scheduleTopLevelUpdate(current, element, callback) {
    if (__DEV__) {
      if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null) {
        warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
      }
    }

    var priorityLevel = getPriorityContext();
    var nextState = { element: element };
    callback = callback === undefined ? null : callback;
    if (__DEV__) {
      warning(callback === null || typeof callback === 'function', 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
    }
    addTopLevelUpdate(current, nextState, callback, priorityLevel);
    scheduleUpdate(current, priorityLevel);
  }

  return {
    createContainer: function createContainer(containerInfo) {
      return createFiberRoot(containerInfo);
    },
    updateContainer: function updateContainer(element, container, parentComponent, callback) {
      var current = container.current;

      if (__DEV__) {
        if (ReactFiberInstrumentation.debugTool) {
          if (current.alternate === null) {
            ReactFiberInstrumentation.debugTool.onMountContainer(container);
          } else if (element === null) {
            ReactFiberInstrumentation.debugTool.onUnmountContainer(container);
          } else {
            ReactFiberInstrumentation.debugTool.onUpdateContainer(container);
          }
        }
      }

      var context = getContextForSubtree(parentComponent);
      if (container.context === null) {
        container.context = context;
      } else {
        container.pendingContext = context;
      }

      scheduleTopLevelUpdate(current, element, callback);
    },


    performWithPriority: performWithPriority,

    batchedUpdates: batchedUpdates,

    unbatchedUpdates: unbatchedUpdates,

    syncUpdates: syncUpdates,

    deferredUpdates: deferredUpdates,

    getPublicRootInstance: function getPublicRootInstance(container) {
      var containerFiber = container.current;
      if (!containerFiber.child) {
        return null;
      }
      return containerFiber.child.stateNode;
    },
    findHostInstance: function findHostInstance(fiber) {
      var hostFiber = findCurrentHostFiber(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    }
  };
};
}, 89, null, "ReactFiberReconciler");
__d(/* ReactFiberUpdateQueue */function(global, require, module, exports) {

'use strict';

var _require = require(91                     ), // 91 = ReactTypeOfSideEffect
    CallbackEffect = _require.Callback;

var _require2 = require(92                  ), // 92 = ReactPriorityLevel
    NoWork = _require2.NoWork,
    SynchronousPriority = _require2.SynchronousPriority,
    TaskPriority = _require2.TaskPriority;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
if (__DEV__) {
  var warning = require(19                ); // 19 = fbjs/lib/warning
}

function comparePriority(a, b) {
  if ((a === TaskPriority || a === SynchronousPriority) && (b === TaskPriority || b === SynchronousPriority)) {
    return 0;
  }
  if (a === NoWork && b !== NoWork) {
    return -255;
  }
  if (a !== NoWork && b === NoWork) {
    return 255;
  }
  return a - b;
}

function ensureUpdateQueue(fiber) {
  if (fiber.updateQueue !== null) {
    return fiber.updateQueue;
  }

  var queue = void 0;
  if (__DEV__) {
    queue = {
      first: null,
      last: null,
      hasForceUpdate: false,
      callbackList: null,
      isProcessing: false
    };
  } else {
    queue = {
      first: null,
      last: null,
      hasForceUpdate: false,
      callbackList: null
    };
  }

  fiber.updateQueue = queue;
  return queue;
}

function cloneUpdateQueue(current, workInProgress) {
  var currentQueue = current.updateQueue;
  if (currentQueue === null) {
    workInProgress.updateQueue = null;
    return null;
  }

  var altQueue = workInProgress.updateQueue !== null ? workInProgress.updateQueue : {};
  altQueue.first = currentQueue.first;
  altQueue.last = currentQueue.last;

  altQueue.hasForceUpdate = false;
  altQueue.callbackList = null;
  altQueue.isProcessing = false;

  workInProgress.updateQueue = altQueue;

  return altQueue;
}
exports.cloneUpdateQueue = cloneUpdateQueue;

function cloneUpdate(update) {
  return {
    priorityLevel: update.priorityLevel,
    partialState: update.partialState,
    callback: update.callback,
    isReplace: update.isReplace,
    isForced: update.isForced,
    isTopLevelUnmount: update.isTopLevelUnmount,
    next: null
  };
}

function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
  if (insertAfter !== null) {
    insertAfter.next = update;
  } else {
    update.next = queue.first;
    queue.first = update;
  }

  if (insertBefore !== null) {
    update.next = insertBefore;
  } else {
    queue.last = update;
  }
}

function findInsertionPosition(queue, update) {
  var priorityLevel = update.priorityLevel;
  var insertAfter = null;
  var insertBefore = null;
  if (queue.last !== null && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) {
    insertAfter = queue.last;
  } else {
    insertBefore = queue.first;
    while (insertBefore !== null && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0) {
      insertAfter = insertBefore;
      insertBefore = insertBefore.next;
    }
  }
  return insertAfter;
}

function insertUpdate(fiber, update) {
  var queue1 = ensureUpdateQueue(fiber);
  var queue2 = fiber.alternate !== null ? ensureUpdateQueue(fiber.alternate) : null;

  if (__DEV__) {
    if (queue1.isProcessing || queue2 !== null && queue2.isProcessing) {
      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
    }
  }

  var insertAfter1 = findInsertionPosition(queue1, update);
  var insertBefore1 = insertAfter1 !== null ? insertAfter1.next : queue1.first;

  if (queue2 === null) {
    insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1);
    return null;
  }

  var insertAfter2 = findInsertionPosition(queue2, update);
  var insertBefore2 = insertAfter2 !== null ? insertAfter2.next : queue2.first;

  insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1);

  if (insertBefore1 !== insertBefore2) {
    var update2 = cloneUpdate(update);
    insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2);
    return update2;
  } else {
    if (insertAfter2 === null) {
      queue2.first = update;
    }
    if (insertBefore2 === null) {
      queue2.last = null;
    }
  }

  return null;
}

function addUpdate(fiber, partialState, callback, priorityLevel) {
  var update = {
    priorityLevel: priorityLevel,
    partialState: partialState,
    callback: callback,
    isReplace: false,
    isForced: false,
    isTopLevelUnmount: false,
    next: null
  };
  insertUpdate(fiber, update);
}
exports.addUpdate = addUpdate;

function addReplaceUpdate(fiber, state, callback, priorityLevel) {
  var update = {
    priorityLevel: priorityLevel,
    partialState: state,
    callback: callback,
    isReplace: true,
    isForced: false,
    isTopLevelUnmount: false,
    next: null
  };
  insertUpdate(fiber, update);
}
exports.addReplaceUpdate = addReplaceUpdate;

function addForceUpdate(fiber, callback, priorityLevel) {
  var update = {
    priorityLevel: priorityLevel,
    partialState: null,
    callback: callback,
    isReplace: false,
    isForced: true,
    isTopLevelUnmount: false,
    next: null
  };
  insertUpdate(fiber, update);
}
exports.addForceUpdate = addForceUpdate;

function getPendingPriority(queue) {
  return queue.first !== null ? queue.first.priorityLevel : NoWork;
}
exports.getPendingPriority = getPendingPriority;

function addTopLevelUpdate(fiber, partialState, callback, priorityLevel) {
  var isTopLevelUnmount = partialState.element === null;

  var update = {
    priorityLevel: priorityLevel,
    partialState: partialState,
    callback: callback,
    isReplace: false,
    isForced: false,
    isTopLevelUnmount: isTopLevelUnmount,
    next: null
  };
  var update2 = insertUpdate(fiber, update);

  if (isTopLevelUnmount) {
    var queue1 = fiber.updateQueue;
    var queue2 = fiber.alternate !== null ? fiber.alternate.updateQueue : null;

    if (queue1 !== null && update.next !== null) {
      update.next = null;
      queue1.last = update;
    }
    if (queue2 !== null && update2 !== null && update2.next !== null) {
      update2.next = null;
      queue2.last = update;
    }
  }
}
exports.addTopLevelUpdate = addTopLevelUpdate;

function getStateFromUpdate(update, instance, prevState, props) {
  var partialState = update.partialState;
  if (typeof partialState === 'function') {
    var updateFn = partialState;
    return updateFn.call(instance, prevState, props);
  } else {
    return partialState;
  }
}

function beginUpdateQueue(workInProgress, queue, instance, prevState, props, priorityLevel) {
  if (__DEV__) {
    queue.isProcessing = true;
  }

  queue.hasForceUpdate = false;

  var state = prevState;
  var dontMutatePrevState = true;
  var callbackList = null;
  var update = queue.first;
  while (update !== null && comparePriority(update.priorityLevel, priorityLevel) <= 0) {
    queue.first = update.next;
    if (queue.first === null) {
      queue.last = null;
    }

    var _partialState = void 0;
    if (update.isReplace) {
      state = getStateFromUpdate(update, instance, state, props);
      dontMutatePrevState = true;
    } else {
      _partialState = getStateFromUpdate(update, instance, state, props);
      if (_partialState) {
        if (dontMutatePrevState) {
          state = babelHelpers.extends({}, state, _partialState);
        } else {
          state = babelHelpers.extends(state, _partialState);
        }
        dontMutatePrevState = false;
      }
    }
    if (update.isForced) {
      queue.hasForceUpdate = true;
    }

    if (update.callback !== null && !(update.isTopLevelUnmount && update.next !== null)) {
      callbackList = callbackList || [];
      callbackList.push(update.callback);
      workInProgress.effectTag |= CallbackEffect;
    }
    update = update.next;
  }

  queue.callbackList = callbackList;

  if (queue.first === null && callbackList === null && !queue.hasForceUpdate) {
    workInProgress.updateQueue = null;
  }

  if (__DEV__) {
    queue.isProcessing = false;
  }

  return state;
}
exports.beginUpdateQueue = beginUpdateQueue;

function commitCallbacks(finishedWork, queue, context) {
  var callbackList = queue.callbackList;
  if (callbackList === null) {
    return;
  }
  for (var i = 0; i < callbackList.length; i++) {
    var _callback = callbackList[i];
    invariant(typeof _callback === 'function', 'Invalid argument passed as callback. Expected a function. Instead ' + 'received: %s', _callback);
    _callback.call(context);
  }
}
exports.commitCallbacks = commitCallbacks;
}, 90, null, "ReactFiberUpdateQueue");
__d(/* ReactTypeOfSideEffect */function(global, require, module, exports) {

'use strict';

module.exports = {
  NoEffect: 0,
  Placement: 1,
  Update: 2,
  PlacementAndUpdate: 3,
  Deletion: 4,
  ContentReset: 8,
  Callback: 16,
  Err: 32,
  Ref: 64 };
}, 91, null, "ReactTypeOfSideEffect");
__d(/* ReactPriorityLevel */function(global, require, module, exports) {

'use strict';

module.exports = {
  NoWork: 0,
  SynchronousPriority: 1,
  TaskPriority: 2,
  AnimationPriority: 3,
  HighPriority: 4,
  LowPriority: 5,
  OffscreenPriority: 6 };
}, 92, null, "ReactPriorityLevel");
__d(/* ReactFiberContext */function(global, require, module, exports) {

'use strict';

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var getComponentName = require(94                ); // 94 = getComponentName
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var _require = require(95                        ), // 95 = ReactFiberTreeReflection
    isFiberMounted = _require.isFiberMounted;

var _require2 = require(97               ), // 97 = ReactTypeOfWork
    ClassComponent = _require2.ClassComponent,
    HostRoot = _require2.HostRoot;

var _require3 = require(98               ), // 98 = ReactFiberStack
    createCursor = _require3.createCursor,
    pop = _require3.pop,
    push = _require3.push;

if (__DEV__) {
  var checkReactTypeSpec = require(99                  ); // 99 = checkReactTypeSpec
  var ReactDebugCurrentFrame = require(38                                ); // 38 = react/lib/ReactDebugCurrentFrame
  var ReactDebugCurrentFiber = require(100                     ); // 100 = ReactDebugCurrentFiber

  var _require4 = require(102                  ), // 102 = ReactDebugFiberPerf
      startPhaseTimer = _require4.startPhaseTimer,
      stopPhaseTimer = _require4.stopPhaseTimer;

  var warnedAboutMissingGetChildContext = {};
}

var contextStackCursor = createCursor(emptyObject);

var didPerformWorkStackCursor = createCursor(false);

var previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
  var hasOwnContext = isContextProvider(workInProgress);
  if (hasOwnContext) {
    return previousContext;
  }
  return contextStackCursor.current;
}
exports.getUnmaskedContext = getUnmaskedContext;

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  var instance = workInProgress.stateNode;
  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}
exports.cacheContext = cacheContext;

exports.getMaskedContext = function (workInProgress, unmaskedContext) {
  var type = workInProgress.type;
  var contextTypes = type.contextTypes;
  if (!contextTypes) {
    return emptyObject;
  }

  var instance = workInProgress.stateNode;
  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
    return instance.__reactInternalMemoizedMaskedChildContext;
  }

  var context = {};
  for (var key in contextTypes) {
    context[key] = unmaskedContext[key];
  }

  if (__DEV__) {
    var name = getComponentName(workInProgress) || 'Unknown';
    ReactDebugCurrentFrame.current = workInProgress;
    checkReactTypeSpec(contextTypes, context, 'context', name);
    ReactDebugCurrentFrame.current = null;
  }

  if (instance) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return context;
};

exports.hasContextChanged = function () {
  return didPerformWorkStackCursor.current;
};

function isContextConsumer(fiber) {
  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
}
exports.isContextConsumer = isContextConsumer;

function isContextProvider(fiber) {
  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
}
exports.isContextProvider = isContextProvider;

function popContextProvider(fiber) {
  if (!isContextProvider(fiber)) {
    return;
  }

  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}
exports.popContextProvider = popContextProvider;

exports.pushTopLevelContextObject = function (fiber, context, didChange) {
  invariant(contextStackCursor.cursor == null, 'Unexpected context found on stack');

  push(contextStackCursor, context, fiber);
  push(didPerformWorkStackCursor, didChange, fiber);
};

function processChildContext(fiber, parentContext, isReconciling) {
  var instance = fiber.stateNode;
  var childContextTypes = fiber.type.childContextTypes;

  if (typeof instance.getChildContext !== 'function') {
    if (__DEV__) {
      var componentName = getComponentName(fiber) || 'Unknown';

      if (!warnedAboutMissingGetChildContext[componentName]) {
        warnedAboutMissingGetChildContext[componentName] = true;
        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
      }
    }
    return parentContext;
  }

  var childContext = void 0;
  if (__DEV__) {
    ReactDebugCurrentFiber.phase = 'getChildContext';
    startPhaseTimer(fiber, 'getChildContext');
    childContext = instance.getChildContext();
    stopPhaseTimer();
    ReactDebugCurrentFiber.phase = null;
  } else {
    childContext = instance.getChildContext();
  }
  for (var contextKey in childContext) {
    invariant(contextKey in childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey);
  }
  if (__DEV__) {
    var name = getComponentName(fiber) || 'Unknown';

    var workInProgress = isReconciling ? fiber : null;
    ReactDebugCurrentFrame.current = workInProgress;
    checkReactTypeSpec(childContextTypes, childContext, 'child context', name);
    ReactDebugCurrentFrame.current = null;
  }

  return babelHelpers.extends({}, parentContext, childContext);
}
exports.processChildContext = processChildContext;

exports.pushContextProvider = function (workInProgress) {
  if (!isContextProvider(workInProgress)) {
    return false;
  }

  var instance = workInProgress.stateNode;

  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

  previousContext = contextStackCursor.current;
  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
  push(didPerformWorkStackCursor, false, workInProgress);

  return true;
};

exports.invalidateContextProvider = function (workInProgress) {
  var instance = workInProgress.stateNode;
  invariant(instance, 'Expected to have an instance by this point.');

  var mergedContext = processChildContext(workInProgress, previousContext, true);
  instance.__reactInternalMemoizedMergedChildContext = mergedContext;

  pop(didPerformWorkStackCursor, workInProgress);
  pop(contextStackCursor, workInProgress);

  push(contextStackCursor, mergedContext, workInProgress);
  push(didPerformWorkStackCursor, true, workInProgress);
};

exports.resetContext = function () {
  previousContext = emptyObject;
  contextStackCursor.current = emptyObject;
  didPerformWorkStackCursor.current = false;
};

exports.findCurrentUnmaskedContext = function (fiber) {
  invariant(isFiberMounted(fiber) && fiber.tag === ClassComponent, 'Expected subtree parent to be a mounted class component');

  var node = fiber;
  while (node.tag !== HostRoot) {
    if (isContextProvider(node)) {
      return node.stateNode.__reactInternalMemoizedMergedChildContext;
    }
    var parent = node.return;
    invariant(parent, 'Found unexpected detached subtree parent');
    node = parent;
  }
  return node.stateNode.context;
};
}, 93, null, "ReactFiberContext");
__d(/* getComponentName */function(global, require, module, exports) {

'use strict';

function getComponentName(instanceOrFiber) {
  if (typeof instanceOrFiber.getName === 'function') {
    var instance = instanceOrFiber;
    return instance.getName();
  }
  if (typeof instanceOrFiber.tag === 'number') {
    var fiber = instanceOrFiber;
    var type = fiber.type;

    if (typeof type === 'string') {
      return type;
    }
    if (typeof type === 'function') {
      return type.displayName || type.name;
    }
  }
  return null;
}

module.exports = getComponentName;
}, 94, null, "getComponentName");
__d(/* ReactFiberTreeReflection */function(global, require, module, exports) {

'use strict';

var ReactInstanceMap = require(96                ); // 96 = ReactInstanceMap
var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner

var getComponentName = require(94                ); // 94 = getComponentName
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

if (__DEV__) {
  var warning = require(19                ); // 19 = fbjs/lib/warning
}

var _require = require(97               ), // 97 = ReactTypeOfWork
    HostRoot = _require.HostRoot,
    HostComponent = _require.HostComponent,
    HostText = _require.HostText,
    ClassComponent = _require.ClassComponent;

var _require2 = require(91                     ), // 91 = ReactTypeOfSideEffect
    NoEffect = _require2.NoEffect,
    Placement = _require2.Placement;

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node.return) {
      node = node.return;
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node.return) {
      node = node.return;
    }
  }
  if (node.tag === HostRoot) {
    return MOUNTED;
  }

  return UNMOUNTED;
}
exports.isFiberMounted = function (fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
};

exports.isMounted = function (component) {
  if (__DEV__) {
    var owner = ReactCurrentOwner.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      warning(instance._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component');
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = ReactInstanceMap.get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
};

function assertIsMounted(fiber) {
  invariant(isFiberMountedImpl(fiber) === MOUNTED, 'Unable to find node on an unmounted component.');
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    var state = isFiberMountedImpl(fiber);
    invariant(state !== UNMOUNTED, 'Unable to find node on an unmounted component.');
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }

  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a.return;
    var parentB = parentA ? parentA.alternate : null;
    if (!parentA || !parentB) {
      break;
    }

    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }

      invariant(false, 'Unable to find node on an unmounted component.');
    }

    if (a.return !== b.return) {
      a = parentA;
      b = parentB;
    } else {
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        invariant(didFindChild, 'Child was not found in either parent set. This indicates a bug ' + 'related to the return pointer.');
      }
    }

    invariant(a.alternate === b, "Return fibers should always be each others' alternates.");
  }

  invariant(a.tag === HostRoot, 'Unable to find node on an unmounted component.');
  if (a.stateNode.current === a) {
    return fiber;
  }

  return alternate;
}
exports.findCurrentFiberUsingSlowPath = findCurrentFiberUsingSlowPath;

exports.findCurrentHostFiber = function (parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }

  return null;
};
}, 95, null, "ReactFiberTreeReflection");
__d(/* ReactInstanceMap */function(global, require, module, exports) {

'use strict';

var ReactInstanceMap = {
  remove: function remove(key) {
    key._reactInternalInstance = undefined;
  },

  get: function get(key) {
    return key._reactInternalInstance;
  },

  has: function has(key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function set(key, value) {
    key._reactInternalInstance = value;
  }
};

module.exports = ReactInstanceMap;
}, 96, null, "ReactInstanceMap");
__d(/* ReactTypeOfWork */function(global, require, module, exports) {

'use strict';

module.exports = {
  IndeterminateComponent: 0,
  FunctionalComponent: 1,
  ClassComponent: 2,
  HostRoot: 3,
  HostPortal: 4,
  HostComponent: 5,
  HostText: 6,
  CoroutineComponent: 7,
  CoroutineHandlerPhase: 8,
  YieldComponent: 9,
  Fragment: 10
};
}, 97, null, "ReactTypeOfWork");
__d(/* ReactFiberStack */function(global, require, module, exports) {

'use strict';

var warning = require(19                ); // 19 = fbjs/lib/warning

var valueStack = [];

if (__DEV__) {
  var fiberStack = [];
}

var index = -1;

exports.createCursor = function (defaultValue) {
  return {
    current: defaultValue
  };
};

exports.isEmpty = function () {
  return index === -1;
};

exports.pop = function (cursor, fiber) {
  if (index < 0) {
    if (__DEV__) {
      warning(false, 'Unexpected pop.');
    }
    return;
  }

  if (__DEV__) {
    if (fiber !== fiberStack[index]) {
      warning(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  if (__DEV__) {
    fiberStack[index] = null;
  }

  index--;
};

exports.push = function (cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  if (__DEV__) {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
};

exports.reset = function () {
  while (index > -1) {
    valueStack[index] = null;

    if (__DEV__) {
      fiberStack[index] = null;
    }

    index--;
  }
};
}, 98, null, "ReactFiberStack");
__d(/* checkReactTypeSpec */function(global, require, module, exports) {

'use strict';

var checkPropTypes = require(36                        ); // 36 = react/lib/checkPropTypes

var _require = require(38                                ), // 38 = react/lib/ReactDebugCurrentFrame
    getStackAddendum = _require.getStackAddendum;

function checkReactTypeSpec(typeSpecs, values, location, componentName) {
  checkPropTypes(typeSpecs, values, location, componentName, getStackAddendum);
}

module.exports = checkReactTypeSpec;
}, 99, null, "checkReactTypeSpec");
__d(/* ReactDebugCurrentFiber */function(global, require, module, exports) {

'use strict';

if (__DEV__) {
  var getComponentName = require(94                ); // 94 = getComponentName

  var _require = require(101                          ), // 101 = ReactFiberComponentTreeHook
      getStackAddendumByWorkInProgressFiber = _require.getStackAddendumByWorkInProgressFiber;
}

function getCurrentFiberOwnerName() {
  if (__DEV__) {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    if (fiber._debugOwner != null) {
      return getComponentName(fiber._debugOwner);
    }
  }
  return null;
}

function getCurrentFiberStackAddendum() {
  if (__DEV__) {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }

    return getStackAddendumByWorkInProgressFiber(fiber);
  }
  return null;
}

var ReactDebugCurrentFiber = {
  current: null,
  phase: null,

  getCurrentFiberOwnerName: getCurrentFiberOwnerName,
  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
};

module.exports = ReactDebugCurrentFiber;
}, 100, null, "ReactDebugCurrentFiber");
__d(/* ReactFiberComponentTreeHook */function(global, require, module, exports) {

'use strict';

var ReactTypeOfWork = require(97               ); // 97 = ReactTypeOfWork
var IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostComponent = ReactTypeOfWork.HostComponent;

var getComponentName = require(94                ); // 94 = getComponentName

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner);
      }
      return describeComponentFrame(name, source, ownerName);
    default:
      return '';
  }
}

function getStackAddendumByWorkInProgressFiber(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);

    node = node.return;
  } while (node);
  return info;
}

module.exports = {
  getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber,
  describeComponentFrame: describeComponentFrame
};
}, 101, null, "ReactFiberComponentTreeHook");
__d(/* ReactDebugFiberPerf */function(global, require, module, exports) {
var ReactDebugFiberPerf = null;

if (__DEV__) {
  var _require = require(97               ), // 97 = ReactTypeOfWork
      HostRoot = _require.HostRoot,
      HostComponent = _require.HostComponent,
      HostText = _require.HostText,
      HostPortal = _require.HostPortal,
      YieldComponent = _require.YieldComponent,
      Fragment = _require.Fragment;

  var getComponentName = require(94                ); // 94 = getComponentName

  var reactEmoji = '\u269B';
  var warningEmoji = '\u26D4';
  var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

  var currentFiber = null;

  var currentPhase = null;
  var currentPhaseFiber = null;

  var isCommitting = false;
  var hasScheduledUpdateInCurrentCommit = false;
  var hasScheduledUpdateInCurrentPhase = false;
  var commitCountInCurrentWorkLoop = 0;
  var effectCountInCurrentCommit = 0;

  var labelsInCurrentCommit = new Set();

  var formatMarkName = function formatMarkName(markName) {
    return reactEmoji + ' ' + markName;
  };

  var formatLabel = function formatLabel(label, warning) {
    var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
    var suffix = warning ? ' Warning: ' + warning : '';
    return '' + prefix + label + suffix;
  };

  var beginMark = function beginMark(markName) {
    performance.mark(formatMarkName(markName));
  };

  var clearMark = function clearMark(markName) {
    performance.clearMarks(formatMarkName(markName));
  };

  var endMark = function endMark(label, markName, warning) {
    var formattedMarkName = formatMarkName(markName);
    var formattedLabel = formatLabel(label, warning);
    try {
      performance.measure(formattedLabel, formattedMarkName);
    } catch (err) {}

    performance.clearMarks(formattedMarkName);
    performance.clearMeasures(formattedLabel);
  };

  var getFiberMarkName = function getFiberMarkName(label, debugID) {
    return label + ' (#' + debugID + ')';
  };

  var getFiberLabel = function getFiberLabel(componentName, isMounted, phase) {
    if (phase === null) {
      return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
    } else {
      return componentName + '.' + phase;
    }
  };

  var beginFiberMark = function beginFiberMark(fiber, phase) {
    var componentName = getComponentName(fiber) || 'Unknown';
    var debugID = fiber._debugID;
    var isMounted = fiber.alternate !== null;
    var label = getFiberLabel(componentName, isMounted, phase);

    if (isCommitting && labelsInCurrentCommit.has(label)) {
      return false;
    }
    labelsInCurrentCommit.add(label);

    var markName = getFiberMarkName(label, debugID);
    beginMark(markName);
    return true;
  };

  var clearFiberMark = function clearFiberMark(fiber, phase) {
    var componentName = getComponentName(fiber) || 'Unknown';
    var debugID = fiber._debugID;
    var isMounted = fiber.alternate !== null;
    var label = getFiberLabel(componentName, isMounted, phase);
    var markName = getFiberMarkName(label, debugID);
    clearMark(markName);
  };

  var endFiberMark = function endFiberMark(fiber, phase, warning) {
    var componentName = getComponentName(fiber) || 'Unknown';
    var debugID = fiber._debugID;
    var isMounted = fiber.alternate !== null;
    var label = getFiberLabel(componentName, isMounted, phase);
    var markName = getFiberMarkName(label, debugID);
    endMark(label, markName, warning);
  };

  var shouldIgnoreFiber = function shouldIgnoreFiber(fiber) {
    switch (fiber.tag) {
      case HostRoot:
      case HostComponent:
      case HostText:
      case HostPortal:
      case YieldComponent:
      case Fragment:
        return true;
      default:
        return false;
    }
  };

  var clearPendingPhaseMeasurement = function clearPendingPhaseMeasurement() {
    if (currentPhase !== null && currentPhaseFiber !== null) {
      clearFiberMark(currentPhaseFiber, currentPhase);
    }
    currentPhaseFiber = null;
    currentPhase = null;
    hasScheduledUpdateInCurrentPhase = false;
  };

  var pauseTimers = function pauseTimers() {
    var fiber = currentFiber;
    while (fiber) {
      if (fiber._debugIsCurrentlyTiming) {
        endFiberMark(fiber, null, null);
      }
      fiber = fiber.return;
    }
  };

  var resumeTimersRecursively = function resumeTimersRecursively(fiber) {
    if (fiber.return !== null) {
      resumeTimersRecursively(fiber.return);
    }
    if (fiber._debugIsCurrentlyTiming) {
      beginFiberMark(fiber, null);
    }
  };

  var resumeTimers = function resumeTimers() {
    if (currentFiber !== null) {
      resumeTimersRecursively(currentFiber);
    }
  };

  ReactDebugFiberPerf = {
    recordEffect: function recordEffect() {
      effectCountInCurrentCommit++;
    },
    recordScheduleUpdate: function recordScheduleUpdate() {
      if (isCommitting) {
        hasScheduledUpdateInCurrentCommit = true;
      }
      if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
        hasScheduledUpdateInCurrentPhase = true;
      }
    },
    startWorkTimer: function startWorkTimer(fiber) {
      if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
        return;
      }

      currentFiber = fiber;
      if (!beginFiberMark(fiber, null)) {
        return;
      }
      fiber._debugIsCurrentlyTiming = true;
    },
    cancelWorkTimer: function cancelWorkTimer(fiber) {
      if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
        return;
      }

      fiber._debugIsCurrentlyTiming = false;
      clearFiberMark(fiber, null);
    },
    stopWorkTimer: function stopWorkTimer(fiber) {
      if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
        return;
      }

      currentFiber = fiber.return;
      if (!fiber._debugIsCurrentlyTiming) {
        return;
      }
      fiber._debugIsCurrentlyTiming = false;
      endFiberMark(fiber, null, null);
    },
    startPhaseTimer: function startPhaseTimer(fiber, phase) {
      if (!supportsUserTiming) {
        return;
      }
      clearPendingPhaseMeasurement();
      if (!beginFiberMark(fiber, phase)) {
        return;
      }
      currentPhaseFiber = fiber;
      currentPhase = phase;
    },
    stopPhaseTimer: function stopPhaseTimer() {
      if (!supportsUserTiming) {
        return;
      }
      if (currentPhase !== null && currentPhaseFiber !== null) {
        var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
        endFiberMark(currentPhaseFiber, currentPhase, warning);
      }
      currentPhase = null;
      currentPhaseFiber = null;
    },
    startWorkLoopTimer: function startWorkLoopTimer() {
      if (!supportsUserTiming) {
        return;
      }
      commitCountInCurrentWorkLoop = 0;

      beginMark('(React Tree Reconciliation)');

      resumeTimers();
    },
    stopWorkLoopTimer: function stopWorkLoopTimer() {
      if (!supportsUserTiming) {
        return;
      }
      var warning = commitCountInCurrentWorkLoop > 1 ? 'There were cascading updates' : null;
      commitCountInCurrentWorkLoop = 0;

      pauseTimers();
      endMark('(React Tree Reconciliation)', '(React Tree Reconciliation)', warning);
    },
    startCommitTimer: function startCommitTimer() {
      if (!supportsUserTiming) {
        return;
      }
      isCommitting = true;
      hasScheduledUpdateInCurrentCommit = false;
      labelsInCurrentCommit.clear();
      beginMark('(Committing Changes)');
    },
    stopCommitTimer: function stopCommitTimer() {
      if (!supportsUserTiming) {
        return;
      }

      var warning = null;
      if (hasScheduledUpdateInCurrentCommit) {
        warning = 'Lifecycle hook scheduled a cascading update';
      } else if (commitCountInCurrentWorkLoop > 0) {
        warning = 'Caused by a cascading update in earlier commit';
      }
      hasScheduledUpdateInCurrentCommit = false;
      commitCountInCurrentWorkLoop++;
      isCommitting = false;
      labelsInCurrentCommit.clear();

      endMark('(Committing Changes)', '(Committing Changes)', warning);
    },
    startCommitHostEffectsTimer: function startCommitHostEffectsTimer() {
      if (!supportsUserTiming) {
        return;
      }
      effectCountInCurrentCommit = 0;
      beginMark('(Committing Host Effects)');
    },
    stopCommitHostEffectsTimer: function stopCommitHostEffectsTimer() {
      if (!supportsUserTiming) {
        return;
      }
      var count = effectCountInCurrentCommit;
      effectCountInCurrentCommit = 0;
      endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
    },
    startCommitLifeCyclesTimer: function startCommitLifeCyclesTimer() {
      if (!supportsUserTiming) {
        return;
      }
      effectCountInCurrentCommit = 0;
      beginMark('(Calling Lifecycle Methods)');
    },
    stopCommitLifeCyclesTimer: function stopCommitLifeCyclesTimer() {
      if (!supportsUserTiming) {
        return;
      }
      var count = effectCountInCurrentCommit;
      effectCountInCurrentCommit = 0;
      endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
    }
  };
}

module.exports = ReactDebugFiberPerf;
}, 102, null, "ReactDebugFiberPerf");
__d(/* ReactFiberRoot */function(global, require, module, exports) {

'use strict';

var _require = require(104         ), // 104 = ReactFiber
    createHostRootFiber = _require.createHostRootFiber;

exports.createFiberRoot = function (containerInfo) {
  var uninitializedFiber = createHostRootFiber();
  var root = {
    current: uninitializedFiber,
    containerInfo: containerInfo,
    isScheduled: false,
    nextScheduledRoot: null,
    context: null,
    pendingContext: null
  };
  uninitializedFiber.stateNode = root;
  return root;
};
}, 103, null, "ReactFiberRoot");
__d(/* ReactFiber */function(global, require, module, exports) {

'use strict';

var ReactTypeOfWork = require(97               ); // 97 = ReactTypeOfWork
var IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot,
    HostComponent = ReactTypeOfWork.HostComponent,
    HostText = ReactTypeOfWork.HostText,
    HostPortal = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    YieldComponent = ReactTypeOfWork.YieldComponent,
    Fragment = ReactTypeOfWork.Fragment;

var _require = require(92                  ), // 92 = ReactPriorityLevel
    NoWork = _require.NoWork;

var _require2 = require(91                     ), // 91 = ReactTypeOfSideEffect
    NoEffect = _require2.NoEffect;

var _require3 = require(90                     ), // 90 = ReactFiberUpdateQueue
    cloneUpdateQueue = _require3.cloneUpdateQueue;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

if (__DEV__) {
  var getComponentName = require(94                ); // 94 = getComponentName
}

if (__DEV__) {
  var debugCounter = 1;
}

var createFiber = function createFiber(tag, key) {
  var fiber = {

    tag: tag,

    key: key,

    type: null,

    stateNode: null,

    return: null,

    child: null,
    sibling: null,
    index: 0,

    ref: null,

    pendingProps: null,
    memoizedProps: null,
    updateQueue: null,
    memoizedState: null,

    effectTag: NoEffect,
    nextEffect: null,
    firstEffect: null,
    lastEffect: null,

    pendingWorkPriority: NoWork,
    progressedPriority: NoWork,
    progressedChild: null,
    progressedFirstDeletion: null,
    progressedLastDeletion: null,

    alternate: null
  };

  if (__DEV__) {
    fiber._debugID = debugCounter++;
    fiber._debugSource = null;
    fiber._debugOwner = null;
    fiber._debugIsCurrentlyTiming = false;
    if (typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(fiber);
    }
  }

  return fiber;
};

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

exports.cloneFiber = function (fiber, priorityLevel) {
  var alt = fiber.alternate;
  if (alt !== null) {
    alt.effectTag = NoEffect;
    alt.nextEffect = null;
    alt.firstEffect = null;
    alt.lastEffect = null;
  } else {
    alt = createFiber(fiber.tag, fiber.key);
    alt.type = fiber.type;

    alt.progressedChild = fiber.progressedChild;
    alt.progressedPriority = fiber.progressedPriority;

    alt.alternate = fiber;
    fiber.alternate = alt;
  }

  alt.stateNode = fiber.stateNode;
  alt.child = fiber.child;
  alt.sibling = fiber.sibling;
  alt.index = fiber.index;
  alt.ref = fiber.ref;

  alt.pendingProps = fiber.pendingProps;
  cloneUpdateQueue(fiber, alt);
  alt.pendingWorkPriority = priorityLevel;

  alt.memoizedProps = fiber.memoizedProps;
  alt.memoizedState = fiber.memoizedState;

  if (__DEV__) {
    alt._debugID = fiber._debugID;
    alt._debugSource = fiber._debugSource;
    alt._debugOwner = fiber._debugOwner;
  }

  return alt;
};

exports.createHostRootFiber = function () {
  var fiber = createFiber(HostRoot, null);
  return fiber;
};

exports.createFiberFromElement = function (element, priorityLevel) {
  var owner = null;
  if (__DEV__) {
    owner = element._owner;
  }

  var fiber = createFiberFromElementType(element.type, element.key, owner);
  fiber.pendingProps = element.props;
  fiber.pendingWorkPriority = priorityLevel;

  if (__DEV__) {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
};

exports.createFiberFromFragment = function (elements, priorityLevel) {
  var fiber = createFiber(Fragment, null);
  fiber.pendingProps = elements;
  fiber.pendingWorkPriority = priorityLevel;
  return fiber;
};

exports.createFiberFromText = function (content, priorityLevel) {
  var fiber = createFiber(HostText, null);
  fiber.pendingProps = content;
  fiber.pendingWorkPriority = priorityLevel;
  return fiber;
};

function createFiberFromElementType(type, key, debugOwner) {
  var fiber = void 0;
  if (typeof type === 'function') {
    fiber = shouldConstruct(type) ? createFiber(ClassComponent, key) : createFiber(IndeterminateComponent, key);
    fiber.type = type;
  } else if (typeof type === 'string') {
    fiber = createFiber(HostComponent, key);
    fiber.type = type;
  } else if (typeof type === 'object' && type !== null && typeof type.tag === 'number') {
    fiber = type;
  } else {
    var info = '';
    if (__DEV__) {
      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in.";
      }
      var ownerName = debugOwner ? getComponentName(debugOwner) : null;
      if (ownerName) {
        info += '\n\nCheck the render method of `' + ownerName + '`.';
      }
    }
    invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
  }
  return fiber;
}

exports.createFiberFromElementType = createFiberFromElementType;

exports.createFiberFromCoroutine = function (coroutine, priorityLevel) {
  var fiber = createFiber(CoroutineComponent, coroutine.key);
  fiber.type = coroutine.handler;
  fiber.pendingProps = coroutine;
  fiber.pendingWorkPriority = priorityLevel;
  return fiber;
};

exports.createFiberFromYield = function (yieldNode, priorityLevel) {
  var fiber = createFiber(YieldComponent, null);
  return fiber;
};

exports.createFiberFromPortal = function (portal, priorityLevel) {
  var fiber = createFiber(HostPortal, portal.key);
  fiber.pendingProps = portal.children || [];
  fiber.pendingWorkPriority = priorityLevel;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    implementation: portal.implementation
  };
  return fiber;
};
}, 104, null, "ReactFiber");
__d(/* ReactFiberScheduler */function(global, require, module, exports) {

'use strict';

var _require = require(93                 ), // 93 = ReactFiberContext
    popContextProvider = _require.popContextProvider;

var _require2 = require(98               ), // 98 = ReactFiberStack
    reset = _require2.reset;

var _require3 = require(101                          ), // 101 = ReactFiberComponentTreeHook
    getStackAddendumByWorkInProgressFiber = _require3.getStackAddendumByWorkInProgressFiber;

var _require4 = require(88                     ), // 88 = ReactFiberErrorLogger
    logCapturedError = _require4.logCapturedError;

var _require5 = require(106              ), // 106 = ReactErrorUtils
    invokeGuardedCallback = _require5.invokeGuardedCallback;

var ReactFiberBeginWork = require(107                  ); // 107 = ReactFiberBeginWork
var ReactFiberCompleteWork = require(116                     ); // 116 = ReactFiberCompleteWork
var ReactFiberCommitWork = require(117                   ); // 117 = ReactFiberCommitWork
var ReactFiberHostContext = require(119                    ); // 119 = ReactFiberHostContext
var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner
var ReactFeatureFlags = require(113                ); // 113 = ReactFeatureFlags
var getComponentName = require(94                ); // 94 = getComponentName

var _require6 = require(104         ), // 104 = ReactFiber
    cloneFiber = _require6.cloneFiber;

var _require7 = require(118                     ), // 118 = ReactFiberDevToolsHook
    onCommitRoot = _require7.onCommitRoot;

var _require8 = require(92                  ), // 92 = ReactPriorityLevel
    NoWork = _require8.NoWork,
    SynchronousPriority = _require8.SynchronousPriority,
    TaskPriority = _require8.TaskPriority,
    AnimationPriority = _require8.AnimationPriority,
    HighPriority = _require8.HighPriority,
    LowPriority = _require8.LowPriority,
    OffscreenPriority = _require8.OffscreenPriority;

var _require9 = require(91                     ), // 91 = ReactTypeOfSideEffect
    NoEffect = _require9.NoEffect,
    Placement = _require9.Placement,
    Update = _require9.Update,
    PlacementAndUpdate = _require9.PlacementAndUpdate,
    Deletion = _require9.Deletion,
    ContentReset = _require9.ContentReset,
    Callback = _require9.Callback,
    Err = _require9.Err,
    Ref = _require9.Ref;

var _require10 = require(97               ), // 97 = ReactTypeOfWork
    HostRoot = _require10.HostRoot,
    HostComponent = _require10.HostComponent,
    HostPortal = _require10.HostPortal,
    ClassComponent = _require10.ClassComponent;

var _require11 = require(90                     ), // 90 = ReactFiberUpdateQueue
    getPendingPriority = _require11.getPendingPriority;

var _require12 = require(93                 ), // 93 = ReactFiberContext
    resetContext = _require12.resetContext;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

if (__DEV__) {
  var warning = require(19                ); // 19 = fbjs/lib/warning
  var ReactFiberInstrumentation = require(120                        ); // 120 = ReactFiberInstrumentation
  var ReactDebugCurrentFiber = require(100                     ); // 100 = ReactDebugCurrentFiber

  var _require13 = require(102                  ), // 102 = ReactDebugFiberPerf
      recordEffect = _require13.recordEffect,
      recordScheduleUpdate = _require13.recordScheduleUpdate,
      startWorkTimer = _require13.startWorkTimer,
      stopWorkTimer = _require13.stopWorkTimer,
      startWorkLoopTimer = _require13.startWorkLoopTimer,
      stopWorkLoopTimer = _require13.stopWorkLoopTimer,
      startCommitTimer = _require13.startCommitTimer,
      stopCommitTimer = _require13.stopCommitTimer,
      startCommitHostEffectsTimer = _require13.startCommitHostEffectsTimer,
      stopCommitHostEffectsTimer = _require13.stopCommitHostEffectsTimer,
      startCommitLifeCyclesTimer = _require13.startCommitLifeCyclesTimer,
      stopCommitLifeCyclesTimer = _require13.stopCommitLifeCyclesTimer;

  var warnAboutUpdateOnUnmounted = function warnAboutUpdateOnUnmounted(instance) {
    var ctor = instance.constructor;
    warning(false, 'Can only update a mounted or mounting component. This usually means ' + 'you called setState, replaceState, or forceUpdate on an unmounted ' + 'component. This is a no-op.\n\nPlease check the code for the ' + '%s component.', ctor && (ctor.displayName || ctor.name) || 'ReactClass');
  };

  var warnAboutInvalidUpdates = function warnAboutInvalidUpdates(instance) {
    switch (ReactDebugCurrentFiber.phase) {
      case 'getChildContext':
        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
        break;
      case 'render':
        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
        break;
    }
  };
}

var timeHeuristicForUnitOfWork = 1;

module.exports = function (config) {
  var hostContext = ReactFiberHostContext(config);
  var popHostContainer = hostContext.popHostContainer,
      popHostContext = hostContext.popHostContext,
      resetHostContainer = hostContext.resetHostContainer;

  var _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, scheduleUpdate, getPriorityContext),
      beginWork = _ReactFiberBeginWork.beginWork,
      beginFailedWork = _ReactFiberBeginWork.beginFailedWork;

  var _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext),
      completeWork = _ReactFiberCompleteWo.completeWork;

  var _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
      commitPlacement = _ReactFiberCommitWork.commitPlacement,
      commitDeletion = _ReactFiberCommitWork.commitDeletion,
      commitWork = _ReactFiberCommitWork.commitWork,
      commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
      commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
      commitDetachRef = _ReactFiberCommitWork.commitDetachRef;

  var hostScheduleAnimationCallback = config.scheduleAnimationCallback,
      hostScheduleDeferredCallback = config.scheduleDeferredCallback,
      useSyncScheduling = config.useSyncScheduling,
      prepareForCommit = config.prepareForCommit,
      resetAfterCommit = config.resetAfterCommit;

  var priorityContext = useSyncScheduling ? SynchronousPriority : LowPriority;

  var priorityContextBeforeReconciliation = NoWork;

  var isPerformingWork = false;

  var deadlineHasExpired = false;

  var isBatchingUpdates = false;

  var nextUnitOfWork = null;
  var nextPriorityLevel = NoWork;

  var nextEffect = null;

  var pendingCommit = null;

  var nextScheduledRoot = null;
  var lastScheduledRoot = null;

  var isAnimationCallbackScheduled = false;
  var isDeferredCallbackScheduled = false;

  var capturedErrors = null;

  var failedBoundaries = null;

  var commitPhaseBoundaries = null;
  var firstUncaughtError = null;
  var fatalError = null;

  var isCommitting = false;
  var isUnmounting = false;

  function scheduleAnimationCallback(callback) {
    if (!isAnimationCallbackScheduled) {
      isAnimationCallbackScheduled = true;
      hostScheduleAnimationCallback(callback);
    }
  }

  function scheduleDeferredCallback(callback) {
    if (!isDeferredCallbackScheduled) {
      isDeferredCallbackScheduled = true;
      hostScheduleDeferredCallback(callback);
    }
  }

  function resetContextStack() {
    reset();

    resetContext();
    resetHostContainer();
  }

  function findNextUnitOfWork() {
    while (nextScheduledRoot !== null && nextScheduledRoot.current.pendingWorkPriority === NoWork) {
      nextScheduledRoot.isScheduled = false;

      var next = nextScheduledRoot.nextScheduledRoot;
      nextScheduledRoot.nextScheduledRoot = null;

      if (nextScheduledRoot === lastScheduledRoot) {
        nextScheduledRoot = null;
        lastScheduledRoot = null;
        nextPriorityLevel = NoWork;
        return null;
      }

      nextScheduledRoot = next;
    }

    var root = nextScheduledRoot;
    var highestPriorityRoot = null;
    var highestPriorityLevel = NoWork;
    while (root !== null) {
      if (root.current.pendingWorkPriority !== NoWork && (highestPriorityLevel === NoWork || highestPriorityLevel > root.current.pendingWorkPriority)) {
        highestPriorityLevel = root.current.pendingWorkPriority;
        highestPriorityRoot = root;
      }

      root = root.nextScheduledRoot;
    }
    if (highestPriorityRoot !== null) {
      nextPriorityLevel = highestPriorityLevel;
      priorityContext = nextPriorityLevel;

      resetContextStack();

      return cloneFiber(highestPriorityRoot.current, highestPriorityLevel);
    }

    nextPriorityLevel = NoWork;
    return null;
  }

  function commitAllHostEffects() {
    while (nextEffect !== null) {
      if (__DEV__) {
        ReactDebugCurrentFiber.current = nextEffect;
        recordEffect();
      }

      var effectTag = nextEffect.effectTag;
      if (effectTag & ContentReset) {
        config.resetTextContent(nextEffect.stateNode);
      }

      if (effectTag & Ref) {
        var current = nextEffect.alternate;
        if (current !== null) {
          commitDetachRef(current);
        }
      }

      var primaryEffectTag = effectTag & ~(Callback | Err | ContentReset | Ref);
      switch (primaryEffectTag) {
        case Placement:
          {
            commitPlacement(nextEffect);

            nextEffect.effectTag &= ~Placement;
            break;
          }
        case PlacementAndUpdate:
          {
            commitPlacement(nextEffect);

            nextEffect.effectTag &= ~Placement;

            var _current = nextEffect.alternate;
            commitWork(_current, nextEffect);
            break;
          }
        case Update:
          {
            var _current2 = nextEffect.alternate;
            commitWork(_current2, nextEffect);
            break;
          }
        case Deletion:
          {
            isUnmounting = true;
            commitDeletion(nextEffect);
            isUnmounting = false;
            break;
          }
      }
      nextEffect = nextEffect.nextEffect;
    }

    if (__DEV__) {
      ReactDebugCurrentFiber.current = null;
    }
  }

  function commitAllLifeCycles() {
    while (nextEffect !== null) {
      var effectTag = nextEffect.effectTag;

      if (effectTag & (Update | Callback)) {
        if (__DEV__) {
          recordEffect();
        }
        var current = nextEffect.alternate;
        commitLifeCycles(current, nextEffect);
      }

      if (effectTag & Ref) {
        if (__DEV__) {
          recordEffect();
        }
        commitAttachRef(nextEffect);
      }

      if (effectTag & Err) {
        if (__DEV__) {
          recordEffect();
        }
        commitErrorHandling(nextEffect);
      }

      var next = nextEffect.nextEffect;

      nextEffect.nextEffect = null;

      nextEffect = next;
    }
  }

  function commitAllWork(finishedWork) {
    isCommitting = true;
    if (__DEV__) {
      startCommitTimer();
    }

    pendingCommit = null;
    var root = finishedWork.stateNode;
    invariant(root.current !== finishedWork, 'Cannot commit the same tree as before. This is probably a bug ' + 'related to the return field. This error is likely caused by a bug ' + 'in React. Please file an issue.');

    ReactCurrentOwner.current = null;

    var previousPriorityContext = priorityContext;
    priorityContext = TaskPriority;

    var firstEffect = void 0;
    if (finishedWork.effectTag !== NoEffect) {
      if (finishedWork.lastEffect !== null) {
        finishedWork.lastEffect.nextEffect = finishedWork;
        firstEffect = finishedWork.firstEffect;
      } else {
        firstEffect = finishedWork;
      }
    } else {
      firstEffect = finishedWork.firstEffect;
    }

    var commitInfo = prepareForCommit();

    nextEffect = firstEffect;
    if (__DEV__) {
      startCommitHostEffectsTimer();
    }
    while (nextEffect !== null) {
      var _error = null;
      if (__DEV__) {
        _error = invokeGuardedCallback(null, commitAllHostEffects, null, finishedWork);
      } else {
        try {
          commitAllHostEffects(finishedWork);
        } catch (e) {
          _error = e;
        }
      }
      if (_error !== null) {
        invariant(nextEffect !== null, 'Should have next effect. This error is likely caused by a bug ' + 'in React. Please file an issue.');
        captureError(nextEffect, _error);

        if (nextEffect !== null) {
          nextEffect = nextEffect.nextEffect;
        }
      }
    }
    if (__DEV__) {
      stopCommitHostEffectsTimer();
    }

    resetAfterCommit(commitInfo);

    root.current = finishedWork;

    nextEffect = firstEffect;
    if (__DEV__) {
      startCommitLifeCyclesTimer();
    }
    while (nextEffect !== null) {
      var _error2 = null;
      if (__DEV__) {
        _error2 = invokeGuardedCallback(null, commitAllLifeCycles, null, finishedWork);
      } else {
        try {
          commitAllLifeCycles(finishedWork);
        } catch (e) {
          _error2 = e;
        }
      }
      if (_error2 !== null) {
        invariant(nextEffect !== null, 'Should have next effect. This error is likely caused by a bug ' + 'in React. Please file an issue.');
        captureError(nextEffect, _error2);
        if (nextEffect !== null) {
          nextEffect = nextEffect.nextEffect;
        }
      }
    }

    isCommitting = false;
    if (__DEV__) {
      stopCommitLifeCyclesTimer();
      stopCommitTimer();
    }
    if (typeof onCommitRoot === 'function') {
      onCommitRoot(finishedWork.stateNode);
    }
    if (__DEV__ && ReactFiberInstrumentation.debugTool) {
      ReactFiberInstrumentation.debugTool.onCommitWork(finishedWork);
    }

    if (commitPhaseBoundaries) {
      commitPhaseBoundaries.forEach(scheduleErrorRecovery);
      commitPhaseBoundaries = null;
    }

    priorityContext = previousPriorityContext;
  }

  function resetWorkPriority(workInProgress) {
    var newPriority = NoWork;

    var queue = workInProgress.updateQueue;
    var tag = workInProgress.tag;
    if (queue !== null && (tag === ClassComponent || tag === HostRoot)) {
      newPriority = getPendingPriority(queue);
    }

    var child = workInProgress.progressedChild;
    while (child !== null) {
      if (child.pendingWorkPriority !== NoWork && (newPriority === NoWork || newPriority > child.pendingWorkPriority)) {
        newPriority = child.pendingWorkPriority;
      }
      child = child.sibling;
    }
    workInProgress.pendingWorkPriority = newPriority;
  }

  function completeUnitOfWork(workInProgress) {
    while (true) {
      var current = workInProgress.alternate;
      var next = completeWork(current, workInProgress);

      var returnFiber = workInProgress.return;
      var siblingFiber = workInProgress.sibling;

      resetWorkPriority(workInProgress);

      if (next !== null) {
        if (__DEV__) {
          stopWorkTimer(workInProgress);
        }
        if (__DEV__ && ReactFiberInstrumentation.debugTool) {
          ReactFiberInstrumentation.debugTool.onCompleteWork(workInProgress);
        }

        return next;
      }

      if (returnFiber !== null) {
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        if (workInProgress.effectTag !== NoEffect) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }

      if (__DEV__) {
        stopWorkTimer(workInProgress);
      }
      if (__DEV__ && ReactFiberInstrumentation.debugTool) {
        ReactFiberInstrumentation.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        return siblingFiber;
      } else if (returnFiber !== null) {
        workInProgress = returnFiber;
        continue;
      } else {
        if (nextPriorityLevel < HighPriority) {
          commitAllWork(workInProgress);
        } else {
          pendingCommit = workInProgress;
        }
        return null;
      }
    }

    return null;
  }

  function performUnitOfWork(workInProgress) {
    var current = workInProgress.alternate;

    if (__DEV__) {
      startWorkTimer(workInProgress);
    }
    var next = beginWork(current, workInProgress, nextPriorityLevel);
    if (__DEV__ && ReactFiberInstrumentation.debugTool) {
      ReactFiberInstrumentation.debugTool.onBeginWork(workInProgress);
    }

    if (next === null) {
      next = completeUnitOfWork(workInProgress);
    }

    ReactCurrentOwner.current = null;
    if (__DEV__) {
      ReactDebugCurrentFiber.current = null;
    }

    return next;
  }

  function performFailedUnitOfWork(workInProgress) {
    var current = workInProgress.alternate;

    if (__DEV__) {
      startWorkTimer(workInProgress);
    }
    var next = beginFailedWork(current, workInProgress, nextPriorityLevel);
    if (__DEV__ && ReactFiberInstrumentation.debugTool) {
      ReactFiberInstrumentation.debugTool.onBeginWork(workInProgress);
    }

    if (next === null) {
      next = completeUnitOfWork(workInProgress);
    }

    ReactCurrentOwner.current = null;
    if (__DEV__) {
      ReactDebugCurrentFiber.current = null;
    }

    return next;
  }

  function performDeferredWork(deadline) {
    isDeferredCallbackScheduled = false;
    performWork(OffscreenPriority, deadline);
  }

  function performAnimationWork() {
    isAnimationCallbackScheduled = false;
    performWork(AnimationPriority, null);
  }

  function clearErrors() {
    if (nextUnitOfWork === null) {
      nextUnitOfWork = findNextUnitOfWork();
    }

    while (capturedErrors !== null && capturedErrors.size && nextUnitOfWork !== null && nextPriorityLevel !== NoWork && nextPriorityLevel <= TaskPriority) {
      if (hasCapturedError(nextUnitOfWork)) {
        nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
      } else {
        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
      }
      if (nextUnitOfWork === null) {
        nextUnitOfWork = findNextUnitOfWork();
      }
    }
  }

  function workLoop(priorityLevel, deadline) {
    clearErrors();

    if (nextUnitOfWork === null) {
      nextUnitOfWork = findNextUnitOfWork();
    }

    var hostRootTimeMarker = void 0;
    if (ReactFeatureFlags.logTopLevelRenders && nextUnitOfWork !== null && nextUnitOfWork.tag === HostRoot && nextUnitOfWork.child !== null) {
      var _componentName = getComponentName(nextUnitOfWork.child) || '';
      hostRootTimeMarker = 'React update: ' + _componentName;
      console.time(hostRootTimeMarker);
    }

    if (deadline !== null && priorityLevel > TaskPriority) {
      while (nextUnitOfWork !== null && !deadlineHasExpired) {
        if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);

          if (nextUnitOfWork === null && pendingCommit !== null) {
            if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
              commitAllWork(pendingCommit);
              nextUnitOfWork = findNextUnitOfWork();

              clearErrors();
            } else {
              deadlineHasExpired = true;
            }
          }
        } else {
          deadlineHasExpired = true;
        }
      }
    } else {
      while (nextUnitOfWork !== null && nextPriorityLevel !== NoWork && nextPriorityLevel <= priorityLevel) {
        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        if (nextUnitOfWork === null) {
          nextUnitOfWork = findNextUnitOfWork();

          clearErrors();
        }
      }
    }

    if (hostRootTimeMarker) {
      console.timeEnd(hostRootTimeMarker);
    }
  }

  function performWork(priorityLevel, deadline) {
    if (__DEV__) {
      startWorkLoopTimer();
    }

    invariant(!isPerformingWork, 'performWork was called recursively. This error is likely caused ' + 'by a bug in React. Please file an issue.');
    isPerformingWork = true;
    var isPerformingDeferredWork = !!deadline;

    while (priorityLevel !== NoWork && !fatalError) {
      invariant(deadline !== null || priorityLevel < HighPriority, 'Cannot perform deferred work without a deadline. This error is ' + 'likely caused by a bug in React. Please file an issue.');

      if (pendingCommit !== null && !deadlineHasExpired) {
        commitAllWork(pendingCommit);
      }

      priorityContextBeforeReconciliation = priorityContext;
      var _error3 = null;
      if (__DEV__) {
        _error3 = invokeGuardedCallback(null, workLoop, null, priorityLevel, deadline);
      } else {
        try {
          workLoop(priorityLevel, deadline);
        } catch (e) {
          _error3 = e;
        }
      }

      priorityContext = priorityContextBeforeReconciliation;

      if (_error3 !== null) {
        var failedWork = nextUnitOfWork;

        if (failedWork !== null) {
          var maybeBoundary = captureError(failedWork, _error3);
          if (maybeBoundary !== null) {
            var boundary = maybeBoundary;

            beginFailedWork(boundary.alternate, boundary, priorityLevel);

            unwindContexts(failedWork, boundary);
            nextUnitOfWork = completeUnitOfWork(boundary);
          }

          continue;
        } else if (fatalError === null) {
          fatalError = _error3;
        }
      }

      priorityLevel = NoWork;

      if (nextPriorityLevel !== NoWork && isPerformingDeferredWork && !deadlineHasExpired) {
        priorityLevel = nextPriorityLevel;
        continue;
      }

      switch (nextPriorityLevel) {
        case SynchronousPriority:
        case TaskPriority:
          priorityLevel = nextPriorityLevel;
          break;
        case AnimationPriority:
          scheduleAnimationCallback(performAnimationWork);

          scheduleDeferredCallback(performDeferredWork);
          break;
        case HighPriority:
        case LowPriority:
        case OffscreenPriority:
          scheduleDeferredCallback(performDeferredWork);
          break;
      }
    }

    var errorToThrow = fatalError || firstUncaughtError;

    isPerformingWork = false;
    deadlineHasExpired = false;
    fatalError = null;
    firstUncaughtError = null;
    capturedErrors = null;
    failedBoundaries = null;
    if (__DEV__) {
      stopWorkLoopTimer();
    }

    if (errorToThrow !== null) {
      throw errorToThrow;
    }
  }

  function captureError(failedWork, error) {
    ReactCurrentOwner.current = null;
    if (__DEV__) {
      ReactDebugCurrentFiber.current = null;
      ReactDebugCurrentFiber.phase = null;
    }

    nextUnitOfWork = null;

    var boundary = null;

    var errorBoundaryFound = false;
    var willRetry = false;
    var errorBoundaryName = null;

    if (failedWork.tag === HostRoot) {
      boundary = failedWork;

      if (isFailedBoundary(failedWork)) {
        fatalError = error;
      }
    } else {
      var node = failedWork.return;
      while (node !== null && boundary === null) {
        if (node.tag === ClassComponent) {
          var instance = node.stateNode;
          if (typeof instance.unstable_handleError === 'function') {
            errorBoundaryFound = true;
            errorBoundaryName = getComponentName(node);

            boundary = node;
            willRetry = true;
          }
        } else if (node.tag === HostRoot) {
          boundary = node;
        }

        if (isFailedBoundary(node)) {
          if (isUnmounting) {
            return null;
          }

          if (commitPhaseBoundaries !== null && (commitPhaseBoundaries.has(node) || node.alternate !== null && commitPhaseBoundaries.has(node.alternate))) {
            return null;
          }

          boundary = null;
          willRetry = false;
        }

        node = node.return;
      }
    }

    if (boundary !== null) {
      if (failedBoundaries === null) {
        failedBoundaries = new Set();
      }
      failedBoundaries.add(boundary);

      var _componentStack = getStackAddendumByWorkInProgressFiber(failedWork);
      var _componentName2 = getComponentName(failedWork);

      if (capturedErrors === null) {
        capturedErrors = new Map();
      }
      capturedErrors.set(boundary, {
        componentName: _componentName2,
        componentStack: _componentStack,
        error: error,
        errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
        errorBoundaryFound: errorBoundaryFound,
        errorBoundaryName: errorBoundaryName,
        willRetry: willRetry
      });

      if (isCommitting) {
        if (commitPhaseBoundaries === null) {
          commitPhaseBoundaries = new Set();
        }
        commitPhaseBoundaries.add(boundary);
      } else {
        scheduleErrorRecovery(boundary);
      }
      return boundary;
    } else if (firstUncaughtError === null) {
      firstUncaughtError = error;
    }
    return null;
  }

  function hasCapturedError(fiber) {
    return capturedErrors !== null && (capturedErrors.has(fiber) || fiber.alternate !== null && capturedErrors.has(fiber.alternate));
  }

  function isFailedBoundary(fiber) {
    return failedBoundaries !== null && (failedBoundaries.has(fiber) || fiber.alternate !== null && failedBoundaries.has(fiber.alternate));
  }

  function commitErrorHandling(effectfulFiber) {
    var capturedError = void 0;
    if (capturedErrors !== null) {
      capturedError = capturedErrors.get(effectfulFiber);
      capturedErrors.delete(effectfulFiber);
      if (capturedError == null) {
        if (effectfulFiber.alternate !== null) {
          effectfulFiber = effectfulFiber.alternate;
          capturedError = capturedErrors.get(effectfulFiber);
          capturedErrors.delete(effectfulFiber);
        }
      }
    }

    invariant(capturedError != null, 'No error for given unit of work. This error is likely caused by a ' + 'bug in React. Please file an issue.');

    var error = capturedError.error;
    try {
      logCapturedError(capturedError);
    } catch (e) {
      console.error(e);
    }

    switch (effectfulFiber.tag) {
      case ClassComponent:
        var instance = effectfulFiber.stateNode;

        var info = {
          componentStack: capturedError.componentStack
        };

        instance.unstable_handleError(error, info);
        return;
      case HostRoot:
        if (firstUncaughtError === null) {
          firstUncaughtError = error;
        }
        return;
      default:
        invariant(false, 'Invalid type of work. This error is likely caused by a bug in ' + 'React. Please file an issue.');
    }
  }

  function unwindContexts(from, to) {
    var node = from;
    while (node !== null && node !== to && node.alternate !== to) {
      switch (node.tag) {
        case ClassComponent:
          popContextProvider(node);
          break;
        case HostComponent:
          popHostContext(node);
          break;
        case HostRoot:
          popHostContainer(node);
          break;
        case HostPortal:
          popHostContainer(node);
          break;
      }
      if (__DEV__) {
        stopWorkTimer(node);
      }
      node = node.return;
    }
  }

  function scheduleRoot(root, priorityLevel) {
    if (priorityLevel === NoWork) {
      return;
    }

    if (!root.isScheduled) {
      root.isScheduled = true;
      if (lastScheduledRoot) {
        lastScheduledRoot.nextScheduledRoot = root;
        lastScheduledRoot = root;
      } else {
        nextScheduledRoot = root;
        lastScheduledRoot = root;
      }
    }
  }

  function scheduleUpdate(fiber, priorityLevel) {
    if (__DEV__) {
      recordScheduleUpdate();
    }

    if (priorityLevel <= nextPriorityLevel) {
      nextUnitOfWork = null;
    }

    if (__DEV__) {
      if (fiber.tag === ClassComponent) {
        var instance = fiber.stateNode;
        warnAboutInvalidUpdates(instance);
      }
    }

    var node = fiber;
    var shouldContinue = true;
    while (node !== null && shouldContinue) {
      shouldContinue = false;
      if (node.pendingWorkPriority === NoWork || node.pendingWorkPriority > priorityLevel) {
        shouldContinue = true;
        node.pendingWorkPriority = priorityLevel;
      }
      if (node.alternate !== null) {
        if (node.alternate.pendingWorkPriority === NoWork || node.alternate.pendingWorkPriority > priorityLevel) {
          shouldContinue = true;
          node.alternate.pendingWorkPriority = priorityLevel;
        }
      }
      if (node.return === null) {
        if (node.tag === HostRoot) {
          var root = node.stateNode;
          scheduleRoot(root, priorityLevel);

          switch (priorityLevel) {
            case SynchronousPriority:
              performWork(SynchronousPriority, null);
              return;
            case TaskPriority:
              return;
            case AnimationPriority:
              scheduleAnimationCallback(performAnimationWork);
              return;
            case HighPriority:
            case LowPriority:
            case OffscreenPriority:
              scheduleDeferredCallback(performDeferredWork);
              return;
          }
        } else {
          if (__DEV__) {
            if (fiber.tag === ClassComponent) {
              warnAboutUpdateOnUnmounted(fiber.stateNode);
            }
          }
          return;
        }
      }
      node = node.return;
    }
  }

  function getPriorityContext() {
    if (priorityContext === SynchronousPriority && (isPerformingWork || isBatchingUpdates)) {
      return TaskPriority;
    }
    return priorityContext;
  }

  function scheduleErrorRecovery(fiber) {
    scheduleUpdate(fiber, TaskPriority);
  }

  function performWithPriority(priorityLevel, fn) {
    var previousPriorityContext = priorityContext;
    priorityContext = priorityLevel;
    try {
      fn();
    } finally {
      priorityContext = previousPriorityContext;
    }
  }

  function batchedUpdates(fn, a) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = true;
    try {
      return fn(a);
    } finally {
      isBatchingUpdates = previousIsBatchingUpdates;

      if (!isPerformingWork && !isBatchingUpdates) {
        performWork(TaskPriority, null);
      }
    }
  }

  function unbatchedUpdates(fn) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = false;
    try {
      return fn();
    } finally {
      isBatchingUpdates = previousIsBatchingUpdates;
    }
  }

  function syncUpdates(fn) {
    var previousPriorityContext = priorityContext;
    priorityContext = SynchronousPriority;
    try {
      return fn();
    } finally {
      priorityContext = previousPriorityContext;
    }
  }

  function deferredUpdates(fn) {
    var previousPriorityContext = priorityContext;
    priorityContext = LowPriority;
    try {
      return fn();
    } finally {
      priorityContext = previousPriorityContext;
    }
  }

  return {
    scheduleUpdate: scheduleUpdate,
    getPriorityContext: getPriorityContext,
    performWithPriority: performWithPriority,
    batchedUpdates: batchedUpdates,
    unbatchedUpdates: unbatchedUpdates,
    syncUpdates: syncUpdates,
    deferredUpdates: deferredUpdates
  };
};
}, 105, null, "ReactFiberScheduler");
__d(/* ReactErrorUtils */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var caughtError = null;

var _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    return error;
  }
  return null;
};

if (__DEV__) {
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    var depth = 0;

    _invokeGuardedCallback = function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
      depth++;
      var thisDepth = depth;
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      var boundFunc = function boundFunc() {
        func.apply(context, funcArgs);
      };
      var fakeEventError = null;
      var onFakeEventError = function onFakeEventError(event) {
        if (depth === thisDepth) {
          fakeEventError = event.error;
        }
      };
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback') + '-' + depth;
      window.addEventListener('error', onFakeEventError);
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
      window.removeEventListener('error', onFakeEventError);
      depth--;
      return fakeEventError;
    };
  }
}

var _rethrowCaughtError = function _rethrowCaughtError() {
  if (caughtError) {
    var error = caughtError;
    caughtError = null;
    throw error;
  }
};

var ReactErrorUtils = {
  injection: {
    injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
      invariant(typeof injectedErrorUtils.invokeGuardedCallback === 'function', 'Injected invokeGuardedCallback() must be a function.');
      _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
    }
  },

  invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    return _invokeGuardedCallback.apply(this, arguments);
  },

  invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    var error = ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
    if (error !== null && caughtError === null) {
      caughtError = error;
    }
  },

  rethrowCaughtError: function rethrowCaughtError() {
    return _rethrowCaughtError.apply(this, arguments);
  }
};

module.exports = ReactErrorUtils;
}, 106, null, "ReactErrorUtils");
__d(/* ReactFiberBeginWork */function(global, require, module, exports) {

'use strict';

var _require = require(108              ), // 108 = ReactChildFiber
    mountChildFibersInPlace = _require.mountChildFibersInPlace,
    reconcileChildFibers = _require.reconcileChildFibers,
    reconcileChildFibersInPlace = _require.reconcileChildFibersInPlace,
    cloneChildFibers = _require.cloneChildFibers;

var _require2 = require(90                     ), // 90 = ReactFiberUpdateQueue
    beginUpdateQueue = _require2.beginUpdateQueue;

var ReactTypeOfWork = require(97               ); // 97 = ReactTypeOfWork

var _require3 = require(93                 ), // 93 = ReactFiberContext
    getMaskedContext = _require3.getMaskedContext,
    getUnmaskedContext = _require3.getUnmaskedContext,
    hasContextChanged = _require3.hasContextChanged,
    pushContextProvider = _require3.pushContextProvider,
    pushTopLevelContextObject = _require3.pushTopLevelContextObject,
    invalidateContextProvider = _require3.invalidateContextProvider;

var IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot,
    HostComponent = ReactTypeOfWork.HostComponent,
    HostText = ReactTypeOfWork.HostText,
    HostPortal = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent = ReactTypeOfWork.YieldComponent,
    Fragment = ReactTypeOfWork.Fragment;

var _require4 = require(92                  ), // 92 = ReactPriorityLevel
    NoWork = _require4.NoWork,
    OffscreenPriority = _require4.OffscreenPriority;

var _require5 = require(91                     ), // 91 = ReactTypeOfSideEffect
    Placement = _require5.Placement,
    ContentReset = _require5.ContentReset,
    Err = _require5.Err,
    Ref = _require5.Ref;

var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner
var ReactFiberClassComponent = require(114                       ); // 114 = ReactFiberClassComponent
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

if (__DEV__) {
  var ReactDebugCurrentFiber = require(100                     ); // 100 = ReactDebugCurrentFiber

  var _require6 = require(102                  ), // 102 = ReactDebugFiberPerf
      cancelWorkTimer = _require6.cancelWorkTimer;

  var warning = require(19                ); // 19 = fbjs/lib/warning

  var warnedAboutStatelessRefs = {};
}

module.exports = function (config, hostContext, scheduleUpdate, getPriorityContext) {
  var shouldSetTextContent = config.shouldSetTextContent,
      useSyncScheduling = config.useSyncScheduling,
      shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree;
  var pushHostContext = hostContext.pushHostContext,
      pushHostContainer = hostContext.pushHostContainer;

  var _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
      adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
      constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
      mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
      resumeMountClassInstance = _ReactFiberClassCompo.resumeMountClassInstance,
      updateClassInstance = _ReactFiberClassCompo.updateClassInstance;

  function markChildAsProgressed(current, workInProgress, priorityLevel) {
    workInProgress.progressedChild = workInProgress.child;
    workInProgress.progressedPriority = priorityLevel;
    if (current !== null) {
      current.progressedChild = workInProgress.progressedChild;
      current.progressedPriority = workInProgress.progressedPriority;
    }
  }

  function clearDeletions(workInProgress) {
    workInProgress.progressedFirstDeletion = workInProgress.progressedLastDeletion = null;
  }

  function transferDeletions(workInProgress) {
    workInProgress.firstEffect = workInProgress.progressedFirstDeletion;
    workInProgress.lastEffect = workInProgress.progressedLastDeletion;
  }

  function reconcileChildren(current, workInProgress, nextChildren) {
    var priorityLevel = workInProgress.pendingWorkPriority;
    reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel);
  }

  function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
    workInProgress.memoizedProps = null;
    if (current === null) {
      workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
    } else if (current.child === workInProgress.child) {
      clearDeletions(workInProgress);

      workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel);

      transferDeletions(workInProgress);
    } else {
      workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);

      transferDeletions(workInProgress);
    }
    markChildAsProgressed(current, workInProgress, priorityLevel);
  }

  function updateFragment(current, workInProgress) {
    var nextChildren = workInProgress.pendingProps;
    if (hasContextChanged()) {
      if (nextChildren === null) {
        nextChildren = workInProgress.memoizedProps;
      }
    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextChildren);
    return workInProgress.child;
  }

  function markRef(current, workInProgress) {
    var ref = workInProgress.ref;
    if (ref !== null && (!current || current.ref !== ref)) {
      workInProgress.effectTag |= Ref;
    }
  }

  function updateFunctionalComponent(current, workInProgress) {
    var fn = workInProgress.type;
    var nextProps = workInProgress.pendingProps;

    var memoizedProps = workInProgress.memoizedProps;
    if (hasContextChanged()) {
      if (nextProps === null) {
        nextProps = memoizedProps;
      }
    } else {
      if (nextProps === null || memoizedProps === nextProps) {
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }

      if (typeof fn.shouldComponentUpdate === 'function' && !fn.shouldComponentUpdate(memoizedProps, nextProps)) {
        memoizeProps(workInProgress, nextProps);
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
    }

    var unmaskedContext = getUnmaskedContext(workInProgress);
    var context = getMaskedContext(workInProgress, unmaskedContext);

    var nextChildren;

    if (__DEV__) {
      ReactCurrentOwner.current = workInProgress;
      ReactDebugCurrentFiber.phase = 'render';
      nextChildren = fn(nextProps, context);
      ReactDebugCurrentFiber.phase = null;
    } else {
      nextChildren = fn(nextProps, context);
    }
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextProps);
    return workInProgress.child;
  }

  function updateClassComponent(current, workInProgress, priorityLevel) {
    var hasContext = pushContextProvider(workInProgress);

    var shouldUpdate = void 0;
    if (current === null) {
      if (!workInProgress.stateNode) {
        constructClassInstance(workInProgress);
        mountClassInstance(workInProgress, priorityLevel);
        shouldUpdate = true;
      } else {
        shouldUpdate = resumeMountClassInstance(workInProgress, priorityLevel);
      }
    } else {
      shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel);
    }
    return finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
  }

  function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
    markRef(current, workInProgress);

    if (!shouldUpdate) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var instance = workInProgress.stateNode;

    ReactCurrentOwner.current = workInProgress;
    var nextChildren = void 0;
    if (__DEV__) {
      ReactDebugCurrentFiber.phase = 'render';
      nextChildren = instance.render();
      ReactDebugCurrentFiber.phase = null;
    } else {
      nextChildren = instance.render();
    }
    reconcileChildren(current, workInProgress, nextChildren);

    memoizeState(workInProgress, instance.state);
    memoizeProps(workInProgress, instance.props);

    if (hasContext) {
      invalidateContextProvider(workInProgress);
    }
    return workInProgress.child;
  }

  function updateHostRoot(current, workInProgress, priorityLevel) {
    var root = workInProgress.stateNode;
    if (root.pendingContext) {
      pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
    } else if (root.context) {
      pushTopLevelContextObject(workInProgress, root.context, false);
    }

    pushHostContainer(workInProgress, root.containerInfo);

    var updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      var prevState = workInProgress.memoizedState;
      var state = beginUpdateQueue(workInProgress, updateQueue, null, prevState, null, priorityLevel);
      if (prevState === state) {
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      var element = state.element;
      reconcileChildren(current, workInProgress, element);
      memoizeState(workInProgress, state);
      return workInProgress.child;
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  function updateHostComponent(current, workInProgress) {
    pushHostContext(workInProgress);

    var nextProps = workInProgress.pendingProps;
    var prevProps = current !== null ? current.memoizedProps : null;
    var memoizedProps = workInProgress.memoizedProps;
    if (hasContextChanged()) {
      if (nextProps === null) {
        nextProps = memoizedProps;
        invariant(nextProps !== null, 'We should always have pending or current props. This error is ' + 'likely caused by a bug in React. Please file an issue.');
      }
    } else if (nextProps === null || memoizedProps === nextProps) {
      if (!useSyncScheduling && shouldDeprioritizeSubtree(workInProgress.type, memoizedProps) && workInProgress.pendingWorkPriority !== OffscreenPriority) {
        var child = workInProgress.progressedChild;
        while (child !== null) {
          child.pendingWorkPriority = OffscreenPriority;
          child = child.sibling;
        }
        return null;
      }
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var nextChildren = nextProps.children;
    var isDirectTextChild = shouldSetTextContent(nextProps);

    if (isDirectTextChild) {
      nextChildren = null;
    } else if (prevProps && shouldSetTextContent(prevProps)) {
      workInProgress.effectTag |= ContentReset;
    }

    markRef(current, workInProgress);

    if (!useSyncScheduling && shouldDeprioritizeSubtree(workInProgress.type, nextProps) && workInProgress.pendingWorkPriority !== OffscreenPriority) {

      if (workInProgress.progressedPriority === OffscreenPriority) {
        workInProgress.child = workInProgress.progressedChild;
      }

      reconcileChildrenAtPriority(current, workInProgress, nextChildren, OffscreenPriority);
      memoizeProps(workInProgress, nextProps);
      workInProgress.child = current !== null ? current.child : null;

      if (current === null) {
        var _child = workInProgress.progressedChild;
        while (_child !== null) {
          _child.effectTag = Placement;
          _child = _child.sibling;
        }
      }

      return null;
    } else {
      reconcileChildren(current, workInProgress, nextChildren);
      memoizeProps(workInProgress, nextProps);
      return workInProgress.child;
    }
  }

  function updateHostText(current, workInProgress) {
    var nextProps = workInProgress.pendingProps;
    if (nextProps === null) {
      nextProps = workInProgress.memoizedProps;
    }
    memoizeProps(workInProgress, nextProps);

    return null;
  }

  function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
    invariant(current === null, 'An indeterminate component should never have mounted. This error is ' + 'likely caused by a bug in React. Please file an issue.');
    var fn = workInProgress.type;
    var props = workInProgress.pendingProps;
    var unmaskedContext = getUnmaskedContext(workInProgress);
    var context = getMaskedContext(workInProgress, unmaskedContext);

    var value;

    if (__DEV__) {
      ReactCurrentOwner.current = workInProgress;
      value = fn(props, context);
    } else {
      value = fn(props, context);
    }

    if (typeof value === 'object' && value !== null && typeof value.render === 'function') {
      workInProgress.tag = ClassComponent;

      var hasContext = pushContextProvider(workInProgress);
      adoptClassInstance(workInProgress, value);
      mountClassInstance(workInProgress, priorityLevel);
      return finishClassComponent(current, workInProgress, true, hasContext);
    } else {
      workInProgress.tag = FunctionalComponent;
      if (__DEV__) {
        var Component = workInProgress.type;

        if (Component) {
          warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
          var info = '';
          var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
          if (ownerName) {
            info += '\n\nCheck the render method of `' + ownerName + '`.';
          }

          var warningKey = ownerName || workInProgress._debugID || '';
          var debugSource = workInProgress._debugSource;
          if (debugSource) {
            warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
          }
          if (!warnedAboutStatelessRefs[warningKey]) {
            warnedAboutStatelessRefs[warningKey] = true;
            warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
          }
        }
      }
      reconcileChildren(current, workInProgress, value);
      memoizeProps(workInProgress, props);
      return workInProgress.child;
    }
  }

  function updateCoroutineComponent(current, workInProgress) {
    var nextCoroutine = workInProgress.pendingProps;
    if (hasContextChanged()) {
      if (nextCoroutine === null) {
        nextCoroutine = current && current.memoizedProps;
        invariant(nextCoroutine !== null, 'We should always have pending or current props. This error is ' + 'likely caused by a bug in React. Please file an issue.');
      }
    } else if (nextCoroutine === null || workInProgress.memoizedProps === nextCoroutine) {
      nextCoroutine = workInProgress.memoizedProps;
    }

    var nextChildren = nextCoroutine.children;
    var priorityLevel = workInProgress.pendingWorkPriority;

    workInProgress.memoizedProps = null;
    if (current === null) {
      workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel);
    } else if (current.child === workInProgress.child) {
      clearDeletions(workInProgress);

      workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel);

      transferDeletions(workInProgress);
    } else {
      workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel);

      transferDeletions(workInProgress);
    }

    memoizeProps(workInProgress, nextCoroutine);

    return workInProgress.stateNode;
  }

  function updatePortalComponent(current, workInProgress) {
    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
    var priorityLevel = workInProgress.pendingWorkPriority;
    var nextChildren = workInProgress.pendingProps;
    if (hasContextChanged()) {
      if (nextChildren === null) {
        nextChildren = current && current.memoizedProps;
        invariant(nextChildren != null, 'We should always have pending or current props. This error is ' + 'likely caused by a bug in React. Please file an issue.');
      }
    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    if (current === null) {
      workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
      memoizeProps(workInProgress, nextChildren);
      markChildAsProgressed(current, workInProgress, priorityLevel);
    } else {
      reconcileChildren(current, workInProgress, nextChildren);
      memoizeProps(workInProgress, nextChildren);
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current, workInProgress) {
    if (__DEV__) {
      cancelWorkTimer(workInProgress);
    }

    var priorityLevel = workInProgress.pendingWorkPriority;


    if (current && workInProgress.child === current.child) {
      clearDeletions(workInProgress);
    }

    cloneChildFibers(current, workInProgress);
    markChildAsProgressed(current, workInProgress, priorityLevel);
    return workInProgress.child;
  }

  function bailoutOnLowPriority(current, workInProgress) {
    if (__DEV__) {
      cancelWorkTimer(workInProgress);
    }

    switch (workInProgress.tag) {
      case ClassComponent:
        pushContextProvider(workInProgress);
        break;
      case HostPortal:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        break;
    }

    return null;
  }

  function memoizeProps(workInProgress, nextProps) {
    workInProgress.memoizedProps = nextProps;

    workInProgress.pendingProps = null;
  }

  function memoizeState(workInProgress, nextState) {
    workInProgress.memoizedState = nextState;
  }

  function beginWork(current, workInProgress, priorityLevel) {
    if (workInProgress.pendingWorkPriority === NoWork || workInProgress.pendingWorkPriority > priorityLevel) {
      return bailoutOnLowPriority(current, workInProgress);
    }

    if (__DEV__) {
      ReactDebugCurrentFiber.current = workInProgress;
    }

    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    if (workInProgress.progressedPriority === priorityLevel) {
      workInProgress.child = workInProgress.progressedChild;
    }

    switch (workInProgress.tag) {
      case IndeterminateComponent:
        return mountIndeterminateComponent(current, workInProgress, priorityLevel);
      case FunctionalComponent:
        return updateFunctionalComponent(current, workInProgress);
      case ClassComponent:
        return updateClassComponent(current, workInProgress, priorityLevel);
      case HostRoot:
        return updateHostRoot(current, workInProgress, priorityLevel);
      case HostComponent:
        return updateHostComponent(current, workInProgress);
      case HostText:
        return updateHostText(current, workInProgress);
      case CoroutineHandlerPhase:
        workInProgress.tag = CoroutineComponent;

      case CoroutineComponent:
        return updateCoroutineComponent(current, workInProgress);
      case YieldComponent:
        return null;
      case HostPortal:
        return updatePortalComponent(current, workInProgress);
      case Fragment:
        return updateFragment(current, workInProgress);
      default:
        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in ' + 'React. Please file an issue.');
    }
  }

  function beginFailedWork(current, workInProgress, priorityLevel) {
    invariant(workInProgress.tag === ClassComponent || workInProgress.tag === HostRoot, 'Invalid type of work. This error is likely caused by a bug in React. ' + 'Please file an issue.');

    workInProgress.effectTag |= Err;

    if (workInProgress.pendingWorkPriority === NoWork || workInProgress.pendingWorkPriority > priorityLevel) {
      return bailoutOnLowPriority(current, workInProgress);
    }

    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    var nextChildren = null;
    reconcileChildren(current, workInProgress, nextChildren);

    if (workInProgress.tag === ClassComponent) {
      var instance = workInProgress.stateNode;
      workInProgress.memoizedProps = instance.props;
      workInProgress.memoizedState = instance.state;
      workInProgress.pendingProps = null;
    }

    return workInProgress.child;
  }

  return {
    beginWork: beginWork,
    beginFailedWork: beginFailedWork
  };
};
}, 107, null, "ReactFiberBeginWork");
__d(/* ReactChildFiber */function(global, require, module, exports) {

'use strict';

var REACT_ELEMENT_TYPE = require(109                 ); // 109 = ReactElementSymbol

var _require = require(110             ), // 110 = ReactCoroutine
    REACT_COROUTINE_TYPE = _require.REACT_COROUTINE_TYPE,
    REACT_YIELD_TYPE = _require.REACT_YIELD_TYPE;

var _require2 = require(111          ), // 111 = ReactPortal
    REACT_PORTAL_TYPE = _require2.REACT_PORTAL_TYPE;

var ReactFiber = require(104         ); // 104 = ReactFiber
var ReactTypeOfSideEffect = require(91                     ); // 91 = ReactTypeOfSideEffect
var ReactTypeOfWork = require(97               ); // 97 = ReactTypeOfWork

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var getIteratorFn = require(112            ); // 112 = getIteratorFn
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var ReactFeatureFlags = require(113                ); // 113 = ReactFeatureFlags
var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner

if (__DEV__) {
  var _require3 = require(100                     ), // 100 = ReactDebugCurrentFiber
      getCurrentFiberStackAddendum = _require3.getCurrentFiberStackAddendum;

  var getComponentName = require(94                ); // 94 = getComponentName
  var warning = require(19                ); // 19 = fbjs/lib/warning
  var didWarnAboutMaps = false;
}

var cloneFiber = ReactFiber.cloneFiber,
    createFiberFromElement = ReactFiber.createFiberFromElement,
    createFiberFromFragment = ReactFiber.createFiberFromFragment,
    createFiberFromText = ReactFiber.createFiberFromText,
    createFiberFromCoroutine = ReactFiber.createFiberFromCoroutine,
    createFiberFromYield = ReactFiber.createFiberFromYield,
    createFiberFromPortal = ReactFiber.createFiberFromPortal;


var isArray = Array.isArray;

var FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostText = ReactTypeOfWork.HostText,
    HostPortal = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    YieldComponent = ReactTypeOfWork.YieldComponent,
    Fragment = ReactTypeOfWork.Fragment;
var NoEffect = ReactTypeOfSideEffect.NoEffect,
    Placement = ReactTypeOfSideEffect.Placement,
    Deletion = ReactTypeOfSideEffect.Deletion;


function coerceRef(current, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function') {
    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        if (typeof owner.tag === 'number') {
          var ownerFiber = owner;
          invariant(ownerFiber.tag === ClassComponent, 'Stateless function components cannot have refs.');
          inst = ownerFiber.stateNode;
        } else {
          inst = owner.getPublicInstance();
        }
      }
      invariant(inst, 'Missing owner for string ref %s. This error is likely caused by a ' + 'bug in React. Please file an issue.', mixedRef);
      var stringRef = '' + mixedRef;

      if (current !== null && current.ref !== null && current.ref._stringRef === stringRef) {
        return current.ref;
      }
      var ref = function ref(value) {
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    if (__DEV__) {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.';
      var owner = ReactCurrentOwner.owner || returnFiber._debugOwner;
      if (owner && typeof owner.tag === 'number') {
        var name = getComponentName(owner);
        if (name) {
          addendum += '\n\nCheck the render method of `' + name + '`.';
        }
      }
    }
    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
  }
}

function ChildReconciler(shouldClone, shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      return;
    }
    if (!shouldClone) {
      if (childToDelete.alternate === null) {
        return;
      }
      childToDelete = childToDelete.alternate;
    }

    var last = returnFiber.progressedLastDeletion;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.progressedLastDeletion = childToDelete;
    } else {
      returnFiber.progressedFirstDeletion = returnFiber.progressedLastDeletion = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      return null;
    }

    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, priority) {
    if (shouldClone) {
      var clone = cloneFiber(fiber, priority);
      clone.index = 0;
      clone.sibling = null;
      return clone;
    } else {
      fiber.pendingWorkPriority = priority;
      fiber.effectTag = NoEffect;
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      return lastPlacedIndex;
    }
    var current = newFiber.alternate;
    if (current !== null) {
      var oldIndex = current.index;
      if (oldIndex < lastPlacedIndex) {
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        return oldIndex;
      }
    } else {
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, priority) {
    if (current === null || current.tag !== HostText) {
      var created = createFiberFromText(textContent, priority);
      created.return = returnFiber;
      return created;
    } else {
      var existing = useFiber(current, priority);
      existing.pendingProps = textContent;
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, priority) {
    if (current === null || current.type !== element.type) {
      var created = createFiberFromElement(element, priority);
      created.ref = coerceRef(current, element);
      created.return = returnFiber;
      return created;
    } else {
      var existing = useFiber(current, priority);
      existing.ref = coerceRef(current, element);
      existing.pendingProps = element.props;
      existing.return = returnFiber;
      if (__DEV__) {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    }
  }

  function updateCoroutine(returnFiber, current, coroutine, priority) {
    if (current === null || current.tag !== CoroutineComponent) {
      var created = createFiberFromCoroutine(coroutine, priority);
      created.return = returnFiber;
      return created;
    } else {
      var existing = useFiber(current, priority);
      existing.pendingProps = coroutine;
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateYield(returnFiber, current, yieldNode, priority) {
    if (current === null || current.tag !== YieldComponent) {
      var created = createFiberFromYield(yieldNode, priority);
      created.type = yieldNode.value;
      created.return = returnFiber;
      return created;
    } else {
      var existing = useFiber(current, priority);
      existing.type = yieldNode.value;
      existing.return = returnFiber;
      return existing;
    }
  }

  function updatePortal(returnFiber, current, portal, priority) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      var created = createFiberFromPortal(portal, priority);
      created.return = returnFiber;
      return created;
    } else {
      var existing = useFiber(current, priority);
      existing.pendingProps = portal.children || [];
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, priority) {
    if (current === null || current.tag !== Fragment) {
      var created = createFiberFromFragment(fragment, priority);
      created.return = returnFiber;
      return created;
    } else {
      var existing = useFiber(current, priority);
      existing.pendingProps = fragment;
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, priority) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      var created = createFiberFromText('' + newChild, priority);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, priority);
            _created.ref = coerceRef(null, newChild);
            _created.return = returnFiber;
            return _created;
          }

        case REACT_COROUTINE_TYPE:
          {
            var _created2 = createFiberFromCoroutine(newChild, priority);
            _created2.return = returnFiber;
            return _created2;
          }

        case REACT_YIELD_TYPE:
          {
            var _created3 = createFiberFromYield(newChild, priority);
            _created3.type = newChild.value;
            _created3.return = returnFiber;
            return _created3;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created4 = createFiberFromPortal(newChild, priority);
            _created4.return = returnFiber;
            return _created4;
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _created5 = createFiberFromFragment(newChild, priority);
        _created5.return = returnFiber;
        return _created5;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, priority) {

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, priority);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              return updateElement(returnFiber, oldFiber, newChild, priority);
            } else {
              return null;
            }
          }

        case REACT_COROUTINE_TYPE:
          {
            if (newChild.key === key) {
              return updateCoroutine(returnFiber, oldFiber, newChild, priority);
            } else {
              return null;
            }
          }

        case REACT_YIELD_TYPE:
          {
            if (key === null) {
              return updateYield(returnFiber, oldFiber, newChild, priority);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, priority);
            } else {
              return null;
            }
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }
        return updateFragment(returnFiber, oldFiber, newChild, priority);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, priority);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updateElement(returnFiber, _matchedFiber, newChild, priority);
          }

        case REACT_COROUTINE_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updateCoroutine(returnFiber, _matchedFiber2, newChild, priority);
          }

        case REACT_YIELD_TYPE:
          {
            var _matchedFiber3 = existingChildren.get(newIdx) || null;
            return updateYield(returnFiber, _matchedFiber3, newChild, priority);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber4 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber4, newChild, priority);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber5 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber5, newChild, priority);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    return null;
  }

  function warnOnDuplicateKey(child, knownKeys) {
    if (__DEV__) {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_COROUTINE_TYPE:
        case REACT_PORTAL_TYPE:
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning(false, 'Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, ' + 'only the first child will be used.%s', key, getCurrentFiberStackAddendum());
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {

    if (__DEV__) {
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnDuplicateKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
      if (newFiber === null) {
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        resultingFirstChild = newFiber;
      } else {
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
        if (!_newFiber) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
      if (_newFiber2) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {

    var iteratorFn = getIteratorFn(newChildrenIterable);
    invariant(typeof iteratorFn === 'function', 'An object is not an iterable. This error is likely caused by a bug in ' + 'React. Please file an issue.');

    if (__DEV__) {
      if (typeof newChildrenIterable.entries === 'function') {
        var possibleMap = newChildrenIterable;
        if (possibleMap.entries === iteratorFn) {
          var mapsAsChildrenAddendum = '';
          var owner = ReactCurrentOwner.owner || returnFiber._debugOwner;
          if (owner && typeof owner.tag === 'number') {
            var mapsAsChildrenOwnerName = getComponentName(owner);
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = '\n\nCheck the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', mapsAsChildrenAddendum);
          didWarnAboutMaps = true;
        }
      }

      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnDuplicateKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    invariant(newChildren != null, 'An iterable object provided no iterator.');

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
      if (newFiber === null) {
        if (!oldFiber) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        resultingFirstChild = newFiber;
      } else {
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, priority);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, priority);
      existing.pendingProps = textContent;
      existing.return = returnFiber;
      return existing;
    }

    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, priority);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      if (child.key === key) {
        if (child.type === element.type) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, priority);
          existing.ref = coerceRef(child, element);
          existing.pendingProps = element.props;
          existing.return = returnFiber;
          if (__DEV__) {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromElement(element, priority);
    created.ref = coerceRef(currentFirstChild, element);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
    var key = coroutine.key;
    var child = currentFirstChild;
    while (child !== null) {
      if (child.key === key) {
        if (child.tag === CoroutineComponent) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, priority);
          existing.pendingProps = coroutine;
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromCoroutine(coroutine, priority);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
    var child = currentFirstChild;
    if (child !== null) {
      if (child.tag === YieldComponent) {
        deleteRemainingChildren(returnFiber, child.sibling);
        var existing = useFiber(child, priority);
        existing.type = yieldNode.value;
        existing.return = returnFiber;
        return existing;
      } else {
        deleteRemainingChildren(returnFiber, child);
      }
    }

    var created = createFiberFromYield(yieldNode, priority);
    created.type = yieldNode.value;
    created.return = returnFiber;
    return created;
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, priority);
          existing.pendingProps = portal.children || [];
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, priority);
    created.return = returnFiber;
    return created;
  }

  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {

    var disableNewFiberFeatures = ReactFeatureFlags.disableNewFiberFeatures;

    var isObject = typeof newChild === 'object' && newChild !== null;
    if (isObject) {
      if (disableNewFiberFeatures) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

          case REACT_PORTAL_TYPE:
            return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        }
      } else {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

          case REACT_COROUTINE_TYPE:
            return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

          case REACT_YIELD_TYPE:
            return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

          case REACT_PORTAL_TYPE:
            return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        }
      }
    }

    if (disableNewFiberFeatures) {
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            if (__DEV__) {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction && typeof newChild === 'undefined') {
                break;
              }
            }
            var Component = returnFiber.type;
            invariant(newChild === null || newChild === false, '%s.render(): A valid React element (or null) must be returned. ' + 'You may have returned undefined, an array or some other ' + 'invalid object.', Component.displayName || Component.name || 'Component');
            break;
          }
        case FunctionalComponent:
          {
            var _Component = returnFiber.type;
            invariant(newChild === null || newChild === false, '%s(...): A valid React element (or null) must be returned. ' + 'You may have returned undefined, an array or some other ' + 'invalid object.', _Component.displayName || _Component.name || 'Component');
            break;
          }
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));
    }

    if (isArray(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    if (!disableNewFiberFeatures && typeof newChild === 'undefined') {
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            if (__DEV__) {
              var _instance = returnFiber.stateNode;
              if (_instance.render._isMockFunction) {
                break;
              }
            }
          }

        case FunctionalComponent:
          {
            var _Component2 = returnFiber.type;
            invariant(false, '%s(...): Nothing was returned from render. This usually means a ' + 'return statement is missing. Or, to render nothing, ' + 'return null.', _Component2.displayName || _Component2.name || 'Component');
          }
      }
    }

    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

exports.reconcileChildFibers = ChildReconciler(true, true);

exports.reconcileChildFibersInPlace = ChildReconciler(false, true);

exports.mountChildFibersInPlace = ChildReconciler(false, false);

exports.cloneChildFibers = function (current, workInProgress) {
  if (!workInProgress.child) {
    return;
  }
  if (current !== null && workInProgress.child === current.child) {
    var currentChild = workInProgress.child;

    var newChild = cloneFiber(currentChild, currentChild.pendingWorkPriority);
    workInProgress.child = newChild;

    newChild.return = workInProgress;
    while (currentChild.sibling !== null) {
      currentChild = currentChild.sibling;
      newChild = newChild.sibling = cloneFiber(currentChild, currentChild.pendingWorkPriority);
      newChild.return = workInProgress;
    }
    newChild.sibling = null;
  } else {
    var child = workInProgress.child;
    while (child !== null) {
      child.return = workInProgress;
      child = child.sibling;
    }
  }
};
}, 108, null, "ReactChildFiber");
__d(/* ReactElementSymbol */function(global, require, module, exports) {

'use strict';

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
}, 109, null, "ReactElementSymbol");
__d(/* ReactCoroutine */function(global, require, module, exports) {

'use strict';

var REACT_COROUTINE_TYPE;
var REACT_YIELD_TYPE;
if (typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for')) {
  REACT_COROUTINE_TYPE = (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.coroutine');
  REACT_YIELD_TYPE = (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.yield');
} else {
  REACT_COROUTINE_TYPE = 0xeac8;
  REACT_YIELD_TYPE = 0xeac9;
}

exports.createCoroutine = function (children, handler, props) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var coroutine = {
    $$typeof: REACT_COROUTINE_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    handler: handler,
    props: props
  };

  if (__DEV__) {
    if (Object.freeze) {
      Object.freeze(coroutine.props);
      Object.freeze(coroutine);
    }
  }

  return coroutine;
};

exports.createYield = function (value) {
  var yieldNode = {
    $$typeof: REACT_YIELD_TYPE,
    value: value
  };

  if (__DEV__) {
    if (Object.freeze) {
      Object.freeze(yieldNode);
    }
  }

  return yieldNode;
};

exports.isCoroutine = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_COROUTINE_TYPE;
};

exports.isYield = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_YIELD_TYPE;
};

exports.REACT_YIELD_TYPE = REACT_YIELD_TYPE;
exports.REACT_COROUTINE_TYPE = REACT_COROUTINE_TYPE;
}, 110, null, "ReactCoroutine");
__d(/* ReactPortal */function(global, require, module, exports) {

'use strict';

var REACT_PORTAL_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.portal') || 0xeaca;

exports.createPortal = function (children, containerInfo, implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
};

exports.isPortal = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_PORTAL_TYPE;
};

exports.REACT_PORTAL_TYPE = REACT_PORTAL_TYPE;
}, 111, null, "ReactPortal");
__d(/* getIteratorFn */function(global, require, module, exports) {

'use strict';

var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
}, 112, null, "getIteratorFn");
__d(/* ReactFeatureFlags */function(global, require, module, exports) {

'use strict';

var ReactFeatureFlags = {
  logTopLevelRenders: false,
  prepareNewChildrenBeforeUnmountInStack: true,
  disableNewFiberFeatures: false
};

module.exports = ReactFeatureFlags;
}, 113, null, "ReactFeatureFlags");
__d(/* ReactFiberClassComponent */function(global, require, module, exports) {

'use strict';

var _require = require(91                     ), // 91 = ReactTypeOfSideEffect
    Update = _require.Update;

var _require2 = require(93                 ), // 93 = ReactFiberContext
    cacheContext = _require2.cacheContext,
    getMaskedContext = _require2.getMaskedContext,
    getUnmaskedContext = _require2.getUnmaskedContext,
    isContextConsumer = _require2.isContextConsumer;

var _require3 = require(90                     ), // 90 = ReactFiberUpdateQueue
    addUpdate = _require3.addUpdate,
    addReplaceUpdate = _require3.addReplaceUpdate,
    addForceUpdate = _require3.addForceUpdate,
    beginUpdateQueue = _require3.beginUpdateQueue;

var _require4 = require(93                 ), // 93 = ReactFiberContext
    hasContextChanged = _require4.hasContextChanged;

var _require5 = require(95                        ), // 95 = ReactFiberTreeReflection
    isMounted = _require5.isMounted;

var ReactInstanceMap = require(96                ); // 96 = ReactInstanceMap
var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var getComponentName = require(94                ); // 94 = getComponentName
var shallowEqual = require(115                    ); // 115 = fbjs/lib/shallowEqual
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var isArray = Array.isArray;

if (__DEV__) {
  var _require6 = require(102                  ), // 102 = ReactDebugFiberPerf
      startPhaseTimer = _require6.startPhaseTimer,
      stopPhaseTimer = _require6.stopPhaseTimer;

  var warning = require(19                ); // 19 = fbjs/lib/warning
  var warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {
    warning(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
  };
}

module.exports = function (scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
  var updater = {
    isMounted: isMounted,
    enqueueSetState: function enqueueSetState(instance, partialState, callback) {
      var fiber = ReactInstanceMap.get(instance);
      var priorityLevel = getPriorityContext();
      callback = callback === undefined ? null : callback;
      if (__DEV__) {
        warnOnInvalidCallback(callback, 'setState');
      }
      addUpdate(fiber, partialState, callback, priorityLevel);
      scheduleUpdate(fiber, priorityLevel);
    },
    enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
      var fiber = ReactInstanceMap.get(instance);
      var priorityLevel = getPriorityContext();
      callback = callback === undefined ? null : callback;
      if (__DEV__) {
        warnOnInvalidCallback(callback, 'replaceState');
      }
      addReplaceUpdate(fiber, state, callback, priorityLevel);
      scheduleUpdate(fiber, priorityLevel);
    },
    enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
      var fiber = ReactInstanceMap.get(instance);
      var priorityLevel = getPriorityContext();
      callback = callback === undefined ? null : callback;
      if (__DEV__) {
        warnOnInvalidCallback(callback, 'forceUpdate');
      }
      addForceUpdate(fiber, callback, priorityLevel);
      scheduleUpdate(fiber, priorityLevel);
    }
  };

  function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
    if (oldProps === null || workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate) {
      return true;
    }

    var instance = workInProgress.stateNode;
    if (typeof instance.shouldComponentUpdate === 'function') {
      if (__DEV__) {
        startPhaseTimer(workInProgress, 'shouldComponentUpdate');
      }
      var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
      if (__DEV__) {
        stopPhaseTimer();
      }

      if (__DEV__) {
        warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Unknown');
      }

      return shouldUpdate;
    }

    var type = workInProgress.type;
    if (type.prototype && type.prototype.isPureReactComponent) {
      return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
    }

    return true;
  }

  function checkClassInstance(workInProgress) {
    var instance = workInProgress.stateNode;
    if (__DEV__) {
      var name = getComponentName(workInProgress);
      var renderPresent = instance.render;
      warning(renderPresent, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
      warning(noGetInitialStateOnES6, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
      var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
      warning(noGetDefaultPropsOnES6, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
      var noInstancePropTypes = !instance.propTypes;
      warning(noInstancePropTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
      var noInstanceContextTypes = !instance.contextTypes;
      warning(noInstanceContextTypes, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
      var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
      warning(noComponentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
      var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
      warning(noComponentDidUnmount, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
      var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
      warning(noComponentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
      var hasMutatedProps = instance.props !== workInProgress.pendingProps;
      warning(instance.props === undefined || !hasMutatedProps, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
    }

    var state = instance.state;
    if (state && (typeof state !== 'object' || isArray(state))) {
      invariant(false, '%s.state: must be set to an object or null', getComponentName(workInProgress));
    }
    if (typeof instance.getChildContext === 'function') {
      invariant(typeof workInProgress.type.childContextTypes === 'object', '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', getComponentName(workInProgress));
    }
  }

  function resetInputPointers(workInProgress, instance) {
    instance.props = workInProgress.memoizedProps;
    instance.state = workInProgress.memoizedState;
  }

  function adoptClassInstance(workInProgress, instance) {
    instance.updater = updater;
    workInProgress.stateNode = instance;

    ReactInstanceMap.set(instance, workInProgress);
  }

  function constructClassInstance(workInProgress) {
    var ctor = workInProgress.type;
    var props = workInProgress.pendingProps;
    var unmaskedContext = getUnmaskedContext(workInProgress);
    var needsContext = isContextConsumer(workInProgress);
    var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;
    var instance = new ctor(props, context);
    adoptClassInstance(workInProgress, instance);
    checkClassInstance(workInProgress);

    if (needsContext) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return instance;
  }

  function mountClassInstance(workInProgress, priorityLevel) {
    var instance = workInProgress.stateNode;
    var state = instance.state || null;

    var props = workInProgress.pendingProps;
    invariant(props, 'There must be pending props for an initial mount. This error is ' + 'likely caused by a bug in React. Please file an issue.');

    var unmaskedContext = getUnmaskedContext(workInProgress);

    instance.props = props;
    instance.state = state;
    instance.refs = emptyObject;
    instance.context = getMaskedContext(workInProgress, unmaskedContext);

    if (typeof instance.componentWillMount === 'function') {
      if (__DEV__) {
        startPhaseTimer(workInProgress, 'componentWillMount');
      }
      instance.componentWillMount();
      if (__DEV__) {
        stopPhaseTimer();
      }

      var updateQueue = workInProgress.updateQueue;
      if (updateQueue !== null) {
        instance.state = beginUpdateQueue(workInProgress, updateQueue, instance, state, props, priorityLevel);
      }
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  }

  function resumeMountClassInstance(workInProgress, priorityLevel) {
    var instance = workInProgress.stateNode;
    resetInputPointers(workInProgress, instance);

    var newState = workInProgress.memoizedState;
    var newProps = workInProgress.pendingProps;
    if (!newProps) {
      newProps = workInProgress.memoizedProps;
      invariant(newProps != null, 'There should always be pending or memoized props. This error is ' + 'likely caused by a bug in React. Please file an issue.');
    }
    var newUnmaskedContext = getUnmaskedContext(workInProgress);
    var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

    if (!checkShouldComponentUpdate(workInProgress, workInProgress.memoizedProps, newProps, workInProgress.memoizedState, newState, newContext)) {
      instance.props = newProps;
      instance.state = newState;
      instance.context = newContext;
      return false;
    }

    var newInstance = constructClassInstance(workInProgress);
    newInstance.props = newProps;
    newInstance.state = newState = newInstance.state || null;
    newInstance.context = newContext;

    if (typeof newInstance.componentWillMount === 'function') {
      if (__DEV__) {
        startPhaseTimer(workInProgress, 'componentWillMount');
      }
      newInstance.componentWillMount();
      if (__DEV__) {
        stopPhaseTimer();
      }
    }

    var newUpdateQueue = workInProgress.updateQueue;
    if (newUpdateQueue !== null) {
      newInstance.state = beginUpdateQueue(workInProgress, newUpdateQueue, newInstance, newState, newProps, priorityLevel);
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
    return true;
  }

  function updateClassInstance(current, workInProgress, priorityLevel) {
    var instance = workInProgress.stateNode;
    resetInputPointers(workInProgress, instance);

    var oldProps = workInProgress.memoizedProps;
    var newProps = workInProgress.pendingProps;
    if (!newProps) {
      newProps = oldProps;
      invariant(newProps != null, 'There should always be pending or memoized props. This error is ' + 'likely caused by a bug in React. Please file an issue.');
    }
    var oldContext = instance.context;
    var newUnmaskedContext = getUnmaskedContext(workInProgress);
    var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

    if (oldProps !== newProps || oldContext !== newContext) {
      if (typeof instance.componentWillReceiveProps === 'function') {
        if (__DEV__) {
          startPhaseTimer(workInProgress, 'componentWillReceiveProps');
        }
        instance.componentWillReceiveProps(newProps, newContext);
        if (__DEV__) {
          stopPhaseTimer();
        }

        if (instance.state !== workInProgress.memoizedState) {
          if (__DEV__) {
            warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress));
          }
          updater.enqueueReplaceState(instance, instance.state, null);
        }
      }
    }

    var updateQueue = workInProgress.updateQueue;
    var oldState = workInProgress.memoizedState;

    var newState = void 0;
    if (updateQueue !== null) {
      newState = beginUpdateQueue(workInProgress, updateQueue, instance, oldState, newProps, priorityLevel);
    } else {
      newState = oldState;
    }

    if (oldProps === newProps && oldState === newState && !hasContextChanged() && !(updateQueue !== null && updateQueue.hasForceUpdate)) {
      if (typeof instance.componentDidUpdate === 'function') {
        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
          workInProgress.effectTag |= Update;
        }
      }
      return false;
    }

    var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

    if (shouldUpdate) {
      if (typeof instance.componentWillUpdate === 'function') {
        if (__DEV__) {
          startPhaseTimer(workInProgress, 'componentWillUpdate');
        }
        instance.componentWillUpdate(newProps, newState, newContext);
        if (__DEV__) {
          stopPhaseTimer();
        }
      }
      if (typeof instance.componentDidUpdate === 'function') {
        workInProgress.effectTag |= Update;
      }
    } else {
      if (typeof instance.componentDidUpdate === 'function') {
        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
          workInProgress.effectTag |= Update;
        }
      }

      memoizeProps(workInProgress, newProps);
      memoizeState(workInProgress, newState);
    }

    instance.props = newProps;
    instance.state = newState;
    instance.context = newContext;

    return shouldUpdate;
  }

  return {
    adoptClassInstance: adoptClassInstance,
    constructClassInstance: constructClassInstance,
    mountClassInstance: mountClassInstance,
    resumeMountClassInstance: resumeMountClassInstance,
    updateClassInstance: updateClassInstance
  };
};
}, 114, null, "ReactFiberClassComponent");
__d(/* fbjs/lib/shallowEqual.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}, 115, null, "fbjs/lib/shallowEqual.js");
__d(/* ReactFiberCompleteWork */function(global, require, module, exports) {

'use strict';

var _require = require(108              ), // 108 = ReactChildFiber
    reconcileChildFibers = _require.reconcileChildFibers;

var _require2 = require(93                 ), // 93 = ReactFiberContext
    popContextProvider = _require2.popContextProvider;

var ReactTypeOfWork = require(97               ); // 97 = ReactTypeOfWork
var ReactTypeOfSideEffect = require(91                     ); // 91 = ReactTypeOfSideEffect
var IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot,
    HostComponent = ReactTypeOfWork.HostComponent,
    HostText = ReactTypeOfWork.HostText,
    HostPortal = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent = ReactTypeOfWork.YieldComponent,
    Fragment = ReactTypeOfWork.Fragment;
var Ref = ReactTypeOfSideEffect.Ref,
    Update = ReactTypeOfSideEffect.Update;


if (__DEV__) {
  var ReactDebugCurrentFiber = require(100                     ); // 100 = ReactDebugCurrentFiber
}

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

module.exports = function (config, hostContext) {
  var createInstance = config.createInstance,
      createTextInstance = config.createTextInstance,
      appendInitialChild = config.appendInitialChild,
      finalizeInitialChildren = config.finalizeInitialChildren,
      prepareUpdate = config.prepareUpdate;
  var getRootHostContainer = hostContext.getRootHostContainer,
      popHostContext = hostContext.popHostContext,
      getHostContext = hostContext.getHostContext,
      popHostContainer = hostContext.popHostContainer;


  function markChildAsProgressed(current, workInProgress, priorityLevel) {
    workInProgress.progressedChild = workInProgress.child;
    workInProgress.progressedPriority = priorityLevel;
    if (current !== null) {
      current.progressedChild = workInProgress.progressedChild;
      current.progressedPriority = workInProgress.progressedPriority;
    }
  }

  function markUpdate(workInProgress) {
    workInProgress.effectTag |= Update;
  }

  function markRef(workInProgress) {
    workInProgress.effectTag |= Ref;
  }

  function appendAllYields(yields, workInProgress) {
    var node = workInProgress.stateNode;
    if (node) {
      node.return = workInProgress;
    }
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText || node.tag === HostPortal) {
        invariant(false, 'A coroutine cannot have host component children.');
      } else if (node.tag === YieldComponent) {
        yields.push(node.type);
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function moveCoroutineToHandlerPhase(current, workInProgress) {
    var coroutine = workInProgress.memoizedProps;
    invariant(coroutine, 'Should be resolved by now. This error is likely caused by a bug in ' + 'React. Please file an issue.');

    workInProgress.tag = CoroutineHandlerPhase;

    var yields = [];
    appendAllYields(yields, workInProgress);
    var fn = coroutine.handler;
    var props = coroutine.props;
    var nextChildren = fn(props, yields);

    var currentFirstChild = current !== null ? current.child : null;

    var priority = workInProgress.pendingWorkPriority;
    workInProgress.child = reconcileChildFibers(workInProgress, currentFirstChild, nextChildren, priority);
    markChildAsProgressed(current, workInProgress, priority);
    return workInProgress.child;
  }

  function appendAllChildren(parent, workInProgress) {
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) {} else if (node.child !== null) {
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node = node.sibling;
    }
  }

  function completeWork(current, workInProgress) {
    if (__DEV__) {
      ReactDebugCurrentFiber.current = workInProgress;
    }

    switch (workInProgress.tag) {
      case FunctionalComponent:
        return null;
      case ClassComponent:
        {
          popContextProvider(workInProgress);
          return null;
        }
      case HostRoot:
        {
          var fiberRoot = workInProgress.stateNode;
          if (fiberRoot.pendingContext) {
            fiberRoot.context = fiberRoot.pendingContext;
            fiberRoot.pendingContext = null;
          }
          return null;
        }
      case HostComponent:
        {
          popHostContext(workInProgress);
          var rootContainerInstance = getRootHostContainer();
          var type = workInProgress.type;
          var newProps = workInProgress.memoizedProps;
          if (current !== null && workInProgress.stateNode != null) {
            var oldProps = current.memoizedProps;

            var instance = workInProgress.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

            workInProgress.updateQueue = updatePayload;

            if (updatePayload) {
              markUpdate(workInProgress);
            }
            if (current.ref !== workInProgress.ref) {
              markRef(workInProgress);
            }
          } else {
            if (!newProps) {
              invariant(workInProgress.stateNode !== null, 'We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');

              return null;
            }

            var _currentHostContext = getHostContext();

            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

            appendAllChildren(_instance, workInProgress);

            if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance)) {
              markUpdate(workInProgress);
            }

            workInProgress.stateNode = _instance;
            if (workInProgress.ref !== null) {
              markRef(workInProgress);
            }
          }
          return null;
        }
      case HostText:
        {
          var newText = workInProgress.memoizedProps;
          if (current && workInProgress.stateNode != null) {
            var oldText = current.memoizedProps;

            if (oldText !== newText) {
              markUpdate(workInProgress);
            }
          } else {
            if (typeof newText !== 'string') {
              invariant(workInProgress.stateNode !== null, 'We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');

              return null;
            }
            var _rootContainerInstance = getRootHostContainer();
            var _currentHostContext2 = getHostContext();
            var textInstance = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
            workInProgress.stateNode = textInstance;
          }
          return null;
        }
      case CoroutineComponent:
        return moveCoroutineToHandlerPhase(current, workInProgress);
      case CoroutineHandlerPhase:
        workInProgress.tag = CoroutineComponent;
        return null;
      case YieldComponent:
        return null;
      case Fragment:
        return null;
      case HostPortal:
        markUpdate(workInProgress);
        popHostContainer(workInProgress);
        return null;

      case IndeterminateComponent:
        invariant(false, 'An indeterminate component should have become determinate before ' + 'completing. This error is likely caused by a bug in React. Please ' + 'file an issue.');

      default:
        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in ' + 'React. Please file an issue.');
    }
  }

  return {
    completeWork: completeWork
  };
};
}, 116, null, "ReactFiberCompleteWork");
__d(/* ReactFiberCommitWork */function(global, require, module, exports) {

'use strict';

var ReactTypeOfWork = require(97               ); // 97 = ReactTypeOfWork
var ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot,
    HostComponent = ReactTypeOfWork.HostComponent,
    HostText = ReactTypeOfWork.HostText,
    HostPortal = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent;

var _require = require(90                     ), // 90 = ReactFiberUpdateQueue
    commitCallbacks = _require.commitCallbacks;

var _require2 = require(118                     ), // 118 = ReactFiberDevToolsHook
    onCommitUnmount = _require2.onCommitUnmount;

var _require3 = require(106              ), // 106 = ReactErrorUtils
    invokeGuardedCallback = _require3.invokeGuardedCallback;

var _require4 = require(91                     ), // 91 = ReactTypeOfSideEffect
    Placement = _require4.Placement,
    Update = _require4.Update,
    Callback = _require4.Callback,
    ContentReset = _require4.ContentReset;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

if (__DEV__) {
  var _require5 = require(102                  ), // 102 = ReactDebugFiberPerf
      startPhaseTimer = _require5.startPhaseTimer,
      stopPhaseTimer = _require5.stopPhaseTimer;
}

module.exports = function (config, captureError) {
  var commitMount = config.commitMount,
      commitUpdate = config.commitUpdate,
      resetTextContent = config.resetTextContent,
      commitTextUpdate = config.commitTextUpdate,
      appendChild = config.appendChild,
      insertBefore = config.insertBefore,
      removeChild = config.removeChild,
      getPublicInstance = config.getPublicInstance;


  if (__DEV__) {
    var callComponentWillUnmountWithTimerInDev = function callComponentWillUnmountWithTimerInDev(current, instance) {
      startPhaseTimer(current, 'componentWillUnmount');
      instance.componentWillUnmount();
      stopPhaseTimer();
    };
  }

  function safelyCallComponentWillUnmount(current, instance) {
    if (__DEV__) {
      var unmountError = invokeGuardedCallback(null, callComponentWillUnmountWithTimerInDev, null, current, instance);
      if (unmountError) {
        captureError(current, unmountError);
      }
    } else {
      try {
        instance.componentWillUnmount();
      } catch (unmountError) {
        captureError(current, unmountError);
      }
    }
  }

  function safelyDetachRef(current) {
    var ref = current.ref;
    if (ref !== null) {
      if (__DEV__) {
        var refError = invokeGuardedCallback(null, ref, null, null);
        if (refError !== null) {
          captureError(current, refError);
        }
      } else {
        try {
          ref(null);
        } catch (refError) {
          captureError(current, refError);
        }
      }
    }
  }

  function getHostParent(fiber) {
    var parent = fiber.return;
    while (parent !== null) {
      switch (parent.tag) {
        case HostComponent:
          return parent.stateNode;
        case HostRoot:
          return parent.stateNode.containerInfo;
        case HostPortal:
          return parent.stateNode.containerInfo;
      }
      parent = parent.return;
    }
    invariant(false, 'Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');
  }

  function getHostParentFiber(fiber) {
    var parent = fiber.return;
    while (parent !== null) {
      if (isHostParent(parent)) {
        return parent;
      }
      parent = parent.return;
    }
    invariant(false, 'Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');
  }

  function isHostParent(fiber) {
    return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
  }

  function getHostSibling(fiber) {
    var node = fiber;
    siblings: while (true) {
      while (node.sibling === null) {
        if (node.return === null || isHostParent(node.return)) {
          return null;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
      while (node.tag !== HostComponent && node.tag !== HostText) {
        if (node.effectTag & Placement) {
          continue siblings;
        }

        if (node.child === null || node.tag === HostPortal) {
          continue siblings;
        } else {
          node.child.return = node;
          node = node.child;
        }
      }

      if (!(node.effectTag & Placement)) {
        return node.stateNode;
      }
    }
  }

  function commitPlacement(finishedWork) {
    var parentFiber = getHostParentFiber(finishedWork);
    var parent = void 0;
    switch (parentFiber.tag) {
      case HostComponent:
        parent = parentFiber.stateNode;
        break;
      case HostRoot:
        parent = parentFiber.stateNode.containerInfo;
        break;
      case HostPortal:
        parent = parentFiber.stateNode.containerInfo;
        break;
      default:
        invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug ' + 'in React. Please file an issue.');
    }
    if (parentFiber.effectTag & ContentReset) {
      resetTextContent(parent);

      parentFiber.effectTag &= ~ContentReset;
    }

    var before = getHostSibling(finishedWork);

    var node = finishedWork;
    while (true) {
      if (node.tag === HostComponent || node.tag === HostText) {
        if (before) {
          insertBefore(parent, node.stateNode, before);
        } else {
          appendChild(parent, node.stateNode);
        }
      } else if (node.tag === HostPortal) {} else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === finishedWork) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitNestedUnmounts(root) {
    var node = root;
    while (true) {
      commitUnmount(node);

      if (node.child !== null && node.tag !== HostPortal) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === root) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === root) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(parent, current) {
    var node = current;
    while (true) {
      if (node.tag === HostComponent || node.tag === HostText) {
        commitNestedUnmounts(node);

        removeChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) {
        parent = node.stateNode.containerInfo;

        if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else {
        commitUnmount(node);

        if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }
      if (node === current) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === current) {
          return;
        }
        node = node.return;
        if (node.tag === HostPortal) {
          parent = getHostParent(node);
        }
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitDeletion(current) {
    var parent = getHostParent(current);

    unmountHostComponents(parent, current);

    current.return = null;
    current.child = null;
    if (current.alternate) {
      current.alternate.child = null;
      current.alternate.return = null;
    }
  }

  function commitUnmount(current) {
    if (typeof onCommitUnmount === 'function') {
      onCommitUnmount(current);
    }

    switch (current.tag) {
      case ClassComponent:
        {
          safelyDetachRef(current);
          var instance = current.stateNode;
          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(current, instance);
          }
          return;
        }
      case HostComponent:
        {
          safelyDetachRef(current);
          return;
        }
      case CoroutineComponent:
        {
          commitNestedUnmounts(current.stateNode);
          return;
        }
      case HostPortal:
        {
          var parent = getHostParent(current);
          unmountHostComponents(parent, current);
          return;
        }
    }
  }

  function commitWork(current, finishedWork) {
    switch (finishedWork.tag) {
      case ClassComponent:
        {
          return;
        }
      case HostComponent:
        {
          var instance = finishedWork.stateNode;
          if (instance != null && current !== null) {
            var newProps = finishedWork.memoizedProps;
            var oldProps = current.memoizedProps;
            var type = finishedWork.type;

            var updatePayload = finishedWork.updateQueue;
            finishedWork.updateQueue = null;
            if (updatePayload !== null) {
              commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
            }
          }
          return;
        }
      case HostText:
        {
          invariant(finishedWork.stateNode !== null && current !== null, 'This should only be done during updates. This error is likely ' + 'caused by a bug in React. Please file an issue.');
          var textInstance = finishedWork.stateNode;
          var newText = finishedWork.memoizedProps;
          var oldText = current.memoizedProps;
          commitTextUpdate(textInstance, oldText, newText);
          return;
        }
      case HostRoot:
        {
          return;
        }
      case HostPortal:
        {
          return;
        }
      default:
        {
          invariant(false, 'This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');
        }
    }
  }

  function commitLifeCycles(current, finishedWork) {
    switch (finishedWork.tag) {
      case ClassComponent:
        {
          var instance = finishedWork.stateNode;
          if (finishedWork.effectTag & Update) {
            if (current === null) {
              if (__DEV__) {
                startPhaseTimer(finishedWork, 'componentDidMount');
              }
              instance.componentDidMount();
              if (__DEV__) {
                stopPhaseTimer();
              }
            } else {
              var prevProps = current.memoizedProps;
              var prevState = current.memoizedState;
              if (__DEV__) {
                startPhaseTimer(finishedWork, 'componentDidUpdate');
              }
              instance.componentDidUpdate(prevProps, prevState);
              if (__DEV__) {
                stopPhaseTimer();
              }
            }
          }
          if (finishedWork.effectTag & Callback && finishedWork.updateQueue !== null) {
            commitCallbacks(finishedWork, finishedWork.updateQueue, instance);
          }
          return;
        }
      case HostRoot:
        {
          var updateQueue = finishedWork.updateQueue;
          if (updateQueue !== null) {
            var _instance = finishedWork.child && finishedWork.child.stateNode;
            commitCallbacks(finishedWork, updateQueue, _instance);
          }
          return;
        }
      case HostComponent:
        {
          var _instance2 = finishedWork.stateNode;

          if (current === null && finishedWork.effectTag & Update) {
            var type = finishedWork.type;
            var props = finishedWork.memoizedProps;
            commitMount(_instance2, type, props, finishedWork);
          }

          return;
        }
      case HostText:
        {
          return;
        }
      case HostPortal:
        {
          return;
        }
      default:
        {
          invariant(false, 'This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');
        }
    }
  }

  function commitAttachRef(finishedWork) {
    var ref = finishedWork.ref;
    if (ref !== null) {
      var instance = getPublicInstance(finishedWork.stateNode);
      ref(instance);
    }
  }

  function commitDetachRef(current) {
    var currentRef = current.ref;
    if (currentRef !== null) {
      currentRef(null);
    }
  }

  return {
    commitPlacement: commitPlacement,
    commitDeletion: commitDeletion,
    commitWork: commitWork,
    commitLifeCycles: commitLifeCycles,
    commitAttachRef: commitAttachRef,
    commitDetachRef: commitDetachRef
  };
};
}, 117, null, "ReactFiberCommitWork");
__d(/* ReactFiberDevToolsHook */function(global, require, module, exports) {

'use strict';

var warning = require(19                ); // 19 = fbjs/lib/warning

var rendererID = null;
var injectInternals = null;
var onCommitRoot = null;
var onCommitUnmount = null;
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && __REACT_DEVTOOLS_GLOBAL_HOOK__.supportsFiber) {
  var inject = __REACT_DEVTOOLS_GLOBAL_HOOK__.inject,
      onCommitFiberRoot = __REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberRoot,
      onCommitFiberUnmount = __REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberUnmount;


  injectInternals = function injectInternals(internals) {
    warning(rendererID == null, 'Cannot inject into DevTools twice.');
    rendererID = inject(internals);
  };

  onCommitRoot = function onCommitRoot(root) {
    if (rendererID == null) {
      return;
    }
    try {
      onCommitFiberRoot(rendererID, root);
    } catch (err) {
      if (__DEV__) {
        warning(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };

  onCommitUnmount = function onCommitUnmount(fiber) {
    if (rendererID == null) {
      return;
    }
    try {
      onCommitFiberUnmount(rendererID, fiber);
    } catch (err) {
      if (__DEV__) {
        warning(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };
}

exports.injectInternals = injectInternals;
exports.onCommitRoot = onCommitRoot;
exports.onCommitUnmount = onCommitUnmount;
}, 118, null, "ReactFiberDevToolsHook");
__d(/* ReactFiberHostContext */function(global, require, module, exports) {

'use strict';

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject

var _require = require(98               ), // 98 = ReactFiberStack
    createCursor = _require.createCursor,
    pop = _require.pop,
    push = _require.push;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

module.exports = function (config) {
  var getChildHostContext = config.getChildHostContext,
      getRootHostContext = config.getRootHostContext;


  var contextStackCursor = createCursor(null);
  var contextFiberStackCursor = createCursor(null);
  var rootInstanceStackCursor = createCursor(null);

  function getRootHostContainer() {
    var rootInstance = rootInstanceStackCursor.current;
    invariant(rootInstance !== null, 'Expected root container to exist. This error is likely caused by a ' + 'bug in React. Please file an issue.');
    return rootInstance;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);

    var nextRootContext = getRootHostContext(nextRootInstance);

    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor, nextRootContext, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function getHostContext() {
    var context = contextStackCursor.current;
    invariant(context != null, 'Expected host context to exist. This error is likely caused by a bug ' + 'in React. Please file an issue.');
    return context;
  }

  function pushHostContext(fiber) {
    var rootInstance = rootInstanceStackCursor.current;
    invariant(rootInstance != null, 'Expected root host context to exist. This error is likely caused by ' + 'a bug in React. Please file an issue.');

    var context = contextStackCursor.current !== null ? contextStackCursor.current : emptyObject;
    var nextContext = getChildHostContext(context, fiber.type, rootInstance);

    if (context === nextContext) {
      return;
    }

    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor, nextContext, fiber);
  }

  function popHostContext(fiber) {
    if (contextFiberStackCursor.current !== fiber) {
      return;
    }

    pop(contextStackCursor, fiber);
    pop(contextFiberStackCursor, fiber);
  }

  function resetHostContainer() {
    contextStackCursor.current = null;
    rootInstanceStackCursor.current = null;
  }

  return {
    getHostContext: getHostContext,
    getRootHostContainer: getRootHostContainer,
    popHostContainer: popHostContainer,
    popHostContext: popHostContext,
    pushHostContainer: pushHostContainer,
    pushHostContext: pushHostContext,
    resetHostContainer: resetHostContainer
  };
};
}, 119, null, "ReactFiberHostContext");
__d(/* ReactFiberInstrumentation */function(global, require, module, exports) {

'use strict';

var ReactFiberInstrumentation = {
  debugTool: null
};

module.exports = ReactFiberInstrumentation;
}, 120, null, "ReactFiberInstrumentation");
__d(/* getContextForSubtree */function(global, require, module, exports) {

var ReactInstanceMap = require(96                ); // 96 = ReactInstanceMap

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var getContextFiber = function getContextFiber(arg) {
  invariant(false, 'Missing injection for fiber getContextForSubtree');
};

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyObject;
  }

  var instance = ReactInstanceMap.get(parentComponent);
  if (typeof instance.tag === 'number') {
    return getContextFiber(instance);
  } else {
    return instance._processChildContext(instance._context);
  }
}

getContextForSubtree._injectFiber = function (fn) {
  getContextFiber = fn;
};

module.exports = getContextForSubtree;
}, 121, null, "getContextForSubtree");
__d(/* ReactGenericBatching */function(global, require, module, exports) {

'use strict';

var ReactControlledComponent = require(123                       ); // 123 = ReactControlledComponent

var stackBatchedUpdates = function stackBatchedUpdates(fn, a, b, c, d, e) {
  return fn(a, b, c, d, e);
};
var fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
  return fn(bookkeeping);
};

function performFiberBatchedUpdates(fn, bookkeeping) {
  return fiberBatchedUpdates(fn, bookkeeping);
}
function batchedUpdates(fn, bookkeeping) {
  return stackBatchedUpdates(performFiberBatchedUpdates, fn, bookkeeping);
}

var isNestingBatched = false;
function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
  if (isNestingBatched) {
    return batchedUpdates(fn, bookkeeping);
  }
  isNestingBatched = true;
  try {
    return batchedUpdates(fn, bookkeeping);
  } finally {
    isNestingBatched = false;
    ReactControlledComponent.restoreStateIfNeeded();
  }
}

var ReactGenericBatchingInjection = {
  injectStackBatchedUpdates: function injectStackBatchedUpdates(_batchedUpdates) {
    stackBatchedUpdates = _batchedUpdates;
  },
  injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
    fiberBatchedUpdates = _batchedUpdates;
  }
};

var ReactGenericBatching = {
  batchedUpdates: batchedUpdatesWithControlledComponents,
  injection: ReactGenericBatchingInjection
};

module.exports = ReactGenericBatching;
}, 122, null, "ReactGenericBatching");
__d(/* ReactControlledComponent */function(global, require, module, exports) {

'use strict';

var EventPluginUtils = require(124               ); // 124 = EventPluginUtils

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var fiberHostComponent = null;

var ReactControlledComponentInjection = {
  injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
    fiberHostComponent = hostComponentImpl;
  }
};

var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  var internalInstance = EventPluginUtils.getInstanceFromNode(target);
  if (!internalInstance) {
    return;
  }
  if (typeof internalInstance.tag === 'number') {
    invariant(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function', 'Fiber needs to be injected to handle a fiber target for controlled ' + 'events.');
    var props = EventPluginUtils.getFiberCurrentPropsFromNode(internalInstance.stateNode);
    fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
    return;
  }
  invariant(typeof internalInstance.restoreControlledState === 'function', 'The internal instance must be a React host component.');

  internalInstance.restoreControlledState();
}

var ReactControlledComponent = {
  injection: ReactControlledComponentInjection,

  enqueueStateRestore: function enqueueStateRestore(target) {
    if (restoreTarget) {
      if (restoreQueue) {
        restoreQueue.push(target);
      } else {
        restoreQueue = [target];
      }
    } else {
      restoreTarget = target;
    }
  },
  restoreStateIfNeeded: function restoreStateIfNeeded() {
    if (!restoreTarget) {
      return;
    }
    var target = restoreTarget;
    var queuedTargets = restoreQueue;
    restoreTarget = null;
    restoreQueue = null;

    restoreStateOfTarget(target);
    if (queuedTargets) {
      for (var i = 0; i < queuedTargets.length; i++) {
        restoreStateOfTarget(queuedTargets[i]);
      }
    }
  }
};

module.exports = ReactControlledComponent;
}, 123, null, "ReactControlledComponent");
__d(/* EventPluginUtils */function(global, require, module, exports) {

'use strict';

var ReactErrorUtils = require(106              ); // 106 = ReactErrorUtils

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var ComponentTree;
var injection = {
  injectComponentTree: function injectComponentTree(Injected) {
    ComponentTree = Injected;
    if (__DEV__) {
      warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.');
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (__DEV__) {
  validateEventDispatches = function validateEventDispatches(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.');
  };
}

function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (__DEV__) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }

      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (__DEV__) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }

      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

function executeDirectDispatch(event) {
  if (__DEV__) {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  invariant(!Array.isArray(dispatchListener), 'executeDirectDispatch(...): Invalid `event`.');
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

function hasDispatches(event) {
  return !!event._dispatchListeners;
}

var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
    return ComponentTree.getFiberCurrentPropsFromNode(node);
  },
  getInstanceFromNode: function getInstanceFromNode(node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function getNodeFromInstance(node) {
    return ComponentTree.getNodeFromInstance(node);
  },

  injection: injection
};

module.exports = EventPluginUtils;
}, 124, null, "EventPluginUtils");
__d(/* ReactNativeAttributePayload */function(global, require, module, exports) {
'use strict';

var ReactNativePropRegistry = require(126                      ); // 126 = ReactNativePropRegistry

var deepDiffer = require(127         ); // 127 = deepDiffer
var flattenStyle = require(128           ); // 128 = flattenStyle

var emptyObject = {};

var removedKeys = null;
var removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
  if (typeof nextProp !== 'object' || nextProp === null) {
    return true;
  } else {
    return deepDiffer(prevProp, nextProp);
  }
}

function resolveObject(idOrObject) {
  if (typeof idOrObject === 'number') {
    return ReactNativePropRegistry.getByID(idOrObject);
  }
  return idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
  if (Array.isArray(node)) {
    var i = node.length;
    while (i-- && removedKeyCount > 0) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    }
  } else if (node && removedKeyCount > 0) {
    var obj = resolveObject(node);
    for (var propKey in removedKeys) {
      if (!removedKeys[propKey]) {
        continue;
      }
      var nextProp = obj[propKey];
      if (nextProp === undefined) {
        continue;
      }

      var attributeConfig = validAttributes[propKey];
      if (!attributeConfig) {
        continue;
      }

      if (typeof nextProp === 'function') {
        nextProp = true;
      }
      if (typeof nextProp === 'undefined') {
        nextProp = null;
      }

      if (typeof attributeConfig !== 'object') {
        updatePayload[propKey] = nextProp;
      } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
        var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
        updatePayload[propKey] = nextValue;
      }
      removedKeys[propKey] = false;
      removedKeyCount--;
    }
  }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
  var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
  var i;
  for (i = 0; i < minLength; i++) {
    updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
  }
  for (; i < prevArray.length; i++) {
    updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
  }
  for (; i < nextArray.length; i++) {
    updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
  }
  return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
  if (!updatePayload && prevProp === nextProp) {
    return updatePayload;
  }

  if (!prevProp || !nextProp) {
    if (nextProp) {
      return addNestedProperty(updatePayload, nextProp, validAttributes);
    }
    if (prevProp) {
      return clearNestedProperty(updatePayload, prevProp, validAttributes);
    }
    return updatePayload;
  }

  if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {
    return diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes);
  }

  if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
    return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);
  }

  if (Array.isArray(prevProp)) {
    return diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes);
  }

  return diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes);
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
  if (!nextProp) {
    return updatePayload;
  }

  if (!Array.isArray(nextProp)) {
    return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
  }

  for (var i = 0; i < nextProp.length; i++) {
    updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
  }

  return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
  if (!prevProp) {
    return updatePayload;
  }

  if (!Array.isArray(prevProp)) {
    return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
  }

  for (var i = 0; i < prevProp.length; i++) {
    updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
  }
  return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
  var attributeConfig;
  var nextProp;
  var prevProp;

  for (var propKey in nextProps) {
    attributeConfig = validAttributes[propKey];
    if (!attributeConfig) {
      continue;
    }

    prevProp = prevProps[propKey];
    nextProp = nextProps[propKey];

    if (typeof nextProp === 'function') {
      nextProp = true;

      if (typeof prevProp === 'function') {
        prevProp = true;
      }
    }

    if (typeof nextProp === 'undefined') {
      nextProp = null;
      if (typeof prevProp === 'undefined') {
        prevProp = null;
      }
    }

    if (removedKeys) {
      removedKeys[propKey] = false;
    }

    if (updatePayload && updatePayload[propKey] !== undefined) {
      if (typeof attributeConfig !== 'object') {
        updatePayload[propKey] = nextProp;
      } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
        var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
        updatePayload[propKey] = nextValue;
      }
      continue;
    }

    if (prevProp === nextProp) {
      continue;
    }

    if (typeof attributeConfig !== 'object') {
      if (defaultDiffer(prevProp, nextProp)) {
        (updatePayload || (updatePayload = {}))[propKey] = nextProp;
      }
    } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
      var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === 'function' ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
      if (shouldUpdate) {
        nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
        (updatePayload || (updatePayload = {}))[propKey] = nextValue;
      }
    } else {
      removedKeys = null;
      removedKeyCount = 0;

      updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);
      if (removedKeyCount > 0 && updatePayload) {
        restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);
        removedKeys = null;
      }
    }
  }

  for (propKey in prevProps) {
    if (nextProps[propKey] !== undefined) {
      continue;
    }
    attributeConfig = validAttributes[propKey];
    if (!attributeConfig) {
      continue;
    }

    if (updatePayload && updatePayload[propKey] !== undefined) {
      continue;
    }

    prevProp = prevProps[propKey];
    if (prevProp === undefined) {
      continue;
    }

    if (typeof attributeConfig !== 'object' || typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
      (updatePayload || (updatePayload = {}))[propKey] = null;
      if (!removedKeys) {
        removedKeys = {};
      }
      if (!removedKeys[propKey]) {
        removedKeys[propKey] = true;
        removedKeyCount++;
      }
    } else {
      updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);
    }
  }
  return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
  return diffProperties(updatePayload, emptyObject, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);
}

var ReactNativeAttributePayload = {
  create: function create(props, validAttributes) {
    return addProperties(null, props, validAttributes);
  },

  diff: function diff(prevProps, nextProps, validAttributes) {
    return diffProperties(null, prevProps, nextProps, validAttributes);
  }
};

module.exports = ReactNativeAttributePayload;
}, 125, null, "ReactNativeAttributePayload");
__d(/* ReactNativePropRegistry */function(global, require, module, exports) {
'use strict';

var objects = {};
var uniqueID = 1;
var emptyObject = {};

var ReactNativePropRegistry = function () {
  function ReactNativePropRegistry() {
    babelHelpers.classCallCheck(this, ReactNativePropRegistry);
  }

  babelHelpers.createClass(ReactNativePropRegistry, null, [{
    key: 'register',
    value: function register(object) {
      var id = ++uniqueID;
      if (__DEV__) {
        Object.freeze(object);
      }
      objects[id] = object;
      return id;
    }
  }, {
    key: 'getByID',
    value: function getByID(id) {
      if (!id) {
        return emptyObject;
      }

      var object = objects[id];
      if (!object) {
        console.warn('Invalid style with id `' + id + '`. Skipping ...');
        return emptyObject;
      }
      return object;
    }
  }]);
  return ReactNativePropRegistry;
}();

module.exports = ReactNativePropRegistry;
}, 126, null, "ReactNativePropRegistry");
__d(/* deepDiffer */function(global, require, module, exports) {
'use strict';

var deepDiffer = function deepDiffer(one, two) {
  if (one === two) {
    return false;
  }
  if (typeof one === 'function' && typeof two === 'function') {
    return false;
  }
  if (typeof one !== 'object' || one === null) {
    return one !== two;
  }
  if (typeof two !== 'object' || two === null) {
    return true;
  }
  if (one.constructor !== two.constructor) {
    return true;
  }
  if (Array.isArray(one)) {
    var len = one.length;
    if (two.length !== len) {
      return true;
    }
    for (var ii = 0; ii < len; ii++) {
      if (deepDiffer(one[ii], two[ii])) {
        return true;
      }
    }
  } else {
    for (var key in one) {
      if (deepDiffer(one[key], two[key])) {
        return true;
      }
    }
    for (var twoKey in two) {
      if (one[twoKey] === undefined && two[twoKey] !== undefined) {
        return true;
      }
    }
  }
  return false;
};

module.exports = deepDiffer;
}, 127, null, "deepDiffer");
__d(/* flattenStyle */function(global, require, module, exports) {
'use strict';

var ReactNativePropRegistry = require(126                      ); // 126 = ReactNativePropRegistry
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function getStyle(style) {
  if (typeof style === 'number') {
    return ReactNativePropRegistry.getByID(style);
  }
  return style;
}

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  invariant(style !== true, 'style may be false but not true');

  if (!Array.isArray(style)) {
    return getStyle(style);
  }

  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      for (var key in computedStyle) {
        result[key] = computedStyle[key];
      }
    }
  }
  return result;
}

module.exports = flattenStyle;
}, 128, null, "flattenStyle");
__d(/* ReactNativeComponentTree */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var instanceCache = {};
var instanceProps = {};

function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

function precacheNode(inst, tag) {
  var nativeInst = getRenderedHostOrTextFromComponent(inst);
  instanceCache[tag] = nativeInst;
}

function precacheFiberNode(hostInst, tag) {
  instanceCache[tag] = hostInst;
}

function uncacheNode(inst) {
  var tag = inst._rootNodeID;
  if (tag) {
    delete instanceCache[tag];
  }
}

function uncacheFiberNode(tag) {
  delete instanceCache[tag];
  delete instanceProps[tag];
}

function getInstanceFromTag(tag) {
  return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
  var tag = typeof inst.tag !== 'number' ? inst._rootNodeID : inst.stateNode._nativeTag;
  invariant(tag, 'All native instances should have a tag.');
  return tag;
}

function getFiberCurrentPropsFromNode(stateNode) {
  return instanceProps[stateNode._nativeTag] || null;
}

function updateFiberProps(tag, props) {
  instanceProps[tag] = props;
}

var ReactNativeComponentTree = {
  getClosestInstanceFromNode: getInstanceFromTag,
  getInstanceFromNode: getInstanceFromTag,
  getNodeFromInstance: getTagFromInstance,
  precacheFiberNode: precacheFiberNode,
  precacheNode: precacheNode,
  uncacheFiberNode: uncacheFiberNode,
  uncacheNode: uncacheNode,
  getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
  updateFiberProps: updateFiberProps
};

module.exports = ReactNativeComponentTree;
}, 129, null, "ReactNativeComponentTree");
__d(/* ReactNativeFiberErrorDialog */function(global, require, module, exports) {

'use strict';

var ExceptionsManager = require(131                ); // 131 = ExceptionsManager

function ReactNativeFiberErrorDialog(capturedError) {
  var componentStack = capturedError.componentStack,
      error = capturedError.error;


  var errorMessage = void 0;
  var errorStack = void 0;
  var errorType = void 0;

  if (error && typeof error === 'object') {
    var message = error.message,
        name = error.name;


    var summary = message ? name + ': ' + message : name;

    errorMessage = summary + '\n\nThis error is located at:' + componentStack;
    errorStack = error.stack;
    errorType = error.constructor;
  } else {
    errorMessage = 'Unspecified error at:' + componentStack;
    errorStack = '';
    errorType = Error;
  }

  var newError = new errorType(errorMessage);
  newError.stack = errorStack;

  ExceptionsManager.handleException(newError, false);

  return false;
}

module.exports.showDialog = ReactNativeFiberErrorDialog;
}, 130, null, "ReactNativeFiberErrorDialog");
__d(/* ExceptionsManager */function(global, require, module, exports) {
'use strict';

var exceptionID = 0;
function reportException(e, isFatal) {
  var _require = require(48             ), // 48 = NativeModules
      ExceptionsManager = _require.ExceptionsManager;

  if (ExceptionsManager) {
    var parseErrorStack = require(62               ); // 62 = parseErrorStack
    var stack = parseErrorStack(e);
    var currentExceptionID = ++exceptionID;
    if (isFatal) {
      ExceptionsManager.reportFatalException(e.message, stack, currentExceptionID);
    } else {
      ExceptionsManager.reportSoftException(e.message, stack, currentExceptionID);
    }
    if (__DEV__) {
      var symbolicateStackTrace = require(132                    ); // 132 = symbolicateStackTrace
      symbolicateStackTrace(stack).then(function (prettyStack) {
        if (prettyStack) {
          ExceptionsManager.updateExceptionMessage(e.message, prettyStack, currentExceptionID);
        } else {
          throw new Error('The stack is null');
        }
      }).catch(function (error) {
        return console.warn('Unable to symbolicate stack trace: ' + error.message);
      });
    }
  }
}

function handleException(e, isFatal) {
  if (!e.message) {
    e = new Error(e);
  }
  if (console._errorOriginal) {
    console._errorOriginal(e.message);
  } else {
    console.error(e.message);
  }
  reportException(e, isFatal);
}

function reactConsoleErrorHandler() {
  console._errorOriginal.apply(console, arguments);
  if (!console.reportErrorsAsExceptions) {
    return;
  }

  if (arguments[0] && arguments[0].stack) {
    reportException(arguments[0], false);
  } else {
    var stringifySafe = require(66             ); // 66 = stringifySafe
    var str = Array.prototype.map.call(arguments, stringifySafe).join(', ');
    if (str.slice(0, 10) === '"Warning: ') {
      return;
    }
    var error = new Error('console.error: ' + str);
    error.framesToPop = 1;
    reportException(error, false);
  }
}

function installConsoleErrorReporter() {
  if (console._errorOriginal) {
    return;
  }

  console._errorOriginal = console.error.bind(console);
  console.error = reactConsoleErrorHandler;
  if (console.reportErrorsAsExceptions === undefined) {
    console.reportErrorsAsExceptions = true;
  }
}

module.exports = { handleException: handleException, installConsoleErrorReporter: installConsoleErrorReporter };
}, 131, null, "ExceptionsManager");
__d(/* symbolicateStackTrace */function(global, require, module, exports) {
'use strict';

var getDevServer = require(133           ); // 133 = getDevServer

var _require = require(48             ), // 48 = NativeModules
    SourceCode = _require.SourceCode;

var fetch = void 0;

function isSourcedFromDisk(sourcePath) {
  return !/^http/.test(sourcePath) && /[\\/]/.test(sourcePath);
}

function symbolicateStackTrace(stack) {
  var devServer, stackCopy, foundInternalSource, response, json;
  return regeneratorRuntime.async(function symbolicateStackTrace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!fetch) {
            fetch = global.fetch || require(134    ).fetch; // 134 = fetch
          }

          devServer = getDevServer();

          if (devServer.bundleLoadedFromServer) {
            _context.next = 4;
            break;
          }

          throw new Error('Bundle was not loaded from the packager');

        case 4:
          stackCopy = stack;


          if (SourceCode.scriptURL) {
            foundInternalSource = false;

            stackCopy = stack.map(function (frame) {
              if (!foundInternalSource && isSourcedFromDisk(frame.file)) {
                return babelHelpers.extends({}, frame, { file: SourceCode.scriptURL });
              }

              foundInternalSource = true;
              return frame;
            });
          }

          _context.next = 8;
          return regeneratorRuntime.awrap(fetch(devServer.url + 'symbolicate', {
            method: 'POST',
            body: JSON.stringify({ stack: stackCopy })
          }));

        case 8:
          response = _context.sent;
          _context.next = 11;
          return regeneratorRuntime.awrap(response.json());

        case 11:
          json = _context.sent;
          return _context.abrupt('return', json.stack);

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
}

module.exports = symbolicateStackTrace;
}, 132, null, "symbolicateStackTrace");
__d(/* getDevServer */function(global, require, module, exports) {
'use strict';

var _require = require(48             ), // 48 = NativeModules
    SourceCode = _require.SourceCode;

var _cachedDevServerURL = void 0;
var FALLBACK = 'http://localhost:8081/';

function getDevServer() {
  if (_cachedDevServerURL === undefined) {
    var match = SourceCode.scriptURL && SourceCode.scriptURL.match(/^https?:\/\/.*?\//);
    _cachedDevServerURL = match ? match[0] : null;
  }

  return {
    url: _cachedDevServerURL || FALLBACK,
    bundleLoadedFromServer: _cachedDevServerURL !== null
  };
}

module.exports = getDevServer;
}, 133, null, "getDevServer");
__d(/* fetch */function(global, require, module, exports) {
'use strict';

require(135           ); // 135 = whatwg-fetch

module.exports = { fetch: fetch, Headers: Headers, Request: Request, Response: Response };
}, 134, null, "fetch");
__d(/* whatwg-fetch/fetch.js */function(global, require, module, exports) {(function (self) {
  'use strict';

  if (self.fetch) {
    return;
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && function () {
      try {
        new Blob();
        return true;
      } catch (e) {
        return false;
      }
    }(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  if (support.arrayBuffer) {
    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

    var isDataView = function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    };

    var isArrayBufferView = ArrayBuffer.isView || function (obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
    };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name');
    }
    return name.toLowerCase();
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value;
  }

  function iteratorFor(items) {
    var iterator = {
      next: function next() {
        var value = items.shift();
        return { done: value === undefined, value: value };
      }
    };

    if (support.iterable) {
      iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {
        return iterator;
      };
    }

    return iterator;
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function (value, name) {
        this.append(name, value);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function (name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var list = this.map[name];
    if (!list) {
      list = [];
      this.map[name] = list;
    }
    list.push(value);
  };

  Headers.prototype['delete'] = function (name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function (name) {
    var values = this.map[normalizeName(name)];
    return values ? values[0] : null;
  };

  Headers.prototype.getAll = function (name) {
    return this.map[normalizeName(name)] || [];
  };

  Headers.prototype.has = function (name) {
    return this.map.hasOwnProperty(normalizeName(name));
  };

  Headers.prototype.set = function (name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)];
  };

  Headers.prototype.forEach = function (callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function (name) {
      this.map[name].forEach(function (value) {
        callback.call(thisArg, value, name, this);
      }, this);
    }, this);
  };

  Headers.prototype.keys = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push(name);
    });
    return iteratorFor(items);
  };

  Headers.prototype.values = function () {
    var items = [];
    this.forEach(function (value) {
      items.push(value);
    });
    return iteratorFor(items);
  };

  Headers.prototype.entries = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items);
  };

  if (support.iterable) {
    Headers.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'));
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function (resolve, reject) {
      reader.onload = function () {
        resolve(reader.result);
      };
      reader.onerror = function () {
        reject(reader.error);
      };
    });
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise;
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise;
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('');
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0);
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer;
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function (body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);

        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        throw new Error('unsupported BodyInit type');
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob');
        } else {
          return Promise.resolve(new Blob([this._bodyText]));
        }
      };

      this.arrayBuffer = function () {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
        } else {
          return this.blob().then(readBlobAsArrayBuffer);
        }
      };
    }

    this.text = function () {
      var rejected = consumed(this);
      if (rejected) {
        return rejected;
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob);
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text');
      } else {
        return Promise.resolve(this._bodyText);
      }
    };

    if (support.formData) {
      this.formData = function () {
        return this.text().then(decode);
      };
    }

    this.json = function () {
      return this.text().then(JSON.parse);
    };

    return this;
  }

  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method;
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (typeof input === 'string') {
      this.url = input;
    } else {
      if (input.bodyUsed) {
        throw new TypeError('Already read');
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    }

    this.credentials = options.credentials || this.credentials || 'omit';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests');
    }
    this._initBody(body);
  }

  Request.prototype.clone = function () {
    return new Request(this, { body: this._bodyInit });
  };

  function decode(body) {
    var form = new FormData();
    body.trim().split('&').forEach(function (bytes) {
      if (bytes) {
        var split = bytes.split('=');
        var name = split.shift().replace(/\+/g, ' ');
        var value = split.join('=').replace(/\+/g, ' ');
        form.append(decodeURIComponent(name), decodeURIComponent(value));
      }
    });
    return form;
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    rawHeaders.split('\r\n').forEach(function (line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers;
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = 'status' in options ? options.status : 200;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function () {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    });
  };

  Response.error = function () {
    var response = new Response(null, { status: 0, statusText: '' });
    response.type = 'error';
    return response;
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function (url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code');
    }

    return new Response(null, { status: status, headers: { location: url } });
  };

  self.Headers = Headers;
  self.Request = Request;
  self.Response = Response;

  self.fetch = function (input, init) {
    return new Promise(function (resolve, reject) {
      var request = new Request(input, init);
      var xhr = new XMLHttpRequest();

      xhr.onload = function () {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function (value, name) {
        xhr.setRequestHeader(name, value);
      });

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    });
  };
  self.fetch.polyfill = true;
})(typeof self !== 'undefined' ? self : this);
}, 135, null, "whatwg-fetch/fetch.js");
__d(/* ReactNativeFiberHostComponent */function(global, require, module, exports) {

'use strict';

var ReactNativeAttributePayload = require(125                          ); // 125 = ReactNativeAttributePayload
var TextInputState = require(77              ); // 77 = TextInputState
var UIManager = require(78         ); // 78 = UIManager

var _require = require(137                      ), // 137 = NativeMethodsMixinUtils
    mountSafeCallback = _require.mountSafeCallback,
    warnForStyleProps = _require.warnForStyleProps;

var ReactNativeFiberHostComponent = function () {
  function ReactNativeFiberHostComponent(tag, viewConfig) {
    babelHelpers.classCallCheck(this, ReactNativeFiberHostComponent);

    this._nativeTag = tag;
    this._children = [];
    this.viewConfig = viewConfig;
  }

  babelHelpers.createClass(ReactNativeFiberHostComponent, [{
    key: 'blur',
    value: function blur() {
      TextInputState.blurTextInput(this._nativeTag);
    }
  }, {
    key: 'focus',
    value: function focus() {
      TextInputState.focusTextInput(this._nativeTag);
    }
  }, {
    key: 'measure',
    value: function measure(callback) {
      UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));
    }
  }, {
    key: 'measureInWindow',
    value: function measureInWindow(callback) {
      UIManager.measureInWindow(this._nativeTag, mountSafeCallback(this, callback));
    }
  }, {
    key: 'measureLayout',
    value: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
      UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(nativeProps) {
      if (__DEV__) {
        warnForStyleProps(nativeProps, this.viewConfig.validAttributes);
      }

      var updatePayload = ReactNativeAttributePayload.create(nativeProps, this.viewConfig.validAttributes);

      UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);
    }
  }]);
  return ReactNativeFiberHostComponent;
}();

module.exports = ReactNativeFiberHostComponent;
}, 136, null, "ReactNativeFiberHostComponent");
__d(/* NativeMethodsMixinUtils */function(global, require, module, exports) {
'use strict';

function mountSafeCallback(context, callback) {
  return function () {
    if (!callback || typeof context.isMounted === 'function' && !context.isMounted()) {
      return undefined;
    }
    return callback.apply(context, arguments);
  };
}

function throwOnStylesProp(component, props) {
  if (props.styles !== undefined) {
    var owner = component._owner || null;
    var name = component.constructor.displayName;
    var msg = '`styles` is not a supported property of `' + name + '`, did ' + 'you mean `style` (singular)?';
    if (owner && owner.constructor && owner.constructor.displayName) {
      msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + ' component.';
    }
    throw new Error(msg);
  }
}

function warnForStyleProps(props, validAttributes) {
  for (var key in validAttributes.style) {
    if (!(validAttributes[key] || props[key] === undefined)) {
      console.error('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
    }
  }
}

module.exports = {
  mountSafeCallback: mountSafeCallback,
  throwOnStylesProp: throwOnStylesProp,
  warnForStyleProps: warnForStyleProps
};
}, 137, null, "NativeMethodsMixinUtils");
__d(/* ReactNativeInjection */function(global, require, module, exports) {
'use strict';

require(139             ); // 139 = InitializeCore

var EventPluginHub = require(184             ); // 184 = EventPluginHub
var EventPluginUtils = require(124               ); // 124 = EventPluginUtils
var RCTEventEmitter = require(188              ); // 188 = RCTEventEmitter
var ReactNativeBridgeEventPlugin = require(189                           ); // 189 = ReactNativeBridgeEventPlugin
var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree
var ReactNativeEventEmitter = require(194                      ); // 194 = ReactNativeEventEmitter
var ReactNativeEventPluginOrder = require(197                          ); // 197 = ReactNativeEventPluginOrder
var ReactNativeGlobalResponderHandler = require(198                                ); // 198 = ReactNativeGlobalResponderHandler
var ResponderEventPlugin = require(199                   ); // 199 = ResponderEventPlugin

function inject() {
  RCTEventEmitter.register(ReactNativeEventEmitter);

  EventPluginHub.injection.injectEventPluginOrder(ReactNativeEventPluginOrder);
  EventPluginUtils.injection.injectComponentTree(ReactNativeComponentTree);

  ResponderEventPlugin.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler);

  EventPluginHub.injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin
  });
}

module.exports = {
  inject: inject
};
}, 138, null, "ReactNativeInjection");
__d(/* InitializeCore */function(global, require, module, exports) {
'use strict';

if (global.GLOBAL === undefined) {
  global.GLOBAL = global;
}

if (global.window === undefined) {
  global.window = global;
}

var defineLazyObjectProperty = require(67                        ); // 67 = defineLazyObjectProperty

function defineProperty(object, name, getValue, eager) {
  var descriptor = Object.getOwnPropertyDescriptor(object, name);
  if (descriptor) {
    var backupName = 'original' + name[0].toUpperCase() + name.substr(1);
    Object.defineProperty(object, backupName, babelHelpers.extends({}, descriptor, {
      value: object[name]
    }));
  }

  var _ref = descriptor || {},
      enumerable = _ref.enumerable,
      writable = _ref.writable,
      configurable = _ref.configurable;

  if (descriptor && !configurable) {
    console.error('Failed to set polyfill. ' + name + ' is not configurable.');
    return;
  }

  if (eager === true) {
    Object.defineProperty(object, name, {
      configurable: true,
      enumerable: enumerable !== false,
      writable: writable !== false,
      value: getValue()
    });
  } else {
    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }
}

global.process = global.process || {};
global.process.env = global.process.env || {};
if (!global.process.env.NODE_ENV) {
  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';
}

var Systrace = require(53        ); // 53 = Systrace
Systrace.setEnabled(global.__RCTProfileIsProfiling || false);

var ExceptionsManager = require(131                ); // 131 = ExceptionsManager
ExceptionsManager.installConsoleErrorReporter();

var BatchedBridge = require(49             ); // 49 = BatchedBridge
BatchedBridge.registerCallableModule('Systrace', require(53        )); // 53 = Systrace
BatchedBridge.registerCallableModule('JSTimersExecution', require(52                 )); // 52 = JSTimersExecution
BatchedBridge.registerCallableModule('HeapCapture', require(140          )); // 140 = HeapCapture
BatchedBridge.registerCallableModule('SamplingProfiler', require(141               )); // 141 = SamplingProfiler

if (__DEV__) {
  BatchedBridge.registerCallableModule('HMRClient', require(142        )); // 142 = HMRClient
}

require(153     ); // 153 = RCTLog

if (!global.__fbDisableExceptionsManager) {
  var handleError = function handleError(e, isFatal) {
    try {
      ExceptionsManager.handleException(e, isFatal);
    } catch (ee) {
      console.log('Failed to print error: ', ee.message);

      throw e;
    }
  };

  var ErrorUtils = require(51          ); // 51 = ErrorUtils
  ErrorUtils.setGlobalHandler(handleError);
}

var defineLazyTimer = function defineLazyTimer(name) {
  defineProperty(global, name, function () {
    return require(60        )[name]; // 60 = JSTimers
  });
};
defineLazyTimer('setTimeout');
defineLazyTimer('setInterval');
defineLazyTimer('setImmediate');
defineLazyTimer('clearTimeout');
defineLazyTimer('clearInterval');
defineLazyTimer('clearImmediate');
defineLazyTimer('requestAnimationFrame');
defineLazyTimer('cancelAnimationFrame');
defineLazyTimer('requestIdleCallback');
defineLazyTimer('cancelIdleCallback');

if (!global.alert) {
  global.alert = function (text) {
    require(154    ).alert('Alert', '' + text); // 154 = Alert
  };
}

defineProperty(global, 'Promise', function () {
  return require(156      ); // 156 = Promise
});

defineProperty(global, 'regeneratorRuntime', function () {
  delete global.regeneratorRuntime;
  require(164                          ); // 164 = regenerator-runtime/runtime
  return global.regeneratorRuntime;
});

defineProperty(global, 'XMLHttpRequest', function () {
  return require(165             ); // 165 = XMLHttpRequest
});
defineProperty(global, 'FormData', function () {
  return require(167       ); // 167 = FormData
});

defineProperty(global, 'fetch', function () {
  return require(134    ).fetch; // 134 = fetch
});
defineProperty(global, 'Headers', function () {
  return require(134    ).Headers; // 134 = fetch
});
defineProperty(global, 'Request', function () {
  return require(134    ).Request; // 134 = fetch
});
defineProperty(global, 'Response', function () {
  return require(134    ).Response; // 134 = fetch
});
defineProperty(global, 'WebSocket', function () {
  return require(143        ); // 143 = WebSocket
});

var navigator = global.navigator;
if (navigator === undefined) {
  global.navigator = navigator = {};
}

defineProperty(navigator, 'product', function () {
  return 'ReactNative';
}, true);
defineProperty(navigator, 'geolocation', function () {
  return require(169          ); // 169 = Geolocation
});

defineProperty(global, 'Map', function () {
  return require(170  ); // 170 = Map
}, true);
defineProperty(global, 'Set', function () {
  return require(175  ); // 175 = Set
}, true);

if (__DEV__) {
  if (!window.document) {
    require(176            ); // 176 = setupDevtools
  }

  require(178                         ); // 178 = RCTDebugComponentOwnership
}

if (__DEV__) {
  var JSInspector = require(179          ); // 179 = JSInspector
  JSInspector.registerAgent(require(180           )); // 180 = NetworkAgent
}

require(68                     ); // 68 = RCTDeviceEventEmitter
require(182                       ); // 182 = RCTNativeAppEventEmitter
require(183                ); // 183 = PerformanceLogger
}, 139, null, "InitializeCore");
__d(/* HeapCapture */function(global, require, module, exports) {
'use strict';

var HeapCapture = {
  captureHeap: function captureHeap(path) {
    var error = null;
    try {
      global.nativeCaptureHeap(path);
      console.log('HeapCapture.captureHeap succeeded: ' + path);
    } catch (e) {
      console.log('HeapCapture.captureHeap error: ' + e.toString());
      error = e.toString();
    }
    require(48             ).JSCHeapCapture.captureComplete(path, error); // 48 = NativeModules
  }
};

module.exports = HeapCapture;
}, 140, null, "HeapCapture");
__d(/* SamplingProfiler */function(global, require, module, exports) {
'use strict';

var SamplingProfiler = {
  poke: function poke(token) {
    var error = null;
    var result = null;
    try {
      result = global.pokeSamplingProfiler();
      if (result === null) {
        console.log('The JSC Sampling Profiler has started');
      } else {
        console.log('The JSC Sampling Profiler has stopped');
      }
    } catch (e) {
      console.log('Error occured when restarting Sampling Profiler: ' + e.toString());
      error = e.toString();
    }
    require(48             ).JSCSamplingProfiler.operationComplete(token, result, error); // 48 = NativeModules
  }
};

module.exports = SamplingProfiler;
}, 141, null, "SamplingProfiler");
__d(/* HMRClient */function(global, require, module, exports) {
'use strict';

var Platform = require(61        ); // 61 = Platform
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var HMRClient = {
  enable: function enable(platform, bundleEntry, host, port) {
    invariant(platform, 'Missing required parameter `platform`');
    invariant(bundleEntry, 'Missing required paramenter `bundleEntry`');
    invariant(host, 'Missing required paramenter `host`');

    var WebSocket = require(143        ); // 143 = WebSocket

    var wsHostPort = port !== null && port !== '' ? host + ':' + port : host;

    var wsUrl = 'ws://' + wsHostPort + '/hot?' + ('platform=' + platform + '&') + ('bundleEntry=' + bundleEntry.replace('.bundle', '.js'));

    var activeWS = new WebSocket(wsUrl);
    activeWS.onerror = function (e) {
      var error = 'Hot loading isn\'t working because it cannot connect to the development server.\n\nTry the following to fix the issue:\n- Ensure that the packager server is running and available on the same network';

      if (Platform.OS === 'ios') {
        error += '\n- Ensure that the Packager server URL is correctly set in AppDelegate';
      } else {
        error += '\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run \'adb devices\' to see a list of connected devices\n- If you\'re on a physical device connected to the same machine, run \'adb reverse tcp:8081 tcp:8081\' to forward requests from your device\n- If your device is on the same Wi-Fi network, set \'Debug server host & port for device\' in \'Dev settings\' to your machine\'s IP address and the port of the local dev server - e.g. 10.0.1.1:8081';
      }

      error += '\n\nURL: ' + host + ':' + port + '\n\nError: ' + e.message;

      throw new Error(error);
    };
    activeWS.onmessage = function (_ref) {
      var data = _ref.data;

      var HMRLoadingView = require(151             ); // 151 = HMRLoadingView

      data = JSON.parse(data);

      switch (data.type) {
        case 'update-start':
          {
            HMRLoadingView.showMessage('Hot Loading...');
            break;
          }
        case 'update':
          {
            var _data$body = data.body,
                modules = _data$body.modules,
                sourceMappingURLs = _data$body.sourceMappingURLs,
                sourceURLs = _data$body.sourceURLs,
                inverseDependencies = _data$body.inverseDependencies;


            if (Platform.OS === 'ios') {
              var RCTRedBox = require(48             ).RedBox; // 48 = NativeModules
              RCTRedBox && RCTRedBox.dismiss && RCTRedBox.dismiss();
            } else {
              var RCTExceptionsManager = require(48             ).ExceptionsManager; // 48 = NativeModules
              RCTExceptionsManager && RCTExceptionsManager.dismissRedbox && RCTExceptionsManager.dismissRedbox();
            }

            modules.forEach(function (_ref2, i) {
              var id = _ref2.id,
                  code = _ref2.code;

              code = code + '\n\n' + sourceMappingURLs[i];

              var injectFunction = typeof global.nativeInjectHMRUpdate === 'function' ? global.nativeInjectHMRUpdate : eval;

              code = ['__accept(', id + ',', 'function(global,require,module,exports){', '' + code, '\n},', '' + JSON.stringify(inverseDependencies), ');'].join('');

              injectFunction(code, sourceURLs[i]);
            });

            HMRLoadingView.hide();
            break;
          }
        case 'update-done':
          {
            HMRLoadingView.hide();
            break;
          }
        case 'error':
          {
            HMRLoadingView.hide();
            throw new Error(data.body.type + ' ' + data.body.description);
          }
        default:
          {
            throw new Error('Unexpected message: ' + data);
          }
      }
    };
  }
};

module.exports = HMRClient;
}, 142, null, "HMRClient");
__d(/* WebSocket */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var Platform = require(61        ); // 61 = Platform
var RCTWebSocketModule = require(48             ).WebSocketModule; // 48 = NativeModules
var WebSocketEvent = require(144             ); // 144 = WebSocketEvent
var binaryToBase64 = require(145             ); // 145 = binaryToBase64

var EventTarget = require(147                ); // 147 = event-target-shim
var base64 = require(146        ); // 146 = base64-js

var CONNECTING = 0;
var OPEN = 1;
var CLOSING = 2;
var CLOSED = 3;

var CLOSE_NORMAL = 1000;

var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];

var nextWebSocketId = 0;

var WebSocket = function (_EventTarget) {
  babelHelpers.inherits(WebSocket, _EventTarget);

  function WebSocket(url, protocols, options) {
    babelHelpers.classCallCheck(this, WebSocket);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebSocket.__proto__ || Object.getPrototypeOf(WebSocket)).call(this));

    _this.CONNECTING = CONNECTING;
    _this.OPEN = OPEN;
    _this.CLOSING = CLOSING;
    _this.CLOSED = CLOSED;
    _this.readyState = CONNECTING;

    if (typeof protocols === 'string') {
      protocols = [protocols];
    }

    if (!Array.isArray(protocols)) {
      protocols = null;
    }

    _this._eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    _this._socketId = nextWebSocketId++;
    _this._registerEvents();
    RCTWebSocketModule.connect(url, protocols, options, _this._socketId);
    return _this;
  }

  babelHelpers.createClass(WebSocket, [{
    key: 'close',
    value: function close(code, reason) {
      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
        return;
      }

      this.readyState = this.CLOSING;
      this._close(code, reason);
    }
  }, {
    key: 'send',
    value: function send(data) {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      if (typeof data === 'string') {
        RCTWebSocketModule.send(data, this._socketId);
        return;
      }

      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
        RCTWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);
        return;
      }

      throw new Error('Unsupported data type');
    }
  }, {
    key: 'ping',
    value: function ping() {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      RCTWebSocketModule.ping(this._socketId);
    }
  }, {
    key: '_close',
    value: function _close(code, reason) {
      if (Platform.OS === 'android') {
        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
        var closeReason = typeof reason === 'string' ? reason : '';
        RCTWebSocketModule.close(statusCode, closeReason, this._socketId);
      } else {
        RCTWebSocketModule.close(this._socketId);
      }
    }
  }, {
    key: '_unregisterEvents',
    value: function _unregisterEvents() {
      this._subscriptions.forEach(function (e) {
        return e.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: '_registerEvents',
    value: function _registerEvents() {
      var _this2 = this;

      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.dispatchEvent(new WebSocketEvent('message', {
          data: ev.type === 'binary' ? base64.toByteArray(ev.data).buffer : ev.data
        }));
      }), this._eventEmitter.addListener('websocketOpen', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.OPEN;
        _this2.dispatchEvent(new WebSocketEvent('open'));
      }), this._eventEmitter.addListener('websocketClosed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('close', {
          code: ev.code,
          reason: ev.reason
        }));
        _this2._unregisterEvents();
        _this2.close();
      }), this._eventEmitter.addListener('websocketFailed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('error', {
          message: ev.message
        }));
        _this2.dispatchEvent(new WebSocketEvent('close', {
          message: ev.message
        }));
        _this2._unregisterEvents();
        _this2.close();
      })];
    }
  }]);
  return WebSocket;
}(EventTarget.apply(undefined, WEBSOCKET_EVENTS));

WebSocket.CONNECTING = CONNECTING;
WebSocket.OPEN = OPEN;
WebSocket.CLOSING = CLOSING;
WebSocket.CLOSED = CLOSED;


module.exports = WebSocket;
}, 143, null, "WebSocket");
__d(/* WebSocketEvent */function(global, require, module, exports) {

'use strict';

var WebSocketEvent = function WebSocketEvent(type, eventInitDict) {
  babelHelpers.classCallCheck(this, WebSocketEvent);

  this.type = type.toString();
  babelHelpers.extends(this, eventInitDict);
};

module.exports = WebSocketEvent;
}, 144, null, "WebSocketEvent");
__d(/* binaryToBase64 */function(global, require, module, exports) {
'use strict';

var base64 = require(146        ); // 146 = base64-js

function binaryToBase64(data) {
  if (data instanceof ArrayBuffer) {
    data = new Uint8Array(data);
  }
  if (data instanceof Uint8Array) {
    return base64.fromByteArray(data);
  }
  if (!ArrayBuffer.isView(data)) {
    throw new Error('data must be ArrayBuffer or typed array');
  }
  var _data = data,
      buffer = _data.buffer,
      byteOffset = _data.byteOffset,
      byteLength = _data.byteLength;

  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));
}

module.exports = binaryToBase64;
}, 145, null, "binaryToBase64");
__d(/* base64-js/index.js */function(global, require, module, exports) {'use strict';

exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function placeHoldersCount(b64) {
  var len = b64.length;
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  }

  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
}

function byteLength(b64) {
  return b64.length * 3 / 4 - placeHoldersCount(b64);
}

function toByteArray(b64) {
  var i, j, l, tmp, placeHolders, arr;
  var len = b64.length;
  placeHolders = placeHoldersCount(b64);

  arr = new Arr(len * 3 / 4 - placeHolders);

  l = placeHolders > 0 ? len - 4 : len;

  var L = 0;

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[L++] = tmp >> 16 & 0xFF;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  if (placeHolders === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[L++] = tmp & 0xFF;
  } else if (placeHolders === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  return arr;
}

function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}

function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
    output.push(tripletToBase64(tmp));
  }
  return output.join('');
}

function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3;
  var output = '';
  var parts = [];
  var maxChunkLength = 16383;
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  }

  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    output += lookup[tmp >> 2];
    output += lookup[tmp << 4 & 0x3F];
    output += '==';
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    output += lookup[tmp >> 10];
    output += lookup[tmp >> 4 & 0x3F];
    output += lookup[tmp << 2 & 0x3F];
    output += '=';
  }

  parts.push(output);

  return parts.join('');
}
}, 146, null, "base64-js/index.js");
__d(/* event-target-shim/lib/event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(148        ); // 148 = ./commons
var CustomEventTarget = require(149                    ); // 149 = ./custom-event-target
var EventWrapper = require(150              ); // 150 = ./event-wrapper
var LISTENERS = Commons.LISTENERS;
var CAPTURE = Commons.CAPTURE;
var BUBBLE = Commons.BUBBLE;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;
var defineCustomEventTarget = CustomEventTarget.defineCustomEventTarget;
var createEventWrapper = EventWrapper.createEventWrapper;
var STOP_IMMEDIATE_PROPAGATION_FLAG = EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;

var HAS_EVENTTARGET_INTERFACE = typeof window !== "undefined" && typeof window.EventTarget !== "undefined";

var EventTarget = module.exports = function EventTarget() {
    if (this instanceof EventTarget) {
        Object.defineProperty(this, LISTENERS, { value: Object.create(null) });
    } else if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(EventTarget, arguments[0]);
    } else if (arguments.length > 0) {
        var types = Array(arguments.length);
        for (var i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }

        return defineCustomEventTarget(EventTarget, types);
    } else {
        throw new TypeError("Cannot call a class as a function");
    }
};

EventTarget.prototype = Object.create((HAS_EVENTTARGET_INTERFACE ? window.EventTarget : Object).prototype, {
    constructor: {
        value: EventTarget,
        writable: true,
        configurable: true
    },

    addEventListener: {
        value: function addEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }
            if (typeof listener !== "function" && typeof listener !== "object") {
                throw new TypeError("\"listener\" is not an object.");
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var node = this[LISTENERS][type];
            if (node == null) {
                this[LISTENERS][type] = newNode(listener, kind);
                return true;
            }

            var prev = null;
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    return false;
                }
                prev = node;
                node = node.next;
            }

            prev.next = newNode(listener, kind);
            return true;
        },
        configurable: true,
        writable: true
    },

    removeEventListener: {
        value: function removeEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var prev = null;
            var node = this[LISTENERS][type];
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    if (prev == null) {
                        this[LISTENERS][type] = node.next;
                    } else {
                        prev.next = node.next;
                    }
                    return true;
                }

                prev = node;
                node = node.next;
            }

            return false;
        },
        configurable: true,
        writable: true
    },

    dispatchEvent: {
        value: function dispatchEvent(event) {
            var node = this[LISTENERS][event.type];
            if (node == null) {
                return true;
            }

            var wrapped = createEventWrapper(event, this);

            while (node != null) {
                if (typeof node.listener === "function") {
                    node.listener.call(this, wrapped);
                } else if (node.kind !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
                    node.listener.handleEvent(wrapped);
                }

                if (wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]) {
                    break;
                }
                node = node.next;
            }

            return !wrapped.defaultPrevented;
        },
        configurable: true,
        writable: true
    }
});
}, 147, null, "event-target-shim/lib/event-target.js");
__d(/* event-target-shim/lib/commons.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = exports.createUniqueKey = typeof Symbol !== "undefined" ? Symbol : function createUniqueKey(name) {
  return "[[" + name + "_" + Math.random().toFixed(8).slice(2) + "]]";
};

exports.LISTENERS = createUniqueKey("listeners");

exports.CAPTURE = 1;

exports.BUBBLE = 2;

exports.ATTRIBUTE = 3;

exports.newNode = function newNode(listener, kind) {
  return { listener: listener, kind: kind, next: null };
};
}, 148, null, "event-target-shim/lib/commons.js");
__d(/* event-target-shim/lib/custom-event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(148        ); // 148 = ./commons
var LISTENERS = Commons.LISTENERS;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;

function getAttributeListener(eventTarget, type) {
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            return node.listener;
        }
        node = node.next;
    }
    return null;
}

function setAttributeListener(eventTarget, type, listener) {
    if (typeof listener !== "function" && typeof listener !== "object") {
        listener = null;
    }

    var prev = null;
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            if (prev == null) {
                eventTarget[LISTENERS][type] = node.next;
            } else {
                prev.next = node.next;
            }
        } else {
            prev = node;
        }

        node = node.next;
    }

    if (listener != null) {
        if (prev == null) {
            eventTarget[LISTENERS][type] = newNode(listener, ATTRIBUTE);
        } else {
            prev.next = newNode(listener, ATTRIBUTE);
        }
    }
}

exports.defineCustomEventTarget = function (EventTargetBase, types) {
    function EventTarget() {
        EventTargetBase.call(this);
    }

    var descripter = {
        constructor: {
            value: EventTarget,
            configurable: true,
            writable: true
        }
    };

    types.forEach(function (type) {
        descripter["on" + type] = {
            get: function get() {
                return getAttributeListener(this, type);
            },
            set: function set(listener) {
                setAttributeListener(this, type, listener);
            },
            configurable: true,
            enumerable: true
        };
    });

    EventTarget.prototype = Object.create(EventTargetBase.prototype, descripter);

    return EventTarget;
};
}, 149, null, "event-target-shim/lib/custom-event-target.js");
__d(/* event-target-shim/lib/event-wrapper.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = require(148        ).createUniqueKey; // 148 = ./commons

var STOP_IMMEDIATE_PROPAGATION_FLAG = createUniqueKey("stop_immediate_propagation_flag");

var CANCELED_FLAG = createUniqueKey("canceled_flag");

var ORIGINAL_EVENT = createUniqueKey("original_event");

var wrapperPrototypeDefinition = Object.freeze({
    stopPropagation: Object.freeze({
        value: function stopPropagation() {
            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopPropagation === "function") {
                e.stopPropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    stopImmediatePropagation: Object.freeze({
        value: function stopImmediatePropagation() {
            this[STOP_IMMEDIATE_PROPAGATION_FLAG] = true;

            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopImmediatePropagation === "function") {
                e.stopImmediatePropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    preventDefault: Object.freeze({
        value: function preventDefault() {
            if (this.cancelable === true) {
                this[CANCELED_FLAG] = true;
            }

            var e = this[ORIGINAL_EVENT];
            if (typeof e.preventDefault === "function") {
                e.preventDefault();
            }
        },
        writable: true,
        configurable: true
    }),

    defaultPrevented: Object.freeze({
        get: function defaultPrevented() {
            return this[CANCELED_FLAG];
        },
        enumerable: true,
        configurable: true
    })
});

exports.STOP_IMMEDIATE_PROPAGATION_FLAG = STOP_IMMEDIATE_PROPAGATION_FLAG;

exports.createEventWrapper = function createEventWrapper(event, eventTarget) {
    var timeStamp = typeof event.timeStamp === "number" ? event.timeStamp : Date.now();
    var propertyDefinition = {
        type: { value: event.type, enumerable: true },
        target: { value: eventTarget, enumerable: true },
        currentTarget: { value: eventTarget, enumerable: true },
        eventPhase: { value: 2, enumerable: true },
        bubbles: { value: Boolean(event.bubbles), enumerable: true },
        cancelable: { value: Boolean(event.cancelable), enumerable: true },
        timeStamp: { value: timeStamp, enumerable: true },
        isTrusted: { value: false, enumerable: true }
    };
    propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG] = { value: false, writable: true };
    propertyDefinition[CANCELED_FLAG] = { value: false, writable: true };
    propertyDefinition[ORIGINAL_EVENT] = { value: event };

    if (typeof event.detail !== "undefined") {
        propertyDefinition.detail = { value: event.detail, enumerable: true };
    }

    return Object.create(Object.create(event, wrapperPrototypeDefinition), propertyDefinition);
};
}, 150, null, "event-target-shim/lib/event-wrapper.js");
__d(/* HMRLoadingView */function(global, require, module, exports) {

'use strict';

var ToastAndroid = require(152           ); // 152 = ToastAndroid

var TOAST_SHORT_DELAY = 2000;

var HMRLoadingView = function () {
  function HMRLoadingView() {
    babelHelpers.classCallCheck(this, HMRLoadingView);
  }

  babelHelpers.createClass(HMRLoadingView, null, [{
    key: 'showMessage',
    value: function showMessage(message) {
      if (HMRLoadingView._showing) {
        return;
      }
      ToastAndroid.show(message, ToastAndroid.SHORT);
      HMRLoadingView._showing = true;
      setTimeout(function () {
        HMRLoadingView._showing = false;
      }, TOAST_SHORT_DELAY);
    }
  }, {
    key: 'hide',
    value: function hide() {}
  }]);
  return HMRLoadingView;
}();

module.exports = HMRLoadingView;
}, 151, null, "HMRLoadingView");
__d(/* ToastAndroid */function(global, require, module, exports) {

'use strict';

var RCTToastAndroid = require(48             ).ToastAndroid; // 48 = NativeModules

var ToastAndroid = {
  SHORT: RCTToastAndroid.SHORT,
  LONG: RCTToastAndroid.LONG,

  TOP: RCTToastAndroid.TOP,
  BOTTOM: RCTToastAndroid.BOTTOM,
  CENTER: RCTToastAndroid.CENTER,

  show: function show(message, duration) {
    RCTToastAndroid.show(message, duration);
  },

  showWithGravity: function showWithGravity(message, duration, gravity) {
    RCTToastAndroid.showWithGravity(message, duration, gravity);
  }
};

module.exports = ToastAndroid;
}, 152, null, "ToastAndroid");
__d(/* RCTLog */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var levelsMap = {
  log: 'log',
  info: 'info',
  warn: 'warn',
  error: 'error',
  fatal: 'error'
};

var RCTLog = function () {
  function RCTLog() {
    babelHelpers.classCallCheck(this, RCTLog);
  }

  babelHelpers.createClass(RCTLog, null, [{
    key: 'logIfNoNativeHook',
    value: function logIfNoNativeHook() {
      if (typeof global.nativeLoggingHook === 'undefined') {
        RCTLog.logToConsole.apply(RCTLog, arguments);
      }

      return true;
    }
  }, {
    key: 'logToConsole',
    value: function logToConsole(level) {
      var _console;

      var logFn = levelsMap[level];
      invariant(logFn, 'Level "' + level + '" not one of ' + Object.keys(levelsMap));

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_console = console)[logFn].apply(_console, args);

      return true;
    }
  }]);
  return RCTLog;
}();

BatchedBridge.registerCallableModule('RCTLog', RCTLog);

module.exports = RCTLog;
}, 153, null, "RCTLog");
__d(/* Alert */function(global, require, module, exports) {
'use strict';

var AlertIOS = require(155       ); // 155 = AlertIOS
var NativeModules = require(48             ); // 48 = NativeModules
var Platform = require(61        ); // 61 = Platform

var Alert = function () {
  function Alert() {
    babelHelpers.classCallCheck(this, Alert);
  }

  babelHelpers.createClass(Alert, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options, type) {
      if (Platform.OS === 'ios') {
        if (typeof type !== 'undefined') {
          console.warn('Alert.alert() with a 5th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
          AlertIOS.alert(title, message, buttons, type);
          return;
        }
        AlertIOS.alert(title, message, buttons);
      } else if (Platform.OS === 'android') {
        AlertAndroid.alert(title, message, buttons, options);
      }
    }
  }]);
  return Alert;
}();

var AlertAndroid = function () {
  function AlertAndroid() {
    babelHelpers.classCallCheck(this, AlertAndroid);
  }

  babelHelpers.createClass(AlertAndroid, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options) {
      var config = {
        title: title || '',
        message: message || ''
      };

      if (options) {
        config = babelHelpers.extends({}, config, { cancelable: options.cancelable });
      }

      var validButtons = buttons ? buttons.slice(0, 3) : [{ text: 'OK' }];
      var buttonPositive = validButtons.pop();
      var buttonNegative = validButtons.pop();
      var buttonNeutral = validButtons.pop();
      if (buttonNeutral) {
        config = babelHelpers.extends({}, config, { buttonNeutral: buttonNeutral.text || '' });
      }
      if (buttonNegative) {
        config = babelHelpers.extends({}, config, { buttonNegative: buttonNegative.text || '' });
      }
      if (buttonPositive) {
        config = babelHelpers.extends({}, config, { buttonPositive: buttonPositive.text || '' });
      }
      NativeModules.DialogManagerAndroid.showAlert(config, function (errorMessage) {
        return console.warn(errorMessage);
      }, function (action, buttonKey) {
        if (action === NativeModules.DialogManagerAndroid.buttonClicked) {
          if (buttonKey === NativeModules.DialogManagerAndroid.buttonNeutral) {
            buttonNeutral.onPress && buttonNeutral.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonNegative) {
            buttonNegative.onPress && buttonNegative.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonPositive) {
            buttonPositive.onPress && buttonPositive.onPress();
          }
        } else if (action === NativeModules.DialogManagerAndroid.dismissed) {
          options && options.onDismiss && options.onDismiss();
        }
      });
    }
  }]);
  return AlertAndroid;
}();

module.exports = Alert;
}, 154, null, "Alert");
__d(/* AlertIOS */function(global, require, module, exports) {
'use strict';

var RCTAlertManager = require(48             ).AlertManager; // 48 = NativeModules

var AlertIOS = function () {
  function AlertIOS() {
    babelHelpers.classCallCheck(this, AlertIOS);
  }

  babelHelpers.createClass(AlertIOS, null, [{
    key: 'alert',
    value: function alert(title, message, callbackOrButtons, type) {
      if (typeof type !== 'undefined') {
        console.warn('AlertIOS.alert() with a 4th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
        this.prompt(title, message, callbackOrButtons, type);
        return;
      }
      this.prompt(title, message, callbackOrButtons, 'default');
    }
  }, {
    key: 'prompt',
    value: function prompt(title, message, callbackOrButtons) {
      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
      var defaultValue = arguments[4];
      var keyboardType = arguments[5];

      if (typeof type === 'function') {
        console.warn('You passed a callback function as the "type" argument to AlertIOS.prompt(). React Native is ' + 'assuming  you want to use the deprecated AlertIOS.prompt(title, defaultValue, buttons, callback) ' + 'signature. The current signature is AlertIOS.prompt(title, message, callbackOrButtons, type, defaultValue, ' + 'keyboardType) and the old syntax will be removed in a future version.');

        var callback = type;
        var defaultValue = message;
        RCTAlertManager.alertWithArgs({
          title: title || undefined,
          type: 'plain-text',
          defaultValue: defaultValue
        }, function (id, value) {
          callback(value);
        });
        return;
      }

      var callbacks = [];
      var buttons = [];
      var cancelButtonKey;
      var destructiveButtonKey;
      if (typeof callbackOrButtons === 'function') {
        callbacks = [callbackOrButtons];
      } else if (callbackOrButtons instanceof Array) {
        callbackOrButtons.forEach(function (btn, index) {
          callbacks[index] = btn.onPress;
          if (btn.style === 'cancel') {
            cancelButtonKey = String(index);
          } else if (btn.style === 'destructive') {
            destructiveButtonKey = String(index);
          }
          if (btn.text || index < (callbackOrButtons || []).length - 1) {
            var btnDef = {};
            btnDef[index] = btn.text || '';
            buttons.push(btnDef);
          }
        });
      }

      RCTAlertManager.alertWithArgs({
        title: title || undefined,
        message: message || undefined,
        buttons: buttons,
        type: type || undefined,
        defaultValue: defaultValue,
        cancelButtonKey: cancelButtonKey,
        destructiveButtonKey: destructiveButtonKey,
        keyboardType: keyboardType
      }, function (id, value) {
        var cb = callbacks[id];
        cb && cb(value);
      });
    }
  }]);
  return AlertIOS;
}();

module.exports = AlertIOS;
}, 155, null, "AlertIOS");
__d(/* Promise */function(global, require, module, exports) {
'use strict';

var Promise = require(157                      ); // 157 = fbjs/lib/Promise.native

var prettyFormat = require(161            ); // 161 = pretty-format

if (__DEV__) {
  require(163                                      ).enable({ // 163 = promise/setimmediate/rejection-tracking
    allRejections: true,
    onUnhandled: function onUnhandled(id) {
      var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var message = void 0;
      var stack = void 0;

      var stringValue = Object.prototype.toString.call(error);
      if (stringValue === '[object Error]') {
        message = Error.prototype.toString.call(error);
        stack = error.stack;
      } else {
        message = prettyFormat(error);
      }

      var warning = 'Possible Unhandled Promise Rejection (id: ' + id + '):\n' + (message + '\n') + (stack == null ? '' : stack);
      console.warn(warning);
    },
    onHandled: function onHandled(id) {
      var warning = 'Promise Rejection Handled (id: ' + id + ')\n' + 'This means you can ignore any previous messages of the form ' + ('"Possible Unhandled Promise Rejection (id: ' + id + '):"');
      console.warn(warning);
    }
  });
}

module.exports = Promise;
}, 156, null, "Promise");
__d(/* fbjs/lib/Promise.native.js */function(global, require, module, exports) {

'use strict';

var Promise = require(158                                  ); // 158 = promise/setimmediate/es6-extensions
require(160                        ); // 160 = promise/setimmediate/done

Promise.prototype['finally'] = function (onSettled) {
  return this.then(onSettled, onSettled);
};

module.exports = Promise;
}, 157, null, "fbjs/lib/Promise.native.js");
__d(/* promise/setimmediate/es6-extensions.js */function(global, require, module, exports) {'use strict';

var Promise = require(159        ); // 159 = ./core.js

module.exports = Promise;

var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new Promise(Promise._61);
  p._81 = 1;
  p._65 = value;
  return p;
}
Promise.resolve = function (value) {
  if (value instanceof Promise) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new Promise(then.bind(value));
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof Promise && val.then === Promise.prototype.then) {
          while (val._81 === 3) {
            val = val._65;
          }
          if (val._81 === 1) return res(i, val._65);
          if (val._81 === 2) reject(val._65);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new Promise(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (values) {
  return new Promise(function (resolve, reject) {
    values.forEach(function (value) {
      Promise.resolve(value).then(resolve, reject);
    });
  });
};

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};
}, 158, null, "promise/setimmediate/es6-extensions.js");
__d(/* promise/setimmediate/core.js */function(global, require, module, exports) {'use strict';

function noop() {}

var LAST_ERROR = null;
var IS_ERROR = {};
function getThen(obj) {
  try {
    return obj.then;
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

function tryCallOne(fn, a) {
  try {
    return fn(a);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}
function tryCallTwo(fn, a, b) {
  try {
    fn(a, b);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

module.exports = Promise;

function Promise(fn) {
  if (typeof this !== 'object') {
    throw new TypeError('Promises must be constructed via new');
  }
  if (typeof fn !== 'function') {
    throw new TypeError('not a function');
  }
  this._45 = 0;
  this._81 = 0;
  this._65 = null;
  this._54 = null;
  if (fn === noop) return;
  doResolve(fn, this);
}
Promise._10 = null;
Promise._97 = null;
Promise._61 = noop;

Promise.prototype.then = function (onFulfilled, onRejected) {
  if (this.constructor !== Promise) {
    return safeThen(this, onFulfilled, onRejected);
  }
  var res = new Promise(noop);
  handle(this, new Handler(onFulfilled, onRejected, res));
  return res;
};

function safeThen(self, onFulfilled, onRejected) {
  return new self.constructor(function (resolve, reject) {
    var res = new Promise(noop);
    res.then(resolve, reject);
    handle(self, new Handler(onFulfilled, onRejected, res));
  });
};
function handle(self, deferred) {
  while (self._81 === 3) {
    self = self._65;
  }
  if (Promise._10) {
    Promise._10(self);
  }
  if (self._81 === 0) {
    if (self._45 === 0) {
      self._45 = 1;
      self._54 = deferred;
      return;
    }
    if (self._45 === 1) {
      self._45 = 2;
      self._54 = [self._54, deferred];
      return;
    }
    self._54.push(deferred);
    return;
  }
  handleResolved(self, deferred);
}

function handleResolved(self, deferred) {
  setImmediate(function () {
    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      if (self._81 === 1) {
        resolve(deferred.promise, self._65);
      } else {
        reject(deferred.promise, self._65);
      }
      return;
    }
    var ret = tryCallOne(cb, self._65);
    if (ret === IS_ERROR) {
      reject(deferred.promise, LAST_ERROR);
    } else {
      resolve(deferred.promise, ret);
    }
  });
}
function resolve(self, newValue) {
  if (newValue === self) {
    return reject(self, new TypeError('A promise cannot be resolved with itself.'));
  }
  if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
    var then = getThen(newValue);
    if (then === IS_ERROR) {
      return reject(self, LAST_ERROR);
    }
    if (then === self.then && newValue instanceof Promise) {
      self._81 = 3;
      self._65 = newValue;
      finale(self);
      return;
    } else if (typeof then === 'function') {
      doResolve(then.bind(newValue), self);
      return;
    }
  }
  self._81 = 1;
  self._65 = newValue;
  finale(self);
}

function reject(self, newValue) {
  self._81 = 2;
  self._65 = newValue;
  if (Promise._97) {
    Promise._97(self, newValue);
  }
  finale(self);
}
function finale(self) {
  if (self._45 === 1) {
    handle(self, self._54);
    self._54 = null;
  }
  if (self._45 === 2) {
    for (var i = 0; i < self._54.length; i++) {
      handle(self, self._54[i]);
    }
    self._54 = null;
  }
}

function Handler(onFulfilled, onRejected, promise) {
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

function doResolve(fn, promise) {
  var done = false;
  var res = tryCallTwo(fn, function (value) {
    if (done) return;
    done = true;
    resolve(promise, value);
  }, function (reason) {
    if (done) return;
    done = true;
    reject(promise, reason);
  });
  if (!done && res === IS_ERROR) {
    done = true;
    reject(promise, LAST_ERROR);
  }
}
}, 159, null, "promise/setimmediate/core.js");
__d(/* promise/setimmediate/done.js */function(global, require, module, exports) {'use strict';

var Promise = require(159        ); // 159 = ./core.js

module.exports = Promise;
Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this;
  self.then(null, function (err) {
    setTimeout(function () {
      throw err;
    }, 0);
  });
};
}, 160, null, "promise/setimmediate/done.js");
__d(/* pretty-format/index.js */function(global, require, module, exports) {'use strict';

var printString = require(162            ); // 162 = ./printString

var toString = Object.prototype.toString;
var toISOString = Date.prototype.toISOString;
var errorToString = Error.prototype.toString;
var regExpToString = RegExp.prototype.toString;
var symbolToString = (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype').toString;

var SYMBOL_REGEXP = /^Symbol\((.*)\)(.*)$/;
var NEWLINE_REGEXP = /\n/ig;

var getSymbols = Object.getOwnPropertySymbols || function (obj) {
  return [];
};

function isToStringedArrayType(toStringed) {
  return toStringed === '[object Array]' || toStringed === '[object ArrayBuffer]' || toStringed === '[object DataView]' || toStringed === '[object Float32Array]' || toStringed === '[object Float64Array]' || toStringed === '[object Int8Array]' || toStringed === '[object Int16Array]' || toStringed === '[object Int32Array]' || toStringed === '[object Uint8Array]' || toStringed === '[object Uint8ClampedArray]' || toStringed === '[object Uint16Array]' || toStringed === '[object Uint32Array]';
}

function printNumber(val) {
  if (val != +val) return 'NaN';
  var isNegativeZero = val === 0 && 1 / val < 0;
  return isNegativeZero ? '-0' : '' + val;
}

function printFunction(val, printFunctionName) {
  if (!printFunctionName) {
    return '[Function]';
  } else if (val.name === '') {
    return '[Function anonymous]';
  } else {
    return '[Function ' + val.name + ']';
  }
}

function printSymbol(val) {
  return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');
}

function printError(val) {
  return '[' + errorToString.call(val) + ']';
}

function printBasicValue(val, printFunctionName, escapeRegex) {
  if (val === true || val === false) return '' + val;
  if (val === undefined) return 'undefined';
  if (val === null) return 'null';

  var typeOf = typeof val;

  if (typeOf === 'number') return printNumber(val);
  if (typeOf === 'string') return '"' + printString(val) + '"';
  if (typeOf === 'function') return printFunction(val, printFunctionName);
  if (typeOf === 'symbol') return printSymbol(val);

  var toStringed = toString.call(val);

  if (toStringed === '[object WeakMap]') return 'WeakMap {}';
  if (toStringed === '[object WeakSet]') return 'WeakSet {}';
  if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') return printFunction(val, printFunctionName);
  if (toStringed === '[object Symbol]') return printSymbol(val);
  if (toStringed === '[object Date]') return toISOString.call(val);
  if (toStringed === '[object Error]') return printError(val);
  if (toStringed === '[object RegExp]') {
    if (escapeRegex) {
      return printString(regExpToString.call(val));
    }
    return regExpToString.call(val);
  };
  if (toStringed === '[object Arguments]' && val.length === 0) return 'Arguments []';
  if (isToStringedArrayType(toStringed) && val.length === 0) return val.constructor.name + ' []';

  if (val instanceof Error) return printError(val);

  return false;
}

function printList(list, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var body = '';

  if (list.length) {
    body += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < list.length; i++) {
      body += innerIndent + print(list[i], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      if (i < list.length - 1) {
        body += ',' + spacing;
      }
    }

    body += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return '[' + body + ']';
}

function printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : 'Arguments ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : val.constructor.name + ' ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Map {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      var key = print(current.value[0], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + key + ' => ' + value;

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var constructor = min ? '' : val.constructor ? val.constructor.name + ' ' : 'Object ';
  var result = constructor + '{';
  var keys = Object.keys(val).sort();
  var symbols = getSymbols(val);

  if (symbols.length) {
    keys = keys.filter(function (key) {
      return !(typeof key === 'symbol' || toString.call(key) === '[object Symbol]');
    }).concat(symbols);
  }

  if (keys.length) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var name = print(key, indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(val[key], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + name + ': ' + value;

      if (i < keys.length - 1) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Set {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      result += innerIndent + print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  refs = refs.slice();
  if (refs.indexOf(val) > -1) {
    return '[Circular]';
  } else {
    refs.push(val);
  }

  currentDepth++;

  var hitMaxDepth = currentDepth > maxDepth;

  if (callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === 'function') {
    return print(val.toJSON(), indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  var toStringed = toString.call(val);
  if (toStringed === '[object Arguments]') {
    return hitMaxDepth ? '[Arguments]' : printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (isToStringedArrayType(toStringed)) {
    return hitMaxDepth ? '[Array]' : printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Map]') {
    return hitMaxDepth ? '[Map]' : printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Set]') {
    return hitMaxDepth ? '[Set]' : printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (typeof val === 'object') {
    return hitMaxDepth ? '[Object]' : printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }
}

function printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var match = false;
  var plugin = void 0;

  for (var p = 0; p < plugins.length; p++) {
    plugin = plugins[p];

    if (plugin.test(val)) {
      match = true;
      break;
    }
  }

  if (!match) {
    return false;
  }

  function boundPrint(val) {
    return print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  function boundIndent(str) {
    var indentation = prevIndent + indent;
    return indentation + str.replace(NEWLINE_REGEXP, '\n' + indentation);
  }

  return plugin.print(val, boundPrint, boundIndent, {
    edgeSpacing: edgeSpacing,
    spacing: spacing
  });
}

function print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var basic = printBasicValue(val, printFunctionName, escapeRegex);
  if (basic) return basic;

  var plugin = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  if (plugin) return plugin;

  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

var DEFAULTS = {
  callToJSON: true,
  indent: 2,
  maxDepth: Infinity,
  min: false,
  plugins: [],
  printFunctionName: true,
  escapeRegex: false
};

function validateOptions(opts) {
  Object.keys(opts).forEach(function (key) {
    if (!DEFAULTS.hasOwnProperty(key)) {
      throw new Error('prettyFormat: Invalid option: ' + key);
    }
  });

  if (opts.min && opts.indent !== undefined && opts.indent !== 0) {
    throw new Error('prettyFormat: Cannot run with min option and indent');
  }
}

function normalizeOptions(opts) {
  var result = {};

  Object.keys(DEFAULTS).forEach(function (key) {
    return result[key] = opts.hasOwnProperty(key) ? opts[key] : DEFAULTS[key];
  });

  if (result.min) {
    result.indent = 0;
  }

  return result;
}

function createIndent(indent) {
  return new Array(indent + 1).join(' ');
}

function prettyFormat(val, opts) {
  if (!opts) {
    opts = DEFAULTS;
  } else {
    validateOptions(opts);
    opts = normalizeOptions(opts);
  }

  var indent = void 0;
  var refs = void 0;
  var prevIndent = '';
  var currentDepth = 0;
  var spacing = opts.min ? ' ' : '\n';
  var edgeSpacing = opts.min ? '' : '\n';

  if (opts && opts.plugins.length) {
    indent = createIndent(opts.indent);
    refs = [];
    var pluginsResult = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
    if (pluginsResult) return pluginsResult;
  }

  var basicResult = printBasicValue(val, opts.printFunctionName, opts.escapeRegex);
  if (basicResult) return basicResult;

  if (!indent) indent = createIndent(opts.indent);
  if (!refs) refs = [];
  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
}

module.exports = prettyFormat;
}, 161, null, "pretty-format/index.js");
__d(/* pretty-format/printString.js */function(global, require, module, exports) {'use strict';

var ESCAPED_CHARACTERS = /(\\|\"|\')/g;

module.exports = function printString(val) {
  return val.replace(ESCAPED_CHARACTERS, '\\$1');
};
}, 162, null, "pretty-format/printString.js");
__d(/* promise/setimmediate/rejection-tracking.js */function(global, require, module, exports) {'use strict';

var Promise = require(159     ); // 159 = ./core

var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];

var enabled = false;
exports.disable = disable;
function disable() {
  enabled = false;
  Promise._10 = null;
  Promise._97 = null;
}

exports.enable = enable;
function enable(options) {
  options = options || {};
  if (enabled) disable();
  enabled = true;
  var id = 0;
  var displayId = 0;
  var rejections = {};
  Promise._10 = function (promise) {
    if (promise._81 === 2 && rejections[promise._72]) {
      if (rejections[promise._72].logged) {
        onHandled(promise._72);
      } else {
        clearTimeout(rejections[promise._72].timeout);
      }
      delete rejections[promise._72];
    }
  };
  Promise._97 = function (promise, err) {
    if (promise._45 === 0) {
      promise._72 = id++;
      rejections[promise._72] = {
        displayId: null,
        error: err,
        timeout: setTimeout(onUnhandled.bind(null, promise._72), matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000),
        logged: false
      };
    }
  };
  function onUnhandled(id) {
    if (options.allRejections || matchWhitelist(rejections[id].error, options.whitelist || DEFAULT_WHITELIST)) {
      rejections[id].displayId = displayId++;
      if (options.onUnhandled) {
        rejections[id].logged = true;
        options.onUnhandled(rejections[id].displayId, rejections[id].error);
      } else {
        rejections[id].logged = true;
        logError(rejections[id].displayId, rejections[id].error);
      }
    }
  }
  function onHandled(id) {
    if (rejections[id].logged) {
      if (options.onHandled) {
        options.onHandled(rejections[id].displayId, rejections[id].error);
      } else if (!rejections[id].onUnhandled) {
        console.warn('Promise Rejection Handled (id: ' + rejections[id].displayId + '):');
        console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' + rejections[id].displayId + '.');
      }
    }
  }
}

function logError(id, error) {
  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
  var errStr = (error && (error.stack || error)) + '';
  errStr.split('\n').forEach(function (line) {
    console.warn('  ' + line);
  });
}

function matchWhitelist(error, list) {
  return list.some(function (cls) {
    return error instanceof cls;
  });
}
}, 163, null, "promise/setimmediate/rejection-tracking.js");
__d(/* regenerator-runtime/runtime.js */function(global, require, module, exports) {

!function (global) {
  "use strict";

  var hasOwn = Object.prototype.hasOwnProperty;
  var undefined;
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      module.exports = runtime;
    }

    return;
  }

  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  var ContinueSentinel = {};

  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  runtime.awrap = function (arg) {
    return new AwaitArgument(arg);
  };

  function AwaitArgument(arg) {
    this.arg = arg;
  }

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value instanceof AwaitArgument) {
          return Promise.resolve(value.arg).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof process === "object" && process.domain) {
      invoke = process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    }

    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        return doneResult();
      }

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          if (method === "return" || method === "throw" && delegate.iterator[method] === undefined) {
            context.delegate = null;

            var returnMethod = delegate.iterator["return"];
            if (returnMethod) {
              var record = tryCatch(returnMethod, delegate.iterator, arg);
              if (record.type === "throw") {
                method = "throw";
                arg = record.arg;
                continue;
              }
            }

            if (method === "return") {
              continue;
            }
          }

          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);

          if (record.type === "throw") {
            context.delegate = null;

            method = "throw";
            arg = record.arg;
            continue;
          }

          method = "next";
          arg = undefined;

          var info = record.arg;
          if (info.done) {
            context[delegate.resultName] = info.value;
            context.next = delegate.nextLoc;
          } else {
            state = GenStateSuspendedYield;
            return info;
          }

          context.delegate = null;
        }

        if (method === "next") {
          context.sent = context._sent = arg;
        } else if (method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw arg;
          }

          if (context.dispatchException(arg)) {
            method = "next";
            arg = undefined;
          }
        } else if (method === "return") {
          context.abrupt("return", arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          var info = {
            value: record.arg,
            done: context.done
          };

          if (record.arg === ContinueSentinel) {
            if (context.delegate && method === "next") {
              arg = undefined;
            }
          } else {
            return info;
          }
        } else if (record.type === "throw") {
          state = GenStateCompleted;

          method = "throw";
          arg = record.arg;
        }
      }
    };
  }

  defineIteratorMethods(Gp);

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp[toStringTagSymbol] = "Generator";

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function stop() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;
        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.next = finallyEntry.finallyLoc;
      } else {
        this.complete(record);
      }

      return ContinueSentinel;
    },

    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = record.arg;
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }
    },

    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      throw new Error("illegal catch attempt");
    },

    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      return ContinueSentinel;
    }
  };
}(typeof global === "object" ? global : typeof window === "object" ? window : typeof self === "object" ? self : this);
}, 164, null, "regenerator-runtime/runtime.js");
__d(/* XMLHttpRequest */function(global, require, module, exports) {
'use strict';

var EventTarget = require(147                ); // 147 = event-target-shim
var RCTNetworking = require(166            ); // 166 = RCTNetworking

var base64 = require(146        ); // 146 = base64-js
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var UNSENT = 0;
var OPENED = 1;
var HEADERS_RECEIVED = 2;
var LOADING = 3;
var DONE = 4;

var SUPPORTED_RESPONSE_TYPES = {
  arraybuffer: typeof global.ArrayBuffer === 'function',
  blob: typeof global.Blob === 'function',
  document: false,
  json: true,
  text: true,
  '': true
};

var REQUEST_EVENTS = ['abort', 'error', 'load', 'loadstart', 'progress', 'timeout', 'loadend'];

var XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');

var XMLHttpRequestEventTarget = function (_EventTarget) {
  babelHelpers.inherits(XMLHttpRequestEventTarget, _EventTarget);

  function XMLHttpRequestEventTarget() {
    babelHelpers.classCallCheck(this, XMLHttpRequestEventTarget);
    return babelHelpers.possibleConstructorReturn(this, (XMLHttpRequestEventTarget.__proto__ || Object.getPrototypeOf(XMLHttpRequestEventTarget)).apply(this, arguments));
  }

  return XMLHttpRequestEventTarget;
}(EventTarget.apply(undefined, REQUEST_EVENTS));

var XMLHttpRequest = function (_EventTarget2) {
  babelHelpers.inherits(XMLHttpRequest, _EventTarget2);
  babelHelpers.createClass(XMLHttpRequest, null, [{
    key: 'setInterceptor',
    value: function setInterceptor(interceptor) {
      XMLHttpRequest._interceptor = interceptor;
    }
  }]);

  function XMLHttpRequest() {
    babelHelpers.classCallCheck(this, XMLHttpRequest);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (XMLHttpRequest.__proto__ || Object.getPrototypeOf(XMLHttpRequest)).call(this));

    _this2.UNSENT = UNSENT;
    _this2.OPENED = OPENED;
    _this2.HEADERS_RECEIVED = HEADERS_RECEIVED;
    _this2.LOADING = LOADING;
    _this2.DONE = DONE;
    _this2.readyState = UNSENT;
    _this2.status = 0;
    _this2.timeout = 0;
    _this2.withCredentials = false;
    _this2.upload = new XMLHttpRequestEventTarget();
    _this2._aborted = false;
    _this2._hasError = false;
    _this2._method = null;
    _this2._response = '';
    _this2._url = null;
    _this2._timedOut = false;
    _this2._trackingName = 'unknown';
    _this2._incrementalEvents = false;

    _this2._reset();
    return _this2;
  }

  babelHelpers.createClass(XMLHttpRequest, [{
    key: '_reset',
    value: function _reset() {
      this.readyState = this.UNSENT;
      this.responseHeaders = undefined;
      this.status = 0;
      delete this.responseURL;

      this._requestId = null;

      this._cachedResponse = undefined;
      this._hasError = false;
      this._headers = {};
      this._response = '';
      this._responseType = '';
      this._sent = false;
      this._lowerCaseResponseHeaders = {};

      this._clearSubscriptions();
      this._timedOut = false;
    }
  }, {
    key: '__didCreateRequest',
    value: function __didCreateRequest(requestId) {
      this._requestId = requestId;

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
    }
  }, {
    key: '__didUploadProgress',
    value: function __didUploadProgress(requestId, progress, total) {
      if (requestId === this._requestId) {
        this.upload.dispatchEvent({
          type: 'progress',
          lengthComputable: true,
          loaded: progress,
          total: total
        });
      }
    }
  }, {
    key: '__didReceiveResponse',
    value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
      if (requestId === this._requestId) {
        this.status = status;
        this.setResponseHeaders(responseHeaders);
        this.setReadyState(this.HEADERS_RECEIVED);
        if (responseURL || responseURL === '') {
          this.responseURL = responseURL;
        } else {
          delete this.responseURL;
        }

        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
      }
    }
  }, {
    key: '__didReceiveData',
    value: function __didReceiveData(requestId, response) {
      if (requestId !== this._requestId) {
        return;
      }
      this._response = response;
      this._cachedResponse = undefined;
      this.setReadyState(this.LOADING);

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
    }
  }, {
    key: '__didReceiveIncrementalData',
    value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
      if (requestId !== this._requestId) {
        return;
      }
      if (!this._response) {
        this._response = responseText;
      } else {
        this._response += responseText;
      }

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);

      this.setReadyState(this.LOADING);
      this.__didReceiveDataProgress(requestId, progress, total);
    }
  }, {
    key: '__didReceiveDataProgress',
    value: function __didReceiveDataProgress(requestId, loaded, total) {
      if (requestId !== this._requestId) {
        return;
      }
      this.dispatchEvent({
        type: 'progress',
        lengthComputable: total >= 0,
        loaded: loaded,
        total: total
      });
    }
  }, {
    key: '__didCompleteResponse',
    value: function __didCompleteResponse(requestId, error, timeOutError) {
      if (requestId === this._requestId) {
        if (error) {
          if (this._responseType === '' || this._responseType === 'text') {
            this._response = error;
          }
          this._hasError = true;
          if (timeOutError) {
            this._timedOut = true;
          }
        }
        this._clearSubscriptions();
        this._requestId = null;
        this.setReadyState(this.DONE);

        if (error) {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
        } else {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
        }
      }
    }
  }, {
    key: '_clearSubscriptions',
    value: function _clearSubscriptions() {
      (this._subscriptions || []).forEach(function (sub) {
        sub.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: 'getAllResponseHeaders',
    value: function getAllResponseHeaders() {
      if (!this.responseHeaders) {
        return null;
      }
      var headers = this.responseHeaders || {};
      return Object.keys(headers).map(function (headerName) {
        return headerName + ': ' + headers[headerName];
      }).join('\r\n');
    }
  }, {
    key: 'getResponseHeader',
    value: function getResponseHeader(header) {
      var value = this._lowerCaseResponseHeaders[header.toLowerCase()];
      return value !== undefined ? value : null;
    }
  }, {
    key: 'setRequestHeader',
    value: function setRequestHeader(header, value) {
      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      this._headers[header.toLowerCase()] = String(value);
    }
  }, {
    key: 'setTrackingName',
    value: function setTrackingName(trackingName) {
      this._trackingName = trackingName;
      return this;
    }
  }, {
    key: 'open',
    value: function open(method, url, async) {
      if (this.readyState !== this.UNSENT) {
        throw new Error('Cannot open, already sending');
      }
      if (async !== undefined && !async) {
        throw new Error('Synchronous http requests are not supported');
      }
      if (!url) {
        throw new Error('Cannot load an empty url');
      }
      this._method = method.toUpperCase();
      this._url = url;
      this._aborted = false;
      this.setReadyState(this.OPENED);
    }
  }, {
    key: 'send',
    value: function send(data) {
      var _this3 = this;

      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      if (this._sent) {
        throw new Error('Request has already been sent');
      }
      this._sent = true;
      var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;

      this._subscriptions.push(RCTNetworking.addListener('didSendNetworkData', function (args) {
        return _this3.__didUploadProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkResponse', function (args) {
        return _this3.__didReceiveResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkData', function (args) {
        return _this3.__didReceiveData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkIncrementalData', function (args) {
        return _this3.__didReceiveIncrementalData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkDataProgress', function (args) {
        return _this3.__didReceiveDataProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didCompleteNetworkResponse', function (args) {
        return _this3.__didCompleteResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));

      var nativeResponseType = 'text';
      if (this._responseType === 'arraybuffer' || this._responseType === 'blob') {
        nativeResponseType = 'base64';
      }

      invariant(this._method, 'Request method needs to be defined.');
      invariant(this._url, 'Request URL needs to be defined.');
      RCTNetworking.sendRequest(this._method, this._trackingName, this._url, this._headers, data, nativeResponseType, incrementalEvents, this.timeout, this.__didCreateRequest.bind(this), this.withCredentials);
    }
  }, {
    key: 'abort',
    value: function abort() {
      this._aborted = true;
      if (this._requestId) {
        RCTNetworking.abortRequest(this._requestId);
      }

      if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
        this._reset();
        this.setReadyState(this.DONE);
      }

      this._reset();
    }
  }, {
    key: 'setResponseHeaders',
    value: function setResponseHeaders(responseHeaders) {
      this.responseHeaders = responseHeaders || null;
      var headers = responseHeaders || {};
      this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
        return lcaseHeaders;
      }, {});
    }
  }, {
    key: 'setReadyState',
    value: function setReadyState(newState) {
      this.readyState = newState;
      this.dispatchEvent({ type: 'readystatechange' });
      if (newState === this.DONE) {
        if (this._aborted) {
          this.dispatchEvent({ type: 'abort' });
        } else if (this._hasError) {
          if (this._timedOut) {
            this.dispatchEvent({ type: 'timeout' });
          } else {
            this.dispatchEvent({ type: 'error' });
          }
        } else {
          this.dispatchEvent({ type: 'load' });
        }
        this.dispatchEvent({ type: 'loadend' });
      }
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, listener) {
      if (type === 'readystatechange' || type === 'progress') {
        this._incrementalEvents = true;
      }
      babelHelpers.get(XMLHttpRequest.prototype.__proto__ || Object.getPrototypeOf(XMLHttpRequest.prototype), 'addEventListener', this).call(this, type, listener);
    }
  }, {
    key: 'responseType',
    get: function get() {
      return this._responseType;
    },
    set: function set(responseType) {
      if (this._sent) {
        throw new Error('Failed to set the \'responseType\' property on \'XMLHttpRequest\': The ' + 'response type cannot be set after the request has been sent.');
      }
      if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
        warning(false, 'The provided value \'' + responseType + '\' is not a valid \'responseType\'.');
        return;
      }

      invariant(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', 'The provided value \'' + responseType + '\' is unsupported in this environment.');
      this._responseType = responseType;
    }
  }, {
    key: 'responseText',
    get: function get() {
      if (this._responseType !== '' && this._responseType !== 'text') {
        throw new Error("The 'responseText' property is only available if 'responseType' " + ('is set to \'\' or \'text\', but it is \'' + this._responseType + '\'.'));
      }
      if (this.readyState < LOADING) {
        return '';
      }
      return this._response;
    }
  }, {
    key: 'response',
    get: function get() {
      var responseType = this.responseType;

      if (responseType === '' || responseType === 'text') {
        return this.readyState < LOADING || this._hasError ? '' : this._response;
      }

      if (this.readyState !== DONE) {
        return null;
      }

      if (this._cachedResponse !== undefined) {
        return this._cachedResponse;
      }

      switch (responseType) {
        case 'document':
          this._cachedResponse = null;
          break;

        case 'arraybuffer':
          this._cachedResponse = base64.toByteArray(this._response).buffer;
          break;

        case 'blob':
          this._cachedResponse = new global.Blob([base64.toByteArray(this._response).buffer], { type: this.getResponseHeader('content-type') || '' });
          break;

        case 'json':
          try {
            this._cachedResponse = JSON.parse(this._response);
          } catch (_) {
            this._cachedResponse = null;
          }
          break;

        default:
          this._cachedResponse = null;
      }

      return this._cachedResponse;
    }
  }]);
  return XMLHttpRequest;
}(EventTarget.apply(undefined, babelHelpers.toConsumableArray(XHR_EVENTS)));

XMLHttpRequest.UNSENT = UNSENT;
XMLHttpRequest.OPENED = OPENED;
XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
XMLHttpRequest.LOADING = LOADING;
XMLHttpRequest.DONE = DONE;
XMLHttpRequest._interceptor = null;


module.exports = XMLHttpRequest;
}, 165, null, "XMLHttpRequest");
__d(/* RCTNetworking */function(global, require, module, exports) {
'use strict';

var FormData = require(167       ); // 167 = FormData
var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var RCTNetworkingNative = require(48             ).Networking; // 48 = NativeModules
var convertRequestBody = require(168                 ); // 168 = convertRequestBody

function convertHeadersMapToArray(headers) {
  var headerArray = [];
  for (var name in headers) {
    headerArray.push([name, headers[name]]);
  }
  return headerArray;
}

var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var RCTNetworking = function (_NativeEventEmitter) {
  babelHelpers.inherits(RCTNetworking, _NativeEventEmitter);

  function RCTNetworking() {
    babelHelpers.classCallCheck(this, RCTNetworking);
    return babelHelpers.possibleConstructorReturn(this, (RCTNetworking.__proto__ || Object.getPrototypeOf(RCTNetworking)).call(this, RCTNetworkingNative));
  }

  babelHelpers.createClass(RCTNetworking, [{
    key: 'sendRequest',
    value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback) {
      var body = convertRequestBody(data);
      if (body && body.formData) {
        body.formData = body.formData.map(function (part) {
          return babelHelpers.extends({}, part, {
            headers: convertHeadersMapToArray(part.headers)
          });
        });
      }
      var requestId = generateRequestId();
      RCTNetworkingNative.sendRequest(method, url, requestId, convertHeadersMapToArray(headers), babelHelpers.extends({}, body, { trackingName: trackingName }), responseType, incrementalUpdates, timeout);
      callback(requestId);
    }
  }, {
    key: 'abortRequest',
    value: function abortRequest(requestId) {
      RCTNetworkingNative.abortRequest(requestId);
    }
  }, {
    key: 'clearCookies',
    value: function clearCookies(callback) {
      RCTNetworkingNative.clearCookies(callback);
    }
  }]);
  return RCTNetworking;
}(NativeEventEmitter);

module.exports = new RCTNetworking();
}, 166, null, "RCTNetworking");
__d(/* FormData */function(global, require, module, exports) {
'use strict';

var FormData = function () {
  function FormData() {
    babelHelpers.classCallCheck(this, FormData);

    this._parts = [];
  }

  babelHelpers.createClass(FormData, [{
    key: 'append',
    value: function append(key, value) {
      this._parts.push([key, value]);
    }
  }, {
    key: 'getParts',
    value: function getParts() {
      return this._parts.map(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            name = _ref2[0],
            value = _ref2[1];

        var contentDisposition = 'form-data; name="' + name + '"';

        var headers = { 'content-disposition': contentDisposition };

        if (typeof value === 'object' && value) {
          if (typeof value.name === 'string') {
            headers['content-disposition'] += '; filename="' + value.name + '"';
          }
          if (typeof value.type === 'string') {
            headers['content-type'] = value.type;
          }
          return babelHelpers.extends({}, value, { headers: headers, fieldName: name });
        }

        return { string: String(value), headers: headers, fieldName: name };
      });
    }
  }]);
  return FormData;
}();

module.exports = FormData;
}, 167, null, "FormData");
__d(/* convertRequestBody */function(global, require, module, exports) {
'use strict';

var binaryToBase64 = require(145             ); // 145 = binaryToBase64

var FormData = require(167       ); // 167 = FormData

function convertRequestBody(body) {
  if (typeof body === 'string') {
    return { string: body };
  }
  if (body instanceof FormData) {
    return { formData: body.getParts() };
  }
  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {
    return { base64: binaryToBase64(body) };
  }
  return body;
}

module.exports = convertRequestBody;
}, 168, null, "convertRequestBody");
__d(/* Geolocation */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var RCTLocationObserver = require(48             ).LocationObserver; // 48 = NativeModules

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var logError = require(80        ); // 80 = logError
var warning = require(19                ); // 19 = fbjs/lib/warning

var LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);

var subscriptions = [];
var updatesEnabled = false;

var Geolocation = {
  getCurrentPosition: function getCurrentPosition(geo_success, geo_error, geo_options) {
    invariant(typeof geo_success === 'function', 'Must provide a valid geo_success callback.');
    RCTLocationObserver.getCurrentPosition(geo_options || {}, geo_success, geo_error || logError);
  },

  watchPosition: function watchPosition(success, error, options) {
    if (!updatesEnabled) {
      RCTLocationObserver.startObserving(options || {});
      updatesEnabled = true;
    }
    var watchID = subscriptions.length;
    subscriptions.push([LocationEventEmitter.addListener('geolocationDidChange', success), error ? LocationEventEmitter.addListener('geolocationError', error) : null]);
    return watchID;
  },

  clearWatch: function clearWatch(watchID) {
    var sub = subscriptions[watchID];
    if (!sub) {
      return;
    }

    sub[0].remove();

    var sub1 = sub[1];sub1 && sub1.remove();
    subscriptions[watchID] = undefined;
    var noWatchers = true;
    for (var ii = 0; ii < subscriptions.length; ii++) {
      if (subscriptions[ii]) {
        noWatchers = false;
      }
    }
    if (noWatchers) {
      Geolocation.stopObserving();
    }
  },

  stopObserving: function stopObserving() {
    if (updatesEnabled) {
      RCTLocationObserver.stopObserving();
      updatesEnabled = false;
      for (var ii = 0; ii < subscriptions.length; ii++) {
        var sub = subscriptions[ii];
        if (sub) {
          warning('Called stopObserving with existing subscriptions.');
          sub[0].remove();

          var sub1 = sub[1];sub1 && sub1.remove();
        }
      }
      subscriptions = [];
    }
  }
};

module.exports = Geolocation;
}, 169, null, "Geolocation");
__d(/* Map */function(global, require, module, exports) {

'use strict';

var _shouldPolyfillES6Collection = require(171                           ); // 171 = _shouldPolyfillES6Collection
var guid = require(172   ); // 172 = guid
var isNode = require(173              ); // 173 = fbjs/lib/isNode
var toIterator = require(174         ); // 174 = toIterator

module.exports = function (global, undefined) {
  if (!_shouldPolyfillES6Collection('Map')) {
    return global.Map;
  }

  var KIND_KEY = 'key';
  var KIND_VALUE = 'value';
  var KIND_KEY_VALUE = 'key+value';

  var KEY_PREFIX = '$map_';

  var SECRET_SIZE_PROP;
  if (__DEV__) {
    SECRET_SIZE_PROP = '$size' + guid();
  }

  var OLD_IE_HASH_PREFIX = 'IE_HASH_';

  var Map = function () {
    function Map(iterable) {
      babelHelpers.classCallCheck(this, Map);

      if (!isObject(this)) {
        throw new TypeError('Wrong map object type.');
      }

      initMap(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          if (!isObject(next.value)) {
            throw new TypeError('Expected iterable items to be pair objects.');
          }
          this.set(next.value[0], next.value[1]);
        }
      }
    }

    babelHelpers.createClass(Map, [{
      key: 'clear',
      value: function clear() {
        initMap(this);
      }
    }, {
      key: 'has',
      value: function has(key) {
        var index = getIndex(this, key);
        return !!(index != null && this._mapData[index]);
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        var index = getIndex(this, key);

        if (index != null && this._mapData[index]) {
          this._mapData[index][1] = value;
        } else {
          index = this._mapData.push([key, value]) - 1;
          setIndex(this, key, index);
          if (__DEV__) {
            this[SECRET_SIZE_PROP] += 1;
          } else {
            this.size += 1;
          }
        }

        return this;
      }
    }, {
      key: 'get',
      value: function get(key) {
        var index = getIndex(this, key);
        if (index == null) {
          return undefined;
        } else {
          return this._mapData[index][1];
        }
      }
    }, {
      key: 'delete',
      value: function _delete(key) {
        var index = getIndex(this, key);
        if (index != null && this._mapData[index]) {
          setIndex(this, key, undefined);
          this._mapData[index] = undefined;
          if (__DEV__) {
            this[SECRET_SIZE_PROP] -= 1;
          } else {
            this.size -= 1;
          }
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: 'entries',
      value: function entries() {
        return new MapIterator(this, KIND_KEY_VALUE);
      }
    }, {
      key: 'keys',
      value: function keys() {
        return new MapIterator(this, KIND_KEY);
      }
    }, {
      key: 'values',
      value: function values() {
        return new MapIterator(this, KIND_VALUE);
      }
    }, {
      key: 'forEach',
      value: function forEach(callback, thisArg) {
        if (typeof callback !== 'function') {
          throw new TypeError('Callback must be callable.');
        }

        var boundCallback = callback.bind(thisArg || undefined);
        var mapData = this._mapData;

        for (var i = 0; i < mapData.length; i++) {
          var entry = mapData[i];
          if (entry != null) {
            boundCallback(entry[1], entry[0], this);
          }
        }
      }
    }]);
    return Map;
  }();

  Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;

  var MapIterator = function () {
    function MapIterator(map, kind) {
      babelHelpers.classCallCheck(this, MapIterator);

      if (!(isObject(map) && map._mapData)) {
        throw new TypeError('Object is not a map.');
      }

      if ([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1) {
        throw new Error('Invalid iteration kind.');
      }

      this._map = map;
      this._nextIndex = 0;
      this._kind = kind;
    }

    babelHelpers.createClass(MapIterator, [{
      key: 'next',
      value: function next() {
        if (!this instanceof Map) {
          throw new TypeError('Expected to be called on a MapIterator.');
        }

        var map = this._map;
        var index = this._nextIndex;
        var kind = this._kind;

        if (map == null) {
          return createIterResultObject(undefined, true);
        }

        var entries = map._mapData;

        while (index < entries.length) {
          var record = entries[index];

          index += 1;
          this._nextIndex = index;

          if (record) {
            if (kind === KIND_KEY) {
              return createIterResultObject(record[0], false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(record[1], false);
            } else if (kind) {
              return createIterResultObject(record, false);
            }
          }
        }

        this._map = undefined;

        return createIterResultObject(undefined, true);
      }
    }]);
    return MapIterator;
  }();

  MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function () {
    return this;
  };

  function getIndex(map, key) {
    if (isObject(key)) {
      var hash = getHash(key);
      return map._objectIndex[hash];
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        return map._stringIndex[prefixedKey];
      } else {
        return map._otherIndex[prefixedKey];
      }
    }
  }

  function setIndex(map, key, index) {
    var shouldDelete = index == null;

    if (isObject(key)) {
      var hash = getHash(key);
      if (shouldDelete) {
        delete map._objectIndex[hash];
      } else {
        map._objectIndex[hash] = index;
      }
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        if (shouldDelete) {
          delete map._stringIndex[prefixedKey];
        } else {
          map._stringIndex[prefixedKey] = index;
        }
      } else {
        if (shouldDelete) {
          delete map._otherIndex[prefixedKey];
        } else {
          map._otherIndex[prefixedKey] = index;
        }
      }
    }
  }

  function initMap(map) {
    map._mapData = [];

    map._objectIndex = {};

    map._stringIndex = {};

    map._otherIndex = {};

    if (__DEV__) {
      if (isES5) {
        if (map.hasOwnProperty(SECRET_SIZE_PROP)) {
          map[SECRET_SIZE_PROP] = 0;
        } else {
          Object.defineProperty(map, SECRET_SIZE_PROP, {
            value: 0,
            writable: true
          });
          Object.defineProperty(map, 'size', {
            set: function set(v) {
              console.error('PLEASE FIX ME: You are changing the map size property which ' + 'should not be writable and will break in production.');
              throw new Error('The map size property is not writable.');
            },
            get: function get() {
              return map[SECRET_SIZE_PROP];
            }
          });
        }

        return;
      }
    }

    map.size = 0;
  }

  function isObject(o) {
    return o != null && (typeof o === 'object' || typeof o === 'function');
  }

  function createIterResultObject(value, done) {
    return { value: value, done: done };
  }

  var isES5 = function () {
    try {
      Object.defineProperty({}, 'x', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function isExtensible(o) {
    if (!isES5) {
      return true;
    } else {
      return Object.isExtensible(o);
    }
  }

  function getIENodeHash(node) {
    var uniqueID;
    switch (node.nodeType) {
      case 1:
        uniqueID = node.uniqueID;
        break;
      case 9:
        uniqueID = node.documentElement.uniqueID;
        break;
      default:
        return null;
    }

    if (uniqueID) {
      return OLD_IE_HASH_PREFIX + uniqueID;
    } else {
      return null;
    }
  }

  var getHash = function () {
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    var hashProperty = guid();
    var hashCounter = 0;

    return function getHash(o) {
      if (o[hashProperty]) {
        return o[hashProperty];
      } else if (!isES5 && o.propertyIsEnumerable && o.propertyIsEnumerable[hashProperty]) {
        return o.propertyIsEnumerable[hashProperty];
      } else if (!isES5 && isNode(o) && getIENodeHash(o)) {
        return getIENodeHash(o);
      } else if (!isES5 && o[hashProperty]) {
        return o[hashProperty];
      }

      if (isExtensible(o)) {
        hashCounter += 1;
        if (isES5) {
          Object.defineProperty(o, hashProperty, {
            enumerable: false,
            writable: false,
            configurable: false,
            value: hashCounter
          });
        } else if (o.propertyIsEnumerable) {
          o.propertyIsEnumerable = function () {
            return propIsEnumerable.apply(this, arguments);
          };
          o.propertyIsEnumerable[hashProperty] = hashCounter;
        } else if (isNode(o)) {
          o[hashProperty] = hashCounter;
        } else {
          throw new Error('Unable to set a non-enumerable property on object.');
        }
        return hashCounter;
      } else {
        throw new Error('Non-extensible objects are not allowed as keys.');
      }
    };
  }();

  return Map;
}(Function('return this')());
}, 170, null, "Map");
__d(/* _shouldPolyfillES6Collection */function(global, require, module, exports) {
'use strict';

function shouldPolyfillES6Collection(collectionName) {
  var Collection = global[collectionName];
  if (Collection == null) {
    return true;
  }

  if (typeof global.Symbol !== 'function') {
    return true;
  }

  var proto = Collection.prototype;

  return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';
}

module.exports = shouldPolyfillES6Collection;
}, 171, null, "_shouldPolyfillES6Collection");
__d(/* guid */function(global, require, module, exports) {

'use strict';

function guid() {
  return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');
}

module.exports = guid;
}, 172, null, "guid");
__d(/* fbjs/lib/isNode.js */function(global, require, module, exports) {'use strict';

function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
}, 173, null, "fbjs/lib/isNode.js");
__d(/* toIterator */function(global, require, module, exports) {
'use strict';

var KIND_KEY = 'key';
var KIND_VALUE = 'value';
var KIND_KEY_VAL = 'key+value';

var ITERATOR_SYMBOL = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';

var toIterator = function () {
  if (!(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])) {
    return function () {
      var ArrayIterator = function () {
        function ArrayIterator(array, kind) {
          babelHelpers.classCallCheck(this, ArrayIterator);

          if (!Array.isArray(array)) {
            throw new TypeError('Object is not an Array');
          }
          this._iteratedObject = array;
          this._kind = kind;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(ArrayIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof ArrayIterator) {
              throw new TypeError('Object is not an ArrayIterator');
            }

            if (this._iteratedObject == null) {
              return createIterResultObject(undefined, true);
            }

            var array = this._iteratedObject;
            var len = this._iteratedObject.length;
            var index = this._nextIndex;
            var kind = this._kind;

            if (index >= len) {
              this._iteratedObject = undefined;
              return createIterResultObject(undefined, true);
            }

            this._nextIndex = index + 1;

            if (kind === KIND_KEY) {
              return createIterResultObject(index, false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(array[index], false);
            } else if (kind === KIND_KEY_VAL) {
              return createIterResultObject([index, array[index]], false);
            }
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return ArrayIterator;
      }();

      var StringIterator = function () {
        function StringIterator(string) {
          babelHelpers.classCallCheck(this, StringIterator);

          if (typeof string !== 'string') {
            throw new TypeError('Object is not a string');
          }
          this._iteratedString = string;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(StringIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof StringIterator) {
              throw new TypeError('Object is not a StringIterator');
            }

            if (this._iteratedString == null) {
              return createIterResultObject(undefined, true);
            }

            var index = this._nextIndex;
            var s = this._iteratedString;
            var len = s.length;

            if (index >= len) {
              this._iteratedString = undefined;
              return createIterResultObject(undefined, true);
            }

            var ret;
            var first = s.charCodeAt(index);

            if (first < 0xD800 || first > 0xDBFF || index + 1 === len) {
              ret = s[index];
            } else {
              var second = s.charCodeAt(index + 1);
              if (second < 0xDC00 || second > 0xDFFF) {
                ret = s[index];
              } else {
                ret = s[index] + s[index + 1];
              }
            }

            this._nextIndex = index + ret.length;

            return createIterResultObject(ret, false);
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return StringIterator;
      }();

      function createIterResultObject(value, done) {
        return { value: value, done: done };
      }

      return function (object, kind) {
        if (typeof object === 'string') {
          return new StringIterator(object);
        } else if (Array.isArray(object)) {
          return new ArrayIterator(object, kind || KIND_VALUE);
        } else {
          return object[ITERATOR_SYMBOL]();
        }
      };
    }();
  } else {
    return function (object) {
      return object[ITERATOR_SYMBOL]();
    };
  }
}();

babelHelpers.extends(toIterator, {
  KIND_KEY: KIND_KEY,
  KIND_VALUE: KIND_VALUE,
  KIND_KEY_VAL: KIND_KEY_VAL,
  ITERATOR_SYMBOL: ITERATOR_SYMBOL
});

module.exports = toIterator;
}, 174, null, "toIterator");
__d(/* Set */function(global, require, module, exports) {

'use strict';

var Map = require(170  ); // 170 = Map

var _shouldPolyfillES6Collection = require(171                           ); // 171 = _shouldPolyfillES6Collection
var toIterator = require(174         ); // 174 = toIterator

module.exports = function (global) {
  if (!_shouldPolyfillES6Collection('Set')) {
    return global.Set;
  }

  var Set = function () {
    function Set(iterable) {
      babelHelpers.classCallCheck(this, Set);

      if (this == null || typeof this !== 'object' && typeof this !== 'function') {
        throw new TypeError('Wrong set object type.');
      }

      initSet(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          this.add(next.value);
        }
      }
    }

    babelHelpers.createClass(Set, [{
      key: 'add',
      value: function add(value) {
        this._map.set(value, value);
        this.size = this._map.size;
        return this;
      }
    }, {
      key: 'clear',
      value: function clear() {
        initSet(this);
      }
    }, {
      key: 'delete',
      value: function _delete(value) {
        var ret = this._map.delete(value);
        this.size = this._map.size;
        return ret;
      }
    }, {
      key: 'entries',
      value: function entries() {
        return this._map.entries();
      }
    }, {
      key: 'forEach',
      value: function forEach(callback) {
        var thisArg = arguments[1];
        var it = this._map.keys();
        var next;
        while (!(next = it.next()).done) {
          callback.call(thisArg, next.value, next.value, this);
        }
      }
    }, {
      key: 'has',
      value: function has(value) {
        return this._map.has(value);
      }
    }, {
      key: 'values',
      value: function values() {
        return this._map.values();
      }
    }]);
    return Set;
  }();

  Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;

  Set.prototype.keys = Set.prototype.values;

  function initSet(set) {
    set._map = new Map();
    set.size = set._map.size;
  }

  return Set;
}(Function('return this')());
}, 175, null, "Set");
__d(/* setupDevtools */function(global, require, module, exports) {
'use strict';

if (__DEV__) {
  var AppState = require(79        ); // 79 = AppState

  var _require = require(48             ), // 48 = NativeModules
      PlatformConstants = _require.PlatformConstants;

  var _require2 = require(177                  ), // 177 = react-devtools-core
      connectToDevTools = _require2.connectToDevTools;

  connectToDevTools({
    isAppActive: function isAppActive() {
      return AppState.currentState !== 'background';
    },

    host: PlatformConstants && PlatformConstants.ServerHost ? PlatformConstants.ServerHost.split(':')[0] : 'localhost',

    port: window.__REACT_DEVTOOLS_PORT__,
    resolveRNStyle: require(128           ) // 128 = flattenStyle
  });
}
}, 176, null, "setupDevtools");
__d(/* react-devtools-core/build/backend.js */function(global, require, module, exports) {!function (root, factory) {
    "object" == typeof exports && "object" == typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define([], factory) : "object" == typeof exports ? exports.ReactDevToolsBackend = factory() : root.ReactDevToolsBackend = factory();
}(this, function () {
    return function (modules) {
        function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) return installedModules[moduleId].exports;
            var module = installedModules[moduleId] = {
                exports: {},
                id: moduleId,
                loaded: !1
            };
            return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), module.loaded = !0, module.exports;
        }
        var installedModules = {};
        return __webpack_require__.m = modules, __webpack_require__.c = installedModules, __webpack_require__.p = "", __webpack_require__(0);
    }([function (module, exports, __webpack_require__) {
        "use strict";

        function connectToDevTools(options) {
            function scheduleRetry() {
                setTimeout(function () {
                    return connectToDevTools(options);
                }, 2e3);
            }
            function handleClose() {
                hasClosed || (hasClosed = !0, scheduleRetry(), closeListeners.forEach(function (fn) {
                    return fn();
                }));
            }
            function handleMessage(evt) {
                var data;
                if (0 !== evt.data.indexOf("eval:")) {
                    try {
                        data = JSON.parse(evt.data);
                    } catch (e) {
                        return void console.error("failed to parse json: " + evt.data);
                    }
                    messageListeners.forEach(function (fn) {
                        try {
                            fn(data);
                        } catch (e) {
                            throw console.log(data), e;
                        }
                    });
                }
            }
            var _ref = options || {},
                _ref$host = _ref.host,
                host = void 0 === _ref$host ? "localhost" : _ref$host,
                _ref$port = _ref.port,
                port = void 0 === _ref$port ? 8097 : _ref$port,
                _ref$resolveRNStyle = _ref.resolveRNStyle,
                resolveRNStyle = void 0 === _ref$resolveRNStyle ? null : _ref$resolveRNStyle,
                _ref$isAppActive = _ref.isAppActive,
                isAppActive = void 0 === _ref$isAppActive ? function () {
                return !0;
            } : _ref$isAppActive;
            if (!isAppActive()) return void scheduleRetry();
            var messageListeners = [],
                closeListeners = [],
                uri = "ws://" + host + ":" + port,
                ws = new window.WebSocket(uri);
            ws.onclose = handleClose, ws.onerror = handleClose, ws.onmessage = handleMessage, ws.onopen = function () {
                var wall = {
                    listen: function listen(fn) {
                        messageListeners.push(fn);
                    },
                    onClose: function onClose(fn) {
                        closeListeners.push(fn);
                    },
                    send: function send(data) {
                        ws.send(JSON.stringify(data));
                    }
                };
                setupBackend(wall, resolveRNStyle);
            };
            var hasClosed = !1;
        }
        function setupBackend(wall, resolveRNStyle) {
            wall.onClose(function () {
                agent && agent.emit("shutdown"), window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit("shutdown"), bridge = null, agent = null, console.log("closing devtools");
            });
            var bridge = new Bridge(wall),
                agent = new Agent(window, {
                rnStyle: !!resolveRNStyle,
                rnStyleMeasure: !!resolveRNStyle
            });
            agent.addBridge(bridge), resolveRNStyle && setupRNStyle(bridge, agent, resolveRNStyle), setupRelay(bridge, agent, window.__REACT_DEVTOOLS_GLOBAL_HOOK__);
            var _connectTimeout = setTimeout(function () {
                console.warn("react-devtools agent got no connection");
            }, 2e4);
            agent.once("connected", function () {
                agent && (inject(window.__REACT_DEVTOOLS_GLOBAL_HOOK__, agent), clearTimeout(_connectTimeout));
            });
        }
        var Agent = __webpack_require__(1),
            Bridge = __webpack_require__(6),
            installGlobalHook = __webpack_require__(31),
            installRelayHook = __webpack_require__(32),
            inject = __webpack_require__(33),
            setupRNStyle = __webpack_require__(43),
            setupRelay = __webpack_require__(45);
        installGlobalHook(window), installRelayHook(window), window.document && window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on("react-devtools", function (agent) {
            var setupHighlighter = __webpack_require__(46);
            setupHighlighter(agent);
        }), module.exports = {
            connectToDevTools: connectToDevTools
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _possibleConstructorReturn(self, call) {
            if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !call || "object" != typeof call && "function" != typeof call ? self : call;
        }
        function _inherits(subClass, superClass) {
            if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            _require = __webpack_require__(2),
            EventEmitter = _require.EventEmitter,
            assign = __webpack_require__(3),
            guid = __webpack_require__(4),
            getIn = __webpack_require__(5),
            Agent = function (_EventEmitter) {
            function Agent(global, capabilities) {
                _classCallCheck(this, Agent);
                var _this = _possibleConstructorReturn(this, (Agent.__proto__ || Object.getPrototypeOf(Agent)).call(this));
                _this.global = global, _this.internalInstancesById = new Map(), _this.idsByInternalInstances = new WeakMap(), _this.renderers = new Map(), _this.elementData = new Map(), _this.roots = new Set(), _this.reactInternals = {};
                var lastSelected;
                _this.on("selected", function (id) {
                    var data = _this.elementData.get(id);
                    data && data.publicInstance && _this.global.$r === lastSelected && (_this.global.$r = data.publicInstance, lastSelected = data.publicInstance);
                }), _this._prevSelected = null, _this._scrollUpdate = !1;
                var isReactDOM = window.document && "function" == typeof window.document.createElement;
                return _this.capabilities = assign({
                    scroll: isReactDOM && "function" == typeof window.document.body.scrollIntoView,
                    dom: isReactDOM,
                    editTextContent: !1
                }, capabilities), isReactDOM && (_this._updateScroll = _this._updateScroll.bind(_this), window.addEventListener("scroll", _this._onScroll.bind(_this), !0), window.addEventListener("click", _this._onClick.bind(_this), !0), window.addEventListener("mouseover", _this._onMouseOver.bind(_this), !0), window.addEventListener("resize", _this._onResize.bind(_this), !0)), _this;
            }
            return _inherits(Agent, _EventEmitter), _createClass(Agent, [{
                key: "sub",
                value: function value(ev, fn) {
                    var _this2 = this;
                    return this.on(ev, fn), function () {
                        _this2.removeListener(ev, fn);
                    };
                }
            }, {
                key: "setReactInternals",
                value: function value(renderer, reactInternals) {
                    this.reactInternals[renderer] = reactInternals;
                }
            }, {
                key: "addBridge",
                value: function value(bridge) {
                    var _this3 = this;
                    bridge.on("requestCapabilities", function () {
                        bridge.send("capabilities", _this3.capabilities), _this3.emit("connected");
                    }), bridge.on("setState", this._setState.bind(this)), bridge.on("setProps", this._setProps.bind(this)), bridge.on("setContext", this._setContext.bind(this)), bridge.on("makeGlobal", this._makeGlobal.bind(this)), bridge.on("highlight", function (id) {
                        return _this3.highlight(id);
                    }), bridge.on("highlightMany", function (id) {
                        return _this3.highlightMany(id);
                    }), bridge.on("hideHighlight", function () {
                        return _this3.emit("hideHighlight");
                    }), bridge.on("startInspecting", function () {
                        return _this3.emit("startInspecting");
                    }), bridge.on("stopInspecting", function () {
                        return _this3.emit("stopInspecting");
                    }), bridge.on("selected", function (id) {
                        return _this3.emit("selected", id);
                    }), bridge.on("setInspectEnabled", function (enabled) {
                        _this3._inspectEnabled = enabled, _this3.emit("stopInspecting");
                    }), bridge.on("shutdown", function () {
                        return _this3.emit("shutdown");
                    }), bridge.on("changeTextContent", function (_ref) {
                        var id = _ref.id,
                            text = _ref.text,
                            node = _this3.getNodeForID(id);
                        node && (node.textContent = text);
                    }), bridge.on("putSelectedNode", function (id) {
                        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node = _this3.getNodeForID(id);
                    }), bridge.on("putSelectedInstance", function (id) {
                        var node = _this3.elementData.get(id);
                        node ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = node.type : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = null, node && node.publicInstance ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = node.publicInstance : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = null;
                    }), bridge.on("checkSelection", function () {
                        var newSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0;
                        if (newSelected !== _this3._prevSelected) {
                            _this3._prevSelected = newSelected;
                            var sentSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node;
                            newSelected !== sentSelected && _this3.selectFromDOMNode(newSelected, !0);
                        }
                    }), bridge.on("scrollToNode", function (id) {
                        return _this3.scrollToNode(id);
                    }), bridge.on("traceupdatesstatechange", function (value) {
                        return _this3.emit("traceupdatesstatechange", value);
                    }), bridge.on("colorizerchange", function (value) {
                        return _this3.emit("colorizerchange", value);
                    }), this.on("root", function (id) {
                        return bridge.send("root", id);
                    }), this.on("mount", function (data) {
                        return bridge.send("mount", data);
                    }), this.on("update", function (data) {
                        return bridge.send("update", data);
                    }), this.on("unmount", function (id) {
                        bridge.send("unmount", id), bridge.forget(id);
                    }), this.on("setSelection", function (data) {
                        return bridge.send("select", data);
                    }), this.on("setInspectEnabled", function (data) {
                        return bridge.send("setInspectEnabled", data);
                    });
                }
            }, {
                key: "scrollToNode",
                value: function value(id) {
                    var node = this.getNodeForID(id);
                    if (!node) return void console.warn("unable to get the node for scrolling");
                    var domElement = node.nodeType === Node.ELEMENT_NODE ? node : node.parentElement;
                    return domElement ? ("function" == typeof domElement.scrollIntoViewIfNeeded ? domElement.scrollIntoViewIfNeeded() : "function" == typeof domElement.scrollIntoView && domElement.scrollIntoView(), void this.highlight(id)) : void console.warn("unable to get the domElement for scrolling");
                }
            }, {
                key: "highlight",
                value: function value(id) {
                    var data = this.elementData.get(id),
                        node = this.getNodeForID(id);
                    data && node && this.emit("highlight", {
                        node: node,
                        name: data.name,
                        props: data.props
                    });
                }
            }, {
                key: "highlightMany",
                value: function value(ids) {
                    var _this4 = this,
                        nodes = [];
                    ids.forEach(function (id) {
                        var node = _this4.getNodeForID(id);
                        node && nodes.push(node);
                    }), nodes.length && this.emit("highlightMany", nodes);
                }
            }, {
                key: "getNodeForID",
                value: function value(id) {
                    var component = this.internalInstancesById.get(id);
                    if (!component) return null;
                    var renderer = this.renderers.get(id);
                    return renderer && this.reactInternals[renderer].getNativeFromReactElement ? this.reactInternals[renderer].getNativeFromReactElement(component) : null;
                }
            }, {
                key: "selectFromDOMNode",
                value: function value(node, quiet) {
                    var offsetFromLeaf = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        id = this.getIDForNode(node);
                    id && this.emit("setSelection", {
                        id: id,
                        quiet: quiet,
                        offsetFromLeaf: offsetFromLeaf
                    });
                }
            }, {
                key: "selectFromReactInstance",
                value: function value(instance, quiet) {
                    var id = this.getId(instance);
                    return id ? void this.emit("setSelection", {
                        id: id,
                        quiet: quiet
                    }) : void console.log("no instance id", instance);
                }
            }, {
                key: "getIDForNode",
                value: function value(node) {
                    if (!this.reactInternals) return null;
                    var component;
                    for (var renderer in this.reactInternals) {
                        try {
                            component = this.reactInternals[renderer].getReactElementFromNative(node);
                        } catch (e) {}
                        if (component) return this.getId(component);
                    }
                    return null;
                }
            }, {
                key: "_setProps",
                value: function value(_ref2) {
                    var id = _ref2.id,
                        path = _ref2.path,
                        value = _ref2.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInProps ? data.updater.setInProps(path, value) : console.warn("trying to set props on a component that doesn't support it");
                }
            }, {
                key: "_setState",
                value: function value(_ref3) {
                    var id = _ref3.id,
                        path = _ref3.path,
                        value = _ref3.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInState ? data.updater.setInState(path, value) : console.warn("trying to set state on a component that doesn't support it");
                }
            }, {
                key: "_setContext",
                value: function value(_ref4) {
                    var id = _ref4.id,
                        path = _ref4.path,
                        value = _ref4.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInContext ? data.updater.setInContext(path, value) : console.warn("trying to set context on a component that doesn't support it");
                }
            }, {
                key: "_makeGlobal",
                value: function value(_ref5) {
                    var id = _ref5.id,
                        path = _ref5.path,
                        data = this.elementData.get(id);
                    if (data) {
                        var value;
                        value = "instance" === path ? data.publicInstance : getIn(data, path), this.global.$tmp = value, console.log("$tmp =", value);
                    }
                }
            }, {
                key: "getId",
                value: function value(internalInstance) {
                    return "object" === ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance)) && internalInstance ? (this.idsByInternalInstances.has(internalInstance) || (this.idsByInternalInstances.set(internalInstance, guid()), this.internalInstancesById.set(this.idsByInternalInstances.get(internalInstance), internalInstance)), this.idsByInternalInstances.get(internalInstance)) : internalInstance;
                }
            }, {
                key: "addRoot",
                value: function value(renderer, internalInstance) {
                    var id = this.getId(internalInstance);
                    this.roots.add(id), this.emit("root", id);
                }
            }, {
                key: "onMounted",
                value: function value(renderer, component, data) {
                    var _this5 = this,
                        id = this.getId(component);
                    this.renderers.set(id, renderer), this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this5.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("mount", send);
                }
            }, {
                key: "onUpdated",
                value: function value(component, data) {
                    var _this6 = this,
                        id = this.getId(component);
                    this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this6.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("update", send);
                }
            }, {
                key: "onUnmounted",
                value: function value(component) {
                    var id = this.getId(component);
                    this.elementData["delete"](id), this.roots["delete"](id), this.renderers["delete"](id), this.emit("unmount", id), this.idsByInternalInstances["delete"](component);
                }
            }, {
                key: "_onScroll",
                value: function value() {
                    this._scrollUpdate || (this._scrollUpdate = !0, window.requestAnimationFrame(this._updateScroll));
                }
            }, {
                key: "_updateScroll",
                value: function value() {
                    this.emit("refreshMultiOverlay"), this.emit("stopInspecting"), this._scrollUpdate = !1;
                }
            }, {
                key: "_onClick",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        id && (event.stopPropagation(), event.preventDefault(), this.emit("setSelection", {
                            id: id
                        }), this.emit("setInspectEnabled", !1));
                    }
                }
            }, {
                key: "_onMouseOver",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        if (!id) return;
                        this.highlight(id);
                    }
                }
            }, {
                key: "_onResize",
                value: function value(event) {
                    this.emit("stopInspecting");
                }
            }]), Agent;
        }(EventEmitter);
        module.exports = Agent;
    }, function (module, exports) {
        function EventEmitter() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0;
        }
        function isFunction(arg) {
            return "function" == typeof arg;
        }
        function isNumber(arg) {
            return "number" == typeof arg;
        }
        function isObject(arg) {
            return "object" == typeof arg && null !== arg;
        }
        function isUndefined(arg) {
            return void 0 === arg;
        }
        module.exports = EventEmitter, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._maxListeners = void 0, EventEmitter.defaultMaxListeners = 10, EventEmitter.prototype.setMaxListeners = function (n) {
            if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError("n must be a positive number");
            return this._maxListeners = n, this;
        }, EventEmitter.prototype.emit = function (type) {
            var er, handler, len, args, i, listeners;
            if (this._events || (this._events = {}), "error" === type && (!this._events.error || isObject(this._events.error) && !this._events.error.length)) {
                if (er = arguments[1], er instanceof Error) throw er;
                var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
                throw err.context = er, err;
            }
            if (handler = this._events[type], isUndefined(handler)) return !1;
            if (isFunction(handler)) switch (arguments.length) {
                case 1:
                    handler.call(this);
                    break;

                case 2:
                    handler.call(this, arguments[1]);
                    break;

                case 3:
                    handler.call(this, arguments[1], arguments[2]);
                    break;

                default:
                    args = Array.prototype.slice.call(arguments, 1), handler.apply(this, args);
            } else if (isObject(handler)) for (args = Array.prototype.slice.call(arguments, 1), listeners = handler.slice(), len = listeners.length, i = 0; i < len; i++) {
                listeners[i].apply(this, args);
            }return !0;
        }, EventEmitter.prototype.addListener = function (type, listener) {
            var m;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", type, isFunction(listener.listener) ? listener.listener : listener), this._events[type] ? isObject(this._events[type]) ? this._events[type].push(listener) : this._events[type] = [this._events[type], listener] : this._events[type] = listener, isObject(this._events[type]) && !this._events[type].warned && (m = isUndefined(this._maxListeners) ? EventEmitter.defaultMaxListeners : this._maxListeners, m && m > 0 && this._events[type].length > m && (this._events[type].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[type].length), "function" == typeof console.trace && console.trace())), this;
        }, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.once = function (type, listener) {
            function g() {
                this.removeListener(type, g), fired || (fired = !0, listener.apply(this, arguments));
            }
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            var fired = !1;
            return g.listener = listener, this.on(type, g), this;
        }, EventEmitter.prototype.removeListener = function (type, listener) {
            var list, position, length, i;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[type]) return this;
            if (list = this._events[type], length = list.length, position = -1, list === listener || isFunction(list.listener) && list.listener === listener) delete this._events[type], this._events.removeListener && this.emit("removeListener", type, listener);else if (isObject(list)) {
                for (i = length; i-- > 0;) {
                    if (list[i] === listener || list[i].listener && list[i].listener === listener) {
                        position = i;
                        break;
                    }
                }if (position < 0) return this;
                1 === list.length ? (list.length = 0, delete this._events[type]) : list.splice(position, 1), this._events.removeListener && this.emit("removeListener", type, listener);
            }
            return this;
        }, EventEmitter.prototype.removeAllListeners = function (type) {
            var key, listeners;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[type] && delete this._events[type], this;
            if (0 === arguments.length) {
                for (key in this._events) {
                    "removeListener" !== key && this.removeAllListeners(key);
                }return this.removeAllListeners("removeListener"), this._events = {}, this;
            }
            if (listeners = this._events[type], isFunction(listeners)) this.removeListener(type, listeners);else if (listeners) for (; listeners.length;) {
                this.removeListener(type, listeners[listeners.length - 1]);
            }return delete this._events[type], this;
        }, EventEmitter.prototype.listeners = function (type) {
            var ret;
            return ret = this._events && this._events[type] ? isFunction(this._events[type]) ? [this._events[type]] : this._events[type].slice() : [];
        }, EventEmitter.prototype.listenerCount = function (type) {
            if (this._events) {
                var evlistener = this._events[type];
                if (isFunction(evlistener)) return 1;
                if (evlistener) return evlistener.length;
            }
            return 0;
        }, EventEmitter.listenerCount = function (emitter, type) {
            return emitter.listenerCount(type);
        };
    }, function (module, exports) {
        "use strict";

        function toObject(val) {
            if (null === val || void 0 === val) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(val);
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty,
            propIsEnumerable = Object.prototype.propertyIsEnumerable;
        module.exports = Object.assign || function (target, source) {
            for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);
                for (var key in from) {
                    hasOwnProperty.call(from, key) && (to[key] = from[key]);
                }if (Object.getOwnPropertySymbols) {
                    symbols = Object.getOwnPropertySymbols(from);
                    for (var i = 0; i < symbols.length; i++) {
                        propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
                    }
                }
            }
            return to;
        };
    }, function (module, exports) {
        "use strict";

        function guid() {
            return "g" + Math.random().toString(16).substr(2);
        }
        module.exports = guid;
    }, function (module, exports) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function getIn(base, path) {
            return path.reduce(function (obj, attr) {
                if (obj) {
                    if (obj.hasOwnProperty(attr)) return obj[attr];
                    if ("function" == typeof obj[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return [].concat(_toConsumableArray(obj))[attr];
                }
                return null;
            }, base);
        }
        module.exports = getIn;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function getWindowFunction(name, polyfill) {
            return String(window[name]).indexOf("[native code]") === -1 ? polyfill : window[name];
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            consts = __webpack_require__(7),
            hydrate = __webpack_require__(26),
            dehydrate = __webpack_require__(27),
            getIn = __webpack_require__(5),
            performanceNow = __webpack_require__(28),
            lastRunTimeMS = 5,
            cancelIdleCallback = getWindowFunction("cancelIdleCallback", clearTimeout),
            requestIdleCallback = getWindowFunction("requestIdleCallback", function (cb, options) {
            var delayMS = 3e3 * lastRunTimeMS;
            return delayMS > 500 && (delayMS = 500), setTimeout(function () {
                var startTime = performanceNow();
                cb({
                    didTimeout: !1,
                    timeRemaining: function timeRemaining() {
                        return 1 / 0;
                    }
                });
                var endTime = performanceNow();
                lastRunTimeMS = (endTime - startTime) / 1e3;
            }, delayMS);
        }),
            Bridge = function () {
            function Bridge(wall) {
                _classCallCheck(this, Bridge), this._cbs = new Map(), this._inspectables = new Map(), this._cid = 0, this._listeners = {}, this._buffer = [], this._flushHandle = null, this._callers = {}, this._paused = !1, this._wall = wall, wall.listen(this._handleMessage.bind(this));
            }
            return _createClass(Bridge, [{
                key: "inspect",
                value: function value(id, path, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, function (data, cleaned, proto, protoclean) {
                        cleaned.length && hydrate(data, cleaned), proto && protoclean.length && hydrate(proto, protoclean), proto && (data[consts.proto] = proto), cb(data);
                    }), this._wall.send({
                        type: "inspect",
                        callback: _cid,
                        path: path,
                        id: id
                    });
                }
            }, {
                key: "call",
                value: function value(name, args, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, cb), this._wall.send({
                        type: "call",
                        callback: _cid,
                        args: args,
                        name: name
                    });
                }
            }, {
                key: "onCall",
                value: function value(name, handler) {
                    if (this._callers[name]) throw new Error("only one call handler per call name allowed");
                    this._callers[name] = handler;
                }
            }, {
                key: "pause",
                value: function value() {
                    this._wall.send({
                        type: "pause"
                    });
                }
            }, {
                key: "resume",
                value: function value() {
                    this._wall.send({
                        type: "resume"
                    });
                }
            }, {
                key: "setInspectable",
                value: function value(id, data) {
                    var prev = this._inspectables.get(id);
                    return prev ? void this._inspectables.set(id, _extends({}, prev, data)) : void this._inspectables.set(id, data);
                }
            }, {
                key: "send",
                value: function value(evt, data) {
                    this._buffer.push({
                        evt: evt,
                        data: data
                    }), this.scheduleFlush();
                }
            }, {
                key: "scheduleFlush",
                value: function value() {
                    if (!this._flushHandle && this._buffer.length) {
                        var timeout = this._paused ? 5e3 : 500;
                        this._flushHandle = requestIdleCallback(this.flushBufferWhileIdle.bind(this), {
                            timeout: timeout
                        });
                    }
                }
            }, {
                key: "cancelFlush",
                value: function value() {
                    this._flushHandle && (cancelIdleCallback(this._flushHandle), this._flushHandle = null);
                }
            }, {
                key: "flushBufferWhileIdle",
                value: function value(deadline) {
                    this._flushHandle = null;
                    for (var chunkCount = this._paused ? 20 : 10, chunkSize = Math.round(this._buffer.length / chunkCount), minChunkSize = this._paused ? 50 : 100; this._buffer.length && (deadline.timeRemaining() > 0 || deadline.didTimeout);) {
                        var take = Math.min(this._buffer.length, Math.max(minChunkSize, chunkSize)),
                            currentBuffer = this._buffer.splice(0, take);
                        this.flushBufferSlice(currentBuffer);
                    }
                    this._buffer.length && this.scheduleFlush();
                }
            }, {
                key: "flushBufferSlice",
                value: function value(bufferSlice) {
                    var _this = this,
                        events = bufferSlice.map(function (_ref) {
                        var evt = _ref.evt,
                            data = _ref.data,
                            cleaned = [],
                            san = dehydrate(data, cleaned);
                        return cleaned.length && _this.setInspectable(data.id, data), {
                            type: "event",
                            evt: evt,
                            data: san,
                            cleaned: cleaned
                        };
                    });
                    this._wall.send({
                        type: "many-events",
                        events: events
                    });
                }
            }, {
                key: "forget",
                value: function value(id) {
                    this._inspectables["delete"](id);
                }
            }, {
                key: "on",
                value: function value(evt, fn) {
                    this._listeners[evt] ? this._listeners[evt].push(fn) : this._listeners[evt] = [fn];
                }
            }, {
                key: "off",
                value: function value(evt, fn) {
                    if (this._listeners[evt]) {
                        var ix = this._listeners[evt].indexOf(fn);
                        ix !== -1 && this._listeners[evt].splice(ix, 1);
                    }
                }
            }, {
                key: "once",
                value: function value(evt, fn) {
                    var self = this,
                        listener = function listener() {
                        fn.apply(this, arguments), self.off(evt, listener);
                    };
                    this.on(evt, listener);
                }
            }, {
                key: "_handleMessage",
                value: function value(payload) {
                    var _this2 = this;
                    if ("resume" === payload.type) return this._paused = !1, void this.scheduleFlush();
                    if ("pause" === payload.type) return this._paused = !0, void this.cancelFlush();
                    if ("callback" === payload.type) {
                        var callback = this._cbs.get(payload.id);
                        return void (callback && (callback.apply(void 0, _toConsumableArray(payload.args)), this._cbs["delete"](payload.id)));
                    }
                    if ("call" === payload.type) return void this._handleCall(payload.name, payload.args, payload.callback);
                    if ("inspect" === payload.type) return void this._inspectResponse(payload.id, payload.path, payload.callback);
                    if ("event" === payload.type) {
                        payload.cleaned && hydrate(payload.data, payload.cleaned);
                        var fns = this._listeners[payload.evt],
                            data = payload.data;
                        fns && fns.forEach(function (fn) {
                            return fn(data);
                        });
                    }
                    "many-events" === payload.type && payload.events.forEach(function (event) {
                        event.cleaned && hydrate(event.data, event.cleaned);
                        var handlers = _this2._listeners[event.evt];
                        handlers && handlers.forEach(function (fn) {
                            return fn(event.data);
                        });
                    });
                }
            }, {
                key: "_handleCall",
                value: function value(name, args, callback) {
                    if (!this._callers[name]) return void console.warn('unknown call: "' + name + '"');
                    args = Array.isArray(args) ? args : [args];
                    var result;
                    try {
                        result = this._callers[name].apply(null, args);
                    } catch (e) {
                        return void console.error("Failed to call", e);
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result]
                    });
                }
            }, {
                key: "_inspectResponse",
                value: function value(id, path, callback) {
                    var inspectable = this._inspectables.get(id),
                        result = {},
                        cleaned = [],
                        proto = null,
                        protoclean = [];
                    if (inspectable) {
                        var val = getIn(inspectable, path),
                            protod = !1,
                            isFn = "function" == typeof val;
                        if (val && "function" == typeof val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) {
                            var iterVal = Object.create({}),
                                count = 0,
                                _iteratorNormalCompletion = !0,
                                _didIteratorError = !1,
                                _iteratorError = void 0;
                            try {
                                for (var _step, _iterator = val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
                                    var entry = _step.value;
                                    if (count > 100) break;
                                    iterVal[count] = entry, count++;
                                }
                            } catch (err) {
                                _didIteratorError = !0, _iteratorError = err;
                            } finally {
                                try {
                                    !_iteratorNormalCompletion && _iterator["return"] && _iterator["return"]();
                                } finally {
                                    if (_didIteratorError) throw _iteratorError;
                                }
                            }
                            val = iterVal;
                        }
                        if (Object.getOwnPropertyNames(val).forEach(function (name) {
                            "__proto__" === name && (protod = !0), (!isFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (result[name] = dehydrate(val[name], cleaned, [name]));
                        }), !protod && val.__proto__ && "Object" !== val.constructor.name) {
                            var newProto = {},
                                pIsFn = "function" == typeof val.__proto__;
                            Object.getOwnPropertyNames(val.__proto__).forEach(function (name) {
                                (!pIsFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (newProto[name] = dehydrate(val.__proto__[name], protoclean, [name]));
                            }), proto = newProto;
                        }
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result, cleaned, proto, protoclean]
                    });
                }
            }]), Bridge;
        }();
        module.exports = Bridge;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var _Symbol = __webpack_require__(8);
        module.exports = {
            name: _Symbol("name"),
            type: _Symbol("type"),
            inspected: _Symbol("inspected"),
            meta: _Symbol("meta"),
            proto: _Symbol("proto")
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(9)() ? Symbol : __webpack_require__(10);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var symbol;
            if ("function" != typeof Symbol) return !1;
            symbol = Symbol("test symbol");
            try {
                String(symbol);
            } catch (e) {
                return !1;
            }
            return "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") || "object" == typeof (typeof Symbol === "function" ? Symbol.isConcatSpreadable : "@@isConcatSpreadable") && "object" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") && "object" == typeof (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") && "object" == typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") && "object" == typeof (typeof Symbol === "function" ? Symbol.unscopables : "@@unscopables");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var NativeSymbol,
            SymbolPolyfill,
            _HiddenSymbol,
            d = __webpack_require__(11),
            validateSymbol = __webpack_require__(24),
            create = Object.create,
            defineProperties = Object.defineProperties,
            defineProperty = Object.defineProperty,
            objPrototype = Object.prototype,
            globalSymbols = create(null);
        "function" == typeof Symbol && (NativeSymbol = Symbol);
        var generateName = function () {
            var created = create(null);
            return function (desc) {
                for (var name, ie11BugWorkaround, postfix = 0; created[desc + (postfix || "")];) {
                    ++postfix;
                }return desc += postfix || "", created[desc] = !0, name = "@@" + desc, defineProperty(objPrototype, name, d.gs(null, function (value) {
                    ie11BugWorkaround || (ie11BugWorkaround = !0, defineProperty(this, name, d(value)), ie11BugWorkaround = !1);
                })), name;
            };
        }();
        _HiddenSymbol = function HiddenSymbol(description) {
            if (this instanceof _HiddenSymbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return SymbolPolyfill(description);
        }, module.exports = SymbolPolyfill = function Symbol(description) {
            var symbol;
            if (this instanceof Symbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return symbol = create(_HiddenSymbol.prototype), description = void 0 === description ? "" : String(description), defineProperties(symbol, {
                __description__: d("", description),
                __name__: d("", generateName(description))
            });
        }, defineProperties(SymbolPolyfill, {
            "for": d(function (key) {
                return globalSymbols[key] ? globalSymbols[key] : globalSymbols[key] = SymbolPolyfill(String(key));
            }),
            keyFor: d(function (s) {
                var key;
                validateSymbol(s);
                for (key in globalSymbols) {
                    if (globalSymbols[key] === s) return key;
                }
            }),
            hasInstance: d("", NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill("hasInstance")),
            isConcatSpreadable: d("", NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill("isConcatSpreadable")),
            iterator: d("", NativeSymbol && NativeSymbol.iterator || SymbolPolyfill("iterator")),
            match: d("", NativeSymbol && NativeSymbol.match || SymbolPolyfill("match")),
            replace: d("", NativeSymbol && NativeSymbol.replace || SymbolPolyfill("replace")),
            search: d("", NativeSymbol && NativeSymbol.search || SymbolPolyfill("search")),
            species: d("", NativeSymbol && NativeSymbol.species || SymbolPolyfill("species")),
            split: d("", NativeSymbol && NativeSymbol.split || SymbolPolyfill("split")),
            toPrimitive: d("", NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill("toPrimitive")),
            toStringTag: d("", NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill("toStringTag")),
            unscopables: d("", NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill("unscopables"))
        }), defineProperties(_HiddenSymbol.prototype, {
            constructor: d(SymbolPolyfill),
            toString: d("", function () {
                return this.__name__;
            })
        }), defineProperties(SymbolPolyfill.prototype, {
            toString: d(function () {
                return "Symbol (" + validateSymbol(this).__description__ + ")";
            }),
            valueOf: d(function () {
                return validateSymbol(this);
            })
        }), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d("", function () {
            return validateSymbol(this);
        })), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d("c", "Symbol")), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var d,
            assign = __webpack_require__(12),
            normalizeOpts = __webpack_require__(19),
            isCallable = __webpack_require__(20),
            contains = __webpack_require__(21);
        d = module.exports = function (dscr, value) {
            var c, e, w, options, desc;
            return arguments.length < 2 || "string" != typeof dscr ? (options = value, value = dscr, dscr = null) : options = arguments[2], null == dscr ? (c = w = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e"), w = contains.call(dscr, "w")), desc = {
                value: value,
                configurable: c,
                enumerable: e,
                writable: w
            }, options ? assign(normalizeOpts(options), desc) : desc;
        }, d.gs = function (dscr, get, set) {
            var c, e, options, desc;
            return "string" != typeof dscr ? (options = set, set = get, get = dscr, dscr = null) : options = arguments[3], null == get ? get = void 0 : isCallable(get) ? null == set ? set = void 0 : isCallable(set) || (options = set, set = void 0) : (options = get, get = set = void 0), null == dscr ? (c = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e")), desc = {
                get: get,
                set: set,
                configurable: c,
                enumerable: e
            }, options ? assign(normalizeOpts(options), desc) : desc;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(13)() ? Object.assign : __webpack_require__(14);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var obj,
                assign = Object.assign;
            return "function" == typeof assign && (obj = {
                foo: "raz"
            }, assign(obj, {
                bar: "dwa"
            }, {
                trzy: "trzy"
            }), obj.foo + obj.bar + obj.trzy === "razdwatrzy");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var keys = __webpack_require__(15),
            value = __webpack_require__(18),
            max = Math.max;
        module.exports = function (dest, src) {
            var error,
                i,
                assign,
                l = max(arguments.length, 2);
            for (dest = Object(value(dest)), assign = function assign(key) {
                try {
                    dest[key] = src[key];
                } catch (e) {
                    error || (error = e);
                }
            }, i = 1; i < l; ++i) {
                src = arguments[i], keys(src).forEach(assign);
            }if (void 0 !== error) throw error;
            return dest;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(16)() ? Object.keys : __webpack_require__(17);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            try {
                return Object.keys("primitive"), !0;
            } catch (e) {
                return !1;
            }
        };
    }, function (module, exports) {
        "use strict";

        var keys = Object.keys;
        module.exports = function (object) {
            return keys(null == object ? object : Object(object));
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (value) {
            if (null == value) throw new TypeError("Cannot use null or undefined");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        var forEach = Array.prototype.forEach,
            create = Object.create,
            process = function process(src, obj) {
            var key;
            for (key in src) {
                obj[key] = src[key];
            }
        };
        module.exports = function (options) {
            var result = create(null);
            return forEach.call(arguments, function (options) {
                null != options && process(Object(options), result);
            }), result;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (obj) {
            return "function" == typeof obj;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(22)() ? String.prototype.contains : __webpack_require__(23);
    }, function (module, exports) {
        "use strict";

        var str = "razdwatrzy";
        module.exports = function () {
            return "function" == typeof str.contains && str.contains("dwa") === !0 && str.contains("foo") === !1;
        };
    }, function (module, exports) {
        "use strict";

        var indexOf = String.prototype.indexOf;
        module.exports = function (searchString) {
            return indexOf.call(this, searchString, arguments[1]) > -1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var isSymbol = __webpack_require__(25);
        module.exports = function (value) {
            if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (x) {
            return x && ("symbol" == typeof x || "Symbol" === x["@@toStringTag"]) || !1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function hydrate(data, cleaned) {
            cleaned.forEach(function (path) {
                var last = path.pop(),
                    obj = path.reduce(function (obj_, attr) {
                    return obj_ ? obj_[attr] : null;
                }, data);
                if (obj && obj[last]) {
                    var replace = {};
                    replace[consts.name] = obj[last].name, replace[consts.type] = obj[last].type, replace[consts.meta] = obj[last].meta, replace[consts.inspected] = !1, obj[last] = replace;
                }
            });
        }
        var consts = __webpack_require__(7);
        module.exports = hydrate;
    }, function (module, exports) {
        "use strict";

        function getPropType(data) {
            if (!data) return null;
            var type = "undefined" == typeof data ? "undefined" : _typeof(data);
            if ("object" === type) {
                if (data._reactFragment) return "react_fragment";
                if (Array.isArray(data)) return "array";
                if (ArrayBuffer.isView(data)) return data instanceof DataView ? "data_view" : "typed_array";
                if (data instanceof ArrayBuffer) return "array_buffer";
                if ("function" == typeof data[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return "iterator";
                if ("[object Date]" === Object.prototype.toString.call(data)) return "date";
            }
            return type;
        }
        function createDehydrated(type, data, cleaned, path) {
            var meta = {};
            return "array" !== type && "typed_array" !== type || (meta.length = data.length), "iterator" !== type && "typed_array" !== type || (meta.readOnly = !0), cleaned.push(path), {
                type: type,
                meta: meta,
                name: data.constructor && "Object" !== data.constructor.name ? data.constructor.name : ""
            };
        }
        function dehydrate(data, cleaned) {
            var path = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                level = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                type = getPropType(data);
            switch (type) {
                case "function":
                    return cleaned.push(path), {
                        name: data.name,
                        type: "function"
                    };

                case "string":
                    return data.length <= 500 ? data : data.slice(0, 500) + "...";

                case "symbol":
                    return cleaned.push(path), {
                        type: "symbol",
                        name: data.toString()
                    };

                case "react_fragment":
                    return "A React Fragment";

                case "array_buffer":
                case "data_view":
                    return cleaned.push(path), {
                        type: type,
                        name: "data_view" === type ? "DataView" : "ArrayBuffer",
                        meta: {
                            length: data.byteLength,
                            uninspectable: !0
                        }
                    };

                case "array":
                    return level > 2 ? createDehydrated(type, data, cleaned, path) : data.map(function (item, i) {
                        return dehydrate(item, cleaned, path.concat([i]), level + 1);
                    });

                case "typed_array":
                case "iterator":
                    return createDehydrated(type, data, cleaned, path);

                case "date":
                    return cleaned.push(path), {
                        name: data.toString(),
                        type: "date",
                        meta: {
                            uninspectable: !0
                        }
                    };

                case "object":
                    if (level > 2 || data.constructor && "function" == typeof data.constructor && "Object" !== data.constructor.name) return createDehydrated(type, data, cleaned, path);
                    var res = {};
                    for (var name in data) {
                        res[name] = dehydrate(data[name], cleaned, path.concat([name]), level + 1);
                    }return res;

                default:
                    return data;
            }
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        };
        module.exports = dehydrate;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performanceNow,
            performance = __webpack_require__(29);
        performanceNow = performance.now ? function () {
            return performance.now();
        } : function () {
            return Date.now();
        }, module.exports = performanceNow;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performance,
            ExecutionEnvironment = __webpack_require__(30);
        ExecutionEnvironment.canUseDOM && (performance = window.performance || window.msPerformance || window.webkitPerformance), module.exports = performance || {};
    }, function (module, exports) {
        "use strict";

        var canUseDOM = !("undefined" == typeof window || !window.document || !window.document.createElement),
            ExecutionEnvironment = {
            canUseDOM: canUseDOM,
            canUseWorkers: "undefined" != typeof Worker,
            canUseEventListeners: canUseDOM && !(!window.addEventListener && !window.attachEvent),
            canUseViewport: canUseDOM && !!window.screen,
            isInWorker: !canUseDOM
        };
        module.exports = ExecutionEnvironment;
    }, function (module, exports) {
        "use strict";

        function installGlobalHook(window) {
            function detectReactBuildType(renderer) {
                try {
                    var toString = Function.prototype.toString;
                    if ("string" == typeof renderer.version) {
                        if (renderer.bundleType > 0) return "development";
                        var findFiberCode = toString.call(renderer.findFiberByHostInstance);
                        return 0 !== findFiberCode.indexOf("function") ? "production" : findFiberCode.indexOf("getClosestInstanceFromNode") !== -1 ? "unminified" : "production";
                    }
                    if (renderer.Mount && renderer.Mount._renderNewRootComponent) {
                        var renderRootCode = toString.call(renderer.Mount._renderNewRootComponent);
                        return 0 !== renderRootCode.indexOf("function") ? "production" : renderRootCode.indexOf("storedMeasure") !== -1 ? "development" : renderRootCode.indexOf("should be a pure function") !== -1 ? renderRootCode.indexOf("NODE_ENV") !== -1 ? "development" : renderRootCode.indexOf("development") !== -1 ? "development" : renderRootCode.indexOf("true") !== -1 ? "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : renderRootCode.indexOf("._registerComponent") !== -1 ? "outdated" : "production";
                    }
                } catch (err) {}
                return "production";
            }
            if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
                var hook = {
                    _renderers: {},
                    helpers: {},
                    inject: function inject(renderer) {
                        var id = Math.random().toString(16).slice(2);
                        hook._renderers[id] = renderer;
                        var reactBuildType = detectReactBuildType(renderer);
                        return hook.emit("renderer", {
                            id: id,
                            renderer: renderer,
                            reactBuildType: reactBuildType
                        }), id;
                    },
                    _listeners: {},
                    sub: function sub(evt, fn) {
                        return hook.on(evt, fn), function () {
                            return hook.off(evt, fn);
                        };
                    },
                    on: function on(evt, fn) {
                        hook._listeners[evt] || (hook._listeners[evt] = []), hook._listeners[evt].push(fn);
                    },
                    off: function off(evt, fn) {
                        if (hook._listeners[evt]) {
                            var ix = hook._listeners[evt].indexOf(fn);
                            ix !== -1 && hook._listeners[evt].splice(ix, 1), hook._listeners[evt].length || (hook._listeners[evt] = null);
                        }
                    },
                    emit: function emit(evt, data) {
                        hook._listeners[evt] && hook._listeners[evt].map(function (fn) {
                            return fn(data);
                        });
                    },
                    supportsFiber: !0,
                    _fiberRoots: {},
                    getFiberRoots: function getFiberRoots(rendererID) {
                        var roots = hook._fiberRoots;
                        return roots[rendererID] || (roots[rendererID] = new Set()), roots[rendererID];
                    },
                    onCommitFiberUnmount: function onCommitFiberUnmount(rendererID, fiber) {
                        hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberUnmount(fiber);
                    },
                    onCommitFiberRoot: function onCommitFiberRoot(rendererID, root) {
                        var mountedRoots = hook.getFiberRoots(rendererID),
                            current = root.current,
                            isKnownRoot = mountedRoots.has(root),
                            isUnmounting = null == current.memoizedState || null == current.memoizedState.element;
                        isKnownRoot || isUnmounting ? isKnownRoot && isUnmounting && mountedRoots["delete"](root) : mountedRoots.add(root), hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberRoot(root);
                    }
                };
                Object.defineProperty(window, "__REACT_DEVTOOLS_GLOBAL_HOOK__", {
                    value: hook
                });
            }
        }
        module.exports = installGlobalHook;
    }, function (module, exports) {
        "use strict";

        function installRelayHook(window) {
            function decorate(obj, attr, fn) {
                var old = obj[attr];
                obj[attr] = function () {
                    var res = old.apply(this, arguments);
                    return fn.apply(this, arguments), res;
                };
            }
            function emit(name, data) {
                _eventQueue.push({
                    name: name,
                    data: data
                }), _listener && _listener(name, data);
            }
            function setRequestListener(listener) {
                if (_listener) throw new Error("Relay Devtools: Called only call setRequestListener once.");
                return _listener = listener, _eventQueue.forEach(function (_ref) {
                    var name = _ref.name,
                        data = _ref.data;
                    listener(name, data);
                }), function () {
                    _listener = null;
                };
            }
            function recordRequest(type, start, request, requestNumber) {
                var id = Math.random().toString(16).substr(2);
                request.then(function (response) {
                    emit("relay:success", {
                        id: id,
                        end: performanceNow(),
                        response: response.response
                    });
                }, function (error) {
                    emit("relay:failure", {
                        id: id,
                        end: performanceNow(),
                        error: error
                    });
                });
                for (var textChunks = [], text = request.getQueryString(); text.length > 0;) {
                    textChunks.push(text.substr(0, TEXT_CHUNK_LENGTH)), text = text.substr(TEXT_CHUNK_LENGTH);
                }return {
                    id: id,
                    name: request.getDebugName(),
                    requestNumber: requestNumber,
                    start: start,
                    text: textChunks,
                    type: type,
                    variables: request.getVariables()
                };
            }
            function instrumentRelayRequests(relayInternals) {
                var NetworkLayer = relayInternals.NetworkLayer;
                decorate(NetworkLayer, "sendMutation", function (mutation) {
                    requestNumber++, emit("relay:pending", [recordRequest("mutation", performanceNow(), mutation, requestNumber)]);
                }), decorate(NetworkLayer, "sendQueries", function (queries) {
                    requestNumber++;
                    var start = performanceNow();
                    emit("relay:pending", queries.map(function (query) {
                        return recordRequest("query", start, query, requestNumber);
                    }));
                });
                var instrumented = {};
                for (var key in relayInternals) {
                    relayInternals.hasOwnProperty(key) && (instrumented[key] = relayInternals[key]);
                }return instrumented.setRequestListener = setRequestListener, instrumented;
            }
            var performanceNow,
                performance = window.performance;
            performanceNow = performance && "function" == typeof performance.now ? function () {
                return performance.now();
            } : function () {
                return Date.now();
            };
            var TEXT_CHUNK_LENGTH = 500,
                hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook) {
                var _eventQueue = [],
                    _listener = null,
                    requestNumber = 0,
                    _relayInternals = null;
                Object.defineProperty(hook, "_relayInternals", {
                    configurable: !0,
                    set: function set(relayInternals) {
                        _relayInternals = instrumentRelayRequests(relayInternals);
                    },
                    get: function get() {
                        return _relayInternals;
                    }
                });
            }
        }
        module.exports = installRelayHook;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var setupBackend = __webpack_require__(34);
        module.exports = function (hook, agent) {
            var subs = [hook.sub("renderer-attached", function (_ref) {
                var id = _ref.id,
                    helpers = (_ref.renderer, _ref.helpers);
                agent.setReactInternals(id, helpers), helpers.walkTree(agent.onMounted.bind(agent, id), agent.addRoot.bind(agent, id));
            }), hook.sub("root", function (_ref2) {
                var renderer = _ref2.renderer,
                    internalInstance = _ref2.internalInstance;
                return agent.addRoot(renderer, internalInstance);
            }), hook.sub("mount", function (_ref3) {
                var renderer = _ref3.renderer,
                    internalInstance = _ref3.internalInstance,
                    data = _ref3.data;
                return agent.onMounted(renderer, internalInstance, data);
            }), hook.sub("update", function (_ref4) {
                var internalInstance = (_ref4.renderer, _ref4.internalInstance),
                    data = _ref4.data;
                return agent.onUpdated(internalInstance, data);
            }), hook.sub("unmount", function (_ref5) {
                var internalInstance = (_ref5.renderer, _ref5.internalInstance);
                return agent.onUnmounted(internalInstance);
            })],
                success = setupBackend(hook);
            success && (hook.emit("react-devtools", agent), hook.reactDevtoolsAgent = agent, agent.on("shutdown", function () {
                subs.forEach(function (fn) {
                    return fn();
                }), hook.reactDevtoolsAgent = null;
            }));
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var attachRenderer = __webpack_require__(35);
        module.exports = function (hook) {
            var oldReact = window.React && window.React.__internals;
            oldReact && 0 === Object.keys(hook._renderers).length && hook.inject(oldReact);
            for (var rid in hook._renderers) {
                hook.helpers[rid] = attachRenderer(hook, rid, hook._renderers[rid]), hook.emit("renderer-attached", {
                    id: rid,
                    renderer: hook._renderers[rid],
                    helpers: hook.helpers[rid]
                });
            }hook.on("renderer", function (_ref) {
                var id = _ref.id,
                    renderer = _ref.renderer;
                hook.helpers[id] = attachRenderer(hook, id, renderer), hook.emit("renderer-attached", {
                    id: id,
                    renderer: renderer,
                    helpers: hook.helpers[id]
                });
            });
            var shutdown = function shutdown() {
                for (var id in hook.helpers) {
                    hook.helpers[id].cleanup();
                }hook.off("shutdown", shutdown);
            };
            return hook.on("shutdown", shutdown), !0;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRenderer(hook, rid, renderer) {
            var rootNodeIDMap = new Map(),
                extras = {},
                isPre013 = !renderer.Reconciler;
            if ("function" == typeof renderer.findFiberByHostInstance) return attachRendererFiber(hook, rid, renderer);
            renderer.Mount.findNodeHandle && renderer.Mount.nativeTagToRootNodeID ? (extras.getNativeFromReactElement = function (component) {
                return renderer.Mount.findNodeHandle(component);
            }, extras.getReactElementFromNative = function (nativeTag) {
                var id = renderer.Mount.nativeTagToRootNodeID(nativeTag);
                return rootNodeIDMap.get(id);
            }) : renderer.ComponentTree ? (extras.getNativeFromReactElement = function (component) {
                return renderer.ComponentTree.getNodeFromInstance(component);
            }, extras.getReactElementFromNative = function (node) {
                return renderer.ComponentTree.getClosestInstanceFromNode(node);
            }) : renderer.Mount.getID && renderer.Mount.getNode ? (extras.getNativeFromReactElement = function (component) {
                try {
                    return renderer.Mount.getNode(component._rootNodeID);
                } catch (e) {
                    return;
                }
            }, extras.getReactElementFromNative = function (node) {
                for (var id = renderer.Mount.getID(node); node && node.parentNode && !id;) {
                    node = node.parentNode, id = renderer.Mount.getID(node);
                }return rootNodeIDMap.get(id);
            }) : console.warn("Unknown react version (does not have getID), probably an unshimmed React Native");
            var oldMethods, oldRenderComponent, oldRenderRoot;
            return renderer.Mount._renderNewRootComponent ? oldRenderRoot = decorateResult(renderer.Mount, "_renderNewRootComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance
                });
            }) : renderer.Mount.renderComponent && (oldRenderComponent = decorateResult(renderer.Mount, "renderComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance._reactInternalInstance
                });
            })), renderer.Component ? (console.error("You are using a version of React with limited support in this version of the devtools.\nPlease upgrade to use at least 0.13, or you can downgrade to use the old version of the devtools:\ninstructions here https://github.com/facebook/react-devtools/tree/devtools-next#how-do-i-use-this-for-react--013"), oldMethods = decorateMany(renderer.Component.Mixin, {
                mountComponent: function mountComponent() {
                    var _this = this;
                    rootNodeIDMap.set(this._rootNodeID, this), setTimeout(function () {
                        hook.emit("mount", {
                            internalInstance: _this,
                            data: getData012(_this),
                            renderer: rid
                        });
                    }, 0);
                },
                updateComponent: function updateComponent() {
                    var _this2 = this;
                    setTimeout(function () {
                        hook.emit("update", {
                            internalInstance: _this2,
                            data: getData012(_this2),
                            renderer: rid
                        });
                    }, 0);
                },
                unmountComponent: function unmountComponent() {
                    hook.emit("unmount", {
                        internalInstance: this,
                        renderer: rid
                    }), rootNodeIDMap["delete"](this._rootNodeID, this);
                }
            })) : renderer.Reconciler && (oldMethods = decorateMany(renderer.Reconciler, {
                mountComponent: function mountComponent(internalInstance, rootID, transaction, context) {
                    var data = getData(internalInstance);
                    rootNodeIDMap.set(internalInstance._rootNodeID, internalInstance), hook.emit("mount", {
                        internalInstance: internalInstance,
                        data: data,
                        renderer: rid
                    });
                },
                performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                receiveComponent: function receiveComponent(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                unmountComponent: function unmountComponent(internalInstance) {
                    hook.emit("unmount", {
                        internalInstance: internalInstance,
                        renderer: rid
                    }), rootNodeIDMap["delete"](internalInstance._rootNodeID, internalInstance);
                }
            })), extras.walkTree = function (visit, visitRoot) {
                var onMount = function onMount(component, data) {
                    rootNodeIDMap.set(component._rootNodeID, component), visit(component, data);
                };
                walkRoots(renderer.Mount._instancesByReactRootID || renderer.Mount._instancesByContainerID, onMount, visitRoot, isPre013);
            }, extras.cleanup = function () {
                oldMethods && (renderer.Component ? restoreMany(renderer.Component.Mixin, oldMethods) : restoreMany(renderer.Reconciler, oldMethods)), oldRenderRoot && (renderer.Mount._renderNewRootComponent = oldRenderRoot), oldRenderComponent && (renderer.Mount.renderComponent = oldRenderComponent), oldMethods = null, oldRenderRoot = null, oldRenderComponent = null;
            }, extras;
        }
        function walkRoots(roots, onMount, onRoot, isPre013) {
            for (var name in roots) {
                walkNode(roots[name], onMount, isPre013), onRoot(roots[name]);
            }
        }
        function walkNode(internalInstance, onMount, isPre013) {
            var data = isPre013 ? getData012(internalInstance) : getData(internalInstance);
            data.children && Array.isArray(data.children) && data.children.forEach(function (child) {
                return walkNode(child, onMount, isPre013);
            }), onMount(internalInstance, data);
        }
        function decorateResult(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn(res), res;
            }, old;
        }
        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, old;
        }
        function decorateMany(source, fns) {
            var olds = {};
            for (var name in fns) {
                olds[name] = decorate(source, name, fns[name]);
            }return olds;
        }
        function restoreMany(source, olds) {
            for (var name in olds) {
                source[name] = olds[name];
            }
        }
        var getData = __webpack_require__(36),
            getData012 = __webpack_require__(39),
            attachRendererFiber = __webpack_require__(40);
        module.exports = attachRenderer;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData(internalInstance) {
            var children = null,
                props = null,
                state = null,
                context = null,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                source = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            if ("object" !== ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance)) ? (nodeType = "Text", text = internalInstance + "") : null === internalInstance._currentElement || internalInstance._currentElement === !1 ? nodeType = "Empty" : internalInstance._renderedComponent ? (nodeType = "NativeWrapper", children = [internalInstance._renderedComponent], props = internalInstance._instance.props, state = internalInstance._instance.state, context = internalInstance._instance.context, context && 0 === Object.keys(context).length && (context = null)) : internalInstance._renderedChildren ? children = childrenList(internalInstance._renderedChildren) : internalInstance._currentElement && internalInstance._currentElement.props && (children = internalInstance._currentElement.props.children), !props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), null != internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), source = internalInstance._currentElement._source, ref = internalInstance._currentElement.ref, "string" == typeof type ? (name = type, null != internalInstance._nativeNode && (publicInstance = internalInstance._nativeNode), null != internalInstance._hostNode && (publicInstance = internalInstance._hostNode)) : "function" == typeof type ? (nodeType = "Composite", name = getDisplayName(type), internalInstance._renderedComponent && (internalInstance._currentElement.props === internalInstance._renderedComponent._currentElement || internalInstance._currentElement.type.isReactTopLevelWrapper) && (nodeType = "Wrapper"), null === name && (name = "No display name")) : "string" == typeof internalInstance._stringText ? (nodeType = "Text", text = internalInstance._stringText) : name = getDisplayName(type)), internalInstance._instance) {
                var inst = internalInstance._instance;
                updater = {
                    setState: inst.setState && inst.setState.bind(inst),
                    forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                    setInProps: inst.forceUpdate && setInProps.bind(null, internalInstance),
                    setInState: inst.forceUpdate && setInState.bind(null, inst),
                    setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                }, "function" == typeof type && (publicInstance = inst), inst._renderedChildren && (children = childrenList(inst._renderedChildren));
            }
            return "function" == typeof internalInstance.setNativeProps && (updater = {
                setNativeProps: function setNativeProps(nativeProps) {
                    internalInstance.setNativeProps(nativeProps);
                }
            }), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(internalInst, path, value) {
            var element = internalInst._currentElement;
            internalInst._currentElement = _extends({}, element, {
                props: copyWithSet(element.props, path, value)
            }), internalInst._instance.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38);
        module.exports = getData;
    }, function (module, exports) {
        "use strict";

        function copyWithSetImpl(obj, path, idx, value) {
            if (idx >= path.length) return value;
            var key = path[idx],
                updated = Array.isArray(obj) ? obj.slice() : _extends({}, obj);
            return updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value), updated;
        }
        function copyWithSet(obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        };
        module.exports = copyWithSet;
    }, function (module, exports) {
        "use strict";

        function getDisplayName(type) {
            if (cachedDisplayNames.has(type)) return cachedDisplayNames.get(type);
            var displayName = type.displayName || type.name || "Unknown",
                match = displayName.match(FB_MODULE_RE);
            if (match) {
                var componentName = match[1],
                    moduleName = match[2];
                componentName && moduleName && (moduleName === componentName || moduleName.startsWith(componentName + ".")) && (displayName = componentName);
            }
            return cachedDisplayNames.set(type, displayName), displayName;
        }
        var FB_MODULE_RE = /^(.*) \[from (.*)\]$/,
            cachedDisplayNames = new WeakMap();
        module.exports = getDisplayName;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData012(internalInstance) {
            var children = null,
                props = internalInstance.props,
                state = internalInstance.state,
                context = internalInstance.context,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            return internalInstance._renderedComponent ? (nodeType = "Wrapper", children = [internalInstance._renderedComponent], context && 0 === Object.keys(context).length && (context = null)) : internalInstance._renderedChildren ? (name = internalInstance.constructor.displayName, children = childrenList(internalInstance._renderedChildren)) : "string" == typeof props.children && (name = internalInstance.constructor.displayName, children = props.children, nodeType = "Native"), !props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), ref = internalInstance._currentElement.ref, "string" == typeof type ? name = type : (nodeType = "Composite", name = type.displayName, name || (name = "No display name"))), name || (name = internalInstance.constructor.displayName || "No display name", nodeType = "Composite"), "string" == typeof props && (nodeType = "Text", text = props, props = null, name = null), internalInstance.forceUpdate && (updater = {
                setState: internalInstance.setState.bind(internalInstance),
                forceUpdate: internalInstance.forceUpdate.bind(internalInstance),
                setInProps: internalInstance.forceUpdate && setInProps.bind(null, internalInstance),
                setInState: internalInstance.forceUpdate && setInState.bind(null, internalInstance),
                setInContext: internalInstance.forceUpdate && setInContext.bind(null, internalInstance)
            }, publicInstance = internalInstance), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: null,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(inst, path, value) {
            inst.props = copyWithSet(inst.props, path, value), inst.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var copyWithSet = __webpack_require__(37);
        module.exports = getData012;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRendererFiber(hook, rid, renderer) {
            function getOpaqueNode(fiber) {
                if (opaqueNodes.has(fiber)) return fiber;
                var alternate = fiber.alternate;
                return null != alternate && opaqueNodes.has(alternate) ? alternate : (opaqueNodes.add(fiber), fiber);
            }
            function hasDataChanged(prevFiber, nextFiber) {
                if (prevFiber.tag === ClassComponent) {
                    if ((nextFiber.effectTag & PerformedWork) !== PerformedWork) return !1;
                    if (prevFiber.stateNode.context !== nextFiber.stateNode.context) return !0;
                    if (null != nextFiber.updateQueue && nextFiber.updateQueue.hasForceUpdate) return !0;
                }
                return prevFiber.memoizedProps !== nextFiber.memoizedProps || prevFiber.memoizedState !== nextFiber.memoizedState || prevFiber.ref !== nextFiber.ref || prevFiber._debugSource !== nextFiber._debugSource;
            }
            function flushPendingEvents() {
                var events = pendingEvents;
                pendingEvents = [];
                for (var i = 0; i < events.length; i++) {
                    var event = events[i];
                    hook.emit(event.type, event);
                }
            }
            function enqueueMount(fiber) {
                pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "mount"
                });
                var isRoot = fiber.tag === HostRoot;
                isRoot && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    renderer: rid,
                    type: "root"
                });
            }
            function enqueueUpdateIfNecessary(fiber, hasChildOrderChanged) {
                (hasChildOrderChanged || hasDataChanged(fiber.alternate, fiber)) && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "update"
                });
            }
            function enqueueUnmount(fiber) {
                var isRoot = fiber.tag === HostRoot,
                    opaqueNode = getOpaqueNode(fiber),
                    event = {
                    internalInstance: opaqueNode,
                    renderer: rid,
                    type: "unmount"
                };
                isRoot ? pendingEvents.push(event) : pendingEvents.unshift(event), opaqueNodes["delete"](opaqueNode);
            }
            function mountFiber(fiber) {
                var node = fiber;
                outer: for (;;) {
                    if (node.child) node.child["return"] = node, node = node.child;else {
                        if (enqueueMount(node), node == fiber) return;
                        if (!node.sibling) {
                            for (; node["return"];) {
                                if (node = node["return"], enqueueMount(node), node == fiber) return;
                                if (node.sibling) {
                                    node.sibling["return"] = node["return"], node = node.sibling;
                                    continue outer;
                                }
                            }
                            return;
                        }
                        node.sibling["return"] = node["return"], node = node.sibling;
                    }
                }
            }
            function updateFiber(nextFiber, prevFiber) {
                var hasChildOrderChanged = !1;
                if (nextFiber.child !== prevFiber.child) {
                    for (var nextChild = nextFiber.child, prevChildAtSameIndex = prevFiber.child; nextChild;) {
                        if (nextChild.alternate) {
                            var prevChild = nextChild.alternate;
                            updateFiber(nextChild, prevChild), hasChildOrderChanged || prevChild === prevChildAtSameIndex || (hasChildOrderChanged = !0);
                        } else mountFiber(nextChild), hasChildOrderChanged || (hasChildOrderChanged = !0);
                        nextChild = nextChild.sibling, hasChildOrderChanged || null == prevChildAtSameIndex || (prevChildAtSameIndex = prevChildAtSameIndex.sibling);
                    }
                    hasChildOrderChanged || null == prevChildAtSameIndex || (hasChildOrderChanged = !0);
                }
                enqueueUpdateIfNecessary(nextFiber, hasChildOrderChanged);
            }
            function walkTree() {
                hook.getFiberRoots(rid).forEach(function (root) {
                    mountFiber(root.current);
                }), flushPendingEvents();
            }
            function cleanup() {}
            function handleCommitFiberUnmount(fiber) {
                enqueueUnmount(fiber);
            }
            function handleCommitFiberRoot(root) {
                var current = root.current,
                    alternate = current.alternate;
                if (alternate) {
                    var wasMounted = null != alternate.memoizedState && null != alternate.memoizedState.element,
                        isMounted = null != current.memoizedState && null != current.memoizedState.element;
                    !wasMounted && isMounted ? mountFiber(current) : wasMounted && isMounted ? updateFiber(current, alternate) : wasMounted && !isMounted && enqueueUnmount(current);
                } else mountFiber(current);
                flushPendingEvents();
            }
            function getNativeFromReactElement(fiber) {
                try {
                    var opaqueNode = fiber,
                        hostInstance = renderer.findHostInstanceByFiber(opaqueNode);
                    return hostInstance;
                } catch (err) {
                    return null;
                }
            }
            function getReactElementFromNative(hostInstance) {
                var fiber = renderer.findFiberByHostInstance(hostInstance);
                if (null != fiber) {
                    var opaqueNode = getOpaqueNode(fiber);
                    return opaqueNode;
                }
                return null;
            }
            var opaqueNodes = new Set(),
                pendingEvents = [];
            return {
                getNativeFromReactElement: getNativeFromReactElement,
                getReactElementFromNative: getReactElementFromNative,
                handleCommitFiberRoot: handleCommitFiberRoot,
                handleCommitFiberUnmount: handleCommitFiberUnmount,
                cleanup: cleanup,
                walkTree: walkTree
            };
        }
        var getDataFiber = __webpack_require__(41),
            _require = __webpack_require__(42),
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot,
            PerformedWork = 1;
        module.exports = attachRendererFiber;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getDataFiber(fiber, getOpaqueNode) {
            var type = fiber.type,
                key = fiber.key,
                ref = fiber.ref,
                source = fiber._debugSource,
                publicInstance = null,
                props = null,
                state = null,
                children = null,
                context = null,
                updater = null,
                nodeType = null,
                name = null,
                text = null;
            switch (fiber.tag) {
                case FunctionalComponent:
                case ClassComponent:
                    nodeType = "Composite", name = getDisplayName(fiber.type), publicInstance = fiber.stateNode, props = fiber.memoizedProps, state = fiber.memoizedState, null != publicInstance && (context = publicInstance.context, context && 0 === Object.keys(context).length && (context = null));
                    var inst = publicInstance;
                    inst && (updater = {
                        setState: inst.setState && inst.setState.bind(inst),
                        forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                        setInProps: inst.forceUpdate && setInProps.bind(null, fiber),
                        setInState: inst.forceUpdate && setInState.bind(null, inst),
                        setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                    }), children = [];
                    break;

                case HostRoot:
                    nodeType = "Wrapper", children = [];
                    break;

                case HostPortal:
                    nodeType = "Portal", name = "ReactPortal", props = {
                        target: fiber.stateNode.containerInfo
                    }, children = [];
                    break;

                case HostComponent:
                    nodeType = "Native", name = fiber.type, name = name.replace("topsecret-", ""), publicInstance = fiber.stateNode, props = fiber.memoizedProps, children = "string" == typeof props.children || "number" == typeof props.children ? props.children.toString() : [], "function" == typeof fiber.stateNode.setNativeProps && (updater = {
                        setNativeProps: function setNativeProps(nativeProps) {
                            fiber.stateNode.setNativeProps(nativeProps);
                        }
                    });
                    break;

                case HostText:
                    nodeType = "Text", text = fiber.memoizedProps;
                    break;

                case Fragment:
                    nodeType = "Wrapper", children = [];
                    break;

                default:
                    nodeType = "Native", props = fiber.memoizedProps, name = "TODO_NOT_IMPLEMENTED_YET", children = [];
            }
            if (Array.isArray(children)) for (var child = fiber.child; child;) {
                children.push(getOpaqueNode(child)), child = child.sibling;
            }return {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(fiber, path, value) {
            var inst = fiber.stateNode;
            fiber.pendingProps = copyWithSet(inst.props, path, value), fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps), fiber.stateNode.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        var copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38),
            _require = __webpack_require__(42),
            FunctionalComponent = _require.FunctionalComponent,
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot,
            HostPortal = _require.HostPortal,
            HostComponent = _require.HostComponent,
            HostText = _require.HostText,
            Fragment = _require.Fragment;
        module.exports = getDataFiber;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            IndeterminateComponent: 0,
            FunctionalComponent: 1,
            ClassComponent: 2,
            HostRoot: 3,
            HostPortal: 4,
            HostComponent: 5,
            HostText: 6,
            CoroutineComponent: 7,
            CoroutineHandlerPhase: 8,
            YieldComponent: 9,
            Fragment: 10
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, {
                value: value,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : obj[key] = value, obj;
        }
        function measureStyle(agent, bridge, resolveRNStyle, id) {
            var node = agent.elementData.get(id);
            if (!node || !node.props) return void bridge.send("rn-style:measure", {});
            var style = resolveRNStyle(node.props.style);
            styleOverridesByHostComponentId[id] && (style = babelHelpers.extends({}, style, styleOverridesByHostComponentId[id]));
            var instance = node.publicInstance;
            return instance && instance.measure ? void instance.measure(function (x, y, width, height, left, top) {
                if ("number" != typeof x) return void bridge.send("rn-style:measure", {
                    style: style
                });
                var margin = style && resolveBoxStyle("margin", style) || blank,
                    padding = style && resolveBoxStyle("padding", style) || blank;
                bridge.send("rn-style:measure", {
                    style: style,
                    measuredLayout: {
                        x: x,
                        y: y,
                        width: width,
                        height: height,
                        left: left,
                        top: top,
                        margin: margin,
                        padding: padding
                    }
                });
            }) : void bridge.send("rn-style:measure", {
                style: style
            });
        }
        function shallowClone(obj) {
            var nobj = {};
            for (var n in obj) {
                nobj[n] = obj[n];
            }return nobj;
        }
        function renameStyle(agent, id, oldName, newName, val) {
            var _ref3,
                data = agent.elementData.get(id),
                newStyle = newName ? (_ref3 = {}, _defineProperty(_ref3, oldName, void 0), _defineProperty(_ref3, newName, val), _ref3) : _defineProperty({}, oldName, void 0);
            if (data && data.updater && data.updater.setInProps) {
                var customStyle,
                    style = data && data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : (customStyle = shallowClone(style[lastLength]), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style", lastLength], customStyle));
                } else "object" === ("undefined" == typeof style ? "undefined" : _typeof(style)) ? (customStyle = shallowClone(style), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style"], customStyle)) : (style = [style, newStyle], data.updater.setInProps(["style"], style));
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        function setStyle(agent, id, attr, val) {
            var data = agent.elementData.get(id),
                newStyle = _defineProperty({}, attr, val);
            if (data && data.updater && data.updater.setInProps) {
                var style = data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : data.updater.setInProps(["style", lastLength, attr], val);
                } else style = [style, newStyle], data.updater.setInProps(["style"], style);
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            resolveBoxStyle = __webpack_require__(44),
            styleOverridesByHostComponentId = {};
        module.exports = function (bridge, agent, resolveRNStyle) {
            bridge.onCall("rn-style:get", function (id) {
                var node = agent.elementData.get(id);
                return node && node.props ? resolveRNStyle(node.props.style) : null;
            }), bridge.on("rn-style:measure", function (id) {
                measureStyle(agent, bridge, resolveRNStyle, id);
            }), bridge.on("rn-style:rename", function (_ref) {
                var id = _ref.id,
                    oldName = _ref.oldName,
                    newName = _ref.newName,
                    val = _ref.val;
                renameStyle(agent, id, oldName, newName, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            }), bridge.on("rn-style:set", function (_ref2) {
                var id = _ref2.id,
                    attr = _ref2.attr,
                    val = _ref2.val;
                setStyle(agent, id, attr, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            });
        };
        var blank = {
            top: 0,
            left: 0,
            right: 0,
            bottom: 0
        };
    }, function (module, exports) {
        "use strict";

        function resolveBoxStyle(prefix, style) {
            var res = {},
                subs = ["top", "left", "bottom", "right"],
                set = !1;
            return subs.forEach(function (sub) {
                res[sub] = style[prefix] || 0;
            }), style[prefix] && (set = !0), style[prefix + "Vertical"] && (res.top = res.bottom = style[prefix + "Vertical"], set = !0), style[prefix + "Horizontal"] && (res.left = res.right = style[prefix + "Horizontal"], set = !0), subs.forEach(function (sub) {
                var val = style[prefix + capFirst(sub)];
                val && (res[sub] = val, set = !0);
            }), set ? res : null;
        }
        function capFirst(text) {
            return text[0].toUpperCase() + text.slice(1);
        }
        module.exports = resolveBoxStyle;
    }, function (module, exports) {
        "use strict";

        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function () {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, function () {
                obj[attr] = old;
            };
        }
        var subscriptionEnabled = !1;
        module.exports = function (bridge, agent, hook) {
            function sendStoreData() {
                subscriptionEnabled && bridge.send("relay:store", {
                    id: "relay:store",
                    nodes: DefaultStoreData.getNodeData()
                });
            }
            var shouldEnable = !!hook._relayInternals;
            if (bridge.onCall("relay:check", function () {
                return shouldEnable;
            }), shouldEnable) {
                var _hook$_relayInternals = hook._relayInternals,
                    DefaultStoreData = _hook$_relayInternals.DefaultStoreData,
                    setRequestListener = _hook$_relayInternals.setRequestListener;
                bridge.onCall("relay:store:enable", function () {
                    subscriptionEnabled = !0, sendStoreData();
                }), bridge.onCall("relay:store:disable", function () {
                    subscriptionEnabled = !1;
                }), sendStoreData(), decorate(DefaultStoreData, "handleUpdatePayload", sendStoreData), decorate(DefaultStoreData, "handleQueryPayload", sendStoreData);
                var removeListener = setRequestListener(function (event, data) {
                    bridge.send(event, data);
                });
                hook.on("shutdown", removeListener);
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var Highlighter = __webpack_require__(47);
        module.exports = function (agent) {
            var hl = new Highlighter(window, function (node) {
                agent.selectFromDOMNode(node);
            });
            agent.on("highlight", function (data) {
                return hl.highlight(data.node, data.name);
            }), agent.on("highlightMany", function (nodes) {
                return hl.highlightMany(nodes);
            }), agent.on("hideHighlight", function () {
                return hl.hideHighlight();
            }), agent.on("refreshMultiOverlay", function () {
                return hl.refreshMultiOverlay();
            }), agent.on("startInspecting", function () {
                return hl.startInspecting();
            }), agent.on("stopInspecting", function () {
                return hl.stopInspecting();
            }), agent.on("shutdown", function () {
                hl.remove();
            });
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function captureSubscription(obj, evt, cb) {
            return obj.addEventListener(evt, cb, !0), function () {
                return obj.removeEventListener(evt, cb, !0);
            };
        }
        function makeMagnifier() {
            var button = window.document.createElement("button");
            return button.innerHTML = "&#128269;", button.style.backgroundColor = "transparent", button.style.border = "none", button.style.outline = "none", button.style.cursor = "pointer", button.style.position = "fixed", button.style.bottom = "10px", button.style.right = "10px", button.style.fontSize = "30px", button.style.zIndex = 1e7, button;
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            Overlay = __webpack_require__(48),
            MultiOverlay = __webpack_require__(50),
            Highlighter = function () {
            function Highlighter(win, onSelect) {
                _classCallCheck(this, Highlighter), this._win = win, this._onSelect = onSelect, this._overlay = null, this._multiOverlay = null, this._subs = [];
            }
            return _createClass(Highlighter, [{
                key: "startInspecting",
                value: function value() {
                    this._inspecting = !0, this._subs = [captureSubscription(this._win, "mouseover", this.onHover.bind(this)), captureSubscription(this._win, "mousedown", this.onMouseDown.bind(this)), captureSubscription(this._win, "click", this.onClick.bind(this))];
                }
            }, {
                key: "stopInspecting",
                value: function value() {
                    this._subs.forEach(function (unsub) {
                        return unsub();
                    }), this.hideHighlight();
                }
            }, {
                key: "remove",
                value: function value() {
                    this.stopInspecting(), this._button && this._button.parentNode && this._button.parentNode.removeChild(this._button);
                }
            }, {
                key: "highlight",
                value: function value(node, name) {
                    this.removeMultiOverlay(), node.nodeType !== Node.COMMENT_NODE && (this._overlay || (this._overlay = new Overlay(this._win)), this._overlay.inspect(node, name));
                }
            }, {
                key: "highlightMany",
                value: function value(nodes) {
                    this.removeOverlay(), this._multiOverlay || (this._multiOverlay = new MultiOverlay(this._win)), this._multiOverlay.highlightMany(nodes);
                }
            }, {
                key: "hideHighlight",
                value: function value() {
                    this._inspecting = !1, this.removeOverlay(), this.removeMultiOverlay();
                }
            }, {
                key: "refreshMultiOverlay",
                value: function value() {
                    this._multiOverlay && this._multiOverlay.refresh();
                }
            }, {
                key: "removeOverlay",
                value: function value() {
                    this._overlay && (this._overlay.remove(), this._overlay = null);
                }
            }, {
                key: "removeMultiOverlay",
                value: function value() {
                    this._multiOverlay && (this._multiOverlay.remove(), this._multiOverlay = null);
                }
            }, {
                key: "onMouseDown",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this._onSelect(evt.target));
                }
            }, {
                key: "onClick",
                value: function value(evt) {
                    this._inspecting && (this._subs.forEach(function (unsub) {
                        return unsub();
                    }), evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.hideHighlight());
                }
            }, {
                key: "onHover",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.highlight(evt.target));
                }
            }, {
                key: "injectButton",
                value: function value() {
                    this._button = makeMagnifier(), this._button.onclick = this.startInspecting.bind(this), this._win.document.body.appendChild(this._button);
                }
            }]), Highlighter;
        }();
        module.exports = Highlighter;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function findTipPos(dims, win) {
            var top,
                tipHeight = 20,
                margin = 5;
            return top = dims.top + dims.height + tipHeight <= win.innerHeight ? dims.top + dims.height < 0 ? margin : dims.top + dims.height + margin : dims.top - tipHeight <= win.innerHeight ? dims.top - tipHeight - margin < margin ? margin : dims.top - tipHeight - margin : win.innerHeight - tipHeight - margin, top += "px", dims.left < 0 ? {
                top: top,
                left: margin
            } : dims.left + 200 > win.innerWidth ? {
                top: top,
                right: margin
            } : {
                top: top,
                left: dims.left + margin + "px"
            };
        }
        function getElementDimensions(domElement) {
            var calculatedStyle = window.getComputedStyle(domElement);
            return {
                borderLeft: +calculatedStyle.borderLeftWidth.match(/[0-9]*/)[0],
                borderRight: +calculatedStyle.borderRightWidth.match(/[0-9]*/)[0],
                borderTop: +calculatedStyle.borderTopWidth.match(/[0-9]*/)[0],
                borderBottom: +calculatedStyle.borderBottomWidth.match(/[0-9]*/)[0],
                marginLeft: +calculatedStyle.marginLeft.match(/[0-9]*/)[0],
                marginRight: +calculatedStyle.marginRight.match(/[0-9]*/)[0],
                marginTop: +calculatedStyle.marginTop.match(/[0-9]*/)[0],
                marginBottom: +calculatedStyle.marginBottom.match(/[0-9]*/)[0],
                paddingLeft: +calculatedStyle.paddingLeft.match(/[0-9]*/)[0],
                paddingRight: +calculatedStyle.paddingRight.match(/[0-9]*/)[0],
                paddingTop: +calculatedStyle.paddingTop.match(/[0-9]*/)[0],
                paddingBottom: +calculatedStyle.paddingBottom.match(/[0-9]*/)[0]
            };
        }
        function getOwnerWindow(node) {
            return node.ownerDocument ? node.ownerDocument.defaultView : null;
        }
        function getOwnerIframe(node) {
            var nodeWindow = getOwnerWindow(node);
            return nodeWindow ? nodeWindow.frameElement : null;
        }
        function getBoundingClientRectWithBorderOffset(node) {
            var dimensions = getElementDimensions(node);
            return mergeRectOffsets([node.getBoundingClientRect(), {
                top: dimensions.borderTop,
                left: dimensions.borderLeft,
                bottom: dimensions.borderBottom,
                right: dimensions.borderRight,
                width: 0,
                height: 0
            }]);
        }
        function mergeRectOffsets(rects) {
            return rects.reduce(function (previousRect, rect) {
                return null == previousRect ? rect : {
                    top: previousRect.top + rect.top,
                    left: previousRect.left + rect.left,
                    width: previousRect.width,
                    height: previousRect.height,
                    bottom: previousRect.bottom + rect.bottom,
                    right: previousRect.right + rect.right
                };
            });
        }
        function getNestedBoundingClientRect(node, boundaryWindow) {
            var ownerIframe = getOwnerIframe(node);
            if (ownerIframe && ownerIframe !== boundaryWindow) {
                for (var rects = [node.getBoundingClientRect()], currentIframe = ownerIframe, onlyOneMore = !1; currentIframe;) {
                    var rect = getBoundingClientRectWithBorderOffset(currentIframe);
                    if (rects.push(rect), currentIframe = getOwnerIframe(currentIframe), onlyOneMore) break;
                    currentIframe && getOwnerWindow(currentIframe) === boundaryWindow && (onlyOneMore = !0);
                }
                return mergeRectOffsets(rects);
            }
            return node.getBoundingClientRect();
        }
        function boxWrap(dims, what, node) {
            assign(node.style, {
                borderTopWidth: dims[what + "Top"] + "px",
                borderLeftWidth: dims[what + "Left"] + "px",
                borderRightWidth: dims[what + "Right"] + "px",
                borderBottomWidth: dims[what + "Bottom"] + "px",
                borderStyle: "solid"
            });
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            _require = __webpack_require__(49),
            monospace = _require.monospace,
            Overlay = function () {
            function Overlay(window) {
                _classCallCheck(this, Overlay);
                var doc = window.document;
                this.win = window, this.container = doc.createElement("div"), this.node = doc.createElement("div"), this.border = doc.createElement("div"), this.padding = doc.createElement("div"), this.content = doc.createElement("div"), this.border.style.borderColor = overlayStyles.border, this.padding.style.borderColor = overlayStyles.padding, this.content.style.backgroundColor = overlayStyles.background, assign(this.node.style, {
                    borderColor: overlayStyles.margin,
                    pointerEvents: "none",
                    position: "fixed"
                }), this.tip = doc.createElement("div"), assign(this.tip.style, {
                    backgroundColor: "#333740",
                    borderRadius: "2px",
                    fontFamily: monospace.family,
                    fontWeight: "bold",
                    padding: "3px 5px",
                    position: "fixed",
                    fontSize: monospace.sizes.normal
                }), this.nameSpan = doc.createElement("span"), this.tip.appendChild(this.nameSpan), assign(this.nameSpan.style, {
                    color: "#ee78e6",
                    borderRight: "1px solid #aaaaaa",
                    paddingRight: "0.5rem",
                    marginRight: "0.5rem"
                }), this.dimSpan = doc.createElement("span"), this.tip.appendChild(this.dimSpan), assign(this.dimSpan.style, {
                    color: "#d7d7d7"
                }), this.container.style.zIndex = 1e7, this.node.style.zIndex = 1e7, this.tip.style.zIndex = 1e7, this.container.appendChild(this.node), this.container.appendChild(this.tip), this.node.appendChild(this.border), this.border.appendChild(this.padding), this.padding.appendChild(this.content), doc.body.appendChild(this.container);
            }
            return _createClass(Overlay, [{
                key: "remove",
                value: function value() {
                    this.container.parentNode && this.container.parentNode.removeChild(this.container);
                }
            }, {
                key: "inspect",
                value: function value(node, name) {
                    if (node.nodeType === Node.ELEMENT_NODE) {
                        var box = getNestedBoundingClientRect(node, this.win),
                            dims = getElementDimensions(node);
                        boxWrap(dims, "margin", this.node), boxWrap(dims, "border", this.border), boxWrap(dims, "padding", this.padding), assign(this.content.style, {
                            height: box.height - dims.borderTop - dims.borderBottom - dims.paddingTop - dims.paddingBottom + "px",
                            width: box.width - dims.borderLeft - dims.borderRight - dims.paddingLeft - dims.paddingRight + "px"
                        }), assign(this.node.style, {
                            top: box.top - dims.marginTop + "px",
                            left: box.left - dims.marginLeft + "px"
                        }), this.nameSpan.textContent = name || node.nodeName.toLowerCase(), this.dimSpan.textContent = box.width + "px × " + box.height + "px";
                        var tipPos = findTipPos({
                            top: box.top - dims.marginTop,
                            left: box.left - dims.marginLeft,
                            height: box.height + dims.marginTop + dims.marginBottom,
                            width: box.width + dims.marginLeft + dims.marginRight
                        }, this.win);
                        assign(this.tip.style, tipPos);
                    }
                }
            }]), Overlay;
        }(),
            overlayStyles = {
            background: "rgba(120, 170, 210, 0.7)",
            padding: "rgba(77, 200, 0, 0.3)",
            margin: "rgba(255, 155, 0, 0.3)",
            border: "rgba(255, 200, 50, 0.3)"
        };
        module.exports = Overlay;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            monospace: {
                family: "Menlo, Consolas, monospace",
                sizes: {
                    normal: 11,
                    large: 14
                }
            },
            sansSerif: {
                family: '"Helvetica Neue", "Lucida Grande", -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, sans-serif',
                sizes: {
                    small: 10,
                    normal: 12,
                    large: 14
                }
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            MultiOverlay = function () {
            function MultiOverlay(window) {
                _classCallCheck(this, MultiOverlay), this.win = window;
                var doc = window.document;
                this.container = doc.createElement("div"), doc.body.appendChild(this.container), this._currentNodes = null;
            }
            return _createClass(MultiOverlay, [{
                key: "highlightMany",
                value: function value(nodes) {
                    var _this = this;
                    this._currentNodes = nodes, this.container.innerHTML = "", nodes.forEach(function (node) {
                        var div = _this.win.document.createElement("div");
                        if ("function" == typeof node.getBoundingClientRect) {
                            var box = node.getBoundingClientRect();
                            box.bottom < 0 || box.top > window.innerHeight || (assign(div.style, {
                                top: box.top + "px",
                                left: box.left + "px",
                                width: box.width + "px",
                                height: box.height + "px",
                                border: "2px dotted rgba(200, 100, 100, .8)",
                                boxSizing: "border-box",
                                backgroundColor: "rgba(200, 100, 100, .2)",
                                position: "fixed",
                                zIndex: 1e7,
                                pointerEvents: "none"
                            }), _this.container.appendChild(div));
                        }
                    });
                }
            }, {
                key: "refresh",
                value: function value() {
                    this._currentNodes && this.highlightMany(this._currentNodes);
                }
            }, {
                key: "remove",
                value: function value() {
                    this.container.parentNode && (this.container.parentNode.removeChild(this.container), this._currentNodes = null);
                }
            }]), MultiOverlay;
        }();
        module.exports = MultiOverlay;
    }]);
});
}, 177, null, "react-devtools-core/build/backend.js");
__d(/* RCTDebugComponentOwnership */function(global, require, module, exports) {

'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge

var RCTDebugComponentOwnership = {
  getOwnerHierarchy: function getOwnerHierarchy(requestID, tag) {
    throw new Error('This seems to be unused. Will disable until it is needed again.');
  }
};

BatchedBridge.registerCallableModule('RCTDebugComponentOwnership', RCTDebugComponentOwnership);

module.exports = RCTDebugComponentOwnership;
}, 178, null, "RCTDebugComponentOwnership");
__d(/* JSInspector */function(global, require, module, exports) {
'use strict';

var JSInspector = {
  registerAgent: function registerAgent(type) {
    if (global.__registerInspectorAgent) {
      global.__registerInspectorAgent(type);
    }
  },
  getTimestamp: function getTimestamp() {
    return global.__inspectorTimestamp();
  }
};

module.exports = JSInspector;
}, 179, null, "JSInspector");
__d(/* NetworkAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = require(181             ); // 181 = InspectorAgent
var JSInspector = require(179          ); // 179 = JSInspector
var Map = require(170  ); // 170 = Map
var XMLHttpRequest = require(165             ); // 165 = XMLHttpRequest

var Interceptor = function () {
  function Interceptor(agent) {
    babelHelpers.classCallCheck(this, Interceptor);

    this._agent = agent;
    this._requests = new Map();
  }

  babelHelpers.createClass(Interceptor, [{
    key: 'getData',
    value: function getData(requestId) {
      return this._requests.get(requestId);
    }
  }, {
    key: 'requestSent',
    value: function requestSent(id, url, method, headers) {
      var requestId = String(id);
      this._requests.set(requestId, '');

      var request = {
        url: url,
        method: method,
        headers: headers,
        initialPriority: 'Medium'
      };
      var event = {
        requestId: requestId,
        documentURL: '',
        frameId: '1',
        loaderId: '1',
        request: request,
        timestamp: JSInspector.getTimestamp(),
        initiator: {
          type: 'other'
        },
        type: 'Other'
      };
      this._agent.sendEvent('requestWillBeSent', event);
    }
  }, {
    key: 'responseReceived',
    value: function responseReceived(id, url, status, headers) {
      var requestId = String(id);
      var response = {
        url: url,
        status: status,
        statusText: String(status),
        headers: headers,

        requestHeaders: {},
        mimeType: this._getMimeType(headers),
        connectionReused: false,
        connectionId: -1,
        encodedDataLength: 0,
        securityState: 'unknown'
      };

      var event = {
        requestId: requestId,
        frameId: '1',
        loaderId: '1',
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        response: response
      };
      this._agent.sendEvent('responseReceived', event);
    }
  }, {
    key: 'dataReceived',
    value: function dataReceived(id, data) {
      var requestId = String(id);
      var existingData = this._requests.get(requestId) || '';
      this._requests.set(requestId, existingData.concat(data));
      var event = {
        requestId: requestId,
        timestamp: JSInspector.getTimestamp(),
        dataLength: data.length,
        encodedDataLength: data.length
      };
      this._agent.sendEvent('dataReceived', event);
    }
  }, {
    key: 'loadingFinished',
    value: function loadingFinished(id, encodedDataLength) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        encodedDataLength: encodedDataLength
      };
      this._agent.sendEvent('loadingFinished', event);
    }
  }, {
    key: 'loadingFailed',
    value: function loadingFailed(id, error) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        errorText: error
      };
      this._agent.sendEvent('loadingFailed', event);
    }
  }, {
    key: '_getMimeType',
    value: function _getMimeType(headers) {
      var contentType = headers['Content-Type'] || '';
      return contentType.split(';')[0];
    }
  }]);
  return Interceptor;
}();

var NetworkAgent = function (_InspectorAgent) {
  babelHelpers.inherits(NetworkAgent, _InspectorAgent);

  function NetworkAgent() {
    babelHelpers.classCallCheck(this, NetworkAgent);
    return babelHelpers.possibleConstructorReturn(this, (NetworkAgent.__proto__ || Object.getPrototypeOf(NetworkAgent)).apply(this, arguments));
  }

  babelHelpers.createClass(NetworkAgent, [{
    key: 'enable',
    value: function enable(_ref) {
      var maxResourceBufferSize = _ref.maxResourceBufferSize,
          maxTotalBufferSize = _ref.maxTotalBufferSize;

      this._interceptor = new Interceptor(this);
      XMLHttpRequest.setInterceptor(this._interceptor);
    }
  }, {
    key: 'disable',
    value: function disable() {
      XMLHttpRequest.setInterceptor(null);
      this._interceptor = null;
    }
  }, {
    key: 'getResponseBody',
    value: function getResponseBody(_ref2) {
      var requestId = _ref2.requestId;

      return { body: this.interceptor().getData(requestId), base64Encoded: false };
    }
  }, {
    key: 'interceptor',
    value: function interceptor() {
      if (this._interceptor) {
        return this._interceptor;
      } else {
        throw Error('_interceptor can not be null');
      }
    }
  }]);
  return NetworkAgent;
}(InspectorAgent);

NetworkAgent.DOMAIN = 'Network';


module.exports = NetworkAgent;
}, 180, null, "NetworkAgent");
__d(/* InspectorAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = function () {
  function InspectorAgent(eventSender) {
    babelHelpers.classCallCheck(this, InspectorAgent);

    this._eventSender = eventSender;
  }

  babelHelpers.createClass(InspectorAgent, [{
    key: 'sendEvent',
    value: function sendEvent(name, params) {
      this._eventSender(name, params);
    }
  }]);
  return InspectorAgent;
}();

module.exports = InspectorAgent;
}, 181, null, "InspectorAgent");
__d(/* RCTNativeAppEventEmitter */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge
var RCTDeviceEventEmitter = require(68                     ); // 68 = RCTDeviceEventEmitter

var RCTNativeAppEventEmitter = RCTDeviceEventEmitter;

BatchedBridge.registerCallableModule('RCTNativeAppEventEmitter', RCTNativeAppEventEmitter);

module.exports = RCTNativeAppEventEmitter;
}, 182, null, "RCTNativeAppEventEmitter");
__d(/* PerformanceLogger */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge
var Systrace = require(53        ); // 53 = Systrace

var performanceNow = global.nativePerformanceNow || require(58                       ); // 58 = fbjs/lib/performanceNow

var timespans = {};
var extras = {};
var cookies = {};

var PRINT_TO_CONSOLE = false;

var PerformanceLogger = {
  addTimespan: function addTimespan(key, lengthInMs, description) {
    if (timespans[key]) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to add a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      totalTime: lengthInMs
    };
  },
  startTimespan: function startTimespan(key, description) {
    if (timespans[key]) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to start a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      startTime: performanceNow()
    };
    cookies[key] = Systrace.beginAsyncEvent(key);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      console.log('PerformanceLogger.js', 'start: ' + key);
    }
  },
  stopTimespan: function stopTimespan(key) {
    var timespan = timespans[key];
    if (!timespan || !timespan.startTime) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to end a timespan that has not started ', key);
      }
      return;
    }
    if (timespan.endTime) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to end a timespan that has already ended ', key);
      }
      return;
    }

    timespan.endTime = performanceNow();
    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      console.log('PerformanceLogger.js', 'end: ' + key);
    }

    Systrace.endAsyncEvent(key, cookies[key]);
    delete cookies[key];
  },
  clear: function clear() {
    timespans = {};
    extras = {};
  },
  clearCompleted: function clearCompleted() {
    for (var _key in timespans) {
      if (timespans[_key].totalTime) {
        delete timespans[_key];
      }
    }
    extras = {};
  },
  clearExceptTimespans: function clearExceptTimespans(keys) {
    timespans = Object.keys(timespans).reduce(function (previous, key) {
      if (keys.indexOf(key) !== -1) {
        previous[key] = timespans[key];
      }
      return previous;
    }, {});
    extras = {};
  },
  currentTimestamp: function currentTimestamp() {
    return performanceNow();
  },
  getTimespans: function getTimespans() {
    return timespans;
  },
  hasTimespan: function hasTimespan(key) {
    return !!timespans[key];
  },
  logTimespans: function logTimespans() {
    for (var _key2 in timespans) {
      if (timespans[_key2].totalTime) {
        console.log(_key2 + ': ' + timespans[_key2].totalTime + 'ms');
      }
    }
  },
  addTimespans: function addTimespans(newTimespans, labels) {
    for (var i = 0, l = newTimespans.length; i < l; i += 2) {
      var label = labels[i / 2];
      PerformanceLogger.addTimespan(label, newTimespans[i + 1] - newTimespans[i], label);
    }
  },
  setExtra: function setExtra(key, value) {
    if (extras[key]) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to set an extra that already exists ', key);
      }
      return;
    }
    extras[key] = value;
  },
  getExtras: function getExtras() {
    return extras;
  }
};

BatchedBridge.registerCallableModule('PerformanceLogger', PerformanceLogger);

module.exports = PerformanceLogger;
}, 183, null, "PerformanceLogger");
__d(/* EventPluginHub */function(global, require, module, exports) {

'use strict';

var EventPluginRegistry = require(185                  ); // 185 = EventPluginRegistry
var EventPluginUtils = require(124               ); // 124 = EventPluginUtils
var ReactErrorUtils = require(106              ); // 106 = ReactErrorUtils

var accumulateInto = require(186             ); // 186 = accumulateInto
var forEachAccumulated = require(187                 ); // 187 = forEachAccumulated
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var eventQueue = null;

var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
  return executeDispatchesAndRelease(e, false);
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

var EventPluginHub = {
  injection: {
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
  },

  getListener: function getListener(inst, registrationName) {
    var listener;

    if (typeof inst.tag === 'number') {
      var stateNode = inst.stateNode;
      if (!stateNode) {
        return null;
      }
      var props = EventPluginUtils.getFiberCurrentPropsFromNode(stateNode);
      if (!props) {
        return null;
      }
      listener = props[registrationName];
      if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
        return null;
      }
    } else {
      var currentElement = inst._currentElement;
      if (typeof currentElement === 'string' || typeof currentElement === 'number') {
        return null;
      }
      if (!inst._rootNodeID) {
        return null;
      }
      var _props = currentElement.props;
      listener = _props[registrationName];
      if (shouldPreventMouseEvent(registrationName, currentElement.type, _props)) {
        return null;
      }
    }

    invariant(!listener || typeof listener === 'function', 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener);
    return listener;
  },

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  enqueueEvents: function enqueueEvents(events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  processEventQueue: function processEventQueue(simulated) {
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    invariant(!eventQueue, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.');

    ReactErrorUtils.rethrowCaughtError();
  }
};

module.exports = EventPluginHub;
}, 184, null, "EventPluginHub");
__d(/* EventPluginRegistry */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var eventPluginOrder = null;

var namesToPlugins = {};

function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    invariant(pluginIndex > -1, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName);
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    invariant(pluginModule.extractEvents, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName);
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName);
    }
  }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName);
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
  invariant(!EventPluginRegistry.registrationNameModules[registrationName], 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (__DEV__) {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

var EventPluginRegistry = {
  plugins: [],

  eventNameDispatchConfigs: {},

  registrationNameModules: {},

  registrationNameDependencies: {},

  possibleRegistrationNames: __DEV__ ? {} : null,

  injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
    invariant(!eventPluginOrder, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.');

    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        invariant(!namesToPlugins[pluginName], 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName);
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  }
};

module.exports = EventPluginRegistry;
}, 185, null, "EventPluginRegistry");
__d(/* accumulateInto */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function accumulateInto(current, next) {
  invariant(next != null, 'accumulateInto(...): Accumulated items must not be null or undefined.');

  if (current == null) {
    return next;
  }

  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
}, 186, null, "accumulateInto");
__d(/* forEachAccumulated */function(global, require, module, exports) {

'use strict';

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
}, 187, null, "forEachAccumulated");
__d(/* RCTEventEmitter */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge

var RCTEventEmitter = {
  register: function register(eventEmitter) {
    BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);
  }
};

module.exports = RCTEventEmitter;
}, 188, null, "RCTEventEmitter");
__d(/* ReactNativeBridgeEventPlugin */function(global, require, module, exports) {
'use strict';

var EventPropagators = require(190               ); // 190 = EventPropagators
var SyntheticEvent = require(192             ); // 192 = SyntheticEvent
var UIManager = require(78         ); // 78 = UIManager

var warning = require(19                ); // 19 = fbjs/lib/warning

var customBubblingEventTypes = UIManager.customBubblingEventTypes;
var customDirectEventTypes = UIManager.customDirectEventTypes;

var allTypesByEventName = {};

for (var bubblingTypeName in customBubblingEventTypes) {
  allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
}

for (var directTypeName in customDirectEventTypes) {
  warning(!customBubblingEventTypes[directTypeName], 'Event cannot be both direct and bubbling: %s', directTypeName);
  allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];
}

var ReactNativeBridgeEventPlugin = {
  eventTypes: babelHelpers.extends({}, customBubblingEventTypes, customDirectEventTypes),

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];
    var directDispatchConfig = customDirectEventTypes[topLevelType];
    var event = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    if (bubbleDispatchConfig) {
      EventPropagators.accumulateTwoPhaseDispatches(event);
    } else if (directDispatchConfig) {
      EventPropagators.accumulateDirectDispatches(event);
    } else {
      return null;
    }
    return event;
  }
};

module.exports = ReactNativeBridgeEventPlugin;
}, 189, null, "ReactNativeBridgeEventPlugin");
__d(/* EventPropagators */function(global, require, module, exports) {

'use strict';

var EventPluginHub = require(184             ); // 184 = EventPluginHub
var ReactTreeTraversal = require(191                 ); // 191 = ReactTreeTraversal

var accumulateInto = require(186             ); // 186 = accumulateInto
var forEachAccumulated = require(187                 ); // 187 = forEachAccumulated
var warning = require(19                ); // 19 = fbjs/lib/warning

var getListener = EventPluginHub.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
  if (__DEV__) {
    warning(inst, 'Dispatching inst must not be null');
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
    ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
}, 190, null, "EventPropagators");
__d(/* ReactTreeTraversal */function(global, require, module, exports) {

'use strict';

var _require = require(97               ), // 97 = ReactTypeOfWork
    HostComponent = _require.HostComponent;

function getParent(inst) {
  if (inst._hostParent !== undefined) {
    return inst._hostParent;
  }
  if (typeof inst.tag === 'number') {
    do {
      inst = inst.return;
    } while (inst && inst.tag !== HostComponent);
    if (inst) {
      return inst;
    }
  }
  return null;
}

function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

function isAncestor(instA, instB) {
  while (instB) {
    if (instA === instB || instA === instB.alternate) {
      return true;
    }
    instB = getParent(instB);
  }
  return false;
}

function getParentInstance(inst) {
  return getParent(inst);
}

function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = getParent(to);
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
}, 191, null, "ReactTreeTraversal");
__d(/* SyntheticEvent */function(global, require, module, exports) {

'use strict';

var PooledClass = require(193          ); // 193 = PooledClass

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var warning = require(19                ); // 19 = fbjs/lib/warning

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

var EventInterface = {
  type: null,
  target: null,

  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function timeStamp(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (__DEV__) {
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (__DEV__) {
      delete this[propName];
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

babelHelpers.extends(SyntheticEvent.prototype, {
  preventDefault: function preventDefault() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function stopPropagation() {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  persist: function persist() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  isPersistent: emptyFunction.thatReturnsFalse,

  destructor: function destructor() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (__DEV__) {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (__DEV__) {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

if (__DEV__) {
  if (isProxySupported) {
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function construct(target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function apply(constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function set(target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
  }
}

SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function E() {};
  E.prototype = Super.prototype;
  var prototype = new E();

  babelHelpers.extends(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = babelHelpers.extends({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);
  }
}
}, 192, null, "SyntheticEvent");
__d(/* PooledClass */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  invariant(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}, 193, null, "PooledClass");
__d(/* ReactNativeEventEmitter */function(global, require, module, exports) {
'use strict';

var EventPluginHub = require(184             ); // 184 = EventPluginHub
var EventPluginRegistry = require(185                  ); // 185 = EventPluginRegistry
var ReactEventEmitterMixin = require(195                     ); // 195 = ReactEventEmitterMixin
var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree
var ReactNativeTagHandles = require(196                    ); // 196 = ReactNativeTagHandles
var ReactGenericBatching = require(122                   ); // 122 = ReactGenericBatching

var warning = require(19                ); // 19 = fbjs/lib/warning

var EMPTY_NATIVE_EVENT = {};

var touchSubsequence = function touchSubsequence(touches, indices) {
  var ret = [];
  for (var i = 0; i < indices.length; i++) {
    ret.push(touches[indices[i]]);
  }
  return ret;
};

var removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
  var rippedOut = [];

  var temp = touches;
  for (var i = 0; i < indices.length; i++) {
    var index = indices[i];
    rippedOut.push(touches[index]);
    temp[index] = null;
  }
  var fillAt = 0;
  for (var j = 0; j < temp.length; j++) {
    var cur = temp[j];
    if (cur !== null) {
      temp[fillAt++] = cur;
    }
  }
  temp.length = fillAt;
  return rippedOut;
};

var ReactNativeEventEmitter = babelHelpers.extends({}, ReactEventEmitterMixin, {

  registrationNames: EventPluginRegistry.registrationNameModules,

  getListener: EventPluginHub.getListener,

  _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;
    var inst = ReactNativeComponentTree.getInstanceFromNode(rootNodeID);
    ReactGenericBatching.batchedUpdates(function () {
      ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
    });
  },

  receiveEvent: function receiveEvent(tag, topLevelType, nativeEventParam) {
    var rootNodeID = tag;
    ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
  },

  receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
    var changedTouches = eventTopLevelType === 'topTouchEnd' || eventTopLevelType === 'topTouchCancel' ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices);

    for (var jj = 0; jj < changedTouches.length; jj++) {
      var touch = changedTouches[jj];

      touch.changedTouches = changedTouches;
      touch.touches = touches;
      var nativeEvent = touch;
      var rootNodeID = null;
      var target = nativeEvent.target;
      if (target !== null && target !== undefined) {
        if (target < ReactNativeTagHandles.tagsStartAt) {
          if (__DEV__) {
            warning(false, 'A view is reporting that a touch occurred on tag zero.');
          }
        } else {
          rootNodeID = target;
        }
      }
      ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
    }
  }
});

module.exports = ReactNativeEventEmitter;
}, 194, null, "ReactNativeEventEmitter");
__d(/* ReactEventEmitterMixin */function(global, require, module, exports) {

'use strict';

var EventPluginHub = require(184             ); // 184 = EventPluginHub

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {
  handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
}, 195, null, "ReactEventEmitterMixin");
__d(/* ReactNativeTagHandles */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var INITIAL_TAG_COUNT = 1;
var ReactNativeTagHandles = {
  tagsStartAt: INITIAL_TAG_COUNT,
  tagCount: INITIAL_TAG_COUNT,

  allocateTag: function allocateTag() {
    while (this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
      ReactNativeTagHandles.tagCount++;
    }
    var tag = ReactNativeTagHandles.tagCount;
    ReactNativeTagHandles.tagCount++;
    return tag;
  },

  assertRootTag: function assertRootTag(tag) {
    invariant(this.reactTagIsNativeTopRootID(tag), 'Expect a native root tag, instead got %s', tag);
  },

  reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
    return reactTag % 10 === 1;
  }
};

module.exports = ReactNativeTagHandles;
}, 196, null, "ReactNativeTagHandles");
__d(/* ReactNativeEventPluginOrder */function(global, require, module, exports) {
'use strict';

var ReactNativeEventPluginOrder = ['ResponderEventPlugin', 'ReactNativeBridgeEventPlugin'];

module.exports = ReactNativeEventPluginOrder;
}, 197, null, "ReactNativeEventPluginOrder");
__d(/* ReactNativeGlobalResponderHandler */function(global, require, module, exports) {
'use strict';

var UIManager = require(78         ); // 78 = UIManager

var ReactNativeGlobalResponderHandler = {
  onChange: function onChange(from, to, blockNativeResponder) {
    if (to !== null) {
      var tag = typeof to.tag !== 'number' ? to._rootNodeID : to.stateNode._nativeTag;
      UIManager.setJSResponder(tag, blockNativeResponder);
    } else {
      UIManager.clearJSResponder();
    }
  }
};

module.exports = ReactNativeGlobalResponderHandler;
}, 198, null, "ReactNativeGlobalResponderHandler");
__d(/* ResponderEventPlugin */function(global, require, module, exports) {

'use strict';

var EventPluginUtils = require(124               ); // 124 = EventPluginUtils
var EventPropagators = require(190               ); // 190 = EventPropagators
var ReactTreeTraversal = require(191                 ); // 191 = ReactTreeTraversal
var ResponderSyntheticEvent = require(200                      ); // 200 = ResponderSyntheticEvent
var ResponderTouchHistoryStore = require(201                         ); // 201 = ResponderTouchHistoryStore

var accumulate = require(202         ); // 202 = accumulate

var isStartish = EventPluginUtils.isStartish;
var isMoveish = EventPluginUtils.isMoveish;
var isEndish = EventPluginUtils.isEndish;
var executeDirectDispatch = EventPluginUtils.executeDirectDispatch;
var hasDispatches = EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue = EventPluginUtils.executeDispatchesInOrderStopAtTrue;

var responderInst = null;

var trackedTouchCount = 0;

var previousActiveTouches = 0;

var changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
  var oldResponderInst = responderInst;
  responderInst = nextResponderInst;
  if (ResponderEventPlugin.GlobalResponderHandler !== null) {
    ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }
};

var eventTypes = {
  startShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onStartShouldSetResponder',
      captured: 'onStartShouldSetResponderCapture'
    }
  },

  scrollShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onScrollShouldSetResponder',
      captured: 'onScrollShouldSetResponderCapture'
    }
  },

  selectionChangeShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onSelectionChangeShouldSetResponder',
      captured: 'onSelectionChangeShouldSetResponderCapture'
    }
  },

  moveShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onMoveShouldSetResponder',
      captured: 'onMoveShouldSetResponderCapture'
    }
  },

  responderStart: { registrationName: 'onResponderStart' },
  responderMove: { registrationName: 'onResponderMove' },
  responderEnd: { registrationName: 'onResponderEnd' },
  responderRelease: { registrationName: 'onResponderRelease' },
  responderTerminationRequest: {
    registrationName: 'onResponderTerminationRequest'
  },
  responderGrant: { registrationName: 'onResponderGrant' },
  responderReject: { registrationName: 'onResponderReject' },
  responderTerminate: { registrationName: 'onResponderTerminate' }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === 'topSelectionChange' ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;

  var bubbleShouldSetFrom = !responderInst ? targetInst : ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst);

  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;
  var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
  if (skipOverBubbleShouldSetFrom) {
    EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);
  } else {
    EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);
  }
  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);
  if (!shouldSetEvent.isPersistent()) {
    shouldSetEvent.constructor.release(shouldSetEvent);
  }

  if (!wantsResponderInst || wantsResponderInst === responderInst) {
    return null;
  }
  var extracted;
  var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

  EventPropagators.accumulateDirectDispatches(grantEvent);
  var blockHostResponder = executeDirectDispatch(grantEvent) === true;
  if (responderInst) {
    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
    EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
    var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);
    if (!terminationRequestEvent.isPersistent()) {
      terminationRequestEvent.constructor.release(terminationRequestEvent);
    }

    if (shouldSwitch) {
      var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(terminateEvent);
      extracted = accumulate(extracted, [grantEvent, terminateEvent]);
      changeResponder(wantsResponderInst, blockHostResponder);
    } else {
      var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(rejectEvent);
      extracted = accumulate(extracted, rejectEvent);
    }
  } else {
    extracted = accumulate(extracted, grantEvent);
    changeResponder(wantsResponderInst, blockHostResponder);
  }
  return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
  return topLevelInst && (topLevelType === 'topScroll' && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === 'topSelectionChange' || isStartish(topLevelType) || isMoveish(topLevelType));
}

function noResponderTouches(nativeEvent) {
  var touches = nativeEvent.touches;
  if (!touches || touches.length === 0) {
    return true;
  }
  for (var i = 0; i < touches.length; i++) {
    var activeTouch = touches[i];
    var target = activeTouch.target;
    if (target !== null && target !== undefined && target !== 0) {
      var targetInst = EventPluginUtils.getInstanceFromNode(target);
      if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) {
        return false;
      }
    }
  }
  return true;
}

var ResponderEventPlugin = {
  _getResponder: function _getResponder() {
    return responderInst;
  },

  eventTypes: eventTypes,

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (isStartish(topLevelType)) {
      trackedTouchCount += 1;
    } else if (isEndish(topLevelType)) {
      if (trackedTouchCount >= 0) {
        trackedTouchCount -= 1;
      } else {
        console.error('Ended a touch event which was not counted in `trackedTouchCount`.');
        return null;
      }
    }

    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;

    var isResponderTouchStart = responderInst && isStartish(topLevelType);
    var isResponderTouchMove = responderInst && isMoveish(topLevelType);
    var isResponderTouchEnd = responderInst && isEndish(topLevelType);
    var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;

    if (incrementalTouch) {
      var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(gesture);
      extracted = accumulate(extracted, gesture);
    }

    var isResponderTerminate = responderInst && topLevelType === 'topTouchCancel';
    var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);
    var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
    if (finalTouch) {
      var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(finalEvent);
      extracted = accumulate(extracted, finalEvent);
      changeResponder(null);
    }

    var numberActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
    if (ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches) {
      ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches);
    }
    previousActiveTouches = numberActiveTouches;

    return extracted;
  },

  GlobalResponderHandler: null,
  GlobalInteractionHandler: null,

  injection: {
    injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
    },

    injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
      ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
    }
  }
};

module.exports = ResponderEventPlugin;
}, 199, null, "ResponderEventPlugin");
__d(/* ResponderSyntheticEvent */function(global, require, module, exports) {

'use strict';

var SyntheticEvent = require(192             ); // 192 = SyntheticEvent

var ResponderEventInterface = {
  touchHistory: function touchHistory(nativeEvent) {
    return null;
  }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

module.exports = ResponderSyntheticEvent;
}, 200, null, "ResponderSyntheticEvent");
__d(/* ResponderTouchHistoryStore */function(global, require, module, exports) {

'use strict';

var EventPluginUtils = require(124               ); // 124 = EventPluginUtils

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var isEndish = EventPluginUtils.isEndish,
    isMoveish = EventPluginUtils.isMoveish,
    isStartish = EventPluginUtils.isStartish;


var MAX_TOUCH_BANK = 20;
var touchBank = [];
var touchHistory = {
  touchBank: touchBank,
  numberActiveTouches: 0,

  indexOfSingleActiveTouch: -1,
  mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
  return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
  return {
    touchActive: true,
    startPageX: touch.pageX,
    startPageY: touch.pageY,
    startTimeStamp: timestampForTouch(touch),
    currentPageX: touch.pageX,
    currentPageY: touch.pageY,
    currentTimeStamp: timestampForTouch(touch),
    previousPageX: touch.pageX,
    previousPageY: touch.pageY,
    previousTimeStamp: timestampForTouch(touch)
  };
}

function resetTouchRecord(touchRecord, touch) {
  touchRecord.touchActive = true;
  touchRecord.startPageX = touch.pageX;
  touchRecord.startPageY = touch.pageY;
  touchRecord.startTimeStamp = timestampForTouch(touch);
  touchRecord.currentPageX = touch.pageX;
  touchRecord.currentPageY = touch.pageY;
  touchRecord.currentTimeStamp = timestampForTouch(touch);
  touchRecord.previousPageX = touch.pageX;
  touchRecord.previousPageY = touch.pageY;
  touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
  var identifier = _ref.identifier;

  invariant(identifier != null, 'Touch object is missing identifier.');
  warning(identifier <= MAX_TOUCH_BANK, 'Touch identifier %s is greater than maximum supported %s which causes ' + 'performance issues backfilling array locations for all of the indices.', identifier, MAX_TOUCH_BANK);
  return identifier;
}

function recordTouchStart(touch) {
  var identifier = getTouchIdentifier(touch);
  var touchRecord = touchBank[identifier];
  if (touchRecord) {
    resetTouchRecord(touchRecord, touch);
  } else {
    touchBank[identifier] = createTouchRecord(touch);
  }
  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
  var touchRecord = touchBank[getTouchIdentifier(touch)];
  if (touchRecord) {
    touchRecord.touchActive = true;
    touchRecord.previousPageX = touchRecord.currentPageX;
    touchRecord.previousPageY = touchRecord.currentPageY;
    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;
    touchRecord.currentPageX = touch.pageX;
    touchRecord.currentPageY = touch.pageY;
    touchRecord.currentTimeStamp = timestampForTouch(touch);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  } else {
    console.error('Cannot record touch move without a touch start.\n' + 'Touch Move: %s\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());
  }
}

function recordTouchEnd(touch) {
  var touchRecord = touchBank[getTouchIdentifier(touch)];
  if (touchRecord) {
    touchRecord.touchActive = false;
    touchRecord.previousPageX = touchRecord.currentPageX;
    touchRecord.previousPageY = touchRecord.currentPageY;
    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;
    touchRecord.currentPageX = touch.pageX;
    touchRecord.currentPageY = touch.pageY;
    touchRecord.currentTimeStamp = timestampForTouch(touch);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  } else {
    console.error('Cannot record touch end without a touch start.\n' + 'Touch End: %s\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());
  }
}

function printTouch(touch) {
  return JSON.stringify({
    identifier: touch.identifier,
    pageX: touch.pageX,
    pageY: touch.pageY,
    timestamp: timestampForTouch(touch)
  });
}

function printTouchBank() {
  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
  if (touchBank.length > MAX_TOUCH_BANK) {
    printed += ' (original size: ' + touchBank.length + ')';
  }
  return printed;
}

var ResponderTouchHistoryStore = {
  recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
    if (isMoveish(topLevelType)) {
      nativeEvent.changedTouches.forEach(recordTouchMove);
    } else if (isStartish(topLevelType)) {
      nativeEvent.changedTouches.forEach(recordTouchStart);
      touchHistory.numberActiveTouches = nativeEvent.touches.length;
      if (touchHistory.numberActiveTouches === 1) {
        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;
      }
    } else if (isEndish(topLevelType)) {
      nativeEvent.changedTouches.forEach(recordTouchEnd);
      touchHistory.numberActiveTouches = nativeEvent.touches.length;
      if (touchHistory.numberActiveTouches === 1) {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrackToCheck = touchBank[i];
          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {
            touchHistory.indexOfSingleActiveTouch = i;
            break;
          }
        }
        if (__DEV__) {
          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
          warning(activeRecord != null && activeRecord.touchActive, 'Cannot find single active touch.');
        }
      }
    }
  },


  touchHistory: touchHistory
};

module.exports = ResponderTouchHistoryStore;
}, 201, null, "ResponderTouchHistoryStore");
__d(/* accumulate */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function accumulate(current, next) {
  invariant(next != null, 'accumulate(...): Accumulated items must be not be null or undefined.');

  if (current == null) {
    return next;
  }

  if (Array.isArray(current)) {
    return current.concat(next);
  }

  if (Array.isArray(next)) {
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulate;
}, 202, null, "accumulate");
__d(/* ReactNativeViewConfigRegistry */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var viewConfigs = new Map();

var prefix = 'topsecret-';

var ReactNativeViewConfigRegistry = {
  register: function register(viewConfig) {
    var name = viewConfig.uiViewClassName;
    invariant(!viewConfigs.has(name), 'Tried to register two views with the same name %s', name);
    var secretName = prefix + name;
    viewConfigs.set(secretName, viewConfig);
    return secretName;
  },
  get: function get(secretName) {
    var config = viewConfigs.get(secretName);
    invariant(config, 'View config not found for name %s', secretName);
    return config;
  }
};

module.exports = ReactNativeViewConfigRegistry;
}, 203, null, "ReactNativeViewConfigRegistry");
__d(/* findNodeHandle */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner
var ReactInstanceMap = require(96                ); // 96 = ReactInstanceMap

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var injectedFindNode = void 0;
var injectedFindRootNodeID = void 0;

function findNodeHandle(componentOrHandle) {
  if (__DEV__) {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      warning(owner._warnedAboutRefsInRender, '%s is accessing findNodeHandle inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component');

      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrHandle == null) {
    return null;
  }
  if (typeof componentOrHandle === 'number') {
    return componentOrHandle;
  }

  var component = componentOrHandle;

  var internalInstance = ReactInstanceMap.get(component);
  if (internalInstance) {
    return injectedFindNode(internalInstance);
  } else {
    var rootNodeID = injectedFindRootNodeID(component);
    if (rootNodeID) {
      return rootNodeID;
    } else {
      invariant(typeof component === 'object' && ('_rootNodeID' in component || '_nativeTag' in component) || component.render != null && typeof component.render === 'function', 'findNodeHandle(...): Argument is not a component ' + '(type: %s, keys: %s)', typeof component, Object.keys(component));
      invariant(false, 'findNodeHandle(...): Unable to find node handle for unmounted ' + 'component.');
    }
  }
}

findNodeHandle.injection = {
  injectFindNode: function injectFindNode(findNode) {
    injectedFindNode = findNode;
  },
  injectFindRootNodeID: function injectFindRootNodeID(findRootNodeID) {
    injectedFindRootNodeID = findRootNodeID;
  }
};

module.exports = findNodeHandle;
}, 204, null, "findNodeHandle");
__d(/* takeSnapshot */function(global, require, module, exports) {
'use strict';

var ReactNative = require(85           ); // 85 = ReactNative
var UIManager = require(78         ); // 78 = UIManager

module.exports = function takeSnapshot(view, options) {
  return regeneratorRuntime.async(function takeSnapshot$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (typeof view !== 'number' && view !== 'window') {
            view = ReactNative.findNodeHandle(view) || 'window';
          }

          return _context.abrupt('return', UIManager.__takeSnapshot(view, options));

        case 2:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
};
}, 205, null, "takeSnapshot");
__d(/* ReactNativeStack */function(global, require, module, exports) {
'use strict';

var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree
var ReactNativeInjection = require(138                   ); // 138 = ReactNativeInjection
var ReactNativeMount = require(207               ); // 207 = ReactNativeMount
var ReactNativeStackInjection = require(225                        ); // 225 = ReactNativeStackInjection
var ReactUpdates = require(215           ); // 215 = ReactUpdates

var _findNodeHandle = require(204             ); // 204 = findNodeHandle
var takeSnapshot = require(205           ); // 205 = takeSnapshot

ReactNativeInjection.inject();
ReactNativeStackInjection.inject();

var render = function render(element, mountInto, callback) {
  return ReactNativeMount.renderComponent(element, mountInto, callback);
};

var ReactNative = {
  hasReactNativeInitialized: false,

  findNodeHandle: function findNodeHandle(componentOrHandle) {
    var nodeHandle = _findNodeHandle(componentOrHandle);
    if (nodeHandle == null || typeof nodeHandle === 'number') {
      return nodeHandle;
    }
    return nodeHandle.getHostNode();
  },


  render: render,

  takeSnapshot: takeSnapshot,

  unmountComponentAtNode: ReactNativeMount.unmountComponentAtNode,

  unstable_batchedUpdates: ReactUpdates.batchedUpdates,


  unmountComponentAtNodeAndRemoveContainer: ReactNativeMount.unmountComponentAtNodeAndRemoveContainer
};

if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: function getClosestInstanceFromNode(node) {
        return ReactNativeComponentTree.getClosestInstanceFromNode(node);
      },
      getNodeFromInstance: function getNodeFromInstance(inst) {
        while (inst._renderedComponent) {
          inst = inst._renderedComponent;
        }
        if (inst) {
          return ReactNativeComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactNativeMount,
    Reconciler: require(210              ) // 210 = ReactReconciler
  });
}

module.exports = ReactNative;
}, 206, null, "ReactNativeStack");
__d(/* ReactNativeMount */function(global, require, module, exports) {
'use strict';

var React = require(13     ); // 13 = react
var ReactInstrumentation = require(208                   ); // 208 = ReactInstrumentation
var ReactNativeContainerInfo = require(209                       ); // 209 = ReactNativeContainerInfo
var ReactNativeTagHandles = require(196                    ); // 196 = ReactNativeTagHandles
var ReactReconciler = require(210              ); // 210 = ReactReconciler
var ReactUpdateQueue = require(214               ); // 214 = ReactUpdateQueue
var ReactUpdates = require(215           ); // 215 = ReactUpdates
var UIManager = require(78         ); // 78 = UIManager

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var instantiateReactComponent = require(217                        ); // 217 = instantiateReactComponent
var shouldUpdateReactComponent = require(221                         ); // 221 = shouldUpdateReactComponent

var TopLevelWrapper = function TopLevelWrapper() {};
TopLevelWrapper.prototype.isReactComponent = {};
if (__DEV__) {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

function mountComponentIntoNode(componentInstance, containerTag, transaction) {
  var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactNativeContainerInfo(containerTag), emptyObject, 0);
  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
  ReactNativeMount._mountImageIntoNode(markup, containerTag);
}

function batchedMountComponentIntoNode(componentInstance, containerTag) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
  transaction.perform(mountComponentIntoNode, null, componentInstance, containerTag, transaction);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

var ReactNativeMount = {
  _instancesByContainerID: {},

  findNodeHandle: require(204             ), // 204 = findNodeHandle

  renderComponent: function renderComponent(nextElement, containerTag, callback) {
    var nextWrappedElement = React.createElement(TopLevelWrapper, {
      child: nextElement
    });

    var topRootNodeID = containerTag;
    var prevComponent = ReactNativeMount._instancesByContainerID[topRootNodeID];
    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactUpdateQueue.enqueueElementInternal(prevComponent, nextWrappedElement, emptyObject);
        if (callback) {
          ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
        }
        return prevComponent;
      } else {
        ReactNativeMount.unmountComponentAtNode(containerTag);
      }
    }

    if (!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)) {
      console.error('You cannot render into anything but a top root');
      return null;
    }

    ReactNativeTagHandles.assertRootTag(containerTag);

    var instance = instantiateReactComponent(nextWrappedElement, false);
    ReactNativeMount._instancesByContainerID[containerTag] = instance;

    if (callback) {
      var nonNullCallback = callback;
      instance._pendingCallbacks = [function () {
        nonNullCallback.call(instance._renderedComponent.getPublicInstance());
      }];
    }

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, instance, containerTag);
    var component = instance._renderedComponent.getPublicInstance();
    return component;
  },

  _mountImageIntoNode: function _mountImageIntoNode(mountImage, containerID) {
    var childTag = mountImage;
    UIManager.setChildren(containerID, [childTag]);
  },

  unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
    ReactNativeMount.unmountComponentAtNode(containerTag);

    UIManager.removeRootView(containerTag);
  },

  unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
    if (!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)) {
      console.error('You cannot render into anything but a top root');
      return false;
    }

    var instance = ReactNativeMount._instancesByContainerID[containerTag];
    if (!instance) {
      return false;
    }
    if (__DEV__) {
      ReactInstrumentation.debugTool.onBeginFlush();
    }
    ReactNativeMount.unmountComponentFromNode(instance, containerTag);
    delete ReactNativeMount._instancesByContainerID[containerTag];
    if (__DEV__) {
      ReactInstrumentation.debugTool.onEndFlush();
    }
    return true;
  },

  unmountComponentFromNode: function unmountComponentFromNode(instance, containerID) {
    ReactReconciler.unmountComponent(instance);
    UIManager.removeSubviewsFromContainerWithID(containerID);
  }
};

module.exports = ReactNativeMount;
}, 207, null, "ReactNativeMount");
__d(/* ReactInstrumentation */function(global, require, module, exports) {

'use strict';

var debugTool = null;

if (__DEV__) {
  var ReactDebugTool = require(54              ); // 54 = ReactDebugTool
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
}, 208, null, "ReactInstrumentation");
__d(/* ReactNativeContainerInfo */function(global, require, module, exports) {
'use strict';

function ReactNativeContainerInfo(tag) {
  var info = {
    _tag: tag
  };
  return info;
}

module.exports = ReactNativeContainerInfo;
}, 209, null, "ReactNativeContainerInfo");
__d(/* ReactReconciler */function(global, require, module, exports) {

'use strict';

var ReactRef = require(211       ); // 211 = ReactRef
var ReactInstrumentation = require(208                   ); // 208 = ReactInstrumentation

var warning = require(19                ); // 19 = fbjs/lib/warning

function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
  mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) {
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  getHostNode: function getHostNode(internalInstance) {
    return internalInstance.getHostNode();
  },

  unmountComponent: function unmountComponent(internalInstance, safely, skipLifecycle) {
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely, skipLifecycle);
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      return;
    }

    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber);
      return;
    }
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }
};

module.exports = ReactReconciler;
}, 210, null, "ReactReconciler");
__d(/* ReactRef */function(global, require, module, exports) {

'use strict';

var ReactOwner = require(212         ); // 212 = ReactOwner

var ReactRef = {};

if (__DEV__) {
  var ReactCompositeComponentTypes = require(213                           ); // 213 = ReactCompositeComponentTypes
  var ReactComponentTreeHook = require(39                                ); // 39 = react/lib/ReactComponentTreeHook
  var warning = require(19                ); // 19 = fbjs/lib/warning

  var warnedAboutStatelessRefs = {};
}

function attachRef(ref, component, owner) {
  if (__DEV__) {
    if (component._compositeType === ReactCompositeComponentTypes.StatelessFunctional) {
      var info = '';
      var ownerName = void 0;
      if (owner) {
        if (typeof owner.getName === 'function') {
          ownerName = owner.getName();
        }
        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }
      }

      var warningKey = ownerName || component._debugID;
      var element = component._currentElement;
      if (element && element._source) {
        warningKey = element._source.fileName + ':' + element._source.lineNumber;
      }
      if (!warnedAboutStatelessRefs[warningKey]) {
        warnedAboutStatelessRefs[warningKey] = true;
        warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactComponentTreeHook.getStackAddendumByID(component._debugID));
      }
    }
  }

  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef || typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
}, 211, null, "ReactRef");
__d(/* ReactOwner */function(global, require, module, exports) {

'use strict';

var _require = require(97               ), // 97 = ReactTypeOfWork
    ClassComponent = _require.ClassComponent;

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

var ReactOwner = {
  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
    if (owner && owner.tag === ClassComponent) {
      var inst = owner.stateNode;
      var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
      refs[ref] = component.getPublicInstance();
    } else {
      invariant(isValidOwner(owner), 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + "be adding a ref to a component that was not created inside a component's " + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).');
      owner.attachRef(ref, component);
    }
  },

  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
    if (owner && owner.tag === ClassComponent) {
      var inst = owner.stateNode;
      if (inst && inst.refs[ref] === component.getPublicInstance()) {
        delete inst.refs[ref];
      }
    } else {
      invariant(isValidOwner(owner), 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + "be removing a ref to a component that was not created inside a component's " + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).');
      var ownerPublicInstance = owner.getPublicInstance();

      if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
        owner.detachRef(ref);
      }
    }
  }
};

module.exports = ReactOwner;
}, 212, null, "ReactOwner");
__d(/* ReactCompositeComponentTypes */function(global, require, module, exports) {

module.exports = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};
}, 213, null, "ReactCompositeComponentTypes");
__d(/* ReactUpdateQueue */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner
var ReactInstanceMap = require(96                ); // 96 = ReactInstanceMap
var ReactInstrumentation = require(208                   ); // 208 = ReactInstrumentation
var ReactUpdates = require(215           ); // 215 = ReactUpdates

if (__DEV__) {
  var warning = require(19                ); // 19 = fbjs/lib/warning
  var warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {
    warning(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, '' + callback);
  };
}

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (__DEV__) {
      var ctor = publicInstance.constructor;
      warning(false, 'Can only update a mounted or mounting component. This usually means ' + 'you called setState, replaceState, or forceUpdate on an unmounted ' + 'component. This is a no-op.\n\nPlease check the code for the ' + '%s component.', ctor && (ctor.displayName || ctor.name) || 'ReactClass');
    }
    return null;
  }

  if (__DEV__) {
    warning(ReactCurrentOwner.current == null, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
  }

  return internalInstance;
}

var ReactUpdateQueue = {
  isMounted: function isMounted(publicInstance) {
    if (__DEV__) {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component');
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    if (!internalInstance) {
      return;
    }

    callback = callback === undefined ? null : callback;
    if (callback !== null) {
      if (__DEV__) {
        warnOnInvalidCallback(callback, callerName);
      }
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    callback = callback === undefined ? null : callback;
    if (callback !== null) {
      if (__DEV__) {
        warnOnInvalidCallback(callback, callerName);
      }
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
    if (__DEV__) {
      ReactInstrumentation.debugTool.onSetState();
      warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().');
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    callback = callback === undefined ? null : callback;
    if (callback !== null) {
      if (__DEV__) {
        warnOnInvalidCallback(callback, callerName);
      }
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;

    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  }
};

module.exports = ReactUpdateQueue;
}, 214, null, "ReactUpdateQueue");
__d(/* ReactUpdates */function(global, require, module, exports) {

'use strict';

var PooledClass = require(193          ); // 193 = PooledClass
var ReactFeatureFlags = require(113                ); // 113 = ReactFeatureFlags
var ReactReconciler = require(210              ); // 210 = ReactReconciler
var Transaction = require(216          ); // 216 = Transaction

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var dirtyComponents = [];
var updateBatchNumber = 0;

var batchingStrategy = null;

function ensureInjected() {
  invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy');
}

var NESTED_UPDATES = {
  initialize: function initialize() {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function close() {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
}

babelHelpers.extends(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function destructor() {
    this.dirtyComponentsLength = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function perform(method, scope, a) {
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  invariant(len === dirtyComponents.length, "Expected flush transaction's stored dirty-components length (%s) to " + 'match dirty-components array length (%s).', len, dirtyComponents.length);

  dirtyComponents.sort(mountOrderComparator);

  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    var component = dirtyComponents[i];

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;

      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }
  }
}

var flushBatchedUpdates = function flushBatchedUpdates() {
  while (dirtyComponents.length) {
    var transaction = ReactUpdatesFlushTransaction.getPooled();
    transaction.perform(runBatchedUpdates, null, transaction);
    ReactUpdatesFlushTransaction.release(transaction);
  }
};

function enqueueUpdate(component) {
  ensureInjected();

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
    invariant(ReconcileTransaction, 'ReactUpdates: must provide a reconcile transaction class');
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
    invariant(_batchingStrategy, 'ReactUpdates: must provide a batching strategy');
    invariant(typeof _batchingStrategy.batchedUpdates === 'function', 'ReactUpdates: must provide a batchedUpdates() function');
    invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean', 'ReactUpdates: must provide an isBatchingUpdates boolean attribute');
    batchingStrategy = _batchingStrategy;
  },

  getBatchingStrategy: function getBatchingStrategy() {
    return batchingStrategy;
  }
};

var ReactUpdates = {
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection
};

module.exports = ReactUpdates;
}, 215, null, "ReactUpdates");
__d(/* Transaction */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var OBSERVED_ERROR = {};

var TransactionImpl = {
  reinitializeTransaction: function reinitializeTransaction() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  getTransactionWrappers: null,

  isInTransaction: function isInTransaction() {
    return !!this._isInTransaction;
  },

  perform: function perform(method, scope, a, b, c, d, e, f) {
    invariant(!this.isInTransaction(), 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.');
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;

      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function initializeAll(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  closeAll: function closeAll(startIndex) {
    invariant(this.isInTransaction(), 'Transaction.closeAll(): Cannot close transaction when none are open.');
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
}, 216, null, "Transaction");
__d(/* instantiateReactComponent */function(global, require, module, exports) {

'use strict';

var ReactCompositeComponent = require(218                      ); // 218 = ReactCompositeComponent
var ReactEmptyComponent = require(222                  ); // 222 = ReactEmptyComponent
var ReactHostComponent = require(223                 ); // 223 = ReactHostComponent

var getNextDebugID = require(224             ); // 224 = getNextDebugID
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (__DEV__) {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
      invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
    }

    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      instance = new element.type(element);

      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    invariant(false, 'Encountered invalid React node of type %s', typeof node);
  }

  if (__DEV__) {
    warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.');
  }

  instance._mountIndex = 0;
  instance._mountImage = null;

  if (__DEV__) {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  if (__DEV__) {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

babelHelpers.extends(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;
}, 217, null, "instantiateReactComponent");
__d(/* ReactCompositeComponent */function(global, require, module, exports) {

'use strict';

var React = require(13     ); // 13 = react
var ReactComponentEnvironment = require(219                        ); // 219 = ReactComponentEnvironment
var ReactCompositeComponentTypes = require(213                           ); // 213 = ReactCompositeComponentTypes
var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner
var ReactErrorUtils = require(106              ); // 106 = ReactErrorUtils
var ReactFeatureFlags = require(113                ); // 113 = ReactFeatureFlags
var ReactInstanceMap = require(96                ); // 96 = ReactInstanceMap
var ReactInstrumentation = require(208                   ); // 208 = ReactInstrumentation
var ReactNodeTypes = require(220             ); // 220 = ReactNodeTypes
var ReactReconciler = require(210              ); // 210 = ReactReconciler

if (__DEV__) {
  var checkReactTypeSpec = require(99                  ); // 99 = checkReactTypeSpec
  var ReactDebugCurrentFrame = require(38                                ); // 38 = react/lib/ReactDebugCurrentFrame
  var warningAboutMissingGetChildContext = {};
}

var emptyObject = require(22                    ); // 22 = fbjs/lib/emptyObject
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var shallowEqual = require(115                    ); // 115 = fbjs/lib/shallowEqual
var shouldUpdateReactComponent = require(221                         ); // 221 = shouldUpdateReactComponent
var warning = require(19                ); // 19 = fbjs/lib/warning

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  return element;
};

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

var nextMountID = 1;

var ReactCompositeComponent = {
  construct: function construct(element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    this._pendingCallbacks = null;

    this._calledComponentWillUnmount = false;

    if (__DEV__) {
      this._warnedAboutRefsInRender = false;
    }
  },

  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      if (__DEV__) {
        warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component');
      }
      invariant(inst === null || inst === false || React.isValidElement(inst), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component');
      inst = new StatelessComponent(Component);
      this._compositeType = ReactCompositeComponentTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = ReactCompositeComponentTypes.PureClass;
      } else {
        this._compositeType = ReactCompositeComponentTypes.ImpureClass;
      }
    }

    if (__DEV__) {
      if (inst.render == null) {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component');
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName);
    }

    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    ReactInstanceMap.set(inst, this);

    if (__DEV__) {
      warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component');
      warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component');
      warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component');
      warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component');
      warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component');
      warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component');
      warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component');
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent');

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    if (inst.componentWillMount) {
      if (__DEV__) {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, this._debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }

      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (__DEV__) {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    var callbacks = this._pendingCallbacks;
    if (callbacks) {
      this._pendingCallbacks = null;
      for (var i = 0; i < callbacks.length; i++) {
        transaction.getReactMountReady().enqueue(callbacks[i], inst);
      }
    }

    return markup;
  },

  _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
    if (__DEV__) {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (__DEV__) {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    if (__DEV__) {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();
      this._renderedComponent.unmountComponent(true, true);
      transaction.rollback(checkpoint);

      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY);
    this._renderedComponent = child;

    var debugID = 0;
    if (__DEV__) {
      debugID = this._debugID;
    }

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (__DEV__) {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function getHostNode() {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  unmountComponent: function unmountComponent(safely, skipLifecycle) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        if (!skipLifecycle) {
          var name = this.getName() + '.componentWillUnmount()';
          ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(name, inst.componentWillUnmount, inst);
        }
      } else {
        if (__DEV__) {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely, skipLifecycle);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    ReactInstanceMap.remove(inst);
  },

  _maskContext: function _maskContext(context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  _processContext: function _processContext(context) {
    var maskedContext = this._maskContext(context);
    if (__DEV__) {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  _processChildContext: function _processChildContext(currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (typeof inst.getChildContext === 'function') {
      if (__DEV__) {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }

      invariant(typeof Component.childContextTypes === 'object', '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent');
      if (__DEV__) {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        invariant(name in Component.childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name);
      }
      return babelHelpers.extends({}, currentContext, childContext);
    } else {
      if (__DEV__) {
        var componentName = this.getName();

        if (!warningAboutMissingGetChildContext[componentName]) {
          warningAboutMissingGetChildContext[componentName] = true;
          warning(!Component.childContextTypes, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }
    }
    return currentContext;
  },

  _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {
    if (__DEV__) {
      ReactDebugCurrentFrame.current = this._debugID;
      checkReactTypeSpec(typeSpecs, values, location, this.getName());
      ReactDebugCurrentFrame.current = null;
    }
  },

  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      var callbacks = this._pendingCallbacks;
      this._pendingCallbacks = null;
      if (callbacks) {
        for (var j = 0; j < callbacks.length; j++) {
          transaction.getReactMountReady().enqueue(callbacks[j], this.getPublicInstance());
        }
      }
      this._updateBatchNumber = null;
    }
  },

  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    invariant(inst != null, 'Attempted to update component `%s` that has already been unmounted ' + '(or failed to mount).', this.getName() || 'ReactCompositeComponent');

    var willReceive = false;
    var nextContext;

    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    if (willReceive && inst.componentWillReceiveProps) {
      var beforeState = inst.state;
      if (__DEV__) {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
      var afterState = inst.state;
      if (beforeState !== afterState) {
        inst.state = beforeState;
        inst.updater.enqueueReplaceState(inst, afterState);
        if (__DEV__) {
          warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', this.getName() || 'ReactCompositeComponent');
        }
      }
    }

    var callbacks = this._pendingCallbacks;
    this._pendingCallbacks = null;

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;
    if (!this._pendingForceUpdate) {
      var prevState = inst.state;
      shouldUpdate = willReceive || nextState !== prevState;
      if (inst.shouldComponentUpdate) {
        if (__DEV__) {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === ReactCompositeComponentTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (__DEV__) {
      warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent');
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;

      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.getReactMountReady().enqueue(callbacks[j], this.getPublicInstance());
      }
    }
  },

  _processPendingState: function _processPendingState(props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = replace ? queue[0] : inst.state;
    var dontMutate = true;
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      var partialState = typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial;
      if (partialState) {
        if (dontMutate) {
          dontMutate = false;
          nextState = babelHelpers.extends({}, nextState, partialState);
        } else {
          babelHelpers.extends(nextState, partialState);
        }
      }
    }

    return nextState;
  },

  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = !!inst.componentDidUpdate;
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (__DEV__) {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    if (inst.unstable_handleError) {
      this._updateRenderedComponentWithErrorHandling(transaction, unmaskedContext);
    } else {
      this._updateRenderedComponent(transaction, unmaskedContext);
    }

    if (hasComponentDidUpdate) {
      if (__DEV__) {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  _updateRenderedComponentWithErrorHandling: function _updateRenderedComponentWithErrorHandling(transaction, context) {
    var checkpoint = transaction.checkpoint();
    try {
      this._updateRenderedComponent(transaction, context);
    } catch (e) {
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._updateRenderedComponentWithNextElement(transaction, context, null, true);

      this._updateRenderedComponent(transaction, context);
    }
  },

  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
    var nextRenderedElement = this._renderValidatedComponent();
    this._updateRenderedComponentWithNextElement(transaction, context, nextRenderedElement, false);
  },

  _updateRenderedComponentWithNextElement: function _updateRenderedComponentWithNextElement(transaction, context, nextRenderedElement, safely) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;

    var debugID = 0;
    if (__DEV__) {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);

      if (!ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack) {
        ReactReconciler.unmountComponent(prevComponentInstance, safely, false);
      }

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY);
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack) {
        ReactReconciler.unmountComponent(prevComponentInstance, safely, false);
      }

      if (__DEV__) {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
    var inst = this._instance;
    var renderedElement;

    if (__DEV__) {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (__DEV__) {
      if (renderedElement === undefined && inst.render._isMockFunction) {
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  _renderValidatedComponent: function _renderValidatedComponent() {
    var renderedElement;
    if (__DEV__ || this._compositeType !== ReactCompositeComponentTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    invariant(renderedElement === null || renderedElement === false || React.isValidElement(renderedElement), '%s.render(): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent');

    return renderedElement;
  },

  attachRef: function attachRef(ref, component) {
    var inst = this.getPublicInstance();
    invariant(inst != null, 'Stateless function components cannot have refs.');
    var publicComponentInstance = component.getPublicInstance();
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  detachRef: function detachRef(ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  getName: function getName() {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  getPublicInstance: function getPublicInstance() {
    var inst = this._instance;
    if (this._compositeType === ReactCompositeComponentTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  _instantiateReactComponent: null
};

module.exports = ReactCompositeComponent;
}, 218, null, "ReactCompositeComponent");
__d(/* ReactComponentEnvironment */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var injected = false;

var ReactComponentEnvironment = {
  replaceNodeWithMarkup: null,

  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function injectEnvironment(environment) {
      invariant(!injected, 'ReactCompositeComponent: injectEnvironment() can only be called once.');
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }
};

module.exports = ReactComponentEnvironment;
}, 219, null, "ReactComponentEnvironment");
__d(/* ReactNodeTypes */function(global, require, module, exports) {

'use strict';

var React = require(13     ); // 13 = react

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function getType(node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    invariant(false, 'Unexpected node: %s', node);
  }
};

module.exports = ReactNodeTypes;
}, 220, null, "ReactNodeTypes");
__d(/* shouldUpdateReactComponent */function(global, require, module, exports) {

'use strict';

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
}, 221, null, "shouldUpdateReactComponent");
__d(/* ReactEmptyComponent */function(global, require, module, exports) {

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function create(instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
}, 222, null, "ReactEmptyComponent");
__d(/* ReactHostComponent */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
    genericComponentClass = componentClass;
  },

  injectTextComponentClass: function injectTextComponentClass(componentClass) {
    textComponentClass = componentClass;
  }
};

function createInternalComponent(element) {
  invariant(genericComponentClass, 'There is no registered component for the tag %s', element.type);
  return new genericComponentClass(element);
}

function createInstanceForText(text) {
  return new textComponentClass(text);
}

function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
}, 223, null, "ReactHostComponent");
__d(/* getNextDebugID */function(global, require, module, exports) {

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;
}, 224, null, "getNextDebugID");
__d(/* ReactNativeStackInjection */function(global, require, module, exports) {
'use strict';

require(139             ); // 139 = InitializeCore

var React = require(13     ); // 13 = react
var ReactComponentEnvironment = require(219                        ); // 219 = ReactComponentEnvironment
var ReactDefaultBatchingStrategy = require(226                           ); // 226 = ReactDefaultBatchingStrategy
var ReactEmptyComponent = require(222                  ); // 222 = ReactEmptyComponent
var ReactGenericBatching = require(122                   ); // 122 = ReactGenericBatching
var ReactHostComponent = require(223                 ); // 223 = ReactHostComponent
var ReactNativeComponentEnvironment = require(227                              ); // 227 = ReactNativeComponentEnvironment
var ReactNativeTextComponent = require(232                       ); // 232 = ReactNativeTextComponent
var ReactSimpleEmptyComponent = require(233                        ); // 233 = ReactSimpleEmptyComponent
var ReactUpdates = require(215           ); // 215 = ReactUpdates

var findNodeHandle = require(204             ); // 204 = findNodeHandle
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function inject() {
  ReactGenericBatching.injection.injectStackBatchedUpdates(ReactUpdates.batchedUpdates);

  ReactUpdates.injection.injectReconcileTransaction(ReactNativeComponentEnvironment.ReactReconcileTransaction);

  ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactComponentEnvironment.injection.injectEnvironment(ReactNativeComponentEnvironment);

  var EmptyComponent = function EmptyComponent(instantiate) {
    var View = require(234   ); // 234 = View
    return new ReactSimpleEmptyComponent(React.createElement(View, {
      collapsable: true,
      style: { position: 'absolute' }
    }), instantiate);
  };

  findNodeHandle.injection.injectFindNode(function (instance) {
    return instance;
  });
  findNodeHandle.injection.injectFindRootNodeID(function (instance) {
    return instance;
  });

  ReactEmptyComponent.injection.injectEmptyComponentFactory(EmptyComponent);

  ReactHostComponent.injection.injectTextComponentClass(ReactNativeTextComponent);
  ReactHostComponent.injection.injectGenericComponentClass(function (tag) {
    var info = '';
    if (typeof tag === 'string' && /^[a-z]/.test(tag)) {
      info += ' Each component name should start with an uppercase letter.';
    }
    invariant(false, 'Expected a component class, got %s.%s', tag, info);
  });
}

module.exports = {
  inject: inject
};
}, 225, null, "ReactNativeStackInjection");
__d(/* ReactDefaultBatchingStrategy */function(global, require, module, exports) {

'use strict';

var ReactUpdates = require(215           ); // 215 = ReactUpdates
var Transaction = require(216          ); // 216 = Transaction

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function close() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

babelHelpers.extends(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
}, 226, null, "ReactDefaultBatchingStrategy");
__d(/* ReactNativeComponentEnvironment */function(global, require, module, exports) {
'use strict';

var ReactNativeDOMIDOperations = require(228                         ); // 228 = ReactNativeDOMIDOperations
var ReactNativeReconcileTransaction = require(229                              ); // 229 = ReactNativeReconcileTransaction

var ReactNativeComponentEnvironment = {
  processChildrenUpdates: ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

  clearNode: function clearNode() {},

  ReactReconcileTransaction: ReactNativeReconcileTransaction
};

module.exports = ReactNativeComponentEnvironment;
}, 227, null, "ReactNativeComponentEnvironment");
__d(/* ReactNativeDOMIDOperations */function(global, require, module, exports) {
'use strict';

var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree
var UIManager = require(78         ); // 78 = UIManager

var dangerouslyProcessChildrenUpdates = function dangerouslyProcessChildrenUpdates(inst, childrenUpdates) {
  if (!childrenUpdates.length) {
    return;
  }

  var containerTag = ReactNativeComponentTree.getNodeFromInstance(inst);

  var moveFromIndices;
  var moveToIndices;
  var addChildTags;
  var addAtIndices;
  var removeAtIndices;

  for (var i = 0; i < childrenUpdates.length; i++) {
    var update = childrenUpdates[i];
    if (update.type === 'MOVE_EXISTING') {
      (moveFromIndices || (moveFromIndices = [])).push(update.fromIndex);
      (moveToIndices || (moveToIndices = [])).push(update.toIndex);
    } else if (update.type === 'REMOVE_NODE') {
      (removeAtIndices || (removeAtIndices = [])).push(update.fromIndex);
    } else if (update.type === 'INSERT_MARKUP') {
      var mountImage = update.content;
      var tag = mountImage;
      (addAtIndices || (addAtIndices = [])).push(update.toIndex);
      (addChildTags || (addChildTags = [])).push(tag);
    }
  }

  UIManager.manageChildren(containerTag, moveFromIndices, moveToIndices, addChildTags, addAtIndices, removeAtIndices);
};

var ReactNativeDOMIDOperations = {
  dangerouslyProcessChildrenUpdates: dangerouslyProcessChildrenUpdates,

  dangerouslyReplaceNodeWithMarkupByID: function dangerouslyReplaceNodeWithMarkupByID(id, mountImage) {
    var oldTag = id;
    UIManager.replaceExistingNonRootView(oldTag, mountImage);
  }
};

module.exports = ReactNativeDOMIDOperations;
}, 228, null, "ReactNativeDOMIDOperations");
__d(/* ReactNativeReconcileTransaction */function(global, require, module, exports) {
'use strict';

var CallbackQueue = require(230            ); // 230 = CallbackQueue
var PooledClass = require(193          ); // 193 = PooledClass
var Transaction = require(216          ); // 216 = Transaction
var ReactInstrumentation = require(208                   ); // 208 = ReactInstrumentation
var ReactUpdateQueue = require(214               ); // 214 = ReactUpdateQueue

var ON_DOM_READY_QUEUEING = {
  initialize: function initialize() {
    this.reactMountReady.reset();
  },

  close: function close() {
    this.reactMountReady.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

if (__DEV__) {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

function ReactNativeReconcileTransaction() {
  this.reinitializeTransaction();
  this.reactMountReady = CallbackQueue.getPooled(null);
}

var Mixin = {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  },

  getReactMountReady: function getReactMountReady() {
    return this.reactMountReady;
  },

  getUpdateQueue: function getUpdateQueue() {
    return ReactUpdateQueue;
  },

  checkpoint: function checkpoint() {
    return this.reactMountReady.checkpoint();
  },

  rollback: function rollback(checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  destructor: function destructor() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

babelHelpers.extends(ReactNativeReconcileTransaction.prototype, Transaction, ReactNativeReconcileTransaction, Mixin);

PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;
}, 229, null, "ReactNativeReconcileTransaction");
__d(/* CallbackQueue */function(global, require, module, exports) {

'use strict';

var PooledClass = require(193          ); // 193 = PooledClass

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var validateCallback = require(231               ); // 231 = validateCallback

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    babelHelpers.classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  babelHelpers.createClass(CallbackQueue, [{
    key: 'enqueue',
    value: function enqueue(callback, context) {
      this._callbacks = this._callbacks || [];
      this._callbacks.push(callback);
      this._contexts = this._contexts || [];
      this._contexts.push(context);
    }
  }, {
    key: 'notifyAll',
    value: function notifyAll() {
      var callbacks = this._callbacks;
      var contexts = this._contexts;
      var arg = this._arg;
      if (callbacks && contexts) {
        invariant(callbacks.length === contexts.length, 'Mismatched list of contexts in callback queue');
        this._callbacks = null;
        this._contexts = null;
        for (var i = 0; i < callbacks.length; i++) {
          validateCallback(callbacks[i]);
          callbacks[i].call(contexts[i], arg);
        }
        callbacks.length = 0;
        contexts.length = 0;
      }
    }
  }, {
    key: 'checkpoint',
    value: function checkpoint() {
      return this._callbacks ? this._callbacks.length : 0;
    }
  }, {
    key: 'rollback',
    value: function rollback(len) {
      if (this._callbacks && this._contexts) {
        this._callbacks.length = len;
        this._contexts.length = len;
      }
    }
  }, {
    key: 'reset',
    value: function reset() {
      this._callbacks = null;
      this._contexts = null;
    }
  }, {
    key: 'destructor',
    value: function destructor() {
      this.reset();
    }
  }]);
  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
}, 230, null, "CallbackQueue");
__d(/* validateCallback */function(global, require, module, exports) {

'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function validateCallback(callback) {
  invariant(!callback || typeof callback === 'function', 'Invalid argument passed as callback. Expected a function. Instead ' + 'received: %s', callback);
}

module.exports = validateCallback;
}, 231, null, "validateCallback");
__d(/* ReactNativeTextComponent */function(global, require, module, exports) {

'use strict';

var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree
var ReactNativeTagHandles = require(196                    ); // 196 = ReactNativeTagHandles
var UIManager = require(78         ); // 78 = UIManager

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var ReactNativeTextComponent = function ReactNativeTextComponent(text) {
  this._currentElement = text;
  this._stringText = '' + text;
  this._hostParent = null;
  this._rootNodeID = 0;
};

babelHelpers.extends(ReactNativeTextComponent.prototype, {
  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    invariant(context.isInAParentText, 'RawText "%s" must be wrapped in an explicit <Text> component.', this._stringText);
    this._hostParent = hostParent;
    var tag = ReactNativeTagHandles.allocateTag();
    this._rootNodeID = tag;
    var nativeTopRootTag = hostContainerInfo._tag;
    UIManager.createView(tag, 'RCTRawText', nativeTopRootTag, {
      text: this._stringText
    });

    ReactNativeComponentTree.precacheNode(this, tag);

    return tag;
  },

  getHostNode: function getHostNode() {
    return this._rootNodeID;
  },

  receiveComponent: function receiveComponent(nextText, transaction, context) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        this._stringText = nextStringText;
        UIManager.updateView(this._rootNodeID, 'RCTRawText', {
          text: this._stringText
        });
      }
    }
  },

  unmountComponent: function unmountComponent() {
    ReactNativeComponentTree.uncacheNode(this);
    this._currentElement = null;
    this._stringText = null;
    this._rootNodeID = 0;
  }
});

module.exports = ReactNativeTextComponent;
}, 232, null, "ReactNativeTextComponent");
__d(/* ReactSimpleEmptyComponent */function(global, require, module, exports) {

'use strict';

var ReactReconciler = require(210              ); // 210 = ReactReconciler

var ReactSimpleEmptyComponent = function ReactSimpleEmptyComponent(placeholderElement, instantiate) {
  this._currentElement = null;
  this._renderedComponent = instantiate(placeholderElement);
};
babelHelpers.extends(ReactSimpleEmptyComponent.prototype, {
  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID) {
    return ReactReconciler.mountComponent(this._renderedComponent, transaction, hostParent, hostContainerInfo, context, parentDebugID);
  },
  receiveComponent: function receiveComponent() {},
  getHostNode: function getHostNode() {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },
  unmountComponent: function unmountComponent(safely, skipLifecycle) {
    ReactReconciler.unmountComponent(this._renderedComponent, safely, skipLifecycle);
    this._renderedComponent = null;
  }
});

module.exports = ReactSimpleEmptyComponent;
}, 233, null, "ReactSimpleEmptyComponent");
__d(/* View */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\View\\View.js';
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var NativeModules = require(48             ); // 48 = NativeModules
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var ReactNativeFeatureFlags = require(86                       ); // 86 = ReactNativeFeatureFlags
var ReactNativeStyleAttributes = require(236                         ); // 236 = ReactNativeStyleAttributes
var ReactNativeViewAttributes = require(250                        ); // 250 = ReactNativeViewAttributes
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var _require = require(258                ), // 258 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var forceTouchAvailable = NativeModules.PlatformConstants && NativeModules.PlatformConstants.forceTouchAvailable || false;

var View = React.createClass({
  displayName: 'View',

  mixins: [NativeMethodsMixin],

  propTypes: ViewPropTypes,

  statics: {
    __propTypesSecretDontUseThesePlease: ViewPropTypes
  },

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  contextTypes: {
    isInAParentText: React.PropTypes.bool
  },

  render: function render() {
    invariant(!(this.context.isInAParentText && Platform.OS === 'android'), 'Nesting of <View> within <Text> is not supported on Android.');

    return React.createElement(RCTView, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 127
      }
    }));
  }
});

function mixinStatics(target) {
  var warnedAboutAccessibilityTraits = false;
  var warnedAboutAccessibilityComponentType = false;
  var warnedAboutForceTouchAvailable = false;
  var warnedAboutPropTypes = false;

  Object.defineProperty(target, 'AccessibilityTraits', {
    get: function get() {
      warning(warnedAboutAccessibilityTraits, 'View.AccessibilityTraits has been deprecated and will be ' + 'removed in a future version of ReactNative. Use ' + 'ViewAccessibility.AccessibilityTraits instead.');
      warnedAboutAccessibilityTraits = true;
      return AccessibilityTraits;
    }
  });

  Object.defineProperty(target, 'AccessibilityComponentType', {
    get: function get() {
      warning(warnedAboutAccessibilityComponentType, 'View.AccessibilityComponentType has been deprecated and will be ' + 'removed in a future version of ReactNative. Use ' + 'ViewAccessibility.AccessibilityComponentTypes instead.');
      warnedAboutAccessibilityComponentType = true;
      return AccessibilityComponentTypes;
    }
  });

  Object.defineProperty(target, 'forceTouchAvailable', {
    get: function get() {
      warning(warnedAboutForceTouchAvailable, 'View.forceTouchAvailable has been deprecated and will be removed ' + 'in a future version of ReactNative. Use ' + 'NativeModules.PlatformConstants.forceTouchAvailable instead.');
      warnedAboutForceTouchAvailable = true;
      return forceTouchAvailable;
    }
  });

  Object.defineProperty(target, 'propTypes', {
    get: function get() {
      warning(warnedAboutPropTypes, 'View.propTypes has been deprecated and will be removed in a future ' + 'version of ReactNative. Use ViewPropTypes instead.');
      warnedAboutPropTypes = true;
      return ViewPropTypes;
    }
  });
}

var RCTView = requireNativeComponent('RCTView', View, {
  nativeOnly: {
    nativeBackgroundAndroid: true,
    nativeForegroundAndroid: true
  }
});

if (__DEV__) {
  var UIManager = require(78         ); // 78 = UIManager
  var viewConfig = UIManager.viewConfigs && UIManager.viewConfigs.RCTView || {};
  for (var prop in viewConfig.nativeProps) {
    var viewAny = View;
    if (!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]) {
      throw new Error('View is missing propType for native prop `' + prop + '`');
    }
  }
}

var ViewToExport = RCTView;
if (__DEV__ || ReactNativeFeatureFlags.useFiber) {
  mixinStatics(View);
  ViewToExport = View;
} else {
  mixinStatics(RCTView);
}

module.exports = ViewToExport;
}, 234, null, "View");
__d(/* React */function(global, require, module, exports) {

'use strict';

module.exports = require(14               ); // 14 = react/lib/React
}, 235, null, "React");
__d(/* ReactNativeStyleAttributes */function(global, require, module, exports) {

'use strict';

var ImageStylePropTypes = require(237                  ); // 237 = ImageStylePropTypes
var TextStylePropTypes = require(244                 ); // 244 = TextStylePropTypes
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var keyMirror = require(239                 ); // 239 = fbjs/lib/keyMirror
var processColor = require(246           ); // 246 = processColor
var processTransform = require(247               ); // 247 = processTransform
var sizesDiffer = require(249          ); // 249 = sizesDiffer

var ReactNativeStyleAttributes = babelHelpers.extends({}, keyMirror(ViewStylePropTypes), keyMirror(TextStylePropTypes), keyMirror(ImageStylePropTypes));

ReactNativeStyleAttributes.transform = { process: processTransform };
ReactNativeStyleAttributes.shadowOffset = { diff: sizesDiffer };

var colorAttributes = { process: processColor };
ReactNativeStyleAttributes.backgroundColor = colorAttributes;
ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
ReactNativeStyleAttributes.borderColor = colorAttributes;
ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
ReactNativeStyleAttributes.borderRightColor = colorAttributes;
ReactNativeStyleAttributes.borderTopColor = colorAttributes;
ReactNativeStyleAttributes.color = colorAttributes;
ReactNativeStyleAttributes.shadowColor = colorAttributes;
ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
ReactNativeStyleAttributes.tintColor = colorAttributes;
ReactNativeStyleAttributes.textShadowColor = colorAttributes;
ReactNativeStyleAttributes.overlayColor = colorAttributes;

module.exports = ReactNativeStyleAttributes;
}, 236, null, "ReactNativeStyleAttributes");
__d(/* ImageStylePropTypes */function(global, require, module, exports) {
'use strict';

var ImageResizeMode = require(238              ); // 238 = ImageResizeMode
var LayoutPropTypes = require(240              ); // 240 = LayoutPropTypes
var ColorPropType = require(82             ); // 82 = ColorPropType
var ShadowPropTypesIOS = require(241                 ); // 241 = ShadowPropTypesIOS
var TransformPropTypes = require(242                 ); // 242 = TransformPropTypes

var ReactPropTypes = require(235    ).PropTypes; // 235 = React

var ImageStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),

  tintColor: ColorPropType,
  opacity: ReactPropTypes.number,

  overlayColor: ReactPropTypes.string,

  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});

module.exports = ImageStylePropTypes;
}, 237, null, "ImageStylePropTypes");
__d(/* ImageResizeMode */function(global, require, module, exports) {
'use strict';

var keyMirror = require(239                 ); // 239 = fbjs/lib/keyMirror

var ImageResizeMode = keyMirror({
  contain: null,

  cover: null,

  stretch: null,

  center: null,

  repeat: null
});

module.exports = ImageResizeMode;
}, 238, null, "ImageResizeMode");
__d(/* fbjs/lib/keyMirror.js */function(global, require, module, exports) {

'use strict';

var invariant = require(23           ); // 23 = ./invariant

var keyMirror = function keyMirror(obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
}, 239, null, "fbjs/lib/keyMirror.js");
__d(/* LayoutPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(235    ).PropTypes; // 235 = React

var LayoutPropTypes = {
  display: ReactPropTypes.string,

  width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  borderWidth: ReactPropTypes.number,

  borderTopWidth: ReactPropTypes.number,

  borderRightWidth: ReactPropTypes.number,

  borderBottomWidth: ReactPropTypes.number,

  borderLeftWidth: ReactPropTypes.number,

  position: ReactPropTypes.oneOf(['absolute', 'relative']),

  flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),

  flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap']),

  justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around']),

  alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),

  overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),

  flex: ReactPropTypes.number,
  flexGrow: ReactPropTypes.number,
  flexShrink: ReactPropTypes.number,
  flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  aspectRatio: ReactPropTypes.number,

  zIndex: ReactPropTypes.number,

  direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
};

module.exports = LayoutPropTypes;
}, 240, null, "LayoutPropTypes");
__d(/* ShadowPropTypesIOS */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(82             ); // 82 = ColorPropType
var ReactPropTypes = require(235    ).PropTypes; // 235 = React

var ShadowPropTypesIOS = {
  shadowColor: ColorPropType,

  shadowOffset: ReactPropTypes.shape({ width: ReactPropTypes.number, height: ReactPropTypes.number }),

  shadowOpacity: ReactPropTypes.number,

  shadowRadius: ReactPropTypes.number
};

module.exports = ShadowPropTypesIOS;
}, 241, null, "ShadowPropTypesIOS");
__d(/* TransformPropTypes */function(global, require, module, exports) {
'use strict';

var deprecatedPropType = require(243                 ); // 243 = deprecatedPropType

var ReactPropTypes = require(235    ).PropTypes; // 235 = React

var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The transformMatrix style property is deprecated. ' + 'Use `transform: [{ matrix: ... }]` instead.');
  }
};

var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The decomposedMatrix style property is deprecated. ' + 'Use `transform: [...]` instead.');
  }
};

var TransformPropTypes = {
  transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({ perspective: ReactPropTypes.number }), ReactPropTypes.shape({ rotate: ReactPropTypes.string }), ReactPropTypes.shape({ rotateX: ReactPropTypes.string }), ReactPropTypes.shape({ rotateY: ReactPropTypes.string }), ReactPropTypes.shape({ rotateZ: ReactPropTypes.string }), ReactPropTypes.shape({ scale: ReactPropTypes.number }), ReactPropTypes.shape({ scaleX: ReactPropTypes.number }), ReactPropTypes.shape({ scaleY: ReactPropTypes.number }), ReactPropTypes.shape({ translateX: ReactPropTypes.number }), ReactPropTypes.shape({ translateY: ReactPropTypes.number }), ReactPropTypes.shape({ skewX: ReactPropTypes.string }), ReactPropTypes.shape({ skewY: ReactPropTypes.string })])),

  transformMatrix: TransformMatrixPropType,
  decomposedMatrix: DecomposedMatrixPropType,

  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
};

module.exports = TransformPropTypes;
}, 242, null, "TransformPropTypes");
__d(/* deprecatedPropType */function(global, require, module, exports) {
'use strict';

var UIManager = require(78         ); // 78 = UIManager

function deprecatedPropType(propType, explanation) {
  return function validate(props, propName, componentName) {
    if (!UIManager[componentName] && props[propName] !== undefined) {
      console.warn('`' + propName + '` supplied to `' + componentName + '` has been deprecated. ' + explanation);
    }

    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(undefined, [props, propName, componentName].concat(rest));
  };
}

module.exports = deprecatedPropType;
}, 243, null, "deprecatedPropType");
__d(/* TextStylePropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(235    ).PropTypes; // 235 = React
var ColorPropType = require(82             ); // 82 = ColorPropType
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var TextStylePropTypes = babelHelpers.extends({}, ViewStylePropTypes, {

  color: ColorPropType,
  fontFamily: ReactPropTypes.string,
  fontSize: ReactPropTypes.number,
  fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),

  fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),

  fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
  textShadowOffset: ReactPropTypes.shape({ width: ReactPropTypes.number, height: ReactPropTypes.number }),
  textShadowRadius: ReactPropTypes.number,
  textShadowColor: ColorPropType,

  letterSpacing: ReactPropTypes.number,
  lineHeight: ReactPropTypes.number,

  textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),

  textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),

  includeFontPadding: ReactPropTypes.bool,
  textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),

  textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),

  textDecorationColor: ColorPropType,

  writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
});

module.exports = TextStylePropTypes;
}, 244, null, "TextStylePropTypes");
__d(/* ViewStylePropTypes */function(global, require, module, exports) {
'use strict';

var LayoutPropTypes = require(240              ); // 240 = LayoutPropTypes
var ReactPropTypes = require(235    ).PropTypes; // 235 = React
var ColorPropType = require(82             ); // 82 = ColorPropType
var ShadowPropTypesIOS = require(241                 ); // 241 = ShadowPropTypesIOS
var TransformPropTypes = require(242                 ); // 242 = TransformPropTypes

var ViewStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderTopColor: ColorPropType,
  borderRightColor: ColorPropType,
  borderBottomColor: ColorPropType,
  borderLeftColor: ColorPropType,
  borderRadius: ReactPropTypes.number,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number,
  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
  borderWidth: ReactPropTypes.number,
  borderTopWidth: ReactPropTypes.number,
  borderRightWidth: ReactPropTypes.number,
  borderBottomWidth: ReactPropTypes.number,
  borderLeftWidth: ReactPropTypes.number,
  opacity: ReactPropTypes.number,

  elevation: ReactPropTypes.number
});

module.exports = ViewStylePropTypes;
}, 245, null, "ViewStylePropTypes");
__d(/* processColor */function(global, require, module, exports) {
'use strict';

var Platform = require(61        ); // 61 = Platform

var normalizeColor = require(83              ); // 83 = normalizeColor

function processColor(color) {
  if (color === undefined || color === null) {
    return color;
  }

  var int32Color = normalizeColor(color);
  if (int32Color === null) {
    return undefined;
  }

  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;

  if (Platform.OS === 'android') {
    int32Color = int32Color | 0x0;
  }
  return int32Color;
}

module.exports = processColor;
}, 246, null, "processColor");
__d(/* processTransform */function(global, require, module, exports) {
'use strict';

var MatrixMath = require(248         ); // 248 = MatrixMath
var Platform = require(61        ); // 61 = Platform

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var stringifySafe = require(66             ); // 66 = stringifySafe

function processTransform(transform) {
  if (__DEV__) {
    _validateTransforms(transform);
  }

  if (Platform.OS === 'android' || Platform.OS === 'ios') {
    return transform;
  }

  var result = MatrixMath.createIdentityMatrix();

  transform.forEach(function (transformation) {
    var key = Object.keys(transformation)[0];
    var value = transformation[key];

    switch (key) {
      case 'matrix':
        MatrixMath.multiplyInto(result, result, value);
        break;
      case 'perspective':
        _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
        break;
      case 'rotateX':
        _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [_convertToRadians(value)]);
        break;
      case 'rotateY':
        _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [_convertToRadians(value)]);
        break;
      case 'rotate':
      case 'rotateZ':
        _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);
        break;
      case 'scale':
        _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
        break;
      case 'scaleX':
        _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
        break;
      case 'scaleY':
        _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
        break;
      case 'translate':
        _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);
        break;
      case 'translateX':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);
        break;
      case 'translateY':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);
        break;
      case 'skewX':
        _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [_convertToRadians(value)]);
        break;
      case 'skewY':
        _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [_convertToRadians(value)]);
        break;
      default:
        throw new Error('Invalid transform name: ' + key);
    }
  });

  return result;
}

function _multiplyTransform(result, matrixMathFunction, args) {
  var matrixToApply = MatrixMath.createIdentityMatrix();
  var argsWithIdentity = [matrixToApply].concat(args);
  matrixMathFunction.apply(this, argsWithIdentity);
  MatrixMath.multiplyInto(result, result, matrixToApply);
}

function _convertToRadians(value) {
  var floatValue = parseFloat(value, 10);
  return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
}

function _validateTransforms(transform) {
  transform.forEach(function (transformation) {
    var keys = Object.keys(transformation);
    invariant(keys.length === 1, 'You must specify exactly one property per transform object. Passed properties: %s', stringifySafe(transformation));
    var key = keys[0];
    var value = transformation[key];
    _validateTransform(key, value, transformation);
  });
}

function _validateTransform(key, value, transformation) {
  invariant(!value.getValue, 'You passed an Animated.Value to a normal component. ' + 'You need to wrap that component in an Animated. For example, ' + 'replace <View /> by <Animated.View />.');

  var multivalueTransforms = ['matrix', 'translate'];
  if (multivalueTransforms.indexOf(key) !== -1) {
    invariant(Array.isArray(value), 'Transform with key of %s must have an array as the value: %s', key, stringifySafe(transformation));
  }
  switch (key) {
    case 'matrix':
      invariant(value.length === 9 || value.length === 16, 'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 'Provided matrix has a length of %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'translate':
      invariant(value.length === 2 || value.length === 3, 'Transform with key translate must be an array of length 2 or 3, found %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'rotateX':
    case 'rotateY':
    case 'rotateZ':
    case 'rotate':
    case 'skewX':
    case 'skewY':
      invariant(typeof value === 'string', 'Transform with key of "%s" must be a string: %s', key, stringifySafe(transformation));
      invariant(value.indexOf('deg') > -1 || value.indexOf('rad') > -1, 'Rotate transform must be expressed in degrees (deg) or radians ' + '(rad): %s', stringifySafe(transformation));
      break;
    case 'perspective':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      invariant(value !== 0, 'Transform with key of "%s" cannot be zero: %s', key, stringifySafe(transformation));
      break;
    case 'translateX':
    case 'translateY':
    case 'scale':
    case 'scaleX':
    case 'scaleY':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      break;
    default:
      invariant(false, 'Invalid transform %s: %s', key, stringifySafe(transformation));
  }
}

module.exports = processTransform;
}, 247, null, "processTransform");
__d(/* MatrixMath */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var MatrixMath = {
  createIdentityMatrix: function createIdentityMatrix() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  },

  createCopy: function createCopy(m) {
    return [m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]];
  },

  createOrthographic: function createOrthographic(left, right, bottom, top, near, far) {
    var a = 2 / (right - left);
    var b = 2 / (top - bottom);
    var c = -2 / (far - near);

    var tx = -(right + left) / (right - left);
    var ty = -(top + bottom) / (top - bottom);
    var tz = -(far + near) / (far - near);

    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
  },

  createFrustum: function createFrustum(left, right, bottom, top, near, far) {
    var r_width = 1 / (right - left);
    var r_height = 1 / (top - bottom);
    var r_depth = 1 / (near - far);
    var x = 2 * (near * r_width);
    var y = 2 * (near * r_height);
    var A = (right + left) * r_width;
    var B = (top + bottom) * r_height;
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
  },

  createPerspective: function createPerspective(fovInRadians, aspect, near, far) {
    var h = 1 / Math.tan(fovInRadians / 2);
    var r_depth = 1 / (near - far);
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
  },

  createTranslate2d: function createTranslate2d(x, y) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseTranslate2dCommand(mat, x, y);
    return mat;
  },

  reuseTranslate2dCommand: function reuseTranslate2dCommand(matrixCommand, x, y) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
  },

  reuseTranslate3dCommand: function reuseTranslate3dCommand(matrixCommand, x, y, z) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
    matrixCommand[14] = z;
  },

  createScale: function createScale(factor) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseScaleCommand(mat, factor);
    return mat;
  },

  reuseScaleCommand: function reuseScaleCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
    matrixCommand[5] = factor;
  },

  reuseScale3dCommand: function reuseScale3dCommand(matrixCommand, x, y, z) {
    matrixCommand[0] = x;
    matrixCommand[5] = y;
    matrixCommand[10] = z;
  },

  reusePerspectiveCommand: function reusePerspectiveCommand(matrixCommand, p) {
    matrixCommand[11] = -1 / p;
  },

  reuseScaleXCommand: function reuseScaleXCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
  },
  reuseScaleYCommand: function reuseScaleYCommand(matrixCommand, factor) {
    matrixCommand[5] = factor;
  },
  reuseScaleZCommand: function reuseScaleZCommand(matrixCommand, factor) {
    matrixCommand[10] = factor;
  },


  reuseRotateXCommand: function reuseRotateXCommand(matrixCommand, radians) {
    matrixCommand[5] = Math.cos(radians);
    matrixCommand[6] = Math.sin(radians);
    matrixCommand[9] = -Math.sin(radians);
    matrixCommand[10] = Math.cos(radians);
  },

  reuseRotateYCommand: function reuseRotateYCommand(matrixCommand, amount) {
    matrixCommand[0] = Math.cos(amount);
    matrixCommand[2] = -Math.sin(amount);
    matrixCommand[8] = Math.sin(amount);
    matrixCommand[10] = Math.cos(amount);
  },

  reuseRotateZCommand: function reuseRotateZCommand(matrixCommand, radians) {
    matrixCommand[0] = Math.cos(radians);
    matrixCommand[1] = Math.sin(radians);
    matrixCommand[4] = -Math.sin(radians);
    matrixCommand[5] = Math.cos(radians);
  },

  createRotateZ: function createRotateZ(radians) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseRotateZCommand(mat, radians);
    return mat;
  },

  reuseSkewXCommand: function reuseSkewXCommand(matrixCommand, radians) {
    matrixCommand[4] = Math.tan(radians);
  },

  reuseSkewYCommand: function reuseSkewYCommand(matrixCommand, radians) {
    matrixCommand[1] = Math.tan(radians);
  },

  multiplyInto: function multiplyInto(out, a, b) {
    var a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11],
        a30 = a[12],
        a31 = a[13],
        a32 = a[14],
        a33 = a[15];

    var b0 = b[0],
        b1 = b[1],
        b2 = b[2],
        b3 = b[3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  },

  determinant: function determinant(matrix) {
    var _matrix = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix[0],
        m01 = _matrix[1],
        m02 = _matrix[2],
        m03 = _matrix[3],
        m10 = _matrix[4],
        m11 = _matrix[5],
        m12 = _matrix[6],
        m13 = _matrix[7],
        m20 = _matrix[8],
        m21 = _matrix[9],
        m22 = _matrix[10],
        m23 = _matrix[11],
        m30 = _matrix[12],
        m31 = _matrix[13],
        m32 = _matrix[14],
        m33 = _matrix[15];

    return m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33;
  },
  inverse: function inverse(matrix) {
    var det = MatrixMath.determinant(matrix);
    if (!det) {
      return matrix;
    }

    var _matrix2 = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix2[0],
        m01 = _matrix2[1],
        m02 = _matrix2[2],
        m03 = _matrix2[3],
        m10 = _matrix2[4],
        m11 = _matrix2[5],
        m12 = _matrix2[6],
        m13 = _matrix2[7],
        m20 = _matrix2[8],
        m21 = _matrix2[9],
        m22 = _matrix2[10],
        m23 = _matrix2[11],
        m30 = _matrix2[12],
        m31 = _matrix2[13],
        m32 = _matrix2[14],
        m33 = _matrix2[15];

    return [(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, (m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, (m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, (m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, (m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, (m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, (m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, (m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, (m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, (m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, (m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, (m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, (m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, (m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, (m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, (m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];
  },
  transpose: function transpose(m) {
    return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];
  },
  multiplyVectorByMatrix: function multiplyVectorByMatrix(v, m) {
    var _v = babelHelpers.slicedToArray(v, 4),
        vx = _v[0],
        vy = _v[1],
        vz = _v[2],
        vw = _v[3];

    return [vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];
  },
  v3Length: function v3Length(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
  },
  v3Normalize: function v3Normalize(vector, v3Length) {
    var im = 1 / (v3Length || MatrixMath.v3Length(vector));
    return [vector[0] * im, vector[1] * im, vector[2] * im];
  },
  v3Dot: function v3Dot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  },
  v3Combine: function v3Combine(a, b, aScale, bScale) {
    return [aScale * a[0] + bScale * b[0], aScale * a[1] + bScale * b[1], aScale * a[2] + bScale * b[2]];
  },
  v3Cross: function v3Cross(a, b) {
    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
  },
  quaternionToDegreesXYZ: function quaternionToDegreesXYZ(q, matrix, row) {
    var _q = babelHelpers.slicedToArray(q, 4),
        qx = _q[0],
        qy = _q[1],
        qz = _q[2],
        qw = _q[3];

    var qw2 = qw * qw;
    var qx2 = qx * qx;
    var qy2 = qy * qy;
    var qz2 = qz * qz;
    var test = qx * qy + qz * qw;
    var unit = qw2 + qx2 + qy2 + qz2;
    var conv = 180 / Math.PI;

    if (test > 0.49999 * unit) {
      return [0, 2 * Math.atan2(qx, qw) * conv, 90];
    }
    if (test < -0.49999 * unit) {
      return [0, -2 * Math.atan2(qx, qw) * conv, -90];
    }

    return [MatrixMath.roundTo3Places(Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];
  },
  roundTo3Places: function roundTo3Places(n) {
    var arr = n.toString().split('e');
    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
  },
  decomposeMatrix: function decomposeMatrix(transformMatrix) {

    invariant(transformMatrix.length === 16, 'Matrix decomposition needs a list of 3d matrix values, received %s', transformMatrix);

    var perspective = [];
    var quaternion = [];
    var scale = [];
    var skew = [];
    var translation = [];

    if (!transformMatrix[15]) {
      return;
    }
    var matrix = [];
    var perspectiveMatrix = [];
    for (var i = 0; i < 4; i++) {
      matrix.push([]);
      for (var j = 0; j < 4; j++) {
        var value = transformMatrix[i * 4 + j] / transformMatrix[15];
        matrix[i].push(value);
        perspectiveMatrix.push(j === 3 ? 0 : value);
      }
    }
    perspectiveMatrix[15] = 1;

    if (!MatrixMath.determinant(perspectiveMatrix)) {
      return;
    }

    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
      var rightHandSide = [matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]];

      var inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
      var transposedInversePerspectiveMatrix = MatrixMath.transpose(inversePerspectiveMatrix);
      var perspective = MatrixMath.multiplyVectorByMatrix(rightHandSide, transposedInversePerspectiveMatrix);
    } else {
      perspective[0] = perspective[1] = perspective[2] = 0;
      perspective[3] = 1;
    }

    for (var i = 0; i < 3; i++) {
      translation[i] = matrix[3][i];
    }

    var row = [];
    for (i = 0; i < 3; i++) {
      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
    }

    scale[0] = MatrixMath.v3Length(row[0]);
    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    scale[1] = MatrixMath.v3Length(row[1]);
    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
    skew[0] /= scale[1];

    skew[1] = MatrixMath.v3Dot(row[0], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
    skew[2] = MatrixMath.v3Dot(row[1], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);

    scale[2] = MatrixMath.v3Length(row[2]);
    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
    skew[1] /= scale[2];
    skew[2] /= scale[2];

    var pdum3 = MatrixMath.v3Cross(row[1], row[2]);
    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
      for (i = 0; i < 3; i++) {
        scale[i] *= -1;
        row[i][0] *= -1;
        row[i][1] *= -1;
        row[i][2] *= -1;
      }
    }

    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

    if (row[2][1] > row[1][2]) {
      quaternion[0] = -quaternion[0];
    }
    if (row[0][2] > row[2][0]) {
      quaternion[1] = -quaternion[1];
    }
    if (row[1][0] > row[0][1]) {
      quaternion[2] = -quaternion[2];
    }

    var rotationDegrees;
    if (quaternion[0] < 0.001 && quaternion[0] >= 0 && quaternion[1] < 0.001 && quaternion[1] >= 0) {
      rotationDegrees = [0, 0, MatrixMath.roundTo3Places(Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];
    } else {
      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);
    }

    return {
      rotationDegrees: rotationDegrees,
      perspective: perspective,
      quaternion: quaternion,
      scale: scale,
      skew: skew,
      translation: translation,

      rotate: rotationDegrees[2],
      rotateX: rotationDegrees[0],
      rotateY: rotationDegrees[1],
      scaleX: scale[0],
      scaleY: scale[1],
      translateX: translation[0],
      translateY: translation[1]
    };
  }
};

module.exports = MatrixMath;
}, 248, null, "MatrixMath");
__d(/* sizesDiffer */function(global, require, module, exports) {
'use strict';

var dummySize = { width: undefined, height: undefined };

var sizesDiffer = function sizesDiffer(one, two) {
  one = one || dummySize;
  two = two || dummySize;
  return one !== two && (one.width !== two.width || one.height !== two.height);
};

module.exports = sizesDiffer;
}, 249, null, "sizesDiffer");
__d(/* ReactNativeViewAttributes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(236                         ); // 236 = ReactNativeStyleAttributes

var ReactNativeViewAttributes = {};

ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityTraits: true,
  importantForAccessibility: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};

ReactNativeViewAttributes.RCTView = babelHelpers.extends({}, ReactNativeViewAttributes.UIView, {
  removeClippedSubviews: true
});

module.exports = ReactNativeViewAttributes;
}, 250, null, "ReactNativeViewAttributes");
__d(/* ViewPropTypes */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(252                 ); // 252 = EdgeInsetsPropType
var Platform = require(61        ); // 61 = Platform
var StyleSheetPropType = require(257                 ); // 257 = StyleSheetPropType
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var _require = require(235    ), // 235 = React
    PropTypes = _require.PropTypes;

var _require2 = require(258                ), // 258 = ViewAccessibility
    AccessibilityComponentTypes = _require2.AccessibilityComponentTypes,
    AccessibilityTraits = _require2.AccessibilityTraits;

var TVViewPropTypes = {};
if (Platform.isTVOS) {
  TVViewPropTypes = require(259              ); // 259 = TVViewPropTypes
}

var stylePropType = StyleSheetPropType(ViewStylePropTypes);

module.exports = babelHelpers.extends({}, TVViewPropTypes, {
  accessible: PropTypes.bool,

  accessibilityLabel: PropTypes.node,

  accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),

  accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),

  importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),

  accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

  accessibilityViewIsModal: PropTypes.bool,

  onAccessibilityTap: PropTypes.func,

  onMagicTap: PropTypes.func,

  testID: PropTypes.string,

  onResponderGrant: PropTypes.func,

  onResponderMove: PropTypes.func,

  onResponderReject: PropTypes.func,

  onResponderRelease: PropTypes.func,

  onResponderTerminate: PropTypes.func,

  onResponderTerminationRequest: PropTypes.func,

  onStartShouldSetResponder: PropTypes.func,

  onStartShouldSetResponderCapture: PropTypes.func,

  onMoveShouldSetResponder: PropTypes.func,

  onMoveShouldSetResponderCapture: PropTypes.func,

  hitSlop: EdgeInsetsPropType,

  onLayout: PropTypes.func,

  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
  style: stylePropType,

  removeClippedSubviews: PropTypes.bool,

  renderToHardwareTextureAndroid: PropTypes.bool,

  shouldRasterizeIOS: PropTypes.bool,

  collapsable: PropTypes.bool,

  needsOffscreenAlphaCompositing: PropTypes.bool
});
}, 251, null, "ViewPropTypes");
__d(/* EdgeInsetsPropType */function(global, require, module, exports) {
'use strict';

var _require = require(235    ), // 235 = React
    PropTypes = _require.PropTypes;

var createStrictShapeTypeChecker = require(253                           ); // 253 = createStrictShapeTypeChecker

var EdgeInsetsPropType = createStrictShapeTypeChecker({
  top: PropTypes.number,
  left: PropTypes.number,
  bottom: PropTypes.number,
  right: PropTypes.number
});

module.exports = EdgeInsetsPropType;
}, 252, null, "EdgeInsetsPropType");
__d(/* createStrictShapeTypeChecker */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var merge = require(254    ); // 254 = merge

function createStrictShapeTypeChecker(shapeTypes) {
  function checkType(isRequired, props, propName, componentName, location) {
    if (!props[propName]) {
      if (isRequired) {
        invariant(false, 'Required object `' + propName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return;
    }
    var propValue = props[propName];
    var propType = typeof propValue;
    var locationName = location || '(unknown)';
    if (propType !== 'object') {
      invariant(false, 'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }

    var allKeys = merge(props[propName], shapeTypes);

    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
      rest[_key - 5] = arguments[_key];
    }

    for (var key in allKeys) {
      var checker = shapeTypes[key];
      if (!checker) {
        invariant(false, 'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
      }
      var error = checker.apply(undefined, [propValue, key, componentName, location].concat(rest));
      if (error) {
        invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
      }
    }
  }
  function chainedCheckType(props, propName, componentName, location) {
    for (var _len2 = arguments.length, rest = Array(_len2 > 4 ? _len2 - 4 : 0), _key2 = 4; _key2 < _len2; _key2++) {
      rest[_key2 - 4] = arguments[_key2];
    }

    return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
  }
  chainedCheckType.isRequired = checkType.bind(null, true);
  return chainedCheckType;
}

module.exports = createStrictShapeTypeChecker;
}, 253, null, "createStrictShapeTypeChecker");
__d(/* merge */function(global, require, module, exports) {

"use strict";

var mergeInto = require(255        ); // 255 = mergeInto

var merge = function merge(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;
}, 254, null, "merge");
__d(/* mergeInto */function(global, require, module, exports) {

"use strict";

var mergeHelpers = require(256           ); // 256 = mergeHelpers

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

function mergeInto(one, two) {
  checkMergeIntoObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;
}, 255, null, "mergeInto");
__d(/* mergeHelpers */function(global, require, module, exports) {

"use strict";

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var keyMirror = require(239                 ); // 239 = fbjs/lib/keyMirror

var MAX_MERGE_DEPTH = 36;

var isTerminal = function isTerminal(o) {
  return typeof o !== 'object' || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  normalizeMergeArg: function normalizeMergeArg(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {
    invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);
  },

  checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  checkMergeObjectArg: function checkMergeObjectArg(arg) {
    invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);
  },

  checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {
    invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);
  },

  checkMergeLevel: function checkMergeLevel(level) {
    invariant(level < MAX_MERGE_DEPTH, 'Maximum deep merge depth exceeded. You may be attempting to merge ' + 'circular structures in an unsupported way.');
  },

  checkArrayStrategy: function checkArrayStrategy(strategy) {
    invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 'You must provide an array strategy to deep merge functions to ' + 'instruct the deep merge how to resolve merging two arrays.');
  },

  ArrayStrategies: keyMirror({
    Clobber: true,
    IndexByIndex: true
  })

};

module.exports = mergeHelpers;
}, 256, null, "mergeHelpers");
__d(/* StyleSheetPropType */function(global, require, module, exports) {
'use strict';

var createStrictShapeTypeChecker = require(253                           ); // 253 = createStrictShapeTypeChecker
var flattenStyle = require(128           ); // 128 = flattenStyle

function StyleSheetPropType(shape) {
  var shapePropType = createStrictShapeTypeChecker(shape);
  return function (props, propName, componentName, location) {
    var newProps = props;
    if (props[propName]) {
      newProps = {};
      newProps[propName] = flattenStyle(props[propName]);
    }

    for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }

    return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
  };
}

module.exports = StyleSheetPropType;
}, 257, null, "StyleSheetPropType");
__d(/* ViewAccessibility */function(global, require, module, exports) {
'use strict';

module.exports = {
  AccessibilityTraits: ['none', 'button', 'link', 'header', 'search', 'image', 'selected', 'plays', 'key', 'text', 'summary', 'disabled', 'frequentUpdates', 'startsMedia', 'adjustable', 'allowsDirectInteraction', 'pageTurn'],
  AccessibilityComponentTypes: ['none', 'button', 'radiobutton_checked', 'radiobutton_unchecked']
};
}, 258, null, "ViewAccessibility");
__d(/* TVViewPropTypes */function(global, require, module, exports) {
'use strict';

var PropTypes = require(235    ).PropTypes; // 235 = React

var TVViewPropTypes = {
  isTVSelectable: PropTypes.bool,

  hasTVPreferredFocus: PropTypes.bool,

  tvParallaxProperties: PropTypes.object,

  tvParallaxShiftDistanceX: PropTypes.number,

  tvParallaxShiftDistanceY: PropTypes.number,

  tvParallaxTiltAngle: PropTypes.number,

  tvParallaxMagnification: PropTypes.number

};

module.exports = TVViewPropTypes;
}, 259, null, "TVViewPropTypes");
__d(/* requireNativeComponent */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(236                         ); // 236 = ReactNativeStyleAttributes
var UIManager = require(78         ); // 78 = UIManager
var UnimplementedView = require(261                ); // 261 = UnimplementedView

var createReactNativeComponentClass = require(267                              ); // 267 = createReactNativeComponentClass
var insetsDiffer = require(274           ); // 274 = insetsDiffer
var matricesDiffer = require(275             ); // 275 = matricesDiffer
var pointsDiffer = require(276           ); // 276 = pointsDiffer
var processColor = require(246           ); // 246 = processColor
var resolveAssetSource = require(277                 ); // 277 = resolveAssetSource
var sizesDiffer = require(249          ); // 249 = sizesDiffer
var verifyPropTypes = require(281              ); // 281 = verifyPropTypes
var warning = require(19                ); // 19 = fbjs/lib/warning

function requireNativeComponent(viewName, componentInterface, extraConfig) {
  var viewConfig = UIManager[viewName];
  if (!viewConfig || !viewConfig.NativeProps) {
    warning(false, 'Native component for "%s" does not exist', viewName);
    return UnimplementedView;
  }

  viewConfig.uiViewClassName = viewName;
  viewConfig.validAttributes = {};

  if (componentInterface) {
    viewConfig.propTypes = typeof componentInterface.__propTypesSecretDontUseThesePlease === 'object' ? componentInterface.__propTypesSecretDontUseThesePlease : componentInterface.propTypes;
  } else {
    viewConfig.propTypes = null;
  }

  var nativeProps = babelHelpers.extends({}, UIManager.RCTView.NativeProps, viewConfig.NativeProps);
  for (var key in nativeProps) {
    var useAttribute = false;
    var attribute = {};

    var differ = TypeToDifferMap[nativeProps[key]];
    if (differ) {
      attribute.diff = differ;
      useAttribute = true;
    }

    var processor = TypeToProcessorMap[nativeProps[key]];
    if (processor) {
      attribute.process = processor;
      useAttribute = true;
    }

    viewConfig.validAttributes[key] = useAttribute ? attribute : true;
  }

  viewConfig.validAttributes.style = ReactNativeStyleAttributes;

  if (__DEV__) {
    componentInterface && verifyPropTypes(componentInterface, viewConfig, extraConfig && extraConfig.nativeOnly);
  }

  return createReactNativeComponentClass(viewConfig);
}

var TypeToDifferMap = {
  CATransform3D: matricesDiffer,
  CGPoint: pointsDiffer,
  CGSize: sizesDiffer,
  UIEdgeInsets: insetsDiffer
};

function processColorArray(colors) {
  return colors && colors.map(processColor);
}

var TypeToProcessorMap = {
  CGColor: processColor,
  CGColorArray: processColorArray,
  UIColor: processColor,
  UIColorArray: processColorArray,
  CGImage: resolveAssetSource,
  UIImage: resolveAssetSource,
  RCTImageSource: resolveAssetSource,

  Color: processColor,
  ColorArray: processColorArray
};

module.exports = requireNativeComponent;
}, 260, null, "requireNativeComponent");
__d(/* UnimplementedView */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\UnimplementedViews\\UnimplementedView.js';
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet

var UnimplementedView = function (_React$Component) {
  babelHelpers.inherits(UnimplementedView, _React$Component);

  function UnimplementedView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, UnimplementedView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = UnimplementedView.__proto__ || Object.getPrototypeOf(UnimplementedView)).call.apply(_ref, [this].concat(args))), _this), _this.setNativeProps = function () {}, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(UnimplementedView, [{
    key: 'render',
    value: function render() {
      var View = require(234   ); // 234 = View
      return React.createElement(
        View,
        { style: [styles.unimplementedView, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        },
        this.props.children
      );
    }
  }]);
  return UnimplementedView;
}(React.Component);

var styles = StyleSheet.create({
  unimplementedView: {
    borderWidth: 1,
    borderColor: 'red',
    alignSelf: 'flex-start'
  }
});

module.exports = UnimplementedView;
}, 261, null, "UnimplementedView");
__d(/* StyleSheet */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(263         ); // 263 = PixelRatio
var ReactNativePropRegistry = require(126                      ); // 126 = ReactNativePropRegistry
var ReactNativeStyleAttributes = require(236                         ); // 236 = ReactNativeStyleAttributes
var StyleSheetValidation = require(266                   ); // 266 = StyleSheetValidation

var flatten = require(128           ); // 128 = flattenStyle

var hairlineWidth = PixelRatio.roundToNearestPixel(0.4);
if (hairlineWidth === 0) {
  hairlineWidth = 1 / PixelRatio.get();
}

var absoluteFillObject = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};
var absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);
module.exports = {
  hairlineWidth: hairlineWidth,

  absoluteFill: absoluteFill,

  absoluteFillObject: absoluteFillObject,

  flatten: flatten,

  setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
    var value = void 0;

    if (typeof ReactNativeStyleAttributes[property] === 'string') {
      value = {};
    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {
      value = ReactNativeStyleAttributes[property];
    } else {
      console.error(property + ' is not a valid style attribute');
      return;
    }

    if (__DEV__ && typeof value.process === 'function') {
      console.warn('Overwriting ' + property + ' style attribute preprocessor');
    }

    ReactNativeStyleAttributes[property] = babelHelpers.extends({}, value, { process: process });
  },
  create: function create(obj) {
    var result = {};
    for (var key in obj) {
      StyleSheetValidation.validateStyle(key, obj);
      result[key] = ReactNativePropRegistry.register(obj[key]);
    }
    return result;
  }
};
}, 262, null, "StyleSheet");
__d(/* PixelRatio */function(global, require, module, exports) {
'use strict';

var Dimensions = require(264         ); // 264 = Dimensions

var PixelRatio = function () {
  function PixelRatio() {
    babelHelpers.classCallCheck(this, PixelRatio);
  }

  babelHelpers.createClass(PixelRatio, null, [{
    key: 'get',
    value: function get() {
      return Dimensions.get('window').scale;
    }
  }, {
    key: 'getFontScale',
    value: function getFontScale() {
      return Dimensions.get('window').fontScale || PixelRatio.get();
    }
  }, {
    key: 'getPixelSizeForLayoutSize',
    value: function getPixelSizeForLayoutSize(layoutSize) {
      return Math.round(layoutSize * PixelRatio.get());
    }
  }, {
    key: 'roundToNearestPixel',
    value: function roundToNearestPixel(layoutSize) {
      var ratio = PixelRatio.get();
      return Math.round(layoutSize * ratio) / ratio;
    }
  }, {
    key: 'startDetecting',
    value: function startDetecting() {}
  }]);
  return PixelRatio;
}();

module.exports = PixelRatio;
}, 263, null, "PixelRatio");
__d(/* Dimensions */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(265         ); // 265 = DeviceInfo
var EventEmitter = require(69            ); // 69 = EventEmitter
var Platform = require(61        ); // 61 = Platform
var RCTDeviceEventEmitter = require(68                     ); // 68 = RCTDeviceEventEmitter

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var eventEmitter = new EventEmitter();
var dimensionsInitialized = false;
var dimensions = {};

var Dimensions = function () {
  function Dimensions() {
    babelHelpers.classCallCheck(this, Dimensions);
  }

  babelHelpers.createClass(Dimensions, null, [{
    key: 'set',
    value: function set(dims) {
      if (dims && dims.windowPhysicalPixels) {
        dims = JSON.parse(JSON.stringify(dims));

        var windowPhysicalPixels = dims.windowPhysicalPixels;
        dims.window = {
          width: windowPhysicalPixels.width / windowPhysicalPixels.scale,
          height: windowPhysicalPixels.height / windowPhysicalPixels.scale,
          scale: windowPhysicalPixels.scale,
          fontScale: windowPhysicalPixels.fontScale
        };
        if (Platform.OS === 'android') {
          var screenPhysicalPixels = dims.screenPhysicalPixels;
          dims.screen = {
            width: screenPhysicalPixels.width / screenPhysicalPixels.scale,
            height: screenPhysicalPixels.height / screenPhysicalPixels.scale,
            scale: screenPhysicalPixels.scale,
            fontScale: screenPhysicalPixels.fontScale
          };

          delete dims.screenPhysicalPixels;
        } else {
          dims.screen = dims.window;
        }

        delete dims.windowPhysicalPixels;
      }

      babelHelpers.extends(dimensions, dims);
      if (dimensionsInitialized) {
        eventEmitter.emit('change', {
          window: dimensions.window,
          screen: dimensions.screen
        });
      } else {
        dimensionsInitialized = true;
      }
    }
  }, {
    key: 'get',
    value: function get(dim) {
      invariant(dimensions[dim], 'No dimension set for key ' + dim);
      return dimensions[dim];
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant('change' === type, 'Trying to subscribe to unknown event: "%s"', type);
      eventEmitter.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant('change' === type, 'Trying to remove listener for unknown event: "%s"', type);
      eventEmitter.removeListener(type, handler);
    }
  }]);
  return Dimensions;
}();

Dimensions.set(DeviceInfo.Dimensions);
RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {
  Dimensions.set(update);
});

module.exports = Dimensions;
}, 264, null, "Dimensions");
__d(/* DeviceInfo */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(48             ).DeviceInfo; // 48 = NativeModules

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

invariant(DeviceInfo, 'DeviceInfo native module is not installed correctly');

module.exports = DeviceInfo;
}, 265, null, "DeviceInfo");
__d(/* StyleSheetValidation */function(global, require, module, exports) {
'use strict';

var ImageStylePropTypes = require(237                  ); // 237 = ImageStylePropTypes
var TextStylePropTypes = require(244                 ); // 244 = TextStylePropTypes
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var StyleSheetValidation = function () {
  function StyleSheetValidation() {
    babelHelpers.classCallCheck(this, StyleSheetValidation);
  }

  babelHelpers.createClass(StyleSheetValidation, null, [{
    key: 'validateStyleProp',
    value: function validateStyleProp(prop, style, caller) {
      if (!__DEV__) {
        return;
      }
      if (allStylePropTypes[prop] === undefined) {
        var message1 = '"' + prop + '" is not a valid style property.';
        var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');
        styleError(message1, style, caller, message2);
      }
      var error = allStylePropTypes[prop](style, prop, caller, 'prop', null, ReactPropTypesSecret);
      if (error) {
        styleError(error.message, style, caller);
      }
    }
  }, {
    key: 'validateStyle',
    value: function validateStyle(name, styles) {
      if (!__DEV__) {
        return;
      }
      for (var prop in styles[name]) {
        StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
      }
    }
  }, {
    key: 'addValidStylePropTypes',
    value: function addValidStylePropTypes(stylePropTypes) {
      for (var key in stylePropTypes) {
        allStylePropTypes[key] = stylePropTypes[key];
      }
    }
  }]);
  return StyleSheetValidation;
}();

var styleError = function styleError(message1, style, caller, message2) {
  invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
};

var allStylePropTypes = {};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
}, 266, null, "StyleSheetValidation");
__d(/* createReactNativeComponentClass */function(global, require, module, exports) {

'use strict';

var ReactNativeBaseComponent = require(268                       ); // 268 = ReactNativeBaseComponent
var ReactNativeFeatureFlags = require(86                       ); // 86 = ReactNativeFeatureFlags
var ReactNativeViewConfigRegistry = require(203                            ); // 203 = ReactNativeViewConfigRegistry

var createReactNativeFiberComponentClass = function createReactNativeFiberComponentClass(viewConfig) {
  return ReactNativeViewConfigRegistry.register(viewConfig);
};

var createReactNativeComponentClass = function createReactNativeComponentClass(viewConfig) {
  var Constructor = function Constructor(element) {
    this._currentElement = element;
    this._topLevelWrapper = null;
    this._hostParent = null;
    this._hostContainerInfo = null;
    this._rootNodeID = 0;
    this._renderedChildren = null;
  };
  Constructor.displayName = viewConfig.uiViewClassName;
  Constructor.viewConfig = viewConfig;
  Constructor.propTypes = viewConfig.propTypes;
  Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
  Constructor.prototype.constructor = Constructor;

  return Constructor;
};

module.exports = ReactNativeFeatureFlags.useFiber ? createReactNativeFiberComponentClass : createReactNativeComponentClass;
}, 267, null, "createReactNativeComponentClass");
__d(/* ReactNativeBaseComponent */function(global, require, module, exports) {
'use strict';

var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var ReactNativeAttributePayload = require(125                          ); // 125 = ReactNativeAttributePayload
var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree
var ReactNativeTagHandles = require(196                    ); // 196 = ReactNativeTagHandles
var ReactMultiChild = require(269              ); // 269 = ReactMultiChild
var UIManager = require(78         ); // 78 = UIManager

var deepFreezeAndThrowOnMutationInDev = require(65                                 ); // 65 = deepFreezeAndThrowOnMutationInDev

var ReactNativeBaseComponent = function ReactNativeBaseComponent(viewConfig) {
  this.viewConfig = viewConfig;
};

ReactNativeBaseComponent.Mixin = {
  getPublicInstance: function getPublicInstance() {
    return this;
  },

  unmountComponent: function unmountComponent(safely, skipLifecycle) {
    ReactNativeComponentTree.uncacheNode(this);
    this.unmountChildren(safely, skipLifecycle);
    this._rootNodeID = 0;
  },

  initializeChildren: function initializeChildren(children, containerTag, transaction, context) {
    var mountImages = this.mountChildren(children, transaction, context);

    if (mountImages.length) {
      var createdTags = [];
      for (var i = 0, l = mountImages.length; i < l; i++) {
        var mountImage = mountImages[i];
        var childTag = mountImage;
        createdTags[i] = childTag;
      }
      UIManager.setChildren(containerTag, createdTags);
    }
  },

  receiveComponent: function receiveComponent(nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;

    if (__DEV__) {
      for (var key in this.viewConfig.validAttributes) {
        if (nextElement.props.hasOwnProperty(key)) {
          deepFreezeAndThrowOnMutationInDev(nextElement.props[key]);
        }
      }
    }

    var updatePayload = ReactNativeAttributePayload.diff(prevElement.props, nextElement.props, this.viewConfig.validAttributes);

    if (updatePayload) {
      UIManager.updateView(this._rootNodeID, this.viewConfig.uiViewClassName, updatePayload);
    }

    this.updateChildren(nextElement.props.children, transaction, context);
  },

  getHostNode: function getHostNode() {
    return this._rootNodeID;
  },

  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    var tag = ReactNativeTagHandles.allocateTag();

    this._rootNodeID = tag;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    if (__DEV__) {
      for (var key in this.viewConfig.validAttributes) {
        if (this._currentElement.props.hasOwnProperty(key)) {
          deepFreezeAndThrowOnMutationInDev(this._currentElement.props[key]);
        }
      }
    }

    var updatePayload = ReactNativeAttributePayload.create(this._currentElement.props, this.viewConfig.validAttributes);

    var nativeTopRootTag = hostContainerInfo._tag;
    UIManager.createView(tag, this.viewConfig.uiViewClassName, nativeTopRootTag, updatePayload);

    ReactNativeComponentTree.precacheNode(this, tag);

    this.initializeChildren(this._currentElement.props.children, tag, transaction, context);
    return tag;
  }
};

babelHelpers.extends(ReactNativeBaseComponent.prototype, ReactMultiChild, ReactNativeBaseComponent.Mixin, NativeMethodsMixin);

module.exports = ReactNativeBaseComponent;
}, 268, null, "ReactNativeBaseComponent");
__d(/* ReactMultiChild */function(global, require, module, exports) {

'use strict';

var ReactComponentEnvironment = require(219                        ); // 219 = ReactComponentEnvironment
var ReactInstanceMap = require(96                ); // 96 = ReactInstanceMap
var ReactInstrumentation = require(208                   ); // 208 = ReactInstrumentation

var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner
var ReactReconciler = require(210              ); // 210 = ReactReconciler
var ReactChildReconciler = require(270                   ); // 270 = ReactChildReconciler

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var flattenChildren = require(273              ); // 273 = flattenChildren
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function makeInsertMarkup(markup, afterNode, toIndex) {
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

function makeMove(child, afterNode, toIndex) {
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

function makeRemove(child, node) {
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

function makeSetMarkup(markup) {
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

function makeTextContent(textContent) {
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (__DEV__) {
  var getDebugID = function getDebugID(inst) {
    if (!inst._debugID) {
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
    var debugID = getDebugID(this);

    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

var ReactMultiChild = {
  _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
    if (__DEV__) {
      var selfDebugID = getDebugID(this);
      if (this._currentElement) {
        try {
          ReactCurrentOwner.current = this._currentElement._owner;
          return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
        } finally {
          ReactCurrentOwner.current = null;
        }
      }
    }
    return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
  },

  _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
    var nextChildren;
    var selfDebugID = 0;
    if (__DEV__) {
      selfDebugID = getDebugID(this);
      if (this._currentElement) {
        try {
          ReactCurrentOwner.current = this._currentElement._owner;
          nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
        } finally {
          ReactCurrentOwner.current = null;
        }
        ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
        return nextChildren;
      }
    }
    nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
    ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
    return nextChildren;
  },

  mountChildren: function mountChildren(nestedChildren, transaction, context) {
    var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
    this._renderedChildren = children;

    var mountImages = [];
    var index = 0;
    for (var name in children) {
      if (children.hasOwnProperty(name)) {
        var child = children[name];
        var selfDebugID = 0;
        if (__DEV__) {
          selfDebugID = getDebugID(this);
        }
        var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
        child._mountIndex = index++;
        mountImages.push(mountImage);
      }
    }

    if (__DEV__) {
      setChildrenForInstrumentation.call(this, children);
    }

    return mountImages;
  },

  updateTextContent: function updateTextContent(nextContent) {
    var prevChildren = this._renderedChildren;

    ReactChildReconciler.unmountChildren(prevChildren, false, false);
    for (var name in prevChildren) {
      if (prevChildren.hasOwnProperty(name)) {
        invariant(false, 'updateTextContent called on non-empty component.');
      }
    }

    var updates = [makeTextContent(nextContent)];
    processQueue(this, updates);
  },

  updateMarkup: function updateMarkup(nextMarkup) {
    var prevChildren = this._renderedChildren;

    ReactChildReconciler.unmountChildren(prevChildren, false, false);
    for (var name in prevChildren) {
      if (prevChildren.hasOwnProperty(name)) {
        invariant(false, 'updateTextContent called on non-empty component.');
      }
    }
    var updates = [makeSetMarkup(nextMarkup)];
    processQueue(this, updates);
  },

  updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
    this._updateChildren(nextNestedChildrenElements, transaction, context);
  },

  _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
    var prevChildren = this._renderedChildren;
    var removedNodes = {};
    var mountImages = [];
    var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
    if (!nextChildren && !prevChildren) {
      return;
    }
    var updates = null;
    var name;

    var nextIndex = 0;
    var lastIndex = 0;

    var nextMountIndex = 0;
    var lastPlacedNode = null;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      var prevChild = prevChildren && prevChildren[name];
      var nextChild = nextChildren[name];
      if (prevChild === nextChild) {
        updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
        lastIndex = Math.max(prevChild._mountIndex, lastIndex);
        prevChild._mountIndex = nextIndex;
      } else {
        if (prevChild) {
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
        }

        updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
        nextMountIndex++;
      }
      nextIndex++;
      lastPlacedNode = ReactReconciler.getHostNode(nextChild);
    }

    for (name in removedNodes) {
      if (removedNodes.hasOwnProperty(name)) {
        updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
      }
    }
    if (updates) {
      processQueue(this, updates);
    }
    this._renderedChildren = nextChildren;

    if (__DEV__) {
      setChildrenForInstrumentation.call(this, nextChildren);
    }
  },

  unmountChildren: function unmountChildren(safely, skipLifecycle) {
    var renderedChildren = this._renderedChildren;
    ReactChildReconciler.unmountChildren(renderedChildren, safely, skipLifecycle);
    this._renderedChildren = null;
  },

  moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
    if (child._mountIndex < lastIndex) {
      return makeMove(child, afterNode, toIndex);
    }
  },

  createChild: function createChild(child, afterNode, mountImage) {
    return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
  },

  removeChild: function removeChild(child, node) {
    return makeRemove(child, node);
  },

  _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
    child._mountIndex = index;
    return this.createChild(child, afterNode, mountImage);
  },

  _unmountChild: function _unmountChild(child, node) {
    var update = this.removeChild(child, node);
    child._mountIndex = null;
    return update;
  }
};

module.exports = ReactMultiChild;
}, 269, null, "ReactMultiChild");
__d(/* ReactChildReconciler */function(global, require, module, exports) {

'use strict';

var KeyEscapeUtils = require(271             ); // 271 = KeyEscapeUtils
var ReactFeatureFlags = require(113                ); // 113 = ReactFeatureFlags
var ReactReconciler = require(210              ); // 210 = ReactReconciler

var instantiateReactComponent = require(217                        ); // 217 = instantiateReactComponent
var shouldUpdateReactComponent = require(221                         ); // 221 = shouldUpdateReactComponent
var traverseAllChildren = require(272                  ); // 272 = traverseAllChildren
var warning = require(19                ); // 19 = fbjs/lib/warning

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  ReactComponentTreeHook = require(39                                ); // 39 = react/lib/ReactComponentTreeHook
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  var keyUnique = childInstances[name] === undefined;
  if (__DEV__) {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require(39                                ); // 39 = react/lib/ReactComponentTreeHook
    }
    if (!keyUnique) {
      warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID));
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

var ReactChildReconciler = {
  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (__DEV__) {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) {
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (!ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack && prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false, false);
        }

        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;

        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
        if (ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack && prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false, false);
        }
      }
    }

    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false, false);
      }
    }
  },

  unmountChildren: function unmountChildren(renderedChildren, safely, skipLifecycle) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely, skipLifecycle);
      }
    }
  }
};

module.exports = ReactChildReconciler;
}, 270, null, "ReactChildReconciler");
__d(/* KeyEscapeUtils */function(global, require, module, exports) {

'use strict';

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
}, 271, null, "KeyEscapeUtils");
__d(/* traverseAllChildren */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(27                           ); // 27 = react/lib/ReactCurrentOwner
var REACT_ELEMENT_TYPE = require(109                 ); // 109 = ReactElementSymbol

var getIteratorFn = require(112            ); // 112 = getIteratorFn
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var KeyEscapeUtils = require(271             ); // 271 = KeyEscapeUtils
var warning = require(19                ); // 19 = fbjs/lib/warning

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

var didWarnAboutMaps = false;

function getComponentKey(component, index) {
  if (component && typeof component === 'object' && component.key != null) {
    return KeyEscapeUtils.escape(component.key);
  }

  return index.toString(36);
}

function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0;
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      if (__DEV__) {
        if (iteratorFn === children.entries) {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = '\n\nCheck the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', mapsAsChildrenAddendum);
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      if (__DEV__) {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.';
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += '\n\nCheck the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}, 272, null, "traverseAllChildren");
__d(/* flattenChildren */function(global, require, module, exports) {

'use strict';

var KeyEscapeUtils = require(271             ); // 271 = KeyEscapeUtils
var traverseAllChildren = require(272                  ); // 272 = traverseAllChildren
var warning = require(19                ); // 19 = fbjs/lib/warning

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  ReactComponentTreeHook = require(39                                ); // 39 = react/lib/ReactComponentTreeHook
}

function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (__DEV__) {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require(39                                ); // 39 = react/lib/ReactComponentTreeHook
      }
      if (!keyUnique) {
        warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID));
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (__DEV__) {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
}, 273, null, "flattenChildren");
__d(/* insetsDiffer */function(global, require, module, exports) {
'use strict';

var dummyInsets = {
  top: undefined,
  left: undefined,
  right: undefined,
  bottom: undefined
};

var insetsDiffer = function insetsDiffer(one, two) {
  one = one || dummyInsets;
  two = two || dummyInsets;
  return one !== two && (one.top !== two.top || one.left !== two.left || one.right !== two.right || one.bottom !== two.bottom);
};

module.exports = insetsDiffer;
}, 274, null, "insetsDiffer");
__d(/* matricesDiffer */function(global, require, module, exports) {
'use strict';

var matricesDiffer = function matricesDiffer(one, two) {
  if (one === two) {
    return false;
  }
  return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];
};

module.exports = matricesDiffer;
}, 275, null, "matricesDiffer");
__d(/* pointsDiffer */function(global, require, module, exports) {
'use strict';

var dummyPoint = { x: undefined, y: undefined };

var pointsDiffer = function pointsDiffer(one, two) {
  one = one || dummyPoint;
  two = two || dummyPoint;
  return one !== two && (one.x !== two.x || one.y !== two.y);
};

module.exports = pointsDiffer;
}, 276, null, "pointsDiffer");
__d(/* resolveAssetSource */function(global, require, module, exports) {
'use strict';

var AssetRegistry = require(278            ); // 278 = AssetRegistry
var AssetSourceResolver = require(279                  ); // 279 = AssetSourceResolver
var NativeModules = require(48             ); // 48 = NativeModules

var _customSourceTransformer = void 0,
    _serverURL = void 0,
    _bundleSourcePath = void 0;

function getDevServerURL() {
  if (_serverURL === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    var match = scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }
  return _serverURL;
}

function getBundleSourcePath() {
  if (_bundleSourcePath === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    if (!scriptURL) {
      _bundleSourcePath = null;
      return _bundleSourcePath;
    }
    if (scriptURL.startsWith('assets://')) {
      _bundleSourcePath = null;
      return _bundleSourcePath;
    }
    if (scriptURL.startsWith('file://')) {
      _bundleSourcePath = scriptURL.substring(7, scriptURL.lastIndexOf('/') + 1);
    } else {
      _bundleSourcePath = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    }
  }

  return _bundleSourcePath;
}

function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}

function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }

  var asset = AssetRegistry.getAssetByID(source);
  if (!asset) {
    return null;
  }

  var resolver = new AssetSourceResolver(getDevServerURL(), getBundleSourcePath(), asset);
  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}

module.exports = resolveAssetSource;
module.exports.pickScale = AssetSourceResolver.pickScale;
module.exports.setCustomSourceTransformer = setCustomSourceTransformer;
}, 277, null, "resolveAssetSource");
__d(/* AssetRegistry */function(global, require, module, exports) {
'use strict';

var assets = [];

function registerAsset(asset) {
  return assets.push(asset);
}

function getAssetByID(assetId) {
  return assets[assetId - 1];
}

module.exports = { registerAsset: registerAsset, getAssetByID: getAssetByID };
}, 278, null, "AssetRegistry");
__d(/* AssetSourceResolver */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(263         ); // 263 = PixelRatio
var Platform = require(61        ); // 61 = Platform

var assetPathUtils = require(280                                    ); // 280 = ../../local-cli/bundle/assetPathUtils
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function getScaledAssetPath(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';
  var assetDir = assetPathUtils.getBasePath(asset);
  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;
}

function getAssetPathInDrawableFolder(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var drawbleFolder = assetPathUtils.getAndroidDrawableFolderName(asset, scale);
  var fileName = assetPathUtils.getAndroidResourceIdentifier(asset);
  return drawbleFolder + '/' + fileName + '.' + asset.type;
}

var AssetSourceResolver = function () {
  function AssetSourceResolver(serverUrl, bundlePath, asset) {
    babelHelpers.classCallCheck(this, AssetSourceResolver);

    this.serverUrl = serverUrl;
    this.bundlePath = bundlePath;
    this.asset = asset;
  }

  babelHelpers.createClass(AssetSourceResolver, [{
    key: 'isLoadedFromServer',
    value: function isLoadedFromServer() {
      return !!this.serverUrl;
    }
  }, {
    key: 'isLoadedFromFileSystem',
    value: function isLoadedFromFileSystem() {
      return !!this.bundlePath;
    }
  }, {
    key: 'defaultAsset',
    value: function defaultAsset() {
      if (this.isLoadedFromServer()) {
        return this.assetServerURL();
      }

      if (Platform.OS === 'android') {
        return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
      } else {
        return this.scaledAssetPathInBundle();
      }
    }
  }, {
    key: 'assetServerURL',
    value: function assetServerURL() {
      invariant(!!this.serverUrl, 'need server to load from');
      return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + Platform.OS + '&hash=' + this.asset.hash);
    }
  }, {
    key: 'scaledAssetPath',
    value: function scaledAssetPath() {
      return this.fromSource(getScaledAssetPath(this.asset));
    }
  }, {
    key: 'scaledAssetPathInBundle',
    value: function scaledAssetPathInBundle() {
      var path = this.bundlePath || '';
      return this.fromSource(path + getScaledAssetPath(this.asset));
    }
  }, {
    key: 'resourceIdentifierWithoutScale',
    value: function resourceIdentifierWithoutScale() {
      invariant(Platform.OS === 'android', 'resource identifiers work on Android');
      return this.fromSource(assetPathUtils.getAndroidResourceIdentifier(this.asset));
    }
  }, {
    key: 'drawableFolderInBundle',
    value: function drawableFolderInBundle() {
      var path = this.bundlePath || '';
      return this.fromSource('file://' + path + getAssetPathInDrawableFolder(this.asset));
    }
  }, {
    key: 'fromSource',
    value: function fromSource(source) {
      return {
        __packager_asset: true,
        width: this.asset.width,
        height: this.asset.height,
        uri: source,
        scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get())
      };
    }
  }], [{
    key: 'pickScale',
    value: function pickScale(scales, deviceScale) {
      for (var i = 0; i < scales.length; i++) {
        if (scales[i] >= deviceScale) {
          return scales[i];
        }
      }

      return scales[scales.length - 1] || 1;
    }
  }]);
  return AssetSourceResolver;
}();

module.exports = AssetSourceResolver;
}, 279, null, "AssetSourceResolver");
__d(/* react-native/local-cli/bundle/assetPathUtils.js */function(global, require, module, exports) {
'use strict';

function getAndroidAssetSuffix(scale) {
  switch (scale) {
    case 0.75:
      return 'ldpi';
    case 1:
      return 'mdpi';
    case 1.5:
      return 'hdpi';
    case 2:
      return 'xhdpi';
    case 3:
      return 'xxhdpi';
    case 4:
      return 'xxxhdpi';
  }
}

function getAndroidDrawableFolderName(asset, scale) {
  var suffix = getAndroidAssetSuffix(scale);
  if (!suffix) {
    throw new Error('Don\'t know which android drawable suffix to use for asset: ' + JSON.stringify(asset));
  }
  var androidFolder = 'drawable-' + suffix;
  return androidFolder;
}

function getAndroidResourceIdentifier(asset) {
  var folderPath = getBasePath(asset);
  return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
}

function getBasePath(asset) {
  var basePath = asset.httpServerLocation;
  if (basePath[0] === '/') {
    basePath = basePath.substr(1);
  }
  return basePath;
}

module.exports = {
  getAndroidAssetSuffix: getAndroidAssetSuffix,
  getAndroidDrawableFolderName: getAndroidDrawableFolderName,
  getAndroidResourceIdentifier: getAndroidResourceIdentifier,
  getBasePath: getBasePath
};
}, 280, null, "react-native/local-cli/bundle/assetPathUtils.js");
__d(/* verifyPropTypes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(236                         ); // 236 = ReactNativeStyleAttributes

function verifyPropTypes(componentInterface, viewConfig, nativePropsToIgnore) {
  if (!viewConfig) {
    return;
  }
  var componentName = componentInterface.displayName || componentInterface.name || 'unknown';

  var propTypes = componentInterface.__propTypesSecretDontUseThesePlease || componentInterface.propTypes;

  if (!propTypes) {
    throw new Error('`' + componentName + '` has no propTypes defined`');
  }

  var nativeProps = viewConfig.NativeProps;
  for (var prop in nativeProps) {
    if (!propTypes[prop] && !ReactNativeStyleAttributes[prop] && (!nativePropsToIgnore || !nativePropsToIgnore[prop])) {
      var message;
      if (propTypes.hasOwnProperty(prop)) {
        message = '`' + componentName + '` has incorrectly defined propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop];
      } else {
        message = '`' + componentName + '` has no propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop] + '`';
      }
      message += '\nIf you haven\'t changed this prop yourself, this usually means that ' + 'your versions of the native code and JavaScript code are out of sync. Updating both ' + 'should make this error go away.';
      throw new Error(message);
    }
  }
}

module.exports = verifyPropTypes;
}, 281, null, "verifyPropTypes");
__d(/* ReactNativeART */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\ART\\ReactNativeART.js';
var Color = require(283             ); // 283 = art/core/color
var Path = require(284                  ); // 284 = ARTSerializablePath
var Transform = require(287                 ); // 287 = art/core/transform

var React = require(235    ); // 235 = React
var ReactNativeViewAttributes = require(250                        ); // 250 = ReactNativeViewAttributes

var createReactNativeComponentClass = require(267                              ); // 267 = createReactNativeComponentClass
var merge = require(254    ); // 254 = merge
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function arrayDiffer(a, b) {
  if (a == null || b == null) {
    return true;
  }
  if (a.length !== b.length) {
    return true;
  }
  for (var i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) {
      return true;
    }
  }
  return false;
}

function fontAndLinesDiffer(a, b) {
  if (a === b) {
    return false;
  }
  if (a.font !== b.font) {
    if (a.font === null) {
      return true;
    }
    if (b.font === null) {
      return true;
    }

    if (a.font.fontFamily !== b.font.fontFamily || a.font.fontSize !== b.font.fontSize || a.font.fontWeight !== b.font.fontWeight || a.font.fontStyle !== b.font.fontStyle) {
      return true;
    }
  }
  return arrayDiffer(a.lines, b.lines);
}

var SurfaceViewAttributes = merge(ReactNativeViewAttributes.UIView, {});

var NodeAttributes = {
  transform: { diff: arrayDiffer },
  opacity: true
};

var GroupAttributes = merge(NodeAttributes, {
  clipping: { diff: arrayDiffer }
});

var RenderableAttributes = merge(NodeAttributes, {
  fill: { diff: arrayDiffer },
  stroke: { diff: arrayDiffer },
  strokeWidth: true,
  strokeCap: true,
  strokeJoin: true,
  strokeDash: { diff: arrayDiffer }
});

var ShapeAttributes = merge(RenderableAttributes, {
  d: { diff: arrayDiffer }
});

var TextAttributes = merge(RenderableAttributes, {
  alignment: true,
  frame: { diff: fontAndLinesDiffer },
  path: { diff: arrayDiffer }
});

var NativeSurfaceView = createReactNativeComponentClass({
  validAttributes: SurfaceViewAttributes,
  uiViewClassName: 'ARTSurfaceView'
});

var NativeGroup = createReactNativeComponentClass({
  validAttributes: GroupAttributes,
  uiViewClassName: 'ARTGroup'
});

var NativeShape = createReactNativeComponentClass({
  validAttributes: ShapeAttributes,
  uiViewClassName: 'ARTShape'
});

var NativeText = createReactNativeComponentClass({
  validAttributes: TextAttributes,
  uiViewClassName: 'ARTText'
});

function childrenAsString(children) {
  if (!children) {
    return '';
  }
  if (typeof children === 'string') {
    return children;
  }
  if (children.length) {
    return children.join('\n');
  }
  return '';
}

var Surface = function (_React$Component) {
  babelHelpers.inherits(Surface, _React$Component);

  function Surface() {
    babelHelpers.classCallCheck(this, Surface);
    return babelHelpers.possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).apply(this, arguments));
  }

  babelHelpers.createClass(Surface, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { isInSurface: true };
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      return React.createElement(
        NativeSurfaceView,
        { style: [props.style, { width: w, height: h }], __source: {
            fileName: _jsxFileName,
            lineNumber: 154
          }
        },
        this.props.children
      );
    }
  }]);
  return Surface;
}(React.Component);

Surface.childContextTypes = {
  isInSurface: React.PropTypes.bool
};


function extractNumber(value, defaultValue) {
  if (value == null) {
    return defaultValue;
  }
  return +value;
}

var pooledTransform = new Transform();

function extractTransform(props) {
  var scaleX = props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;
  var scaleY = props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;

  pooledTransform.transformTo(1, 0, 0, 1, 0, 0).move(props.x || 0, props.y || 0).rotate(props.rotation || 0, props.originX, props.originY).scale(scaleX, scaleY, props.originX, props.originY);

  if (props.transform != null) {
    pooledTransform.transform(props.transform);
  }

  return [pooledTransform.xx, pooledTransform.yx, pooledTransform.xy, pooledTransform.yy, pooledTransform.x, pooledTransform.y];
}

function extractOpacity(props) {
  if (props.visible === false) {
    return 0;
  }
  if (props.opacity == null) {
    return 1;
  }
  return +props.opacity;
}

var Group = function (_React$Component2) {
  babelHelpers.inherits(Group, _React$Component2);

  function Group() {
    babelHelpers.classCallCheck(this, Group);
    return babelHelpers.possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).apply(this, arguments));
  }

  babelHelpers.createClass(Group, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      invariant(this.context.isInSurface, 'ART: <Group /> must be a child of a <Surface />');
      return React.createElement(
        NativeGroup,
        {
          opacity: extractOpacity(props),
          transform: extractTransform(props), __source: {
            fileName: _jsxFileName,
            lineNumber: 226
          }
        },
        this.props.children
      );
    }
  }]);
  return Group;
}(React.Component);

Group.contextTypes = {
  isInSurface: React.PropTypes.bool.isRequired
};

var ClippingRectangle = function (_React$Component3) {
  babelHelpers.inherits(ClippingRectangle, _React$Component3);

  function ClippingRectangle() {
    babelHelpers.classCallCheck(this, ClippingRectangle);
    return babelHelpers.possibleConstructorReturn(this, (ClippingRectangle.__proto__ || Object.getPrototypeOf(ClippingRectangle)).apply(this, arguments));
  }

  babelHelpers.createClass(ClippingRectangle, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var x = extractNumber(props.x, 0);
      var y = extractNumber(props.y, 0);
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      var clipping = [x, y, w, h];

      var propsExcludingXAndY = merge(props);
      delete propsExcludingXAndY.x;
      delete propsExcludingXAndY.y;
      return React.createElement(
        NativeGroup,
        {
          clipping: clipping,
          opacity: extractOpacity(props),
          transform: extractTransform(propsExcludingXAndY), __source: {
            fileName: _jsxFileName,
            lineNumber: 248
          }
        },
        this.props.children
      );
    }
  }]);
  return ClippingRectangle;
}(React.Component);

var SOLID_COLOR = 0;
var LINEAR_GRADIENT = 1;
var RADIAL_GRADIENT = 2;
var PATTERN = 3;

function insertColorIntoArray(color, targetArray, atIndex) {
  var c = new Color(color);
  targetArray[atIndex + 0] = c.red / 255;
  targetArray[atIndex + 1] = c.green / 255;
  targetArray[atIndex + 2] = c.blue / 255;
  targetArray[atIndex + 3] = c.alpha;
}

function insertColorsIntoArray(stops, targetArray, atIndex) {
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      insertColorIntoArray(stops[i], targetArray, atIndex + i * 4);
      i++;
    }
  } else {
    for (var offset in stops) {
      insertColorIntoArray(stops[offset], targetArray, atIndex + i * 4);
      i++;
    }
  }
  return atIndex + i * 4;
}

function insertOffsetsIntoArray(stops, targetArray, atIndex, multi, reverse) {
  var offsetNumber;
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      offsetNumber = i / (stops.length - 1) * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  } else {
    for (var offsetString in stops) {
      offsetNumber = +offsetString * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  }
  return atIndex + i;
}

function insertColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 1, false);
}

function insertDoubleColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  lastIndex = insertColorsIntoArray(stops, targetArray, lastIndex);
  lastIndex = insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, false);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, true);
}

function applyBoundingBoxToBrushData(brushData, props) {
  var type = brushData[0];
  var width = +props.width;
  var height = +props.height;
  if (type === LINEAR_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
  } else if (type === RADIAL_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
    brushData[5] *= width;
    brushData[6] *= height;
  } else if (type === PATTERN) {}
}

function extractBrush(colorOrBrush, props) {
  if (colorOrBrush == null) {
    return null;
  }
  if (colorOrBrush._brush) {
    if (colorOrBrush._bb) {
      applyBoundingBoxToBrushData(colorOrBrush._brush, props);
      colorOrBrush._bb = false;
    }
    return colorOrBrush._brush;
  }
  var c = new Color(colorOrBrush);
  return [SOLID_COLOR, c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractColor(color) {
  if (color == null) {
    return null;
  }
  var c = new Color(color);
  return [c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractStrokeCap(strokeCap) {
  switch (strokeCap) {
    case 'butt':
      return 0;
    case 'square':
      return 2;
    default:
      return 1;}
}

function extractStrokeJoin(strokeJoin) {
  switch (strokeJoin) {
    case 'miter':
      return 0;
    case 'bevel':
      return 2;
    default:
      return 1;}
}

var Shape = function (_React$Component4) {
  babelHelpers.inherits(Shape, _React$Component4);

  function Shape() {
    babelHelpers.classCallCheck(this, Shape);
    return babelHelpers.possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).apply(this, arguments));
  }

  babelHelpers.createClass(Shape, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var path = props.d || childrenAsString(props.children);
      var d = new Path(path).toJSON();
      return React.createElement(NativeShape, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        d: d,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 396
        }
      });
    }
  }]);
  return Shape;
}(React.Component);

var cachedFontObjectsFromString = {};

var fontFamilyPrefix = /^[\s"']*/;
var fontFamilySuffix = /[\s"']*$/;

function extractSingleFontFamily(fontFamilyString) {
  return fontFamilyString.split(',')[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '');
}

function parseFontString(font) {
  if (cachedFontObjectsFromString.hasOwnProperty(font)) {
    return cachedFontObjectsFromString[font];
  }
  var regexp = /^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
  var match = regexp.exec(font);
  if (!match) {
    return null;
  }
  var fontFamily = extractSingleFontFamily(match[3]);
  var fontSize = +match[2] || 12;
  var isBold = /bold/.exec(match[1]);
  var isItalic = /italic/.exec(match[1]);
  cachedFontObjectsFromString[font] = {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: isBold ? 'bold' : 'normal',
    fontStyle: isItalic ? 'italic' : 'normal'
  };
  return cachedFontObjectsFromString[font];
}

function extractFont(font) {
  if (font == null) {
    return null;
  }
  if (typeof font === 'string') {
    return parseFontString(font);
  }
  var fontFamily = extractSingleFontFamily(font.fontFamily);
  var fontSize = +font.fontSize || 12;
  return {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: font.fontWeight,
    fontStyle: font.fontStyle
  };
}

var newLine = /\n/g;
function extractFontAndLines(font, text) {
  return { font: extractFont(font), lines: text.split(newLine) };
}

function extractAlignment(alignment) {
  switch (alignment) {
    case 'right':
      return 1;
    case 'center':
      return 2;
    default:
      return 0;
  }
}

var Text = function (_React$Component5) {
  babelHelpers.inherits(Text, _React$Component5);

  function Text() {
    babelHelpers.classCallCheck(this, Text);
    return babelHelpers.possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
  }

  babelHelpers.createClass(Text, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var textPath = props.path ? new Path(props.path).toJSON() : null;
      var textFrame = extractFontAndLines(props.font, childrenAsString(props.children));
      return React.createElement(NativeText, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        alignment: extractAlignment(props.alignment),
        frame: textFrame,
        path: textPath,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 493
        }
      });
    }
  }]);
  return Text;
}(React.Component);

function LinearGradient(stops, x1, y1, x2, y2) {
  var type = LINEAR_GRADIENT;

  if (arguments.length < 5) {
    var angle = (x1 == null ? 270 : x1) * Math.PI / 180;

    var x = Math.cos(angle);
    var y = -Math.sin(angle);
    var l = (Math.abs(x) + Math.abs(y)) / 2;

    x *= l;y *= l;

    x1 = 0.5 - x;
    x2 = 0.5 + x;
    y1 = 0.5 - y;
    y2 = 0.5 + y;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [type, +x1, +y1, +x2, +y2];
  insertColorStopsIntoArray(stops, brushData, 5);
  this._brush = brushData;
}

function RadialGradient(stops, fx, fy, rx, ry, cx, cy) {
  if (ry == null) {
    ry = rx;
  }
  if (cx == null) {
    cx = fx;
  }
  if (cy == null) {
    cy = fy;
  }
  if (fx == null) {
    fx = fy = rx = ry = cx = cy = 0.5;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];
  insertDoubleColorStopsIntoArray(stops, brushData, 7);
  this._brush = brushData;
}

function Pattern(url, width, height, left, top) {
  this._brush = [PATTERN, url, +left || 0, +top || 0, +width, +height];
}

var ReactART = {
  LinearGradient: LinearGradient,
  RadialGradient: RadialGradient,
  Pattern: Pattern,
  Transform: Transform,
  Path: Path,
  Surface: Surface,
  Group: Group,
  ClippingRectangle: ClippingRectangle,
  Shape: Shape,
  Text: Text
};

module.exports = ReactART;
}, 282, null, "ReactNativeART");
__d(/* art/core/color.js */function(global, require, module, exports) {var colors = {
	maroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',
	purple: '#800080', fuchsia: "#ff00ff", white: '#ffffff', lime: '#00ff00', green: '#008000',
	navy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',
	black: '#000000', silver: '#c0c0c0', gray: '#808080'
};

var map = function map(array, fn) {
	var results = [];
	for (var i = 0, l = array.length; i < l; i++) {
		results[i] = fn(array[i], i);
	}return results;
};

var Color = function Color(color, type) {

	if (color.isColor) {

		this.red = color.red;
		this.green = color.green;
		this.blue = color.blue;
		this.alpha = color.alpha;
	} else {

		var namedColor = colors[color];
		if (namedColor) {
			color = namedColor;
			type = 'hex';
		}

		switch (typeof color) {
			case 'string':
				if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex';break;
			case 'object':
				type = type || 'rgb';color = color.toString();break;
			case 'number':
				type = 'hex';color = color.toString(16);break;
		}

		color = Color['parse' + type.toUpperCase()](color);
		this.red = color[0];
		this.green = color[1];
		this.blue = color[2];
		this.alpha = color[3];
	}

	this.isColor = true;
};

var limit = function limit(number, min, max) {
	return Math.min(max, Math.max(min, number));
};

var listMatch = /([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
var hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

Color.parseRGB = function (color) {
	return map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);
		return i < 3 ? Math.round((bit %= 256) < 0 ? bit + 256 : bit) : limit(bit === '' ? 1 : Number(bit), 0, 1);
	});
};

Color.parseHEX = function (color) {
	if (color.length == 1) color = color + color + color;
	return map(color.match(hexMatch).slice(1), function (bit, i) {
		if (i == 3) return bit ? parseInt(bit, 16) / 255 : 1;
		return parseInt(bit.length == 1 ? bit + bit : bit, 16);
	});
};

Color.parseHSB = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var a = hsb[3];
	var br = Math.round(hsb[2] / 100 * 255);
	if (hsb[1] == 0) return [br, br, br, a];

	var hue = hsb[0];
	var f = hue % 60;
	var p = Math.round(hsb[2] * (100 - hsb[1]) / 10000 * 255);
	var q = Math.round(hsb[2] * (6000 - hsb[1] * f) / 600000 * 255);
	var t = Math.round(hsb[2] * (6000 - hsb[1] * (60 - f)) / 600000 * 255);

	switch (Math.floor(hue / 60)) {
		case 0:
			return [br, t, p, a];
		case 1:
			return [q, br, p, a];
		case 2:
			return [p, br, t, a];
		case 3:
			return [p, q, br, a];
		case 4:
			return [t, p, br, a];
		default:
			return [br, p, q, a];
	}
};

Color.parseHSL = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var h = hsb[0] / 60;
	var s = hsb[1] / 100;
	var l = hsb[2] / 100;
	var a = hsb[3];

	var c = (1 - Math.abs(2 * l - 1)) * s;
	var x = c * (1 - Math.abs(h % 2 - 1));
	var m = l - c / 2;

	var p = Math.round((c + m) * 255);
	var q = Math.round((x + m) * 255);
	var t = Math.round(m * 255);

	switch (Math.floor(h)) {
		case 0:
			return [p, q, t, a];
		case 1:
			return [q, p, t, a];
		case 2:
			return [t, p, q, a];
		case 3:
			return [t, q, p, a];
		case 4:
			return [q, t, p, a];
		default:
			return [p, t, q, a];
	}
};

var toString = function toString(type, array) {
	if (array[3] != 1) type += 'a';else array.pop();
	return type + '(' + array.join(', ') + ')';
};

Color.prototype = {

	toHSB: function toHSB(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / max : 0,
		    brightness = max / 255;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];

		return array ? hsb : toString('hsb', hsb);
	},

	toHSL: function toHSL(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / (255 - Math.abs(max + min - 255)) : 0,
		    lightness = (max + min) / 512;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];

		return array ? hsl : toString('hsl', hsl);
	},

	toHEX: function toHEX(array) {

		var a = this.alpha;
		var alpha = (a = Math.round(a * 255).toString(16)).length == 1 ? a + a : a;

		var hex = map([this.red, this.green, this.blue], function (bit) {
			bit = bit.toString(16);
			return bit.length == 1 ? '0' + bit : bit;
		});

		return array ? hex.concat(alpha) : '#' + hex.join('') + (alpha == 'ff' ? '' : alpha);
	},

	toRGB: function toRGB(array) {
		var rgb = [this.red, this.green, this.blue, this.alpha];
		return array ? rgb : toString('rgb', rgb);
	}

};

Color.prototype.toString = Color.prototype.toRGB;

Color.hex = function (hex) {
	return new Color(hex, 'hex');
};

if (this.hex == null) this.hex = Color.hex;

Color.hsb = function (h, s, b, a) {
	return new Color([h || 0, s || 0, b || 0, a == null ? 1 : a], 'hsb');
};

if (this.hsb == null) this.hsb = Color.hsb;

Color.hsl = function (h, s, l, a) {
	return new Color([h || 0, s || 0, l || 0, a == null ? 1 : a], 'hsl');
};

if (this.hsl == null) this.hsl = Color.hsl;

Color.rgb = function (r, g, b, a) {
	return new Color([r || 0, g || 0, b || 0, a == null ? 1 : a], 'rgb');
};

if (this.rgb == null) this.rgb = Color.rgb;

Color.detach = function (color) {
	color = new Color(color);
	return [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];
};

module.exports = Color;
}, 283, null, "art/core/color.js");
__d(/* ARTSerializablePath */function(global, require, module, exports) {
'use strict';

var Class = require(285                ); // 285 = art/core/class.js
var Path = require(286               ); // 286 = art/core/path.js

var MOVE_TO = 0;
var CLOSE = 1;
var LINE_TO = 2;
var CURVE_TO = 3;
var ARC = 4;

var SerializablePath = Class(Path, {

  initialize: function initialize(path) {
    this.reset();
    if (path instanceof SerializablePath) {
      this.path = path.path.slice(0);
    } else if (path) {
      if (path.applyToPath) {
        path.applyToPath(this);
      } else {
        this.push(path);
      }
    }
  },

  onReset: function onReset() {
    this.path = [];
  },

  onMove: function onMove(sx, sy, x, y) {
    this.path.push(MOVE_TO, x, y);
  },

  onLine: function onLine(sx, sy, x, y) {
    this.path.push(LINE_TO, x, y);
  },

  onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {
    this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);
  },

  _arcToBezier: Path.prototype.onArc,

  onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
    if (rx !== ry || rotation) {
      return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);
    }
    this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);
  },

  onClose: function onClose() {
    this.path.push(CLOSE);
  },

  toJSON: function toJSON() {
    return this.path;
  }

});

module.exports = SerializablePath;
}, 284, null, "ARTSerializablePath");
__d(/* art/core/class.js */function(global, require, module, exports) {module.exports = function (mixins) {
	var proto = {};
	for (var i = 0, l = arguments.length; i < l; i++) {
		var mixin = arguments[i];
		if (typeof mixin == 'function') mixin = mixin.prototype;
		for (var key in mixin) {
			proto[key] = mixin[key];
		}
	}
	if (!proto.initialize) proto.initialize = function () {};
	proto.constructor = function (a, b, c, d, e, f, g, h) {
		return new proto.initialize(a, b, c, d, e, f, g, h);
	};
	proto.constructor.prototype = proto.initialize.prototype = proto;
	return proto.constructor;
};
}, 285, null, "art/core/class.js");
__d(/* art/core/path.js */function(global, require, module, exports) {var Class = require(285      ); // 285 = ./class

module.exports = Class({

	initialize: function initialize(path) {
		this.reset().push(path);
	},

	push: function push() {
		var p = Array.prototype.join.call(arguments, ' ').match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
		if (!p) return this;

		var last,
		    cmd = p[0],
		    i = 1;
		while (cmd) {
			switch (cmd) {
				case 'm':
					this.move(p[i++], p[i++]);break;
				case 'l':
					this.line(p[i++], p[i++]);break;
				case 'c':
					this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 's':
					this.curve(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'q':
					this.curve(p[i++], p[i++], p[i++], p[i++]);break;
				case 't':
					this.curve(p[i++], p[i++]);break;
				case 'a':
					this.arc(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'h':
					this.line(p[i++], 0);break;
				case 'v':
					this.line(0, p[i++]);break;

				case 'M':
					this.moveTo(p[i++], p[i++]);break;
				case 'L':
					this.lineTo(p[i++], p[i++]);break;
				case 'C':
					this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 'S':
					this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'Q':
					this.curveTo(p[i++], p[i++], p[i++], p[i++]);break;
				case 'T':
					this.curveTo(p[i++], p[i++]);break;
				case 'A':
					this.arcTo(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'H':
					this.lineTo(p[i++], this.penY);break;
				case 'V':
					this.lineTo(this.penX, p[i++]);break;

				case 'Z':case 'z':
					this.close();break;
				default:
					cmd = last;i--;continue;
			}

			last = cmd;
			if (last == 'm') last = 'l';else if (last == 'M') last = 'L';
			cmd = p[i++];
		}
		return this;
	},

	reset: function reset() {
		this.penX = this.penY = 0;
		this.penDownX = this.penDownY = null;
		this._pivotX = this._pivotY = 0;
		this.onReset();
		return this;
	},

	move: function move(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX += +x, this._pivotY = this.penY += +y);
		return this;
	},
	moveTo: function moveTo(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	line: function line(x, y) {
		return this.lineTo(this.penX + +x, this.penY + +y);
	},
	lineTo: function lineTo(x, y) {
		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onLine(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	curve: function curve(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		return this.curveTo(x + +c1x, y + +c1y, c2x == null ? null : x + +c2x, c2y == null ? null : y + +c2y, ex == null ? null : x + +ex, ey == null ? null : y + +ey);
	},
	curveTo: function curveTo(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		if (c2x == null) {
			c2x = +c1x;c2y = +c1y;
			c1x = x * 2 - (this._pivotX || 0);c1y = y * 2 - (this._pivotY || 0);
		}
		if (ex == null) {
			this._pivotX = +c1x;this._pivotY = +c1y;
			ex = +c2x;ey = +c2y;
			c2x = (ex + +c1x * 2) / 3;c2y = (ey + +c1y * 2) / 3;
			c1x = (x + +c1x * 2) / 3;c1y = (y + +c1y * 2) / 3;
		} else {
			this._pivotX = +c2x;this._pivotY = +c2y;
		}
		if (this.penDownX == null) {
			this.penDownX = x;this.penDownY = y;
		}
		this.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);
		return this;
	},

	arc: function arc(x, y, rx, ry, outer, counterClockwise, rotation) {
		return this.arcTo(this.penX + +x, this.penY + +y, rx, ry, outer, counterClockwise, rotation);
	},
	arcTo: function arcTo(x, y, rx, ry, outer, counterClockwise, rotation) {
		ry = Math.abs(+ry || +rx || +y - this.penY);
		rx = Math.abs(+rx || +x - this.penX);

		if (!rx || !ry || x == this.penX && y == this.penY) return this.lineTo(x, y);

		var tX = this.penX,
		    tY = this.penY,
		    clockwise = !+counterClockwise,
		    large = !!+outer;

		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad);
		x -= tX;y -= tY;

		var cx = cos * x / 2 + sin * y / 2,
		    cy = -sin * x / 2 + cos * y / 2,
		    rxry = rx * rx * ry * ry,
		    rycx = ry * ry * cx * cx,
		    rxcy = rx * rx * cy * cy,
		    a = rxry - rxcy - rycx;

		if (a < 0) {
			a = Math.sqrt(1 - a / rxry);
			rx *= a;ry *= a;
			cx = x / 2;cy = y / 2;
		} else {
			a = Math.sqrt(a / (rxcy + rycx));
			if (large == clockwise) a = -a;
			var cxd = -a * cy * rx / ry,
			    cyd = a * cx * ry / rx;
			cx = cos * cxd - sin * cyd + x / 2;
			cy = sin * cxd + cos * cyd + y / 2;
		}

		var xx = cos / rx,
		    yx = sin / rx,
		    xy = -sin / ry,
		    yy = cos / ry;

		var sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),
		    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));

		cx += tX;cy += tY;
		x += tX;y += tY;

		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onArc(tX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y, cx, cy, rx, ry, sa, ea, !clockwise, rotation);
		return this;
	},

	counterArc: function counterArc(x, y, rx, ry, outer) {
		return this.arc(x, y, rx, ry, outer, true);
	},
	counterArcTo: function counterArcTo(x, y, rx, ry, outer) {
		return this.arcTo(x, y, rx, ry, outer, true);
	},

	close: function close() {
		if (this.penDownX != null) {
			this.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);
			this.penDownX = null;
		}
		return this;
	},

	onReset: function onReset() {},

	onMove: function onMove(sx, sy, ex, ey) {},

	onLine: function onLine(sx, sy, ex, ey) {
		this.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);
	},

	onBezierCurve: function onBezierCurve(sx, sy, c1x, c1y, c2x, c2y, ex, ey) {
		var gx = ex - sx,
		    gy = ey - sy,
		    g = gx * gx + gy * gy,
		    v1,
		    v2,
		    cx,
		    cy,
		    u;

		cx = c1x - sx;cy = c1y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v1 = cx * cx + cy * cy;

		cx = c2x - sx;cy = c2y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v2 = cx * cx + cy * cy;

		if (v1 < 0.01 && v2 < 0.01) {
			this.onLine(sx, sy, ex, ey);
			return;
		}

		if (isNaN(v1) || isNaN(v2)) {
			throw new Error('Bad input');
		}

		var s1x = (c1x + c2x) * 0.5,
		    s1y = (c1y + c2y) * 0.5,
		    l1x = (c1x + sx) * 0.5,
		    l1y = (c1y + sy) * 0.5,
		    l2x = (l1x + s1x) * 0.5,
		    l2y = (l1y + s1y) * 0.5,
		    r2x = (ex + c2x) * 0.5,
		    r2y = (ey + c2y) * 0.5,
		    r1x = (r2x + s1x) * 0.5,
		    r1y = (r2y + s1y) * 0.5,
		    l2r1x = (l2x + r1x) * 0.5,
		    l2r1y = (l2y + r1y) * 0.5;

		this.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);
		this.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);
	},

	onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad),
		    xx = cos * rx,
		    yx = -sin * ry,
		    xy = sin * rx,
		    yy = cos * ry;

		var arc = ea - sa;
		if (arc < 0 && !ccw) arc += Math.PI * 2;else if (arc > 0 && ccw) arc -= Math.PI * 2;

		var n = Math.ceil(Math.abs(arc / (Math.PI / 2))),
		    step = arc / n,
		    k = 4 / 3 * Math.tan(step / 4);

		var x = Math.cos(sa),
		    y = Math.sin(sa);

		for (var i = 0; i < n; i++) {
			var cp1x = x - k * y,
			    cp1y = y + k * x;

			sa += step;
			x = Math.cos(sa);y = Math.sin(sa);

			var cp2x = x + k * y,
			    cp2y = y - k * x;

			this.onBezierCurve(sx, sy, cx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y, cx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y, sx = cx + xx * x + yx * y, sy = cy + xy * x + yy * y);
		}
	},

	onClose: function onClose(sx, sy, ex, ey) {
		this.onLine(sx, sy, ex, ey);
	}

});
}, 286, null, "art/core/path.js");
__d(/* art/core/transform.js */function(global, require, module, exports) {var Class = require(285      ); // 285 = ./class

function Transform(xx, yx, xy, yy, x, y) {
	if (xx && typeof xx == 'object') {
		yx = xx.yx;yy = xx.yy;y = xx.y;
		xy = xx.xy;x = xx.x;xx = xx.xx;
	}
	this.xx = xx == null ? 1 : xx;
	this.yx = yx || 0;
	this.xy = xy || 0;
	this.yy = yy == null ? 1 : yy;
	this.x = (x == null ? this.x : x) || 0;
	this.y = (y == null ? this.y : y) || 0;
	this._transform();
	return this;
};

module.exports = Class({

	initialize: Transform,

	_transform: function _transform() {},

	xx: 1, yx: 0, x: 0,
	xy: 0, yy: 1, y: 0,

	transform: function transform(xx, yx, xy, yy, x, y) {
		var m = this;
		if (xx && typeof xx == 'object') {
			yx = xx.yx;yy = xx.yy;y = xx.y;
			xy = xx.xy;x = xx.x;xx = xx.xx;
		}
		if (!x) x = 0;
		if (!y) y = 0;
		return this.transformTo(m.xx * xx + m.xy * yx, m.yx * xx + m.yy * yx, m.xx * xy + m.xy * yy, m.yx * xy + m.yy * yy, m.xx * x + m.xy * y + m.x, m.yx * x + m.yy * y + m.y);
	},

	transformTo: Transform,

	translate: function translate(x, y) {
		return this.transform(1, 0, 0, 1, x, y);
	},

	move: function move(x, y) {
		this.x += x || 0;
		this.y += y || 0;
		this._transform();
		return this;
	},

	scale: function scale(x, y) {
		if (y == null) y = x;
		return this.transform(x, 0, 0, y, 0, 0);
	},

	rotate: function rotate(deg, x, y) {
		if (x == null || y == null) {
			x = (this.left || 0) + (this.width || 0) / 2;
			y = (this.top || 0) + (this.height || 0) / 2;
		}

		var rad = deg * Math.PI / 180,
		    sin = Math.sin(rad),
		    cos = Math.cos(rad);

		this.transform(1, 0, 0, 1, x, y);
		var m = this;

		return this.transformTo(cos * m.xx - sin * m.yx, sin * m.xx + cos * m.yx, cos * m.xy - sin * m.yy, sin * m.xy + cos * m.yy, m.x, m.y).transform(1, 0, 0, 1, -x, -y);
	},

	moveTo: function moveTo(x, y) {
		var m = this;
		return this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);
	},

	rotateTo: function rotateTo(deg, x, y) {
		var m = this;
		var flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;
		if (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;
		return this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);
	},

	scaleTo: function scaleTo(x, y) {
		var m = this;

		var h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);
		m.xx /= h;m.yx /= h;

		h = Math.sqrt(m.yy * m.yy + m.xy * m.xy);
		m.yy /= h;m.xy /= h;

		return this.scale(x, y);
	},

	resizeTo: function resizeTo(width, height) {
		var w = this.width,
		    h = this.height;
		if (!w || !h) return this;
		return this.scaleTo(width / w, height / h);
	},

	inversePoint: function inversePoint(x, y) {
		var a = this.xx,
		    b = this.yx,
		    c = this.xy,
		    d = this.yy,
		    e = this.x,
		    f = this.y;
		var det = b * c - a * d;
		if (det == 0) return null;
		return {
			x: (d * (e - x) + c * (y - f)) / det,
			y: (a * (f - y) + b * (x - e)) / det
		};
	},

	point: function point(x, y) {
		var m = this;
		return {
			x: m.xx * x + m.xy * y + m.x,
			y: m.yx * x + m.yy * y + m.y
		};
	}

});
}, 287, null, "art/core/transform.js");
__d(/* Button */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Button.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var TouchableNativeFeedback = require(296                      ); // 296 = TouchableNativeFeedback
var TouchableOpacity = require(300               ); // 300 = TouchableOpacity
var View = require(234   ); // 234 = View

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var Button = function (_React$Component) {
  babelHelpers.inherits(Button, _React$Component);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          accessibilityLabel = _props.accessibilityLabel,
          color = _props.color,
          onPress = _props.onPress,
          title = _props.title,
          disabled = _props.disabled,
          testID = _props.testID;

      var buttonStyles = [styles.button];
      var textStyles = [styles.text];
      var Touchable = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;
      if (color && Platform.OS === 'ios') {
        textStyles.push({ color: color });
      } else if (color) {
        buttonStyles.push({ backgroundColor: color });
      }
      if (disabled) {
        buttonStyles.push(styles.buttonDisabled);
        textStyles.push(styles.textDisabled);
      }
      invariant(typeof title === 'string', 'The title prop of a Button must be a string');
      var formattedTitle = Platform.OS === 'android' ? title.toUpperCase() : title;
      var accessibilityTraits = ['button'];
      if (disabled) {
        accessibilityTraits.push('disabled');
      }
      return React.createElement(
        Touchable,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: accessibilityLabel,
          accessibilityTraits: accessibilityTraits,
          testID: testID,
          disabled: disabled,
          onPress: onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 119
          }
        },
        React.createElement(
          View,
          { style: buttonStyles, __source: {
              fileName: _jsxFileName,
              lineNumber: 126
            }
          },
          React.createElement(
            Text,
            { style: textStyles, __source: {
                fileName: _jsxFileName,
                lineNumber: 127
              }
            },
            formattedTitle
          )
        )
      );
    }
  }]);
  return Button;
}(React.Component);

Button.propTypes = {
  title: React.PropTypes.string.isRequired,

  accessibilityLabel: React.PropTypes.string,

  color: ColorPropType,

  disabled: React.PropTypes.bool,

  onPress: React.PropTypes.func.isRequired,

  testID: React.PropTypes.string
};

var defaultBlue = '#2196F3';
if (Platform.OS === 'ios') {
  defaultBlue = '#0C42FD';
}

var styles = StyleSheet.create({
  button: Platform.select({
    ios: {},
    android: {
      elevation: 4,
      backgroundColor: defaultBlue,
      borderRadius: 2
    }
  }),
  text: Platform.select({
    ios: {
      color: defaultBlue,
      textAlign: 'center',
      padding: 8,
      fontSize: 18
    },
    android: {
      textAlign: 'center',
      color: 'white',
      padding: 8,
      fontWeight: '500'
    }
  }),
  buttonDisabled: Platform.select({
    ios: {},
    android: {
      elevation: 0,
      backgroundColor: '#dfdfdf'
    }
  }),
  textDisabled: Platform.select({
    ios: {
      color: '#cdcdcd'
    },
    android: {
      color: '#a1a1a1'
    }
  })
});

module.exports = Button;
}, 288, null, "Button");
__d(/* Text */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Text\\Text.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var EdgeInsetsPropType = require(252                 ); // 252 = EdgeInsetsPropType
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var ReactNativeViewAttributes = require(250                        ); // 250 = ReactNativeViewAttributes
var StyleSheetPropType = require(257                 ); // 257 = StyleSheetPropType
var TextStylePropTypes = require(244                 ); // 244 = TextStylePropTypes
var Touchable = require(290        ); // 290 = Touchable

var processColor = require(246           ); // 246 = processColor
var createReactNativeComponentClass = require(267                              ); // 267 = createReactNativeComponentClass
var mergeFast = require(295        ); // 295 = mergeFast

var PropTypes = React.PropTypes;


var stylePropType = StyleSheetPropType(TextStylePropTypes);

var viewConfig = {
  validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
    isHighlighted: true,
    numberOfLines: true,
    ellipsizeMode: true,
    allowFontScaling: true,
    selectable: true,
    selectionColor: true,
    adjustsFontSizeToFit: true,
    minimumFontScale: true,
    textBreakStrategy: true
  }),
  uiViewClassName: 'RCTText'
};

var Text = React.createClass({
  displayName: 'Text',

  propTypes: {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),

    numberOfLines: PropTypes.number,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onLayout: PropTypes.func,

    onPress: PropTypes.func,

    onLongPress: PropTypes.func,

    pressRetentionOffset: EdgeInsetsPropType,

    selectable: PropTypes.bool,

    selectionColor: ColorPropType,

    suppressHighlighting: PropTypes.bool,
    style: stylePropType,

    testID: PropTypes.string,

    allowFontScaling: PropTypes.bool,

    accessible: PropTypes.bool,

    adjustsFontSizeToFit: PropTypes.bool,

    minimumFontScale: PropTypes.number
  },
  getDefaultProps: function getDefaultProps() {
    return {
      accessible: true,
      allowFontScaling: true,
      ellipsizeMode: 'tail'
    };
  },

  getInitialState: function getInitialState() {
    return mergeFast(Touchable.Mixin.touchableGetInitialState(), {
      isHighlighted: false
    });
  },
  mixins: [NativeMethodsMixin],
  viewConfig: viewConfig,
  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },
  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  _handlers: null,
  _hasPressHandler: function _hasPressHandler() {
    return !!this.props.onPress || !!this.props.onLongPress;
  },

  touchableHandleActivePressIn: null,
  touchableHandleActivePressOut: null,
  touchableHandlePress: null,
  touchableHandleLongPress: null,
  touchableGetPressRectOffset: null,
  render: function render() {
    var _this = this;

    var newProps = this.props;
    if (this.props.onStartShouldSetResponder || this._hasPressHandler()) {
      if (!this._handlers) {
        this._handlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            var shouldSetFromProps = _this.props.onStartShouldSetResponder && _this.props.onStartShouldSetResponder();
            var setResponder = shouldSetFromProps || _this._hasPressHandler();
            if (setResponder && !_this.touchableHandleActivePressIn) {
              for (var key in Touchable.Mixin) {
                if (typeof Touchable.Mixin[key] === 'function') {
                  _this[key] = Touchable.Mixin[key].bind(_this);
                }
              }
              _this.touchableHandleActivePressIn = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: true
                });
              };

              _this.touchableHandleActivePressOut = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: false
                });
              };

              _this.touchableHandlePress = function (e) {
                _this.props.onPress && _this.props.onPress(e);
              };

              _this.touchableHandleLongPress = function (e) {
                _this.props.onLongPress && _this.props.onLongPress(e);
              };

              _this.touchableGetPressRectOffset = function () {
                return this.props.pressRetentionOffset || PRESS_RECT_OFFSET;
              };
            }

            return setResponder;
          },
          onResponderGrant: function (e, dispatchID) {
            this.touchableHandleResponderGrant(e, dispatchID);
            this.props.onResponderGrant && this.props.onResponderGrant.apply(this, arguments);
          }.bind(this),
          onResponderMove: function (e) {
            this.touchableHandleResponderMove(e);
            this.props.onResponderMove && this.props.onResponderMove.apply(this, arguments);
          }.bind(this),
          onResponderRelease: function (e) {
            this.touchableHandleResponderRelease(e);
            this.props.onResponderRelease && this.props.onResponderRelease.apply(this, arguments);
          }.bind(this),
          onResponderTerminate: function (e) {
            this.touchableHandleResponderTerminate(e);
            this.props.onResponderTerminate && this.props.onResponderTerminate.apply(this, arguments);
          }.bind(this),
          onResponderTerminationRequest: function () {
            var allowTermination = this.touchableHandleResponderTerminationRequest();
            if (allowTermination && this.props.onResponderTerminationRequest) {
              allowTermination = this.props.onResponderTerminationRequest.apply(this, arguments);
            }
            return allowTermination;
          }.bind(this)
        };
      }
      newProps = babelHelpers.extends({}, this.props, this._handlers, {
        isHighlighted: this.state.isHighlighted
      });
    }
    if (newProps.selectionColor != null) {
      newProps = babelHelpers.extends({}, newProps, {
        selectionColor: processColor(newProps.selectionColor)
      });
    }
    if (Touchable.TOUCH_TARGET_DEBUG && newProps.onPress) {
      newProps = babelHelpers.extends({}, newProps, {
        style: [this.props.style, { color: 'magenta' }]
      });
    }
    if (this.context.isInAParentText) {
      return React.createElement(RCTVirtualText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 356
        }
      }));
    } else {
      return React.createElement(RCTText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 358
        }
      }));
    }
  }
});

var PRESS_RECT_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var RCTText = createReactNativeComponentClass(viewConfig);
var RCTVirtualText = RCTText;

if (Platform.OS === 'android') {
  RCTVirtualText = createReactNativeComponentClass({
    validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
      isHighlighted: true
    }),
    uiViewClassName: 'RCTVirtualText'
  });
}

module.exports = Text;
}, 289, null, "Text");
__d(/* Touchable */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Touchable\\Touchable.js';
var BoundingDimensions = require(291                 ); // 291 = BoundingDimensions
var Platform = require(61        ); // 61 = Platform
var Position = require(292       ); // 292 = Position
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var TVEventHandler = require(293             ); // 293 = TVEventHandler
var TouchEventUtils = require(294                       ); // 294 = fbjs/lib/TouchEventUtils
var UIManager = require(78         ); // 78 = UIManager
var View = require(234   ); // 234 = View

var keyMirror = require(239                 ); // 239 = fbjs/lib/keyMirror
var normalizeColor = require(83              ); // 83 = normalizeColor

var States = keyMirror({
  NOT_RESPONDER: null,
  RESPONDER_INACTIVE_PRESS_IN: null,
  RESPONDER_INACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_PRESS_IN: null,
  RESPONDER_ACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_LONG_PRESS_IN: null,
  RESPONDER_ACTIVE_LONG_PRESS_OUT: null,
  ERROR: null
});

var IsActive = {
  RESPONDER_ACTIVE_PRESS_OUT: true,
  RESPONDER_ACTIVE_PRESS_IN: true
};

var IsPressingIn = {
  RESPONDER_INACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var IsLongPressingIn = {
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var Signals = keyMirror({
  DELAY: null,
  RESPONDER_GRANT: null,
  RESPONDER_RELEASE: null,
  RESPONDER_TERMINATED: null,
  ENTER_PRESS_RECT: null,
  LEAVE_PRESS_RECT: null,
  LONG_PRESS_DETECTED: null
});

var Transitions = {
  NOT_RESPONDER: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.ERROR,
    RESPONDER_TERMINATED: States.ERROR,
    ENTER_PRESS_RECT: States.ERROR,
    LEAVE_PRESS_RECT: States.ERROR,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_IN: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_OUT: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_LONG_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_LONG_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  error: {
    DELAY: States.NOT_RESPONDER,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.NOT_RESPONDER,
    LEAVE_PRESS_RECT: States.NOT_RESPONDER,
    LONG_PRESS_DETECTED: States.NOT_RESPONDER
  }
};

var HIGHLIGHT_DELAY_MS = 130;

var PRESS_EXPAND_PX = 20;

var LONG_PRESS_THRESHOLD = 500;

var LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT = 10;

var TouchableMixin = {
  componentDidMount: function componentDidMount() {
    if (!Platform.isTVOS) {
      return;
    }

    this._tvEventHandler = new TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      var myTag = ReactNative.findNodeHandle(cmp);
      evt.dispatchConfig = {};
      if (myTag === evt.tag) {
        if (evt.eventType === 'focus') {
          cmp.touchableHandleActivePressIn && cmp.touchableHandleActivePressIn(evt);
        } else if (evt.eventType === 'blur') {
          cmp.touchableHandleActivePressOut && cmp.touchableHandleActivePressOut(evt);
        } else if (evt.eventType === 'select') {
          cmp.touchableHandlePress && cmp.touchableHandlePress(evt);
        }
      }
    });
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
  },

  touchableGetInitialState: function touchableGetInitialState() {
    return {
      touchable: { touchState: undefined, responderID: null }
    };
  },

  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {
    return !this.props.rejectResponderTermination;
  },

  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {
    return !this.props.disabled;
  },

  touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {
    return true;
  },

  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
    var dispatchID = e.currentTarget;

    e.persist();

    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
    this.pressOutDelayTimeout = null;

    this.state.touchable.touchState = States.NOT_RESPONDER;
    this.state.touchable.responderID = dispatchID;
    this._receiveSignal(Signals.RESPONDER_GRANT, e);
    var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;
    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;
    if (delayMS !== 0) {
      this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);
    } else {
      this._handleDelay(e);
    }

    var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;
    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;
    this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);
  },

  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
    this._receiveSignal(Signals.RESPONDER_RELEASE, e);
  },

  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);
  },

  touchableHandleResponderMove: function touchableHandleResponderMove(e) {
    if (this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN) {
      return;
    }

    if (!this.state.touchable.positionOnActivate) {
      return;
    }

    var positionOnActivate = this.state.touchable.positionOnActivate;
    var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;
    var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {
      left: PRESS_EXPAND_PX,
      right: PRESS_EXPAND_PX,
      top: PRESS_EXPAND_PX,
      bottom: PRESS_EXPAND_PX
    };

    var pressExpandLeft = pressRectOffset.left;
    var pressExpandTop = pressRectOffset.top;
    var pressExpandRight = pressRectOffset.right;
    var pressExpandBottom = pressRectOffset.bottom;

    var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;

    if (hitSlop) {
      pressExpandLeft += hitSlop.left;
      pressExpandTop += hitSlop.top;
      pressExpandRight += hitSlop.right;
      pressExpandBottom += hitSlop.bottom;
    }

    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;

    if (this.pressInLocation) {
      var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {
        this._cancelLongPressDelayTimeout();
      }
    }

    var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;
    if (isTouchWithinActive) {
      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);
      var curState = this.state.touchable.touchState;
      if (curState === States.RESPONDER_INACTIVE_PRESS_IN) {
        this._cancelLongPressDelayTimeout();
      }
    } else {
      this._cancelLongPressDelayTimeout();
      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);
    }
  },

  _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {
    var tag = this.state.touchable.responderID;
    if (tag == null) {
      return;
    }

    UIManager.measure(tag, this._handleQueryLayout);
  },

  _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {
    if (!l && !t && !w && !h && !globalX && !globalY) {
      return;
    }
    this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);
    this.state.touchable.dimensionsOnActivate && BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
    this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);
  },

  _handleDelay: function _handleDelay(e) {
    this.touchableDelayTimeout = null;
    this._receiveSignal(Signals.DELAY, e);
  },

  _handleLongDelay: function _handleLongDelay(e) {
    this.longPressDelayTimeout = null;
    var curState = this.state.touchable.touchState;
    if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {
      console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');
    } else {
      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);
    }
  },

  _receiveSignal: function _receiveSignal(signal, e) {
    var responderID = this.state.touchable.responderID;
    var curState = this.state.touchable.touchState;
    var nextState = Transitions[curState] && Transitions[curState][signal];
    if (!responderID && signal === Signals.RESPONDER_RELEASE) {
      return;
    }
    if (!nextState) {
      throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');
    }
    if (nextState === States.ERROR) {
      throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');
    }
    if (curState !== nextState) {
      this._performSideEffectsForTransition(curState, nextState, signal, e);
      this.state.touchable.touchState = nextState;
    }
  },

  _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.longPressDelayTimeout = null;
  },

  _isHighlight: function _isHighlight(state) {
    return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;
  },

  _savePressInLocation: function _savePressInLocation(e) {
    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;
    var locationX = touch && touch.locationX;
    var locationY = touch && touch.locationY;
    this.pressInLocation = { pageX: pageX, pageY: pageY, locationX: locationX, locationY: locationY };
  },

  _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {
    var deltaX = aX - bX;
    var deltaY = aY - bY;
    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
  },

  _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {
    var curIsHighlight = this._isHighlight(curState);
    var newIsHighlight = this._isHighlight(nextState);

    var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;

    if (isFinalSignal) {
      this._cancelLongPressDelayTimeout();
    }

    if (!IsActive[curState] && IsActive[nextState]) {
      this._remeasureMetricsOnActivation();
    }

    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {
      this.touchableHandleLongPress && this.touchableHandleLongPress(e);
    }

    if (newIsHighlight && !curIsHighlight) {
      this._startHighlight(e);
    } else if (!newIsHighlight && curIsHighlight) {
      this._endHighlight(e);
    }

    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {
      var hasLongPressHandler = !!this.props.onLongPress;
      var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());

      var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
      if (shouldInvokePress && this.touchableHandlePress) {
        if (!newIsHighlight && !curIsHighlight) {
          this._startHighlight(e);
          this._endHighlight(e);
        }
        this.touchableHandlePress(e);
      }
    }

    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.touchableDelayTimeout = null;
  },

  _startHighlight: function _startHighlight(e) {
    this._savePressInLocation(e);
    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);
  },

  _endHighlight: function _endHighlight(e) {
    var _this = this;

    if (this.touchableHandleActivePressOut) {
      if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {
        this.pressOutDelayTimeout = setTimeout(function () {
          _this.touchableHandleActivePressOut(e);
        }, this.touchableGetPressOutDelayMS());
      } else {
        this.touchableHandleActivePressOut(e);
      }
    }
  }

};

var Touchable = {
  Mixin: TouchableMixin,
  TOUCH_TARGET_DEBUG: false,
  renderDebugView: function renderDebugView(_ref) {
    var color = _ref.color,
        hitSlop = _ref.hitSlop;

    if (!Touchable.TOUCH_TARGET_DEBUG) {
      return null;
    }
    if (!__DEV__) {
      throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');
    }
    var debugHitSlopStyle = {};
    hitSlop = hitSlop || { top: 0, bottom: 0, left: 0, right: 0 };
    for (var key in hitSlop) {
      debugHitSlopStyle[key] = -hitSlop[key];
    }
    var hexColor = '#' + ('00000000' + normalizeColor(color).toString(16)).substr(-8);
    return React.createElement(View, {
      pointerEvents: 'none',
      style: babelHelpers.extends({
        position: 'absolute',
        borderColor: hexColor.slice(0, -2) + '55',
        borderWidth: 1,
        borderStyle: 'dashed',
        backgroundColor: hexColor.slice(0, -2) + '0F' }, debugHitSlopStyle),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 793
      }
    });
  }
};

module.exports = Touchable;
}, 290, null, "Touchable");
__d(/* BoundingDimensions */function(global, require, module, exports) {

'use strict';

var PooledClass = require(25                     ); // 25 = react/lib/PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function BoundingDimensions(width, height) {
  this.width = width;
  this.height = height;
}

BoundingDimensions.prototype.destructor = function () {
  this.width = null;
  this.height = null;
};

BoundingDimensions.getPooledFromElement = function (element) {
  return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);
};

PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);

module.exports = BoundingDimensions;
}, 291, null, "BoundingDimensions");
__d(/* Position */function(global, require, module, exports) {

'use strict';

var PooledClass = require(25                     ); // 25 = react/lib/PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function Position(left, top) {
  this.left = left;
  this.top = top;
}

Position.prototype.destructor = function () {
  this.left = null;
  this.top = null;
};

PooledClass.addPoolingTo(Position, twoArgumentPooler);

module.exports = Position;
}, 292, null, "Position");
__d(/* TVEventHandler */function(global, require, module, exports) {
'use strict';

function TVEventHandler() {}

TVEventHandler.prototype.enable = function (component, callback) {};

TVEventHandler.prototype.disable = function () {};

module.exports = TVEventHandler;
}, 293, null, "TVEventHandler");
__d(/* fbjs/lib/TouchEventUtils.js */function(global, require, module, exports) {"use strict";

var TouchEventUtils = {
  extractSingleTouch: function extractSingleTouch(nativeEvent) {
    var touches = nativeEvent.touches;
    var changedTouches = nativeEvent.changedTouches;
    var hasTouches = touches && touches.length > 0;
    var hasChangedTouches = changedTouches && changedTouches.length > 0;

    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
  }
};

module.exports = TouchEventUtils;
}, 294, null, "fbjs/lib/TouchEventUtils.js");
__d(/* mergeFast */function(global, require, module, exports) {
'use strict';

var mergeFast = function mergeFast(one, two) {
  var ret = {};
  for (var keyOne in one) {
    ret[keyOne] = one[keyOne];
  }
  for (var keyTwo in two) {
    ret[keyTwo] = two[keyTwo];
  }
  return ret;
};

module.exports = mergeFast;
}, 295, null, "mergeFast");
__d(/* TouchableNativeFeedback */function(global, require, module, exports) {
'use strict';

var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var Touchable = require(290        ); // 290 = Touchable
var TouchableWithoutFeedback = require(297                       ); // 297 = TouchableWithoutFeedback
var UIManager = require(78         ); // 78 = UIManager

var ensurePositiveDelayProps = require(299                       ); // 299 = ensurePositiveDelayProps
var processColor = require(246           ); // 246 = processColor

var PropTypes = React.PropTypes;

var rippleBackgroundPropType = PropTypes.shape({
  type: React.PropTypes.oneOf(['RippleAndroid']),
  color: PropTypes.number,
  borderless: PropTypes.bool
});

var themeAttributeBackgroundPropType = PropTypes.shape({
  type: React.PropTypes.oneOf(['ThemeAttrAndroid']),
  attribute: PropTypes.string.isRequired
});

var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableNativeFeedback = React.createClass({
  displayName: 'TouchableNativeFeedback',

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    background: backgroundPropType,

    useForeground: PropTypes.bool
  }),

  statics: {
    SelectableBackground: function SelectableBackground() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackground' };
    },

    SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackgroundBorderless' };
    },

    Ripple: function Ripple(color, borderless) {
      return { type: 'RippleAndroid', color: processColor(color), borderless: borderless };
    },

    canUseNativeForeground: function canUseNativeForeground() {
      return Platform.OS === 'android' && Platform.Version >= 23;
    }
  },

  mixins: [Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return {
      background: this.SelectableBackground()
    };
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
    this._dispatchPressedStateChange(true);
    this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
    this._dispatchPressedStateChange(false);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _handleResponderMove: function _handleResponderMove(e) {
    this.touchableHandleResponderMove(e);
    this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);
  },

  _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.hotspotUpdate, [destX || 0, destY || 0]);
  },

  _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.setPressed, [pressed]);
  },

  render: function render() {
    var _babelHelpers$extends;

    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    if (Touchable.TOUCH_TARGET_DEBUG && child.type.displayName === 'View') {
      if (!Array.isArray(children)) {
        children = [children];
      }
      children.push(Touchable.renderDebugView({ color: 'brown', hitSlop: this.props.hitSlop }));
    }
    if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {
      console.warn('Requested foreground ripple, but it is not available on this version of Android. ' + 'Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different ' + 'Touchable if the result is false.');
    }
    var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';
    var childProps = babelHelpers.extends({}, child.props, (_babelHelpers$extends = {}, babelHelpers.defineProperty(_babelHelpers$extends, drawableProp, this.props.background), babelHelpers.defineProperty(_babelHelpers$extends, 'accessible', this.props.accessible !== false), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityLabel', this.props.accessibilityLabel), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityComponentType', this.props.accessibilityComponentType), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityTraits', this.props.accessibilityTraits), babelHelpers.defineProperty(_babelHelpers$extends, 'children', children), babelHelpers.defineProperty(_babelHelpers$extends, 'testID', this.props.testID), babelHelpers.defineProperty(_babelHelpers$extends, 'onLayout', this.props.onLayout), babelHelpers.defineProperty(_babelHelpers$extends, 'hitSlop', this.props.hitSlop), babelHelpers.defineProperty(_babelHelpers$extends, 'onStartShouldSetResponder', this.touchableHandleStartShouldSetResponder), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminationRequest', this.touchableHandleResponderTerminationRequest), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderGrant', this.touchableHandleResponderGrant), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderMove', this._handleResponderMove), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderRelease', this.touchableHandleResponderRelease), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminate', this.touchableHandleResponderTerminate), _babelHelpers$extends));

    return React.cloneElement(child, childProps);
  }
});

module.exports = TouchableNativeFeedback;
}, 296, null, "TouchableNativeFeedback");
__d(/* TouchableWithoutFeedback */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(252                 ); // 252 = EdgeInsetsPropType
var React = require(235    ); // 235 = React
var TimerMixin = require(298                ); // 298 = react-timer-mixin
var Touchable = require(290        ); // 290 = Touchable

var ensurePositiveDelayProps = require(299                       ); // 299 = ensurePositiveDelayProps
var warning = require(19                ); // 19 = fbjs/lib/warning

var _require = require(258                ), // 258 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableWithoutFeedback = React.createClass({
  displayName: 'TouchableWithoutFeedback',

  mixins: [TimerMixin, Touchable.Mixin],

  propTypes: {
    accessible: React.PropTypes.bool,
    accessibilityComponentType: React.PropTypes.oneOf(AccessibilityComponentTypes),
    accessibilityTraits: React.PropTypes.oneOfType([React.PropTypes.oneOf(AccessibilityTraits), React.PropTypes.arrayOf(React.PropTypes.oneOf(AccessibilityTraits))]),

    disabled: React.PropTypes.bool,

    onPress: React.PropTypes.func,
    onPressIn: React.PropTypes.func,
    onPressOut: React.PropTypes.func,

    onLayout: React.PropTypes.func,

    onLongPress: React.PropTypes.func,

    delayPressIn: React.PropTypes.number,

    delayPressOut: React.PropTypes.number,

    delayLongPress: React.PropTypes.number,

    pressRetentionOffset: EdgeInsetsPropType,

    hitSlop: EdgeInsetsPropType
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut || 0;
  },

  render: function render() {
    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    warning(!child.type || child.type.displayName !== 'Text', 'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See ' + (child._owner && child._owner.getName && child._owner.getName() || '<unknown>'));
    if (Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'View') {
      children = React.Children.toArray(children);
      children.push(Touchable.renderDebugView({ color: 'red', hitSlop: this.props.hitSlop }));
    }
    var style = Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'Text' ? [child.props.style, { color: 'red' }] : child.props.style;
    return React.cloneElement(child, {
      accessible: this.props.accessible !== false,

      accessibilityLabel: this.props.accessibilityLabel,
      accessibilityComponentType: this.props.accessibilityComponentType,
      accessibilityTraits: this.props.accessibilityTraits,

      testID: this.props.testID,
      onLayout: this.props.onLayout,
      hitSlop: this.props.hitSlop,
      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
      onResponderGrant: this.touchableHandleResponderGrant,
      onResponderMove: this.touchableHandleResponderMove,
      onResponderRelease: this.touchableHandleResponderRelease,
      onResponderTerminate: this.touchableHandleResponderTerminate,
      style: style,
      children: children
    });
  }
});

module.exports = TouchableWithoutFeedback;
}, 297, null, "TouchableWithoutFeedback");
__d(/* react-timer-mixin/TimerMixin.js */function(global, require, module, exports) {
'use strict';

var GLOBAL = typeof window === 'undefined' ? global : window;

var setter = function setter(_setter, _clearer, array) {
  return function (callback, delta) {
    var id = _setter(function () {
      _clearer.call(this, id);
      callback.apply(this, arguments);
    }.bind(this), delta);

    if (!this[array]) {
      this[array] = [id];
    } else {
      this[array].push(id);
    }
    return id;
  };
};

var clearer = function clearer(_clearer, array) {
  return function (id) {
    if (this[array]) {
      var index = this[array].indexOf(id);
      if (index !== -1) {
        this[array].splice(index, 1);
      }
    }
    _clearer(id);
  };
};

var _timeouts = 'TimerMixin_timeouts';
var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);
var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

var _intervals = 'TimerMixin_intervals';
var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);
var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

var _immediates = 'TimerMixin_immediates';
var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);
var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

var _rafs = 'TimerMixin_rafs';
var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);
var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

var TimerMixin = {
  componentWillUnmount: function componentWillUnmount() {
    this[_timeouts] && this[_timeouts].forEach(function (id) {
      GLOBAL.clearTimeout(id);
    });
    this[_timeouts] = null;
    this[_intervals] && this[_intervals].forEach(function (id) {
      GLOBAL.clearInterval(id);
    });
    this[_intervals] = null;
    this[_immediates] && this[_immediates].forEach(function (id) {
      GLOBAL.clearImmediate(id);
    });
    this[_immediates] = null;
    this[_rafs] && this[_rafs].forEach(function (id) {
      GLOBAL.cancelAnimationFrame(id);
    });
    this[_rafs] = null;
  },

  setTimeout: _setTimeout,
  clearTimeout: _clearTimeout,

  setInterval: _setInterval,
  clearInterval: _clearInterval,

  setImmediate: _setImmediate,
  clearImmediate: _clearImmediate,

  requestAnimationFrame: _requestAnimationFrame,
  cancelAnimationFrame: _cancelAnimationFrame
};

module.exports = TimerMixin;
}, 298, null, "react-timer-mixin/TimerMixin.js");
__d(/* ensurePositiveDelayProps */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var ensurePositiveDelayProps = function ensurePositiveDelayProps(props) {
  invariant(!(props.delayPressIn < 0 || props.delayPressOut < 0 || props.delayLongPress < 0), 'Touchable components cannot have negative delay properties');
};

module.exports = ensurePositiveDelayProps;
}, 299, null, "ensurePositiveDelayProps");
__d(/* TouchableOpacity */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Touchable\\TouchableOpacity.js';


var Animated = require(301       ); // 301 = Animated
var Easing = require(311     ); // 311 = Easing
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var React = require(235    ); // 235 = React
var TimerMixin = require(298                ); // 298 = react-timer-mixin
var Touchable = require(290        ); // 290 = Touchable
var TouchableWithoutFeedback = require(297                       ); // 297 = TouchableWithoutFeedback

var ensurePositiveDelayProps = require(299                       ); // 299 = ensurePositiveDelayProps
var flattenStyle = require(128           ); // 128 = flattenStyle

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableOpacity = React.createClass({
  displayName: 'TouchableOpacity',

  mixins: [TimerMixin, Touchable.Mixin, NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: React.PropTypes.number,
    focusedOpacity: React.PropTypes.number,

    tvParallaxProperties: React.PropTypes.object
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      activeOpacity: 0.2,
      focusedOpacity: 0.7
    };
  },

  getInitialState: function getInitialState() {
    return babelHelpers.extends({}, this.touchableGetInitialState(), {
      anim: new Animated.Value(this._getChildStyleOpacityWithDefault())
    });
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  setOpacityTo: function setOpacityTo(value, duration) {
    Animated.timing(this.state.anim, {
      toValue: value,
      duration: duration,
      easing: Easing.inOut(Easing.quad),
      useNativeDriver: true
    }).start();
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    if (e.dispatchConfig.registrationName === 'onResponderGrant') {
      this._opacityActive(0);
    } else {
      this._opacityActive(150);
    }
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this._opacityInactive(250);
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _opacityActive: function _opacityActive(duration) {
    this.setOpacityTo(this.props.activeOpacity, duration);
  },

  _opacityInactive: function _opacityInactive(duration) {
    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
  },

  _opacityFocused: function _opacityFocused() {
    this.setOpacityTo(this.props.focusedOpacity);
  },

  _getChildStyleOpacityWithDefault: function _getChildStyleOpacityWithDefault() {
    var childStyle = flattenStyle(this.props.style) || {};
    return childStyle.opacity == undefined ? 1 : childStyle.opacity;
  },

  render: function render() {
    return React.createElement(
      Animated.View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        style: [this.props.style, { opacity: this.state.anim }],
        testID: this.props.testID,
        onLayout: this.props.onLayout,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hitSlop: this.props.hitSlop,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate, __source: {
          fileName: _jsxFileName,
          lineNumber: 176
        }
      },
      this.props.children,
      Touchable.renderDebugView({ color: 'cyan', hitSlop: this.props.hitSlop })
    );
  }
});

module.exports = TouchableOpacity;
}, 300, null, "TouchableOpacity");
__d(/* Animated */function(global, require, module, exports) {
'use strict';

var AnimatedImplementation = require(302                     ); // 302 = AnimatedImplementation
var Image = require(313    ); // 313 = Image
var Text = require(289   ); // 289 = Text
var View = require(234   ); // 234 = View

var AnimatedScrollView = void 0;

var Animated = {
  View: AnimatedImplementation.createAnimatedComponent(View),
  Text: AnimatedImplementation.createAnimatedComponent(Text),
  Image: AnimatedImplementation.createAnimatedComponent(Image),
  get ScrollView() {
    if (!AnimatedScrollView) {
      AnimatedScrollView = AnimatedImplementation.createAnimatedComponent(require(315         )); // 315 = ScrollView
    }
    return AnimatedScrollView;
  }
};

babelHelpers.extends(Animated, AnimatedImplementation);

module.exports = Animated;
}, 301, null, "Animated");
__d(/* AnimatedImplementation */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Animated\\src\\AnimatedImplementation.js';
var InteractionManager = require(303                 ); // 303 = InteractionManager
var Interpolation = require(306            ); // 306 = Interpolation
var NativeAnimatedHelper = require(307                   ); // 307 = NativeAnimatedHelper
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var Set = require(175  ); // 175 = Set
var SpringConfig = require(308           ); // 308 = SpringConfig
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var flattenStyle = require(128           ); // 128 = flattenStyle
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var requestAnimationFrame = require(309                             ); // 309 = fbjs/lib/requestAnimationFrame

var NativeAnimatedAPI = NativeAnimatedHelper.API;

var warnedMissingNativeAnimated = false;

function shouldUseNativeDriver(config) {
  if (config.useNativeDriver && !NativeAnimatedHelper.isNativeAnimatedAvailable()) {
    if (!warnedMissingNativeAnimated) {
      console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'More info: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420');
      warnedMissingNativeAnimated = true;
    }
    return false;
  }

  return config.useNativeDriver || false;
}

var Animated = function () {
  function Animated() {
    babelHelpers.classCallCheck(this, Animated);
  }

  babelHelpers.createClass(Animated, [{
    key: '__attach',
    value: function __attach() {}
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this.__nativeTag != null) {
        NativeAnimatedAPI.dropAnimatedNode(this.__nativeTag);
        this.__nativeTag = undefined;
      }
    }
  }, {
    key: '__getValue',
    value: function __getValue() {}
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this.__getValue();
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {}
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {}
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return [];
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        throw new Error('This node cannot be made a "native" animated node');
      }
    }
  }, {
    key: '__getNativeTag',
    value: function __getNativeTag() {
      NativeAnimatedHelper.assertNativeAnimatedModule();
      invariant(this.__isNative, 'Attempt to get native tag from node not marked as "native"');
      if (this.__nativeTag == null) {
        var nativeTag = NativeAnimatedHelper.generateNewNodeTag();
        NativeAnimatedAPI.createAnimatedNode(nativeTag, this.__getNativeConfig());
        this.__nativeTag = nativeTag;
      }
      return this.__nativeTag;
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      throw new Error('This JS animated node type cannot be used as native animated node');
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      return this.__getValue();
    }
  }]);
  return Animated;
}();

var Animation = function () {
  function Animation() {
    babelHelpers.classCallCheck(this, Animation);
  }

  babelHelpers.createClass(Animation, [{
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}
  }, {
    key: 'stop',
    value: function stop() {
      if (this.__nativeId) {
        NativeAnimatedAPI.stopAnimation(this.__nativeId);
      }
    }
  }, {
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      throw new Error('This animation type cannot be offloaded to native');
    }
  }, {
    key: '__debouncedOnEnd',
    value: function __debouncedOnEnd(result) {
      var onEnd = this.__onEnd;
      this.__onEnd = null;
      onEnd && onEnd(result);
    }
  }, {
    key: '__startNativeAnimation',
    value: function __startNativeAnimation(animatedValue) {
      animatedValue.__makeNative();
      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();
      NativeAnimatedAPI.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));
    }
  }]);
  return Animation;
}();

var AnimatedWithChildren = function (_Animated) {
  babelHelpers.inherits(AnimatedWithChildren, _Animated);

  function AnimatedWithChildren() {
    babelHelpers.classCallCheck(this, AnimatedWithChildren);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedWithChildren.__proto__ || Object.getPrototypeOf(AnimatedWithChildren)).call(this));

    _this._children = [];
    return _this;
  }

  babelHelpers.createClass(AnimatedWithChildren, [{
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var child = _ref;

          child.__makeNative();
          NativeAnimatedAPI.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
      }
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {
        child.__makeNative();
        NativeAnimatedAPI.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
    }
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn('Trying to remove a child that doesn\'t exist');
        return;
      }
      if (this.__isNative && child.__isNative) {
        NativeAnimatedAPI.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    }
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return this._children;
    }
  }]);
  return AnimatedWithChildren;
}(Animated);

function _flush(rootNode) {
  var animatedStyles = new Set();
  function findAnimatedStyles(node) {
    if (typeof node.update === 'function') {
      animatedStyles.add(node);
    } else {
      node.__getChildren().forEach(findAnimatedStyles);
    }
  }
  findAnimatedStyles(rootNode);

  animatedStyles.forEach(function (animatedStyle) {
    return animatedStyle.update();
  });
}

var _easeInOut = void 0;
function easeInOut() {
  if (!_easeInOut) {
    var Easing = require(311     ); // 311 = Easing
    _easeInOut = Easing.inOut(Easing.ease);
  }
  return _easeInOut;
}

var TimingAnimation = function (_Animation) {
  babelHelpers.inherits(TimingAnimation, _Animation);

  function TimingAnimation(config) {
    babelHelpers.classCallCheck(this, TimingAnimation);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (TimingAnimation.__proto__ || Object.getPrototypeOf(TimingAnimation)).call(this));

    _this2._toValue = config.toValue;
    _this2._easing = config.easing !== undefined ? config.easing : easeInOut();
    _this2._duration = config.duration !== undefined ? config.duration : 500;
    _this2._delay = config.delay !== undefined ? config.delay : 0;
    _this2.__iterations = config.iterations !== undefined ? config.iterations : 1;
    _this2.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this2._useNativeDriver = shouldUseNativeDriver(config);
    return _this2;
  }

  babelHelpers.createClass(TimingAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      var frameDuration = 1000.0 / 60.0;
      var frames = [];
      for (var dt = 0.0; dt < this._duration; dt += frameDuration) {
        frames.push(this._easing(dt / this._duration));
      }
      frames.push(this._easing(1));
      return {
        type: 'frames',
        frames: frames,
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      var _this3 = this;

      this.__active = true;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;

      var start = function start() {
        if (_this3._duration === 0 && !_this3._useNativeDriver) {
          _this3._onUpdate(_this3._toValue);
          _this3.__debouncedOnEnd({ finished: true });
        } else {
          _this3._startTime = Date.now();
          if (_this3._useNativeDriver) {
            _this3.__startNativeAnimation(animatedValue);
          } else {
            _this3._animationFrame = requestAnimationFrame(_this3.onUpdate.bind(_this3));
          }
        }
      };
      if (this._delay) {
        this._timeout = setTimeout(start, this._delay);
      } else {
        start();
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();
      if (now >= this._startTime + this._duration) {
        if (this._duration === 0) {
          this._onUpdate(this._toValue);
        } else {
          this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));
        }
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(TimingAnimation.prototype.__proto__ || Object.getPrototypeOf(TimingAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      clearTimeout(this._timeout);
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return TimingAnimation;
}(Animation);

var DecayAnimation = function (_Animation2) {
  babelHelpers.inherits(DecayAnimation, _Animation2);

  function DecayAnimation(config) {
    babelHelpers.classCallCheck(this, DecayAnimation);

    var _this4 = babelHelpers.possibleConstructorReturn(this, (DecayAnimation.__proto__ || Object.getPrototypeOf(DecayAnimation)).call(this));

    _this4._deceleration = config.deceleration !== undefined ? config.deceleration : 0.998;
    _this4._velocity = config.velocity;
    _this4._useNativeDriver = shouldUseNativeDriver(config);
    _this4.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this4.__iterations = config.iterations !== undefined ? config.iterations : 1;
    return _this4;
  }

  babelHelpers.createClass(DecayAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'decay',
        deceleration: this._deceleration,
        velocity: this._velocity,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._lastValue = fromValue;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._startTime = Date.now();
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();

      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

      this._onUpdate(value);

      if (Math.abs(this._lastValue - value) < 0.1) {
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._lastValue = value;
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(DecayAnimation.prototype.__proto__ || Object.getPrototypeOf(DecayAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return DecayAnimation;
}(Animation);

function withDefault(value, defaultValue) {
  if (value === undefined || value === null) {
    return defaultValue;
  }
  return value;
}

var SpringAnimation = function (_Animation3) {
  babelHelpers.inherits(SpringAnimation, _Animation3);

  function SpringAnimation(config) {
    babelHelpers.classCallCheck(this, SpringAnimation);

    var _this5 = babelHelpers.possibleConstructorReturn(this, (SpringAnimation.__proto__ || Object.getPrototypeOf(SpringAnimation)).call(this));

    _this5._overshootClamping = withDefault(config.overshootClamping, false);
    _this5._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);
    _this5._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);
    _this5._initialVelocity = config.velocity;
    _this5._lastVelocity = withDefault(config.velocity, 0);
    _this5._toValue = config.toValue;
    _this5._useNativeDriver = shouldUseNativeDriver(config);
    _this5.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this5.__iterations = config.iterations !== undefined ? config.iterations : 1;

    var springConfig;
    if (config.bounciness !== undefined || config.speed !== undefined) {
      invariant(config.tension === undefined && config.friction === undefined, 'You can only define bounciness/speed or tension/friction but not both');
      springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));
    } else {
      springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));
    }
    _this5._tension = springConfig.tension;
    _this5._friction = springConfig.friction;
    return _this5;
  }

  babelHelpers.createClass(SpringAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'spring',
        overshootClamping: this._overshootClamping,
        restDisplacementThreshold: this._restDisplacementThreshold,
        restSpeedThreshold: this._restSpeedThreshold,
        tension: this._tension,
        friction: this._friction,
        initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._startPosition = fromValue;
      this._lastPosition = this._startPosition;

      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._lastTime = Date.now();

      if (previousAnimation instanceof SpringAnimation) {
        var internalState = previousAnimation.getInternalState();
        this._lastPosition = internalState.lastPosition;
        this._lastVelocity = internalState.lastVelocity;
        this._lastTime = internalState.lastTime;
      }
      if (this._initialVelocity !== undefined && this._initialVelocity !== null) {
        this._lastVelocity = this._initialVelocity;
      }
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this.onUpdate();
      }
    }
  }, {
    key: 'getInternalState',
    value: function getInternalState() {
      return {
        lastPosition: this._lastPosition,
        lastVelocity: this._lastVelocity,
        lastTime: this._lastTime
      };
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var position = this._lastPosition;
      var velocity = this._lastVelocity;

      var tempPosition = this._lastPosition;
      var tempVelocity = this._lastVelocity;

      var MAX_STEPS = 64;
      var now = Date.now();
      if (now > this._lastTime + MAX_STEPS) {
        now = this._lastTime + MAX_STEPS;
      }

      var TIMESTEP_MSEC = 1;
      var numSteps = Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

      for (var i = 0; i < numSteps; ++i) {
        var step = TIMESTEP_MSEC / 1000;

        var aVelocity = velocity;
        var aAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        var tempPosition = position + aVelocity * step / 2;
        var tempVelocity = velocity + aAcceleration * step / 2;

        var bVelocity = tempVelocity;
        var bAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + bVelocity * step / 2;
        tempVelocity = velocity + bAcceleration * step / 2;

        var cVelocity = tempVelocity;
        var cAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + cVelocity * step / 2;
        tempVelocity = velocity + cAcceleration * step / 2;

        var dVelocity = tempVelocity;
        var dAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + cVelocity * step / 2;
        tempVelocity = velocity + cAcceleration * step / 2;

        var dxdt = (aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
        var dvdt = (aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

        position += dxdt * step;
        velocity += dvdt * step;
      }

      this._lastTime = now;
      this._lastPosition = position;
      this._lastVelocity = velocity;

      this._onUpdate(position);
      if (!this.__active) {
        return;
      }

      var isOvershooting = false;
      if (this._overshootClamping && this._tension !== 0) {
        if (this._startPosition < this._toValue) {
          isOvershooting = position > this._toValue;
        } else {
          isOvershooting = position < this._toValue;
        }
      }
      var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;
      var isDisplacement = true;
      if (this._tension !== 0) {
        isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;
      }

      if (isOvershooting || isVelocity && isDisplacement) {
        if (this._tension !== 0) {
          this._onUpdate(this._toValue);
        }

        this.__debouncedOnEnd({ finished: true });
        return;
      }
      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(SpringAnimation.prototype.__proto__ || Object.getPrototypeOf(SpringAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return SpringAnimation;
}(Animation);

var _uniqueId = 1;

var AnimatedValue = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValue, _AnimatedWithChildren);

  function AnimatedValue(value) {
    babelHelpers.classCallCheck(this, AnimatedValue);

    var _this6 = babelHelpers.possibleConstructorReturn(this, (AnimatedValue.__proto__ || Object.getPrototypeOf(AnimatedValue)).call(this));

    _this6._startingValue = _this6._value = value;
    _this6._offset = 0;
    _this6._animation = null;
    _this6._listeners = {};
    return _this6;
  }

  babelHelpers.createClass(AnimatedValue, [{
    key: '__detach',
    value: function __detach() {
      this.stopAnimation();
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._value + this._offset;
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__makeNative', this).call(this);

      if (Object.keys(this._listeners).length) {
        this._startListeningToNativeValueUpdates();
      }
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      if (this._animation) {
        this._animation.stop();
        this._animation = null;
      }
      this._updateValue(value, !this.__isNative);
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);
      }
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this._offset = offset;
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);
      }
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this._value += this._offset;
      this._offset = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this._offset += this._value;
      this._value = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var id = String(_uniqueId++);
      this._listeners[id] = callback;
      if (this.__isNative) {
        this._startListeningToNativeValueUpdates();
      }
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      delete this._listeners[id];
      if (this.__isNative && Object.keys(this._listeners).length === 0) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this._listeners = {};
      if (this.__isNative) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: '_startListeningToNativeValueUpdates',
    value: function _startListeningToNativeValueUpdates() {
      var _this7 = this;

      if (this.__nativeAnimatedValueListener) {
        return;
      }

      NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());
      this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {
        if (data.tag !== _this7.__getNativeTag()) {
          return;
        }
        _this7._updateValue(data.value, false);
      });
    }
  }, {
    key: '_stopListeningForNativeValueUpdates',
    value: function _stopListeningForNativeValueUpdates() {
      if (!this.__nativeAnimatedValueListener) {
        return;
      }

      this.__nativeAnimatedValueListener.remove();
      this.__nativeAnimatedValueListener = null;
      NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.stopTracking();
      this._animation && this._animation.stop();
      this._animation = null;
      callback && callback(this.__getValue());
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.stopAnimation(callback);
      this._value = this._startingValue;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: 'animate',
    value: function animate(animation, callback) {
      var _this8 = this;

      var handle = null;
      if (animation.__isInteraction) {
        handle = InteractionManager.createInteractionHandle();
      }
      var previousAnimation = this._animation;
      this._animation && this._animation.stop();
      this._animation = animation;
      animation.start(this._value, function (value) {
        _this8._updateValue(value, true);
      }, function (result) {
        _this8._animation = null;
        if (handle !== null) {
          InteractionManager.clearInteractionHandle(handle);
        }
        callback && callback(result);
      }, previousAnimation, this);
    }
  }, {
    key: 'stopTracking',
    value: function stopTracking() {
      this._tracking && this._tracking.__detach();
      this._tracking = null;
    }
  }, {
    key: 'track',
    value: function track(tracking) {
      this.stopTracking();
      this._tracking = tracking;
    }
  }, {
    key: '_updateValue',
    value: function _updateValue(value, flush) {
      this._value = value;
      if (flush) {
        _flush(this);
      }
      for (var key in this._listeners) {
        this._listeners[key]({ value: this.__getValue() });
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'value',
        value: this._value,
        offset: this._offset
      };
    }
  }]);
  return AnimatedValue;
}(AnimatedWithChildren);

var AnimatedValueXY = function (_AnimatedWithChildren2) {
  babelHelpers.inherits(AnimatedValueXY, _AnimatedWithChildren2);

  function AnimatedValueXY(valueIn) {
    babelHelpers.classCallCheck(this, AnimatedValueXY);

    var _this9 = babelHelpers.possibleConstructorReturn(this, (AnimatedValueXY.__proto__ || Object.getPrototypeOf(AnimatedValueXY)).call(this));

    var value = valueIn || { x: 0, y: 0 };
    if (typeof value.x === 'number' && typeof value.y === 'number') {
      _this9.x = new AnimatedValue(value.x);
      _this9.y = new AnimatedValue(value.y);
    } else {
      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initalized with an object of numbers or ' + 'AnimatedValues.');
      _this9.x = value.x;
      _this9.y = value.y;
    }
    _this9._listeners = {};
    return _this9;
  }

  babelHelpers.createClass(AnimatedValueXY, [{
    key: 'setValue',
    value: function setValue(value) {
      this.x.setValue(value.x);
      this.y.setValue(value.y);
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this.x.setOffset(offset.x);
      this.y.setOffset(offset.y);
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this.x.flattenOffset();
      this.y.flattenOffset();
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this.x.extractOffset();
      this.y.extractOffset();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return {
        x: this.x.__getValue(),
        y: this.y.__getValue()
      };
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.x.resetAnimation();
      this.y.resetAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.x.stopAnimation();
      this.y.stopAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var _this10 = this;

      var id = String(_uniqueId++);
      var jointCallback = function jointCallback(_ref2) {
        var number = _ref2.value;

        callback(_this10.__getValue());
      };
      this._listeners[id] = {
        x: this.x.addListener(jointCallback),
        y: this.y.addListener(jointCallback)
      };
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      this.x.removeListener(this._listeners[id].x);
      this.y.removeListener(this._listeners[id].y);
      delete this._listeners[id];
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this.x.removeAllListeners();
      this.y.removeAllListeners();
      this._listeners = {};
    }
  }, {
    key: 'getLayout',
    value: function getLayout() {
      return {
        left: this.x,
        top: this.y
      };
    }
  }, {
    key: 'getTranslateTransform',
    value: function getTranslateTransform() {
      return [{ translateX: this.x }, { translateY: this.y }];
    }
  }]);
  return AnimatedValueXY;
}(AnimatedWithChildren);

var AnimatedInterpolation = function (_AnimatedWithChildren3) {
  babelHelpers.inherits(AnimatedInterpolation, _AnimatedWithChildren3);

  function AnimatedInterpolation(parent, config) {
    babelHelpers.classCallCheck(this, AnimatedInterpolation);

    var _this11 = babelHelpers.possibleConstructorReturn(this, (AnimatedInterpolation.__proto__ || Object.getPrototypeOf(AnimatedInterpolation)).call(this));

    _this11._parent = parent;
    _this11._config = config;
    _this11._interpolation = Interpolation.create(config);
    return _this11;
  }

  babelHelpers.createClass(AnimatedInterpolation, [{
    key: '__getValue',
    value: function __getValue() {
      var parentValue = this._parent.__getValue();
      invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');
      return this._interpolation(parentValue);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedInterpolation.prototype.__proto__ || Object.getPrototypeOf(AnimatedInterpolation.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__transformDataType',
    value: function __transformDataType(range) {
      return range.map(function (value) {
        if (typeof value !== 'string') {
          return value;
        }
        if (/deg$/.test(value)) {
          var degrees = parseFloat(value, 10) || 0;
          var radians = degrees * Math.PI / 180.0;
          return radians;
        } else {
          return parseFloat(value, 10) || 0;
        }
      });
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      if (__DEV__) {
        NativeAnimatedHelper.validateInterpolation(this._config);
      }

      return {
        inputRange: this._config.inputRange,

        outputRange: this.__transformDataType(this._config.outputRange),
        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',
        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',
        type: 'interpolation'
      };
    }
  }]);
  return AnimatedInterpolation;
}(AnimatedWithChildren);

var AnimatedAddition = function (_AnimatedWithChildren4) {
  babelHelpers.inherits(AnimatedAddition, _AnimatedWithChildren4);

  function AnimatedAddition(a, b) {
    babelHelpers.classCallCheck(this, AnimatedAddition);

    var _this12 = babelHelpers.possibleConstructorReturn(this, (AnimatedAddition.__proto__ || Object.getPrototypeOf(AnimatedAddition)).call(this));

    _this12._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this12._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this12;
  }

  babelHelpers.createClass(AnimatedAddition, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() + this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'addition',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedAddition;
}(AnimatedWithChildren);

var AnimatedDivision = function (_AnimatedWithChildren5) {
  babelHelpers.inherits(AnimatedDivision, _AnimatedWithChildren5);

  function AnimatedDivision(a, b) {
    babelHelpers.classCallCheck(this, AnimatedDivision);

    var _this13 = babelHelpers.possibleConstructorReturn(this, (AnimatedDivision.__proto__ || Object.getPrototypeOf(AnimatedDivision)).call(this));

    _this13._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this13._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this13;
  }

  babelHelpers.createClass(AnimatedDivision, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
      this._b.__makeNative();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var a = this._a.__getValue();
      var b = this._b.__getValue();
      if (b === 0) {
        console.error('Detected division by zero in AnimatedDivision');
      }
      return a / b;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'division',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedDivision;
}(AnimatedWithChildren);

var AnimatedMultiplication = function (_AnimatedWithChildren6) {
  babelHelpers.inherits(AnimatedMultiplication, _AnimatedWithChildren6);

  function AnimatedMultiplication(a, b) {
    babelHelpers.classCallCheck(this, AnimatedMultiplication);

    var _this14 = babelHelpers.possibleConstructorReturn(this, (AnimatedMultiplication.__proto__ || Object.getPrototypeOf(AnimatedMultiplication)).call(this));

    _this14._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this14._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this14;
  }

  babelHelpers.createClass(AnimatedMultiplication, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
      this._b.__makeNative();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() * this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'multiplication',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedMultiplication;
}(AnimatedWithChildren);

var AnimatedModulo = function (_AnimatedWithChildren7) {
  babelHelpers.inherits(AnimatedModulo, _AnimatedWithChildren7);

  function AnimatedModulo(a, modulus) {
    babelHelpers.classCallCheck(this, AnimatedModulo);

    var _this15 = babelHelpers.possibleConstructorReturn(this, (AnimatedModulo.__proto__ || Object.getPrototypeOf(AnimatedModulo)).call(this));

    _this15._a = a;
    _this15._modulus = modulus;
    return _this15;
  }

  babelHelpers.createClass(AnimatedModulo, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return (this._a.__getValue() % this._modulus + this._modulus) % this._modulus;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'modulus',
        input: this._a.__getNativeTag(),
        modulus: this._modulus
      };
    }
  }]);
  return AnimatedModulo;
}(AnimatedWithChildren);

var AnimatedDiffClamp = function (_AnimatedWithChildren8) {
  babelHelpers.inherits(AnimatedDiffClamp, _AnimatedWithChildren8);

  function AnimatedDiffClamp(a, min, max) {
    babelHelpers.classCallCheck(this, AnimatedDiffClamp);

    var _this16 = babelHelpers.possibleConstructorReturn(this, (AnimatedDiffClamp.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp)).call(this));

    _this16._a = a;
    _this16._min = min;
    _this16._max = max;
    _this16._value = _this16._lastValue = _this16._a.__getValue();
    return _this16;
  }

  babelHelpers.createClass(AnimatedDiffClamp, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var value = this._a.__getValue();
      var diff = value - this._lastValue;
      this._lastValue = value;
      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
      return this._value;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'diffclamp',
        input: this._a.__getNativeTag(),
        min: this._min,
        max: this._max
      };
    }
  }]);
  return AnimatedDiffClamp;
}(AnimatedWithChildren);

var AnimatedTransform = function (_AnimatedWithChildren9) {
  babelHelpers.inherits(AnimatedTransform, _AnimatedWithChildren9);

  function AnimatedTransform(transforms) {
    babelHelpers.classCallCheck(this, AnimatedTransform);

    var _this17 = babelHelpers.possibleConstructorReturn(this, (AnimatedTransform.__proto__ || Object.getPrototypeOf(AnimatedTransform)).call(this));

    _this17._transforms = transforms;
    return _this17;
  }

  babelHelpers.createClass(AnimatedTransform, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__makeNative', this).call(this);
      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__makeNative();
          }
        }
      });
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            result[key] = value.__getValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            result[key] = value.__getAnimatedValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__attach',
    value: function __attach() {
      var _this18 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__addChild(_this18);
          }
        }
      });
    }
  }, {
    key: '__detach',
    value: function __detach() {
      var _this19 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__removeChild(_this19);
          }
        }
      });
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var transConfigs = [];

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            transConfigs.push({
              type: 'animated',
              property: key,
              nodeTag: value.__getNativeTag()
            });
          } else {
            transConfigs.push({
              type: 'static',
              property: key,
              value: value
            });
          }
        }
      });

      NativeAnimatedHelper.validateTransform(transConfigs);
      return {
        type: 'transform',
        transforms: transConfigs
      };
    }
  }]);
  return AnimatedTransform;
}(AnimatedWithChildren);

var AnimatedStyle = function (_AnimatedWithChildren10) {
  babelHelpers.inherits(AnimatedStyle, _AnimatedWithChildren10);

  function AnimatedStyle(style) {
    babelHelpers.classCallCheck(this, AnimatedStyle);

    var _this20 = babelHelpers.possibleConstructorReturn(this, (AnimatedStyle.__proto__ || Object.getPrototypeOf(AnimatedStyle)).call(this));

    style = flattenStyle(style) || {};
    if (style.transform) {
      style = babelHelpers.extends({}, style, {
        transform: new AnimatedTransform(style.transform)
      });
    }
    _this20._style = style;
    return _this20;
  }

  babelHelpers.createClass(AnimatedStyle, [{
    key: '__walkStyleAndGetValues',
    value: function __walkStyleAndGetValues(style) {
      var updatedStyle = {};
      for (var _key in style) {
        var _value = style[_key];
        if (_value instanceof Animated) {
          if (!_value.__isNative) {
            updatedStyle[_key] = _value.__getValue();
          }
        } else if (_value && !Array.isArray(_value) && typeof _value === 'object') {
          updatedStyle[_key] = this.__walkStyleAndGetValues(_value);
        } else {
          updatedStyle[_key] = _value;
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this.__walkStyleAndGetValues(this._style);
    }
  }, {
    key: '__walkStyleAndGetAnimatedValues',
    value: function __walkStyleAndGetAnimatedValues(style) {
      var updatedStyle = {};
      for (var _key2 in style) {
        var _value2 = style[_key2];
        if (_value2 instanceof Animated) {
          updatedStyle[_key2] = _value2.__getAnimatedValue();
        } else if (_value2 && !Array.isArray(_value2) && typeof _value2 === 'object') {
          updatedStyle[_key2] = this.__walkStyleAndGetAnimatedValues(_value2);
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this.__walkStyleAndGetAnimatedValues(this._style);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__makeNative', this).call(this);
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__makeNative();
        }
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var styleConfig = {};
      for (var styleKey in this._style) {
        if (this._style[styleKey] instanceof Animated) {
          styleConfig[styleKey] = this._style[styleKey].__getNativeTag();
        }
      }
      NativeAnimatedHelper.validateStyles(styleConfig);
      return {
        type: 'style',
        style: styleConfig
      };
    }
  }]);
  return AnimatedStyle;
}(AnimatedWithChildren);

var AnimatedProps = function (_Animated2) {
  babelHelpers.inherits(AnimatedProps, _Animated2);

  function AnimatedProps(props, callback) {
    babelHelpers.classCallCheck(this, AnimatedProps);

    var _this21 = babelHelpers.possibleConstructorReturn(this, (AnimatedProps.__proto__ || Object.getPrototypeOf(AnimatedProps)).call(this));

    if (props.style) {
      props = babelHelpers.extends({}, props, {
        style: new AnimatedStyle(props.style)
      });
    }
    _this21._props = props;
    _this21._callback = callback;
    _this21.__attach();
    return _this21;
  }

  babelHelpers.createClass(AnimatedProps, [{
    key: '__getValue',
    value: function __getValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          if (!value.__isNative || value instanceof AnimatedStyle) {
            props[key] = value.__getValue();
          }
        } else if (value instanceof AnimatedEvent) {
          props[key] = value.__getHandler();
        } else {
          props[key] = value;
        }
      }
      return props;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          props[key] = value.__getAnimatedValue();
        }
      }
      return props;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this._animatedView) {
        this.__disconnectAnimatedView();
      }
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedProps.prototype.__proto__ || Object.getPrototypeOf(AnimatedProps.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._callback();
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var key in this._props) {
          var value = this._props[key];
          if (value instanceof Animated) {
            value.__makeNative();
          }
        }
        if (this._animatedView) {
          this.__connectAnimatedView();
        }
      }
    }
  }, {
    key: 'setNativeView',
    value: function setNativeView(animatedView) {
      if (this._animatedView === animatedView) {
        return;
      }
      this._animatedView = animatedView;
      if (this.__isNative) {
        this.__connectAnimatedView();
      }
    }
  }, {
    key: '__connectAnimatedView',
    value: function __connectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedAPI.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__disconnectAnimatedView',
    value: function __disconnectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedAPI.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var propsConfig = {};
      for (var propKey in this._props) {
        var value = this._props[propKey];
        if (value instanceof Animated) {
          propsConfig[propKey] = value.__getNativeTag();
        }
      }
      return {
        type: 'props',
        props: propsConfig
      };
    }
  }]);
  return AnimatedProps;
}(Animated);

function createAnimatedComponent(Component) {
  var AnimatedComponent = function (_React$Component) {
    babelHelpers.inherits(AnimatedComponent, _React$Component);

    function AnimatedComponent(props) {
      babelHelpers.classCallCheck(this, AnimatedComponent);

      var _this22 = babelHelpers.possibleConstructorReturn(this, (AnimatedComponent.__proto__ || Object.getPrototypeOf(AnimatedComponent)).call(this, props));

      _this22._eventDetachers = [];

      _this22._setComponentRef = _this22._setComponentRef.bind(_this22);
      return _this22;
    }

    babelHelpers.createClass(AnimatedComponent, [{
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._propsAnimated && this._propsAnimated.__detach();
        this._detachNativeEvents();
      }
    }, {
      key: 'setNativeProps',
      value: function setNativeProps(props) {
        this._component.setNativeProps(props);
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._attachProps(this.props);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._propsAnimated.setNativeView(this._component);
        this._attachNativeEvents();
      }
    }, {
      key: '_attachNativeEvents',
      value: function _attachNativeEvents() {
        var _this23 = this;

        var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;

        var _loop = function _loop(_key3) {
          var prop = _this23.props[_key3];
          if (prop instanceof AnimatedEvent && prop.__isNative) {
            prop.__attach(scrollableNode, _key3);
            _this23._eventDetachers.push(function () {
              return prop.__detach(scrollableNode, _key3);
            });
          }
        };

        for (var _key3 in this.props) {
          _loop(_key3);
        }
      }
    }, {
      key: '_detachNativeEvents',
      value: function _detachNativeEvents() {
        this._eventDetachers.forEach(function (remove) {
          return remove();
        });
        this._eventDetachers = [];
      }
    }, {
      key: '_attachProps',
      value: function _attachProps(nextProps) {
        var _this24 = this;

        var oldPropsAnimated = this._propsAnimated;

        var callback = function callback() {
          if (_this24._component.setNativeProps) {
            if (!_this24._propsAnimated.__isNative) {
              _this24._component.setNativeProps(_this24._propsAnimated.__getAnimatedValue());
            } else {
              throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to "native" earlier by starting an ' + 'animation with `useNativeDriver: true`');
            }
          } else {
            _this24.forceUpdate();
          }
        };

        this._propsAnimated = new AnimatedProps(nextProps, callback);

        oldPropsAnimated && oldPropsAnimated.__detach();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(newProps) {
        this._attachProps(newProps);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (this._component !== this._prevComponent) {
          this._propsAnimated.setNativeView(this._component);
        }
        if (this._component !== this._prevComponent || prevProps !== this.props) {
          this._detachNativeEvents();
          this._attachNativeEvents();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return React.createElement(Component, babelHelpers.extends({}, this._propsAnimated.__getValue(), {
          ref: this._setComponentRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 1843
          }
        }));
      }
    }, {
      key: '_setComponentRef',
      value: function _setComponentRef(c) {
        this._prevComponent = this._component;
        this._component = c;
      }
    }, {
      key: 'getNode',
      value: function getNode() {
        return this._component;
      }
    }]);
    return AnimatedComponent;
  }(React.Component);

  var propTypes = Component.__propTypesSecretDontUseThesePlease || Component.propTypes;

  AnimatedComponent.propTypes = {
    style: function style(props, propName, componentName) {
      if (!propTypes) {
        return;
      }

      for (var key in ViewStylePropTypes) {
        if (!propTypes[key] && props[key] !== undefined) {
          console.warn('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
        }
      }
    }
  };

  return AnimatedComponent;
}

var AnimatedTracking = function (_Animated3) {
  babelHelpers.inherits(AnimatedTracking, _Animated3);

  function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
    babelHelpers.classCallCheck(this, AnimatedTracking);

    var _this25 = babelHelpers.possibleConstructorReturn(this, (AnimatedTracking.__proto__ || Object.getPrototypeOf(AnimatedTracking)).call(this));

    _this25._value = value;
    _this25._parent = parent;
    _this25._animationClass = animationClass;
    _this25._animationConfig = animationConfig;
    _this25._callback = callback;
    _this25.__attach();
    return _this25;
  }

  babelHelpers.createClass(AnimatedTracking, [{
    key: '__getValue',
    value: function __getValue() {
      return this._parent.__getValue();
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedTracking.prototype.__proto__ || Object.getPrototypeOf(AnimatedTracking.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._value.animate(new this._animationClass(babelHelpers.extends({}, this._animationConfig, {
        toValue: this._animationConfig.toValue.__getValue()
      })), this._callback);
    }
  }]);
  return AnimatedTracking;
}(Animated);

var add = function add(a, b) {
  return new AnimatedAddition(a, b);
};

var divide = function divide(a, b) {
  return new AnimatedDivision(a, b);
};

var multiply = function multiply(a, b) {
  return new AnimatedMultiplication(a, b);
};

var modulo = function modulo(a, modulus) {
  return new AnimatedModulo(a, modulus);
};

var diffClamp = function diffClamp(a, min, max) {
  return new AnimatedDiffClamp(a, min, max);
};

var _combineCallbacks = function _combineCallbacks(callback, config) {
  if (callback && config.onComplete) {
    return function () {
      config.onComplete && config.onComplete.apply(config, arguments);
      callback && callback.apply(undefined, arguments);
    };
  } else {
    return callback || config.onComplete;
  }
};

var maybeVectorAnim = function maybeVectorAnim(value, config, anim) {
  if (value instanceof AnimatedValueXY) {
    var configX = babelHelpers.extends({}, config);
    var configY = babelHelpers.extends({}, config);
    for (var key in config) {
      var _config$key = config[key],
          x = _config$key.x,
          y = _config$key.y;

      if (x !== undefined && y !== undefined) {
        configX[key] = x;
        configY[key] = y;
      }
    }
    var aX = anim(value.x, configX);
    var aY = anim(value.y, configY);

    return parallel([aX, aY], { stopTogether: false });
  }
  return null;
};

var spring = function spring(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof Animated) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new SpringAnimation(singleConfig), callback);
    }
  };
  return maybeVectorAnim(value, config, spring) || {
    start: function (_start) {
      function start(_x) {
        return _start.apply(this, arguments);
      }

      start.toString = function () {
        return _start.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var timing = function timing(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof Animated) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new TimingAnimation(singleConfig), callback);
    }
  };

  return maybeVectorAnim(value, config, timing) || {
    start: function (_start2) {
      function start(_x2) {
        return _start2.apply(this, arguments);
      }

      start.toString = function () {
        return _start2.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var decay = function decay(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    singleValue.animate(new DecayAnimation(singleConfig), callback);
  };

  return maybeVectorAnim(value, config, decay) || {
    start: function (_start3) {
      function start(_x3) {
        return _start3.apply(this, arguments);
      }

      start.toString = function () {
        return _start3.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var sequence = function sequence(animations) {
  var current = 0;
  return {
    start: function start(callback) {
      var onComplete = function onComplete(result) {
        if (!result.finished) {
          callback && callback(result);
          return;
        }

        current++;

        if (current === animations.length) {
          callback && callback(result);
          return;
        }

        animations[current].start(onComplete);
      };

      if (animations.length === 0) {
        callback && callback({ finished: true });
      } else {
        animations[current].start(onComplete);
      }
    },

    stop: function stop() {
      if (current < animations.length) {
        animations[current].stop();
      }
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        if (idx <= current) {
          animation.reset();
        }
      });
      current = 0;
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };
};

var parallel = function parallel(animations, config) {
  var doneCount = 0;

  var hasEnded = {};
  var stopTogether = !(config && config.stopTogether === false);

  var result = {
    start: function start(callback) {
      if (doneCount === animations.length) {
        callback && callback({ finished: true });
        return;
      }

      animations.forEach(function (animation, idx) {
        var cb = function cb(endResult) {
          hasEnded[idx] = true;
          doneCount++;
          if (doneCount === animations.length) {
            doneCount = 0;
            callback && callback(endResult);
            return;
          }

          if (!endResult.finished && stopTogether) {
            result.stop();
          }
        };

        if (!animation) {
          cb({ finished: true });
        } else {
          animation.start(cb);
        }
      });
    },

    stop: function stop() {
      animations.forEach(function (animation, idx) {
        !hasEnded[idx] && animation.stop();
        hasEnded[idx] = true;
      });
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        animation.reset();
        hasEnded[idx] = false;
        doneCount = 0;
      });
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  return result;
};

var delay = function delay(time) {
  return timing(new AnimatedValue(0), { toValue: 0, delay: time, duration: 0 });
};

var stagger = function stagger(time, animations) {
  return parallel(animations.map(function (animation, i) {
    return sequence([delay(time * i), animation]);
  }));
};

var loop = function loop(animation) {
  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref3$iterations = _ref3.iterations,
      iterations = _ref3$iterations === undefined ? -1 : _ref3$iterations;

  var isFinished = false;
  var iterationsSoFar = 0;
  return {
    start: function start(callback) {
      var restart = function restart() {
        var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { finished: true };

        if (isFinished || iterationsSoFar === iterations || result.finished === false) {
          callback && callback(result);
        } else {
          iterationsSoFar++;
          animation.reset();
          animation.start(restart);
        }
      };
      if (!animation || iterations === 0) {
        callback && callback({ finished: true });
      } else {
        if (animation._isUsingNativeDriver()) {
          animation._startNativeLoop(iterations);
        } else {
          restart();
        }
      }
    },

    stop: function stop() {
      isFinished = true;
      animation.stop();
    },

    reset: function reset() {
      iterationsSoFar = 0;
      isFinished = false;
      animation.reset();
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return animation._isUsingNativeDriver();
    }
  };
};

function attachNativeEvent(viewRef, eventName, argMapping) {
  var eventMappings = [];

  var traverse = function traverse(value, path) {
    if (value instanceof AnimatedValue) {
      value.__makeNative();

      eventMappings.push({
        nativeEventPath: path,
        animatedValueTag: value.__getNativeTag()
      });
    } else if (typeof value === 'object') {
      for (var _key4 in value) {
        traverse(value[_key4], path.concat(_key4));
      }
    }
  };

  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');

  traverse(argMapping[0].nativeEvent, []);

  var viewTag = ReactNative.findNodeHandle(viewRef);

  eventMappings.forEach(function (mapping) {
    NativeAnimatedAPI.addAnimatedEventToView(viewTag, eventName, mapping);
  });

  return {
    detach: function detach() {
      eventMappings.forEach(function (mapping) {
        NativeAnimatedAPI.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);
      });
    }
  };
}

function forkEvent(event, listener) {
  if (!event) {
    return listener;
  } else if (event instanceof AnimatedEvent) {
    event.__addListener(listener);
    return event;
  } else {
    return function () {
      typeof event === 'function' && event.apply(undefined, arguments);
      listener.apply(undefined, arguments);
    };
  }
}

function unforkEvent(event, listener) {
  if (event && event instanceof AnimatedEvent) {
    event.__removeListener(listener);
  }
}

var AnimatedEvent = function () {
  function AnimatedEvent(argMapping) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    babelHelpers.classCallCheck(this, AnimatedEvent);
    this._listeners = [];

    this._argMapping = argMapping;
    if (config.listener) {
      this.__addListener(config.listener);
    }
    this._callListeners = this._callListeners.bind(this);
    this._attachedEvent = null;
    this.__isNative = shouldUseNativeDriver(config);

    if (__DEV__) {
      this._validateMapping();
    }
  }

  babelHelpers.createClass(AnimatedEvent, [{
    key: '__addListener',
    value: function __addListener(callback) {
      this._listeners.push(callback);
    }
  }, {
    key: '__removeListener',
    value: function __removeListener(callback) {
      this._listeners = this._listeners.filter(function (listener) {
        return listener !== callback;
      });
    }
  }, {
    key: '__attach',
    value: function __attach(viewRef, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be attached.');

      this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping);
    }
  }, {
    key: '__detach',
    value: function __detach(viewTag, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be detached.');

      this._attachedEvent && this._attachedEvent.detach();
    }
  }, {
    key: '__getHandler',
    value: function __getHandler() {
      var _this26 = this;

      if (this.__isNative) {
        return this._callListeners;
      }

      return function () {
        for (var _len = arguments.length, args = Array(_len), _key5 = 0; _key5 < _len; _key5++) {
          args[_key5] = arguments[_key5];
        }

        var traverse = function traverse(recMapping, recEvt, key) {
          if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {
            recMapping.setValue(recEvt);
          } else if (typeof recMapping === 'object') {
            for (var mappingKey in recMapping) {
              traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
            }
          }
        };

        if (!_this26.__isNative) {
          _this26._argMapping.forEach(function (mapping, idx) {
            traverse(mapping, args[idx], 'arg' + idx);
          });
        }
        _this26._callListeners.apply(_this26, args);
      };
    }
  }, {
    key: '_callListeners',
    value: function _callListeners() {
      for (var _len2 = arguments.length, args = Array(_len2), _key6 = 0; _key6 < _len2; _key6++) {
        args[_key6] = arguments[_key6];
      }

      this._listeners.forEach(function (listener) {
        return listener.apply(undefined, args);
      });
    }
  }, {
    key: '_validateMapping',
    value: function _validateMapping() {
      var traverse = function traverse(recMapping, recEvt, key) {
        if (typeof recEvt === 'number') {
          invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');
          return;
        }
        invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);
        invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);
        for (var mappingKey in recMapping) {
          traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
        }
      };
    }
  }]);
  return AnimatedEvent;
}();

var event = function event(argMapping, config) {
  var animatedEvent = new AnimatedEvent(argMapping, config);
  if (animatedEvent.__isNative) {
    return animatedEvent;
  } else {
    return animatedEvent.__getHandler();
  }
};

module.exports = {
  Value: AnimatedValue,

  ValueXY: AnimatedValueXY,

  Interpolation: AnimatedInterpolation,

  decay: decay,

  timing: timing,

  spring: spring,

  add: add,

  divide: divide,

  multiply: multiply,

  modulo: modulo,

  diffClamp: diffClamp,

  delay: delay,

  sequence: sequence,

  parallel: parallel,

  stagger: stagger,

  loop: loop,

  event: event,

  createAnimatedComponent: createAnimatedComponent,

  attachNativeEvent: attachNativeEvent,

  forkEvent: forkEvent,
  unforkEvent: unforkEvent,

  __PropsOnlyForTests: AnimatedProps
};
}, 302, null, "AnimatedImplementation");
__d(/* InteractionManager */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge
var EventEmitter = require(69            ); // 69 = EventEmitter
var Set = require(175  ); // 175 = Set
var TaskQueue = require(304        ); // 304 = TaskQueue

var infoLog = require(305      ); // 305 = infoLog
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var keyMirror = require(239                 ); // 239 = fbjs/lib/keyMirror

var _emitter = new EventEmitter();

var DEBUG_DELAY = 0;
var DEBUG = false;

var InteractionManager = {
  Events: keyMirror({
    interactionStart: true,
    interactionComplete: true
  }),

  runAfterInteractions: function runAfterInteractions(task) {
    var tasks = [];
    var promise = new Promise(function (resolve) {
      _scheduleUpdate();
      if (task) {
        tasks.push(task);
      }
      tasks.push({ run: resolve, name: 'resolve ' + (task && task.name || '?') });
      _taskQueue.enqueueTasks(tasks);
    });
    return {
      then: promise.then.bind(promise),
      done: function done() {
        if (promise.done) {
          return promise.done.apply(promise, arguments);
        } else {
          console.warn('Tried to call done when not supported by current Promise implementation.');
        }
      },
      cancel: function cancel() {
        _taskQueue.cancelTasks(tasks);
      }
    };
  },
  createInteractionHandle: function createInteractionHandle() {
    DEBUG && infoLog('create interaction handle');
    _scheduleUpdate();
    var handle = ++_inc;
    _addInteractionSet.add(handle);
    return handle;
  },
  clearInteractionHandle: function clearInteractionHandle(handle) {
    DEBUG && infoLog('clear interaction handle');
    invariant(!!handle, 'Must provide a handle to clear.');
    _scheduleUpdate();
    _addInteractionSet.delete(handle);
    _deleteInteractionSet.add(handle);
  },


  addListener: _emitter.addListener.bind(_emitter),

  setDeadline: function setDeadline(deadline) {
    _deadline = deadline;
  }
};

var _interactionSet = new Set();
var _addInteractionSet = new Set();
var _deleteInteractionSet = new Set();
var _taskQueue = new TaskQueue({ onMoreTasks: _scheduleUpdate });
var _nextUpdateHandle = 0;
var _inc = 0;
var _deadline = -1;

function _scheduleUpdate() {
  if (!_nextUpdateHandle) {
    if (_deadline > 0) {
      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);
    } else {
      _nextUpdateHandle = setImmediate(_processUpdate);
    }
  }
}

function _processUpdate() {
  _nextUpdateHandle = 0;

  var interactionCount = _interactionSet.size;
  _addInteractionSet.forEach(function (handle) {
    return _interactionSet.add(handle);
  });
  _deleteInteractionSet.forEach(function (handle) {
    return _interactionSet.delete(handle);
  });
  var nextInteractionCount = _interactionSet.size;

  if (interactionCount !== 0 && nextInteractionCount === 0) {
    _emitter.emit(InteractionManager.Events.interactionComplete);
  } else if (interactionCount === 0 && nextInteractionCount !== 0) {
    _emitter.emit(InteractionManager.Events.interactionStart);
  }

  if (nextInteractionCount === 0) {
    while (_taskQueue.hasTasksToProcess()) {
      _taskQueue.processNext();
      if (_deadline > 0 && BatchedBridge.getEventLoopRunningTime() >= _deadline) {
        _scheduleUpdate();
        break;
      }
    }
  }
  _addInteractionSet.clear();
  _deleteInteractionSet.clear();
}

module.exports = InteractionManager;
}, 303, null, "InteractionManager");
__d(/* TaskQueue */function(global, require, module, exports) {
'use strict';

var infoLog = require(305      ); // 305 = infoLog
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var DEBUG = false;

var TaskQueue = function () {
  function TaskQueue(_ref) {
    var onMoreTasks = _ref.onMoreTasks;
    babelHelpers.classCallCheck(this, TaskQueue);

    this._onMoreTasks = onMoreTasks;
    this._queueStack = [{ tasks: [], popable: false }];
  }

  babelHelpers.createClass(TaskQueue, [{
    key: 'enqueue',
    value: function enqueue(task) {
      this._getCurrentQueue().push(task);
    }
  }, {
    key: 'enqueueTasks',
    value: function enqueueTasks(tasks) {
      var _this = this;

      tasks.forEach(function (task) {
        return _this.enqueue(task);
      });
    }
  }, {
    key: 'cancelTasks',
    value: function cancelTasks(tasksToCancel) {
      this._queueStack = this._queueStack.map(function (queue) {
        return babelHelpers.extends({}, queue, {
          tasks: queue.tasks.filter(function (task) {
            return tasksToCancel.indexOf(task) === -1;
          })
        });
      }).filter(function (queue, idx) {
        return queue.tasks.length > 0 || idx === 0;
      });
    }
  }, {
    key: 'hasTasksToProcess',
    value: function hasTasksToProcess() {
      return this._getCurrentQueue().length > 0;
    }
  }, {
    key: 'processNext',
    value: function processNext() {
      var queue = this._getCurrentQueue();
      if (queue.length) {
        var task = queue.shift();
        try {
          if (task.gen) {
            DEBUG && infoLog('genPromise for task ' + task.name);
            this._genPromise(task);
          } else if (task.run) {
            DEBUG && infoLog('run task ' + task.name);
            task.run();
          } else {
            invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\n' + JSON.stringify(task, null, 2));
            DEBUG && infoLog('run anonymous task');
            task();
          }
        } catch (e) {
          e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;
          throw e;
        }
      }
    }
  }, {
    key: '_getCurrentQueue',
    value: function _getCurrentQueue() {
      var stackIdx = this._queueStack.length - 1;
      var queue = this._queueStack[stackIdx];
      if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {
        this._queueStack.pop();
        DEBUG && infoLog('popped queue: ', { stackIdx: stackIdx, queueStackSize: this._queueStack.length });
        return this._getCurrentQueue();
      } else {
        return queue.tasks;
      }
    }
  }, {
    key: '_genPromise',
    value: function _genPromise(task) {
      var _this2 = this;

      this._queueStack.push({ tasks: [], popable: false });
      var stackIdx = this._queueStack.length - 1;
      DEBUG && infoLog('push new queue: ', { stackIdx: stackIdx });
      DEBUG && infoLog('exec gen task ' + task.name);
      task.gen().then(function () {
        DEBUG && infoLog('onThen for gen task ' + task.name, { stackIdx: stackIdx, queueStackSize: _this2._queueStack.length });
        _this2._queueStack[stackIdx].popable = true;
        _this2.hasTasksToProcess() && _this2._onMoreTasks();
      }).catch(function (ex) {
        ex.message = 'TaskQueue: Error resolving Promise in task ' + task.name + ': ' + ex.message;
        throw ex;
      }).done();
    }
  }]);
  return TaskQueue;
}();

module.exports = TaskQueue;
}, 304, null, "TaskQueue");
__d(/* infoLog */function(global, require, module, exports) {
'use strict';

function infoLog() {
  var _console;

  return (_console = console).log.apply(_console, arguments);
}

module.exports = infoLog;
}, 305, null, "infoLog");
__d(/* Interpolation */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var normalizeColor = require(83              ); // 83 = normalizeColor

var linear = function linear(t) {
  return t;
};

var Interpolation = function () {
  function Interpolation() {
    babelHelpers.classCallCheck(this, Interpolation);
  }

  babelHelpers.createClass(Interpolation, null, [{
    key: 'create',
    value: function create(config) {

      if (config.outputRange && typeof config.outputRange[0] === 'string') {
        return createInterpolationFromStringOutputRange(config);
      }

      var outputRange = config.outputRange;
      checkInfiniteRange('outputRange', outputRange);

      var inputRange = config.inputRange;
      checkInfiniteRange('inputRange', inputRange);
      checkValidInputRange(inputRange);

      invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');

      var easing = config.easing || linear;

      var extrapolateLeft = 'extend';
      if (config.extrapolateLeft !== undefined) {
        extrapolateLeft = config.extrapolateLeft;
      } else if (config.extrapolate !== undefined) {
        extrapolateLeft = config.extrapolate;
      }

      var extrapolateRight = 'extend';
      if (config.extrapolateRight !== undefined) {
        extrapolateRight = config.extrapolateRight;
      } else if (config.extrapolate !== undefined) {
        extrapolateRight = config.extrapolate;
      }

      return function (input) {
        invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');

        var range = findRange(input, inputRange);
        return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);
      };
    }
  }]);
  return Interpolation;
}();

function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {
  var result = input;

  if (result < inputMin) {
    if (extrapolateLeft === 'identity') {
      return result;
    } else if (extrapolateLeft === 'clamp') {
      result = inputMin;
    } else if (extrapolateLeft === 'extend') {}
  }

  if (result > inputMax) {
    if (extrapolateRight === 'identity') {
      return result;
    } else if (extrapolateRight === 'clamp') {
      result = inputMax;
    } else if (extrapolateRight === 'extend') {}
  }

  if (outputMin === outputMax) {
    return outputMin;
  }

  if (inputMin === inputMax) {
    if (input <= inputMin) {
      return outputMin;
    }
    return outputMax;
  }

  if (inputMin === -Infinity) {
    result = -result;
  } else if (inputMax === Infinity) {
    result = result - inputMin;
  } else {
    result = (result - inputMin) / (inputMax - inputMin);
  }

  result = easing(result);

  if (outputMin === -Infinity) {
    result = -result;
  } else if (outputMax === Infinity) {
    result = result + outputMin;
  } else {
    result = result * (outputMax - outputMin) + outputMin;
  }

  return result;
}

function colorToRgba(input) {
  var int32Color = normalizeColor(input);
  if (int32Color === null) {
    return input;
  }

  int32Color = int32Color || 0;

  var r = (int32Color & 0xff000000) >>> 24;
  var g = (int32Color & 0x00ff0000) >>> 16;
  var b = (int32Color & 0x0000ff00) >>> 8;
  var a = (int32Color & 0x000000ff) / 255;

  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';
}

var stringShapeRegex = /[0-9\.-]+/g;

function createInterpolationFromStringOutputRange(config) {
  var outputRange = config.outputRange;
  invariant(outputRange.length >= 2, 'Bad output range');
  outputRange = outputRange.map(colorToRgba);
  checkPattern(outputRange);

  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {
    return [];
  });
  outputRange.forEach(function (value) {
    value.match(stringShapeRegex).forEach(function (number, i) {
      outputRanges[i].push(+number);
    });
  });

  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {
    return Interpolation.create(babelHelpers.extends({}, config, {
      outputRange: outputRanges[i]
    }));
  });

  var shouldRound = isRgbOrRgba(outputRange[0]);

  return function (input) {
    var i = 0;

    return outputRange[0].replace(stringShapeRegex, function () {
      var val = +interpolations[i++](input);
      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;
      return String(rounded);
    });
  };
}

function isRgbOrRgba(range) {
  return typeof range === 'string' && range.startsWith('rgb');
}

function checkPattern(arr) {
  var pattern = arr[0].replace(stringShapeRegex, '');
  for (var i = 1; i < arr.length; ++i) {
    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);
  }
}

function findRange(input, inputRange) {
  for (var i = 1; i < inputRange.length - 1; ++i) {
    if (inputRange[i] >= input) {
      break;
    }
  }
  return i - 1;
}

function checkValidInputRange(arr) {
  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');
  for (var i = 1; i < arr.length; ++i) {
    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);
  }
}

function checkInfiniteRange(name, arr) {
  invariant(arr.length >= 2, name + ' must have at least 2 elements');
  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);
}

module.exports = Interpolation;
}, 306, null, "Interpolation");
__d(/* NativeAnimatedHelper */function(global, require, module, exports) {
'use strict';

var NativeAnimatedModule = require(48             ).NativeAnimatedModule; // 48 = NativeModules
var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var __nativeAnimatedNodeTagCount = 1;
var __nativeAnimationIdCount = 1;

var nativeEventEmitter = void 0;

var API = {
  createAnimatedNode: function createAnimatedNode(tag, config) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.createAnimatedNode(tag, config);
  },
  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);
  },
  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);
  },
  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);
  },
  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);
  },
  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);
  },
  stopAnimation: function stopAnimation(animationId) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopAnimation(animationId);
  },
  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);
  },
  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);
  },
  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);
  },
  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);
  },
  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);
  },
  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);
  },
  dropAnimatedNode: function dropAnimatedNode(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.dropAnimatedNode(tag);
  },
  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);
  },
  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);
  }
};

var STYLES_WHITELIST = {
  opacity: true,
  transform: true,

  scaleX: true,
  scaleY: true,
  translateX: true,
  translateY: true
};

var TRANSFORM_WHITELIST = {
  translateX: true,
  translateY: true,
  scale: true,
  scaleX: true,
  scaleY: true,
  rotate: true,
  rotateX: true,
  rotateY: true,
  perspective: true
};

function validateTransform(configs) {
  configs.forEach(function (config) {
    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {
      throw new Error('Property \'' + config.property + '\' is not supported by native animated module');
    }
  });
}

function validateStyles(styles) {
  for (var key in styles) {
    if (!STYLES_WHITELIST.hasOwnProperty(key)) {
      throw new Error('Style property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function validateInterpolation(config) {
  var SUPPORTED_INTERPOLATION_PARAMS = {
    inputRange: true,
    outputRange: true,
    extrapolate: true,
    extrapolateRight: true,
    extrapolateLeft: true
  };
  for (var key in config) {
    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(key)) {
      throw new Error('Interpolation property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function generateNewNodeTag() {
  return __nativeAnimatedNodeTagCount++;
}

function generateNewAnimationId() {
  return __nativeAnimationIdCount++;
}

function assertNativeAnimatedModule() {
  invariant(NativeAnimatedModule, 'Native animated module is not available');
}

function isNativeAnimatedAvailable() {
  return !!NativeAnimatedModule;
}

module.exports = {
  API: API,
  validateStyles: validateStyles,
  validateTransform: validateTransform,
  validateInterpolation: validateInterpolation,
  generateNewNodeTag: generateNewNodeTag,
  generateNewAnimationId: generateNewAnimationId,
  assertNativeAnimatedModule: assertNativeAnimatedModule,
  isNativeAnimatedAvailable: isNativeAnimatedAvailable,
  get nativeEventEmitter() {
    if (!nativeEventEmitter) {
      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);
    }
    return nativeEventEmitter;
  }
};
}, 307, null, "NativeAnimatedHelper");
__d(/* SpringConfig */function(global, require, module, exports) {

'use strict';

function tensionFromOrigamiValue(oValue) {
  return (oValue - 30) * 3.62 + 194;
}

function frictionFromOrigamiValue(oValue) {
  return (oValue - 8) * 3 + 25;
}

function fromOrigamiTensionAndFriction(tension, friction) {
  return {
    tension: tensionFromOrigamiValue(tension),
    friction: frictionFromOrigamiValue(friction)
  };
}

function fromBouncinessAndSpeed(bounciness, speed) {
  function normalize(value, startValue, endValue) {
    return (value - startValue) / (endValue - startValue);
  }

  function projectNormal(n, start, end) {
    return start + n * (end - start);
  }

  function linearInterpolation(t, start, end) {
    return t * end + (1 - t) * start;
  }

  function quadraticOutInterpolation(t, start, end) {
    return linearInterpolation(2 * t - t * t, start, end);
  }

  function b3Friction1(x) {
    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
  }

  function b3Friction2(x) {
    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
  }

  function b3Friction3(x) {
    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
  }

  function b3Nobounce(tension) {
    if (tension <= 18) {
      return b3Friction1(tension);
    } else if (tension > 18 && tension <= 44) {
      return b3Friction2(tension);
    } else {
      return b3Friction3(tension);
    }
  }

  var b = normalize(bounciness / 1.7, 0, 20);
  b = projectNormal(b, 0, 0.8);
  var s = normalize(speed / 1.7, 0, 20);
  var bouncyTension = projectNormal(s, 0.5, 200);
  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);

  return {
    tension: tensionFromOrigamiValue(bouncyTension),
    friction: frictionFromOrigamiValue(bouncyFriction)
  };
}

module.exports = {
  fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,
  fromBouncinessAndSpeed: fromBouncinessAndSpeed
};
}, 308, null, "SpringConfig");
__d(/* fbjs/lib/requestAnimationFrame.js */function(global, require, module, exports) {'use strict';

var emptyFunction = require(20               ); // 20 = ./emptyFunction
var nativeRequestAnimationFrame = require(310                            ); // 310 = ./nativeRequestAnimationFrame

var lastTime = 0;

var requestAnimationFrame = nativeRequestAnimationFrame || function (callback) {
  var currTime = Date.now();
  var timeDelay = Math.max(0, 16 - (currTime - lastTime));
  lastTime = currTime + timeDelay;
  return global.setTimeout(function () {
    callback(Date.now());
  }, timeDelay);
};

requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
}, 309, null, "fbjs/lib/requestAnimationFrame.js");
__d(/* fbjs/lib/nativeRequestAnimationFrame.js */function(global, require, module, exports) {"use strict";

var nativeRequestAnimationFrame = global.requestAnimationFrame || global.webkitRequestAnimationFrame || global.mozRequestAnimationFrame || global.oRequestAnimationFrame || global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
}, 310, null, "fbjs/lib/nativeRequestAnimationFrame.js");
__d(/* Easing */function(global, require, module, exports) {
'use strict';

var _ease = void 0;

var Easing = function () {
  function Easing() {
    babelHelpers.classCallCheck(this, Easing);
  }

  babelHelpers.createClass(Easing, null, [{
    key: 'step0',
    value: function step0(n) {
      return n > 0 ? 1 : 0;
    }
  }, {
    key: 'step1',
    value: function step1(n) {
      return n >= 1 ? 1 : 0;
    }
  }, {
    key: 'linear',
    value: function linear(t) {
      return t;
    }
  }, {
    key: 'ease',
    value: function ease(t) {
      if (!_ease) {
        _ease = Easing.bezier(0.42, 0, 1, 1);
      }
      return _ease(t);
    }
  }, {
    key: 'quad',
    value: function quad(t) {
      return t * t;
    }
  }, {
    key: 'cubic',
    value: function cubic(t) {
      return t * t * t;
    }
  }, {
    key: 'poly',
    value: function poly(n) {
      return function (t) {
        return Math.pow(t, n);
      };
    }
  }, {
    key: 'sin',
    value: function sin(t) {
      return 1 - Math.cos(t * Math.PI / 2);
    }
  }, {
    key: 'circle',
    value: function circle(t) {
      return 1 - Math.sqrt(1 - t * t);
    }
  }, {
    key: 'exp',
    value: function exp(t) {
      return Math.pow(2, 10 * (t - 1));
    }
  }, {
    key: 'elastic',
    value: function elastic() {
      var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      var p = bounciness * Math.PI;
      return function (t) {
        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);
      };
    }
  }, {
    key: 'back',
    value: function back(s) {
      if (s === undefined) {
        s = 1.70158;
      }
      return function (t) {
        return t * t * ((s + 1) * t - s);
      };
    }
  }, {
    key: 'bounce',
    value: function bounce(t) {
      if (t < 1 / 2.75) {
        return 7.5625 * t * t;
      }

      if (t < 2 / 2.75) {
        t -= 1.5 / 2.75;
        return 7.5625 * t * t + 0.75;
      }

      if (t < 2.5 / 2.75) {
        t -= 2.25 / 2.75;
        return 7.5625 * t * t + 0.9375;
      }

      t -= 2.625 / 2.75;
      return 7.5625 * t * t + 0.984375;
    }
  }, {
    key: 'bezier',
    value: function bezier(x1, y1, x2, y2) {
      var _bezier = require(312     ); // 312 = bezier
      return _bezier(x1, y1, x2, y2);
    }
  }, {
    key: 'in',
    value: function _in(easing) {
      return easing;
    }
  }, {
    key: 'out',
    value: function out(easing) {
      return function (t) {
        return 1 - easing(1 - t);
      };
    }
  }, {
    key: 'inOut',
    value: function inOut(easing) {
      return function (t) {
        if (t < 0.5) {
          return easing(t * 2) / 2;
        }
        return 1 - easing((1 - t) * 2) / 2;
      };
    }
  }]);
  return Easing;
}();

module.exports = Easing;
}, 311, null, "Easing");
__d(/* bezier */function(global, require, module, exports) {
'use strict';

var NEWTON_ITERATIONS = 4;
var NEWTON_MIN_SLOPE = 0.001;
var SUBDIVISION_PRECISION = 0.0000001;
var SUBDIVISION_MAX_ITERATIONS = 10;

var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

var float32ArraySupported = typeof Float32Array === 'function';

function A(aA1, aA2) {
  return 1.0 - 3.0 * aA2 + 3.0 * aA1;
}
function B(aA1, aA2) {
  return 3.0 * aA2 - 6.0 * aA1;
}
function C(aA1) {
  return 3.0 * aA1;
}

function calcBezier(aT, aA1, aA2) {
  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
}

function getSlope(aT, aA1, aA2) {
  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
}

function binarySubdivide(aX, aA, aB, mX1, mX2) {
  var currentX,
      currentT,
      i = 0;
  do {
    currentT = aA + (aB - aA) / 2.0;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0.0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
  return currentT;
}

function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
    var currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0.0) {
      return aGuessT;
    }
    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}

module.exports = function bezier(mX1, mY1, mX2, mY2) {
  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
    throw new Error('bezier x values must be in [0, 1] range');
  }

  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
  if (mX1 !== mY1 || mX2 !== mY2) {
    for (var i = 0; i < kSplineTableSize; ++i) {
      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    }
  }

  function getTForX(aX) {
    var intervalStart = 0.0;
    var currentSample = 1;
    var lastSample = kSplineTableSize - 1;

    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;

    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    var guessForT = intervalStart + dist * kSampleStepSize;

    var initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= NEWTON_MIN_SLOPE) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0.0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }

  return function BezierEasing(x) {
    if (mX1 === mY1 && mX2 === mY2) {
      return x;
    }

    if (x === 0) {
      return 0;
    }
    if (x === 1) {
      return 1;
    }
    return calcBezier(getTForX(x), mY1, mY2);
  };
};
}, 312, null, "bezier");
__d(/* Image */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Image\\Image.android.js';
var ImageResizeMode = require(238              ); // 238 = ImageResizeMode
var ImageStylePropTypes = require(237                  ); // 237 = ImageStylePropTypes
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var NativeModules = require(48             ); // 48 = NativeModules
var PropTypes = require(43                        ); // 43 = react/lib/ReactPropTypes
var React = require(235    ); // 235 = React
var ReactNativeViewAttributes = require(250                        ); // 250 = ReactNativeViewAttributes
var Set = require(175  ); // 175 = Set
var StyleSheet = require(262         ); // 262 = StyleSheet
var StyleSheetPropType = require(257                 ); // 257 = StyleSheetPropType
var View = require(234   ); // 234 = View
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var filterObject = require(314                    ); // 314 = fbjs/lib/filterObject
var flattenStyle = require(128           ); // 128 = flattenStyle
var merge = require(254    ); // 254 = merge
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent
var resolveAssetSource = require(277                 ); // 277 = resolveAssetSource

var PropTypes = React.PropTypes;
var ImageLoader = NativeModules.ImageLoader;


var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var ImageViewAttributes = merge(ReactNativeViewAttributes.UIView, {
  src: true,
  loadingIndicatorSrc: true,
  resizeMethod: true,
  resizeMode: true,
  progressiveRenderingEnabled: true,
  fadeDuration: true,
  shouldNotifyLoadEvents: true
});

var ViewStyleKeys = new Set(Object.keys(ViewStylePropTypes));
var ImageSpecificStyleKeys = new Set(Object.keys(ImageStylePropTypes).filter(function (x) {
  return !ViewStyleKeys.has(x);
}));

var Image = React.createClass({
  displayName: 'Image',

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    style: StyleSheetPropType(ImageStylePropTypes),

    source: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string,
      headers: PropTypes.objectOf(PropTypes.string)
    }), PropTypes.number, PropTypes.arrayOf(PropTypes.shape({
      uri: PropTypes.string,
      width: PropTypes.number,
      height: PropTypes.number
    }))]),

    blurRadius: PropTypes.number,

    loadingIndicatorSource: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string
    }), PropTypes.number]),
    progressiveRenderingEnabled: PropTypes.bool,
    fadeDuration: PropTypes.number,

    onLoadStart: PropTypes.func,

    onError: PropTypes.func,

    onLoad: PropTypes.func,

    onLoadEnd: PropTypes.func,

    testID: PropTypes.string,

    resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),

    resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'center'])
  }),

  statics: {
    resizeMode: ImageResizeMode,

    getSize: function getSize(url, success, failure) {
      return ImageLoader.getSize(url).then(function (sizes) {
        success(sizes.width, sizes.height);
      }).catch(failure || function () {
        console.warn('Failed to get size for image: ' + url);
      });
    },
    prefetch: function prefetch(url, callback) {
      var requestId = generateRequestId();
      callback && callback(requestId);
      return ImageLoader.prefetchImage(url, requestId);
    },
    abortPrefetch: function abortPrefetch(requestId) {
      ImageLoader.abortRequest(requestId);
    },
    queryCache: function queryCache(urls) {
      return regeneratorRuntime.async(function queryCache$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(ImageLoader.queryCache(urls));

            case 2:
              return _context.abrupt('return', _context.sent);

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    },

    resolveAssetSource: resolveAssetSource
  },

  mixins: [NativeMethodsMixin],

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  _updateViewConfig: function _updateViewConfig(props) {
    if (props.children) {
      this.viewConfig = {
        uiViewClassName: 'RCTView',
        validAttributes: ReactNativeViewAttributes.RCTView
      };
    } else {
      this.viewConfig = {
        uiViewClassName: 'RCTImageView',
        validAttributes: ImageViewAttributes
      };
    }
  },

  componentWillMount: function componentWillMount() {
    this._updateViewConfig(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this._updateViewConfig(nextProps);
  },

  contextTypes: {
    isInAParentText: React.PropTypes.bool
  },

  render: function render() {
    var source = resolveAssetSource(this.props.source);
    var loadingIndicatorSource = resolveAssetSource(this.props.loadingIndicatorSource);

    if (source && source.uri === '') {
      console.warn('source.uri should not be an empty string');
    }

    if (this.props.src) {
      console.warn('The <Image> component requires a `source` property rather than `src`.');
    }

    if (source && (source.uri || Array.isArray(source))) {
      var style = void 0;
      var sources = void 0;
      if (source.uri) {
        var _width = source.width,
            _height = source.height;

        style = flattenStyle([{ width: _width, height: _height }, styles.base, this.props.style]);
        sources = [{ uri: source.uri }];
      } else {
        style = flattenStyle([styles.base, this.props.style]);
        sources = source;
      }

      var _props = this.props,
          onLoadStart = _props.onLoadStart,
          onLoad = _props.onLoad,
          onLoadEnd = _props.onLoadEnd,
          onError = _props.onError;

      var nativeProps = merge(this.props, {
        style: style,
        shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),
        src: sources,
        headers: source.headers,
        loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null
      });

      if (nativeProps.children) {
        var containerStyle = filterObject(style, function (val, key) {
          return !ImageSpecificStyleKeys.has(key);
        });
        var imageStyle = filterObject(style, function (val, key) {
          return ImageSpecificStyleKeys.has(key);
        });
        var imageProps = merge(nativeProps, {
          style: [imageStyle, styles.absoluteImage],
          children: undefined
        });

        return React.createElement(
          View,
          { style: containerStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 328
            }
          },
          React.createElement(RKImage, babelHelpers.extends({}, imageProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 329
            }
          })),
          this.props.children
        );
      } else {
        if (this.context.isInAParentText) {
          return React.createElement(RCTTextInlineImage, babelHelpers.extends({}, nativeProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 335
            }
          }));
        } else {
          return React.createElement(RKImage, babelHelpers.extends({}, nativeProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 337
            }
          }));
        }
      }
    }
    return null;
  }
});

var styles = StyleSheet.create({
  base: {
    overflow: 'hidden'
  },
  absoluteImage: {
    left: 0,
    right: 0,
    top: 0,
    bottom: 0,
    position: 'absolute'
  }
});

var cfg = {
  nativeOnly: {
    src: true,
    headers: true,
    loadingIndicatorSrc: true,
    shouldNotifyLoadEvents: true
  }
};
var RKImage = requireNativeComponent('RCTImageView', Image, cfg);
var RCTTextInlineImage = requireNativeComponent('RCTTextInlineImage', Image, cfg);

module.exports = Image;
}, 313, null, "Image");
__d(/* fbjs/lib/filterObject.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function filterObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name) && callback.call(context, object[name], name, object)) {
      result[name] = object[name];
    }
  }
  return result;
}

module.exports = filterObject;
}, 314, null, "fbjs/lib/filterObject.js");
__d(/* ScrollView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\ScrollView\\ScrollView.js';
var Animated = require(301       ); // 301 = Animated
var ColorPropType = require(82             ); // 82 = ColorPropType
var EdgeInsetsPropType = require(252                 ); // 252 = EdgeInsetsPropType
var Platform = require(61        ); // 61 = Platform
var PointPropType = require(316            ); // 316 = PointPropType
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var ScrollResponder = require(317              ); // 317 = ScrollResponder
var ScrollViewStickyHeader = require(320                     ); // 320 = ScrollViewStickyHeader
var StyleSheet = require(262         ); // 262 = StyleSheet
var StyleSheetPropType = require(257                 ); // 257 = StyleSheetPropType
var View = require(234   ); // 234 = View
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var dismissKeyboard = require(76               ); // 76 = dismissKeyboard
var flattenStyle = require(128           ); // 128 = flattenStyle
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var processDecelerationRate = require(321                      ); // 321 = processDecelerationRate
var PropTypes = React.PropTypes;
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var ScrollView = React.createClass({
  displayName: 'ScrollView',

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    automaticallyAdjustContentInsets: PropTypes.bool,

    contentInset: EdgeInsetsPropType,

    contentOffset: PointPropType,

    bounces: PropTypes.bool,

    bouncesZoom: PropTypes.bool,

    alwaysBounceHorizontal: PropTypes.bool,

    alwaysBounceVertical: PropTypes.bool,

    centerContent: PropTypes.bool,

    contentContainerStyle: StyleSheetPropType(ViewStylePropTypes),

    decelerationRate: PropTypes.oneOfType([PropTypes.oneOf(['fast', 'normal']), PropTypes.number]),

    horizontal: PropTypes.bool,

    indicatorStyle: PropTypes.oneOf(['default', 'black', 'white']),

    directionalLockEnabled: PropTypes.bool,

    canCancelContentTouches: PropTypes.bool,

    keyboardDismissMode: PropTypes.oneOf(['none', 'interactive', 'on-drag']),

    keyboardShouldPersistTaps: PropTypes.oneOf(['always', 'never', 'handled', false, true]),

    maximumZoomScale: PropTypes.number,

    minimumZoomScale: PropTypes.number,

    onScroll: PropTypes.func,

    onScrollAnimationEnd: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    pagingEnabled: PropTypes.bool,

    scrollEnabled: PropTypes.bool,

    scrollEventThrottle: PropTypes.number,

    scrollIndicatorInsets: EdgeInsetsPropType,

    scrollsToTop: PropTypes.bool,

    showsHorizontalScrollIndicator: PropTypes.bool,

    showsVerticalScrollIndicator: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number),
    style: StyleSheetPropType(ViewStylePropTypes),

    snapToInterval: PropTypes.number,

    snapToAlignment: PropTypes.oneOf(['start', 'center', 'end']),

    removeClippedSubviews: PropTypes.bool,

    zoomScale: PropTypes.number,

    refreshControl: PropTypes.element,

    endFillColor: ColorPropType,

    scrollPerfTag: PropTypes.string,

    overScrollMode: PropTypes.oneOf(['auto', 'always', 'never'])
  }),

  mixins: [ScrollResponder.Mixin],

  _scrollAnimatedValue: new Animated.Value(0),
  _scrollAnimatedValueAttachment: null,
  _stickyHeaderRefs: new Map(),
  _headerLayoutYs: new Map(),
  getInitialState: function getInitialState() {
    return this.scrollResponderMixinGetInitialState();
  },

  componentWillMount: function componentWillMount() {
    this._scrollAnimatedValue = new Animated.Value(0);
    this._stickyHeaderRefs = new Map();
    this._headerLayoutYs = new Map();
  },

  componentDidMount: function componentDidMount() {
    this._updateAnimatedNodeAttachment();
  },

  componentDidUpdate: function componentDidUpdate() {
    this._updateAnimatedNodeAttachment();
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._scrollAnimatedValueAttachment) {
      this._scrollAnimatedValueAttachment.detach();
    }
  },

  setNativeProps: function setNativeProps(props) {
    this._scrollViewRef && this._scrollViewRef.setNativeProps(props);
  },

  getScrollResponder: function getScrollResponder() {
    return this;
  },

  getScrollableNode: function getScrollableNode() {
    return ReactNative.findNodeHandle(this._scrollViewRef);
  },

  getInnerViewNode: function getInnerViewNode() {
    return ReactNative.findNodeHandle(this._innerViewRef);
  },

  scrollTo: function scrollTo(y, x, animated) {
    if (typeof y === 'number') {
      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, ' + 'animated: true})` instead.');
    } else {
      var _ref = y || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    this.getScrollResponder().scrollResponderScrollTo({ x: x || 0, y: y || 0, animated: animated !== false });
  },

  scrollToEnd: function scrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    this.getScrollResponder().scrollResponderScrollToEnd({
      animated: animated
    });
  },

  scrollWithoutAnimationTo: function scrollWithoutAnimationTo() {
    var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');
    this.scrollTo({ x: x, y: y, animated: false });
  },

  _getKeyForIndex: function _getKeyForIndex(index, childArray) {
    var child = childArray[index];
    return child && child.key;
  },

  _updateAnimatedNodeAttachment: function _updateAnimatedNodeAttachment() {
    if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {
      if (!this._scrollAnimatedValueAttachment) {
        this._scrollAnimatedValueAttachment = Animated.attachNativeEvent(this._scrollViewRef, 'onScroll', [{ nativeEvent: { contentOffset: { y: this._scrollAnimatedValue } } }]);
      }
    } else {
      if (this._scrollAnimatedValueAttachment) {
        this._scrollAnimatedValueAttachment.detach();
      }
    }
  },

  _setStickyHeaderRef: function _setStickyHeaderRef(key, ref) {
    if (ref) {
      this._stickyHeaderRefs.set(key, ref);
    } else {
      this._stickyHeaderRefs.delete(key);
    }
  },

  _onStickyHeaderLayout: function _onStickyHeaderLayout(index, event, key) {
    if (!this.props.stickyHeaderIndices) {
      return;
    }
    var childArray = React.Children.toArray(this.props.children);
    if (key !== this._getKeyForIndex(index, childArray)) {
      return;
    }

    var layoutY = event.nativeEvent.layout.y;
    this._headerLayoutYs.set(key, layoutY);

    var indexOfIndex = this.props.stickyHeaderIndices.indexOf(index);
    var previousHeaderIndex = this.props.stickyHeaderIndices[indexOfIndex - 1];
    if (previousHeaderIndex != null) {
      var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));
      previousHeader && previousHeader.setNextHeaderY(layoutY);
    }
  },

  _handleScroll: function _handleScroll(e) {
    if (__DEV__) {
      if (this.props.onScroll && this.props.scrollEventThrottle == null && Platform.OS === 'ios') {
        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + 'cause frame drops, use a bigger number if you don\'t need as ' + 'much precision.');
      }
    }
    if (Platform.OS === 'android') {
      if (this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }
    this.scrollResponderHandleScroll(e);
  },

  _handleContentOnLayout: function _handleContentOnLayout(e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        width = _e$nativeEvent$layout.width,
        height = _e$nativeEvent$layout.height;

    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _scrollViewRef: null,
  _setScrollViewRef: function _setScrollViewRef(ref) {
    this._scrollViewRef = ref;
  },

  _innerViewRef: null,
  _setInnerViewRef: function _setInnerViewRef(ref) {
    this._innerViewRef = ref;
  },

  render: function render() {
    var _this = this;

    var ScrollViewClass = void 0;
    var ScrollContentContainerViewClass = void 0;
    if (Platform.OS === 'ios') {
      ScrollViewClass = RCTScrollView;
      ScrollContentContainerViewClass = RCTScrollContentView;
    } else if (Platform.OS === 'android') {
      if (this.props.horizontal) {
        ScrollViewClass = AndroidHorizontalScrollView;
      } else {
        ScrollViewClass = AndroidScrollView;
      }
      ScrollContentContainerViewClass = View;
    }

    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');

    invariant(ScrollContentContainerViewClass !== undefined, 'ScrollContentContainerViewClass must not be undefined');

    var contentContainerStyle = [this.props.horizontal && styles.contentContainerHorizontal, this.props.contentContainerStyle];
    var style = void 0,
        childLayoutProps = void 0;
    if (__DEV__ && this.props.style) {
      style = flattenStyle(this.props.style);
      childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {
        return style && style[prop] !== undefined;
      });
      invariant(childLayoutProps.length === 0, 'ScrollView child layout (' + JSON.stringify(childLayoutProps) + ') must be applied through the contentContainerStyle prop.');
    }

    var contentSizeChangeProps = {};
    if (this.props.onContentSizeChange) {
      contentSizeChangeProps = {
        onLayout: this._handleContentOnLayout
      };
    }

    var stickyHeaderIndices = this.props.stickyHeaderIndices;

    var hasStickyHeaders = stickyHeaderIndices && stickyHeaderIndices.length > 0;
    var childArray = hasStickyHeaders && React.Children.toArray(this.props.children);
    var children = hasStickyHeaders ? childArray.map(function (child, index) {
      var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;
      if (indexOfIndex > -1) {
        var key = child.key;
        var nextIndex = stickyHeaderIndices[indexOfIndex + 1];
        return React.createElement(
          ScrollViewStickyHeader,
          {
            key: key,
            ref: function ref(_ref2) {
              return _this._setStickyHeaderRef(key, _ref2);
            },
            nextHeaderLayoutY: _this._headerLayoutYs.get(_this._getKeyForIndex(nextIndex, childArray)),
            onLayout: function onLayout(event) {
              return _this._onStickyHeaderLayout(index, event, key);
            },
            scrollAnimatedValue: _this._scrollAnimatedValue, __source: {
              fileName: _jsxFileName,
              lineNumber: 632
            }
          },
          child
        );
      } else {
        return child;
      }
    }) : this.props.children;
    var contentContainer = React.createElement(
      ScrollContentContainerViewClass,
      babelHelpers.extends({}, contentSizeChangeProps, {
        ref: this._setInnerViewRef,
        style: contentContainerStyle,
        removeClippedSubviews: hasStickyHeaders && Platform.OS === 'android' ? false : this.props.removeClippedSubviews,
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 649
        }
      }),
      children
    );

    var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;

    var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;

    var baseStyle = this.props.horizontal ? styles.baseHorizontal : styles.baseVertical;
    var props = babelHelpers.extends({}, this.props, {
      alwaysBounceHorizontal: alwaysBounceHorizontal,
      alwaysBounceVertical: alwaysBounceVertical,
      style: [baseStyle, this.props.style],

      onContentSizeChange: null,
      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,
      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,
      onResponderGrant: this.scrollResponderHandleResponderGrant,
      onResponderReject: this.scrollResponderHandleResponderReject,
      onResponderRelease: this.scrollResponderHandleResponderRelease,
      onResponderTerminate: this.scrollResponderHandleTerminate,
      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,
      onScroll: this._handleScroll,
      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,
      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,
      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,
      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,
      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,
      onTouchEnd: this.scrollResponderHandleTouchEnd,
      onTouchMove: this.scrollResponderHandleTouchMove,
      onTouchStart: this.scrollResponderHandleTouchStart,
      scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,
      sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false
    });

    var decelerationRate = this.props.decelerationRate;

    if (decelerationRate) {
      props.decelerationRate = processDecelerationRate(decelerationRate);
    }

    var refreshControl = this.props.refreshControl;

    if (refreshControl) {
      if (Platform.OS === 'ios') {
        return React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 712
            }
          }),
          Platform.isTVOS ? null : refreshControl,
          contentContainer
        );
      } else if (Platform.OS === 'android') {

        return React.cloneElement(refreshControl, { style: props.style }, React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { style: baseStyle, ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 727
            }
          }),
          contentContainer
        ));
      }
    }
    return React.createElement(
      ScrollViewClass,
      babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 734
        }
      }),
      contentContainer
    );
  }
});

var styles = StyleSheet.create({
  baseVertical: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'column',
    overflow: 'scroll'
  },
  baseHorizontal: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'row',
    overflow: 'scroll'
  },
  contentContainerHorizontal: {
    flexDirection: 'row'
  }
});

var nativeOnlyProps = void 0,
    AndroidScrollView = void 0,
    AndroidHorizontalScrollView = void 0,
    RCTScrollView = void 0,
    RCTScrollContentView = void 0;
if (Platform.OS === 'android') {
  nativeOnlyProps = {
    nativeOnly: {
      sendMomentumEvents: true
    }
  };
  AndroidScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  AndroidHorizontalScrollView = requireNativeComponent('AndroidHorizontalScrollView', ScrollView, nativeOnlyProps);
} else if (Platform.OS === 'ios') {
  nativeOnlyProps = {
    nativeOnly: {
      onMomentumScrollBegin: true,
      onMomentumScrollEnd: true,
      onScrollBeginDrag: true,
      onScrollEndDrag: true
    }
  };
  RCTScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  RCTScrollContentView = requireNativeComponent('RCTScrollContentView', View);
}

module.exports = ScrollView;
}, 315, null, "ScrollView");
__d(/* PointPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(235    ).PropTypes; // 235 = React

var createStrictShapeTypeChecker = require(253                           ); // 253 = createStrictShapeTypeChecker

var PointPropType = createStrictShapeTypeChecker({
  x: PropTypes.number,
  y: PropTypes.number
});

module.exports = PointPropType;
}, 316, null, "PointPropType");
__d(/* ScrollResponder */function(global, require, module, exports) {
'use strict';

var Dimensions = require(264         ); // 264 = Dimensions
var FrameRateLogger = require(318              ); // 318 = FrameRateLogger
var Platform = require(61        ); // 61 = Platform
var Keyboard = require(75        ); // 75 = Keyboard
var ReactNative = require(85           ); // 85 = ReactNative
var Subscribable = require(319           ); // 319 = Subscribable
var TextInputState = require(77              ); // 77 = TextInputState
var UIManager = require(78         ); // 78 = UIManager
var warning = require(19                ); // 19 = fbjs/lib/warning

var _require = require(129                       ), // 129 = ReactNativeComponentTree
    getInstanceFromNode = _require.getInstanceFromNode;

var _require2 = require(48             ), // 48 = NativeModules
    ScrollViewManager = _require2.ScrollViewManager;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;

function isTagInstanceOfTextInput(tag) {
  var instance = getInstanceFromNode(tag);
  return instance && instance.viewConfig && (instance.viewConfig.uiViewClassName === 'AndroidTextInput' || instance.viewConfig.uiViewClassName === 'RCTTextView' || instance.viewConfig.uiViewClassName === 'RCTTextField');
}

var ScrollResponderMixin = {
  mixins: [Subscribable.Mixin],
  scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {
    return {
      isTouching: false,
      lastMomentumScrollBeginTime: 0,
      lastMomentumScrollEndTime: 0,

      observedScrollSinceBecomingResponder: false,
      becameResponderWhileAnimating: false
    };
  },

  scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {
    return this.state.isTouching;
  },

  scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();

    if (this.props.keyboardShouldPersistTaps === 'handled' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput) {
      return true;
    }
    return false;
  },

  scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';
    if (keyboardNeverPersistTaps && currentlyFocusedTextInput != null && !isTagInstanceOfTextInput(e.target)) {
      return true;
    }
    return this.scrollResponderIsAnimating();
  },

  scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {},

  scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {
    return !this.state.observedScrollSinceBecomingResponder;
  },

  scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {
    var nativeEvent = e.nativeEvent;
    this.state.isTouching = nativeEvent.touches.length !== 0;
    this.props.onTouchEnd && this.props.onTouchEnd(e);
  },

  scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {
    this.props.onResponderRelease && this.props.onResponderRelease(e);

    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    if (this.props.keyboardShouldPersistTaps !== true && this.props.keyboardShouldPersistTaps !== 'always' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {
      this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);
      TextInputState.blurTextInput(currentlyFocusedTextInput);
    }
  },

  scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {
    this.state.observedScrollSinceBecomingResponder = true;
    this.props.onScroll && this.props.onScroll(e);
  },

  scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {
    this.state.observedScrollSinceBecomingResponder = false;
    this.props.onResponderGrant && this.props.onResponderGrant(e);
    this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();
  },

  scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {
    FrameRateLogger.beginScroll();
    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);
  },

  scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {
    var velocity = e.nativeEvent.velocity;

    if (!this.scrollResponderIsAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {
      FrameRateLogger.endScroll();
    }
    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);
  },

  scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {
    this.state.lastMomentumScrollBeginTime = Date.now();
    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);
  },

  scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {
    FrameRateLogger.endScroll();
    this.state.lastMomentumScrollEndTime = Date.now();
    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);
  },

  scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {
    this.state.isTouching = true;
    this.props.onTouchStart && this.props.onTouchStart(e);
  },

  scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {
    this.props.onTouchMove && this.props.onTouchMove(e);
  },

  scrollResponderIsAnimating: function scrollResponderIsAnimating() {
    var now = Date.now();
    var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;
    var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
    return isAnimating;
  },

  scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {
    return this.getScrollableNode ? this.getScrollableNode() : ReactNative.findNodeHandle(this);
  },

  scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {
    if (typeof x === 'number') {
      console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');
    } else {
      var _ref = x || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.scrollTo, [x || 0, y || 0, animated !== false]);
  },

  scrollResponderScrollToEnd: function scrollResponderScrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.scrollToEnd, [animated]);
  },

  scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {
    console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');
    this.scrollResponderScrollTo({ x: offsetX, y: offsetY, animated: false });
  },

  scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated) {
    invariant(ScrollViewManager && ScrollViewManager.zoomToRect, 'zoomToRect is not implemented');
    if ('animated' in rect) {
      var animated = rect.animated,
          rect = babelHelpers.objectWithoutProperties(rect, ['animated']);
    } else if (typeof animated !== 'undefined') {
      console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');
    }
    ScrollViewManager.zoomToRect(this.scrollResponderGetScrollableNode(), rect, animated !== false);
  },

  scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {
    this.additionalScrollOffset = additionalOffset || 0;
    this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
    UIManager.measureLayout(nodeHandle, ReactNative.findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);
  },

  scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {
    var keyboardScreenY = Dimensions.get('window').height;
    if (this.keyboardWillOpenTo) {
      keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;
    }
    var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;

    if (this.preventNegativeScrollOffset) {
      scrollOffsetY = Math.max(0, scrollOffsetY);
    }
    this.scrollResponderScrollTo({ x: 0, y: scrollOffsetY, animated: true });

    this.additionalOffset = 0;
    this.preventNegativeScrollOffset = false;
  },

  scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(e) {
    console.error('Error measuring text field: ', e);
  },

  componentWillMount: function componentWillMount() {
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    warning(typeof keyboardShouldPersistTaps !== 'boolean', '\'keyboardShouldPersistTaps={' + keyboardShouldPersistTaps + '}\' is deprecated. ' + ('Use \'keyboardShouldPersistTaps="' + (keyboardShouldPersistTaps ? "always" : "never") + '"\' instead'));

    this.keyboardWillOpenTo = null;
    this.additionalScrollOffset = 0;
    this.addListenerOn(Keyboard, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
    this.addListenerOn(Keyboard, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
    this.addListenerOn(Keyboard, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
    this.addListenerOn(Keyboard, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);
  },

  scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {
    this.keyboardWillOpenTo = e;
    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);
  },

  scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);
  },

  scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {
    if (e) {
      this.keyboardWillOpenTo = e;
    }
    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);
  },

  scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);
  }

};

var ScrollResponder = {
  Mixin: ScrollResponderMixin
};

module.exports = ScrollResponder;
}, 317, null, "ScrollResponder");
__d(/* FrameRateLogger */function(global, require, module, exports) {
'use strict';

var NativeModules = require(48             ); // 48 = NativeModules

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var FrameRateLogger = {
  setGlobalOptions: function setGlobalOptions(options) {
    if (options.debug !== undefined) {
      invariant(NativeModules.FrameRateLogger, 'Trying to debug FrameRateLogger without the native module!');
    }
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setGlobalOptions(options);
  },

  setContext: function setContext(context) {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setContext(context);
  },

  beginScroll: function beginScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.beginScroll();
  },
  endScroll: function endScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.endScroll();
  }
};

module.exports = FrameRateLogger;
}, 318, null, "FrameRateLogger");
__d(/* Subscribable */function(global, require, module, exports) {
'use strict';

var Subscribable = {};

Subscribable.Mixin = {

  componentWillMount: function componentWillMount() {
    this._subscribableSubscriptions = [];
  },

  componentWillUnmount: function componentWillUnmount() {
    this._subscribableSubscriptions.forEach(function (subscription) {
      return subscription.remove();
    });
    this._subscribableSubscriptions = null;
  },

  addListenerOn: function addListenerOn(eventEmitter, eventType, listener, context) {
    this._subscribableSubscriptions.push(eventEmitter.addListener(eventType, listener, context));
  }
};

module.exports = Subscribable;
}, 319, null, "Subscribable");
__d(/* ScrollViewStickyHeader */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\ScrollView\\ScrollViewStickyHeader.js';
var Animated = require(301       ); // 301 = Animated
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet

var ScrollViewStickyHeader = function (_React$Component) {
  babelHelpers.inherits(ScrollViewStickyHeader, _React$Component);

  function ScrollViewStickyHeader(props, context) {
    babelHelpers.classCallCheck(this, ScrollViewStickyHeader);

    var _this = babelHelpers.possibleConstructorReturn(this, (ScrollViewStickyHeader.__proto__ || Object.getPrototypeOf(ScrollViewStickyHeader)).call(this, props, context));

    _this._onLayout = function (event) {
      _this.setState({
        measured: true,
        layoutY: event.nativeEvent.layout.y,
        layoutHeight: event.nativeEvent.layout.height
      });

      _this.props.onLayout(event);
      var child = React.Children.only(_this.props.children);
      if (child.props.onLayout) {
        child.props.onLayout(event);
      }
    };

    _this.state = {
      measured: false,
      layoutY: 0,
      layoutHeight: 0,
      nextHeaderLayoutY: props.nextHeaderLayoutY
    };
    return _this;
  }

  babelHelpers.createClass(ScrollViewStickyHeader, [{
    key: 'setNextHeaderY',
    value: function setNextHeaderY(y) {
      this.setState({ nextHeaderLayoutY: y });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          measured = _state.measured,
          layoutHeight = _state.layoutHeight,
          layoutY = _state.layoutY,
          nextHeaderLayoutY = _state.nextHeaderLayoutY;


      var translateY = void 0;
      if (measured) {
        var inputRange = [-1, 0, layoutY];
        var outputRange = [0, 0, 0];

        var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;
        if (collisionPoint >= layoutY) {
          inputRange.push(collisionPoint, collisionPoint + 1);
          outputRange.push(collisionPoint - layoutY, collisionPoint - layoutY);
        } else {
          inputRange.push(layoutY + 1);
          outputRange.push(1);
        }
        translateY = this.props.scrollAnimatedValue.interpolate({
          inputRange: inputRange,
          outputRange: outputRange
        });
      } else {
        translateY = 0;
      }

      var child = React.Children.only(this.props.children);

      return React.createElement(
        Animated.View,
        {
          collapsable: false,
          onLayout: this._onLayout,
          style: [child.props.style, styles.header, { transform: [{ translateY: translateY }] }], __source: {
            fileName: _jsxFileName,
            lineNumber: 100
          }
        },
        React.cloneElement(child, {
          style: styles.fill,
          onLayout: undefined })
      );
    }
  }]);
  return ScrollViewStickyHeader;
}(React.Component);

var styles = StyleSheet.create({
  header: {
    zIndex: 10
  },
  fill: {
    flex: 1
  }
});

module.exports = ScrollViewStickyHeader;
}, 320, null, "ScrollViewStickyHeader");
__d(/* processDecelerationRate */function(global, require, module, exports) {
'use strict';

function processDecelerationRate(decelerationRate) {
  if (decelerationRate === 'normal') {
    decelerationRate = 0.998;
  } else if (decelerationRate === 'fast') {
    decelerationRate = 0.99;
  }
  return decelerationRate;
}

module.exports = processDecelerationRate;
}, 321, null, "processDecelerationRate");
__d(/* DatePickerIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\DatePicker\\DatePickerIOS.android.js';
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var View = require(234   ); // 234 = View

var DummyDatePickerIOS = function (_React$Component) {
  babelHelpers.inherits(DummyDatePickerIOS, _React$Component);

  function DummyDatePickerIOS() {
    babelHelpers.classCallCheck(this, DummyDatePickerIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyDatePickerIOS.__proto__ || Object.getPrototypeOf(DummyDatePickerIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyDatePickerIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummyDatePickerIOS, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        },
        React.createElement(
          Text,
          { style: styles.datePickerText, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          'DatePickerIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyDatePickerIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummyDatePickerIOS: {
    height: 100,
    width: 300,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 10
  },
  datePickerText: {
    color: '#333333',
    margin: 20
  }
});

module.exports = DummyDatePickerIOS;
}, 322, null, "DatePickerIOS");
__d(/* DrawerLayoutAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\DrawerAndroid\\DrawerLayoutAndroid.android.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var StatusBar = require(324        ); // 324 = StatusBar
var StyleSheet = require(262         ); // 262 = StyleSheet
var UIManager = require(78         ); // 78 = UIManager
var View = require(234   ); // 234 = View

var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var DrawerConsts = UIManager.AndroidDrawerLayout.Constants;

var dismissKeyboard = require(76               ); // 76 = dismissKeyboard
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var RK_DRAWER_REF = 'drawerlayout';
var INNERVIEW_REF = 'innerView';

var DRAWER_STATES = ['Idle', 'Dragging', 'Settling'];

var DrawerLayoutAndroid = React.createClass({
  displayName: 'DrawerLayoutAndroid',

  statics: {
    positions: DrawerConsts.DrawerPosition
  },

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    keyboardDismissMode: ReactPropTypes.oneOf(['none', 'on-drag']),

    drawerBackgroundColor: ColorPropType,

    drawerPosition: ReactPropTypes.oneOf([DrawerConsts.DrawerPosition.Left, DrawerConsts.DrawerPosition.Right]),

    drawerWidth: ReactPropTypes.number,

    drawerLockMode: ReactPropTypes.oneOf(['unlocked', 'locked-closed', 'locked-open']),

    onDrawerSlide: ReactPropTypes.func,

    onDrawerStateChanged: ReactPropTypes.func,

    onDrawerOpen: ReactPropTypes.func,

    onDrawerClose: ReactPropTypes.func,

    renderNavigationView: ReactPropTypes.func.isRequired,

    statusBarBackgroundColor: ColorPropType
  }),

  mixins: [NativeMethodsMixin],

  getDefaultProps: function getDefaultProps() {
    return {
      drawerBackgroundColor: 'white'
    };
  },

  getInitialState: function getInitialState() {
    return { statusBarBackgroundColor: undefined };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this.refs[INNERVIEW_REF].getInnerViewNode();
  },

  componentDidMount: function componentDidMount() {
    this._updateStatusBarBackground();
  },

  componentDidReceiveProps: function componentDidReceiveProps() {
    this._updateStatusBarBackground();
  },

  render: function render() {
    var drawStatusBar = Platform.Version >= 21 && this.props.statusBarBackgroundColor;
    var drawerViewWrapper = React.createElement(
      View,
      {
        style: [styles.drawerSubview, { width: this.props.drawerWidth, backgroundColor: this.props.drawerBackgroundColor }],
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 184
        }
      },
      this.props.renderNavigationView(),
      drawStatusBar && React.createElement(View, { style: styles.drawerStatusBar, __source: {
          fileName: _jsxFileName,
          lineNumber: 191
        }
      })
    );
    var childrenWrapper = React.createElement(
      View,
      { ref: INNERVIEW_REF, style: styles.mainSubview, collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 194
        }
      },
      drawStatusBar && React.createElement(StatusBar, {
        translucent: true,
        backgroundColor: this.state.statusBarBackgroundColor,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 196
        }
      }),
      drawStatusBar && React.createElement(View, { style: [styles.statusBar, { backgroundColor: this.props.statusBarBackgroundColor }], __source: {
          fileName: _jsxFileName,
          lineNumber: 201
        }
      }),
      this.props.children
    );
    return React.createElement(
      AndroidDrawerLayout,
      babelHelpers.extends({}, this.props, {
        ref: RK_DRAWER_REF,
        drawerWidth: this.props.drawerWidth,
        drawerPosition: this.props.drawerPosition,
        drawerLockMode: this.props.drawerLockMode,
        style: [styles.base, this.props.style],
        onDrawerSlide: this._onDrawerSlide,
        onDrawerOpen: this._onDrawerOpen,
        onDrawerClose: this._onDrawerClose,
        onDrawerStateChanged: this._onDrawerStateChanged, __source: {
          fileName: _jsxFileName,
          lineNumber: 208
        }
      }),
      childrenWrapper,
      drawerViewWrapper
    );
  },

  _onDrawerSlide: function _onDrawerSlide(event) {
    if (this.props.onDrawerSlide) {
      this.props.onDrawerSlide(event);
    }
    if (this.props.keyboardDismissMode === 'on-drag') {
      dismissKeyboard();
    }
  },

  _onDrawerOpen: function _onDrawerOpen() {
    if (this.props.onDrawerOpen) {
      this.props.onDrawerOpen();
    }
  },

  _onDrawerClose: function _onDrawerClose() {
    if (this.props.onDrawerClose) {
      this.props.onDrawerClose();
    }
  },

  _onDrawerStateChanged: function _onDrawerStateChanged(event) {
    if (this.props.onDrawerStateChanged) {
      this.props.onDrawerStateChanged(DRAWER_STATES[event.nativeEvent.drawerState]);
    }
  },

  openDrawer: function openDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.openDrawer, null);
  },

  closeDrawer: function closeDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.closeDrawer, null);
  },

  _getDrawerLayoutHandle: function _getDrawerLayoutHandle() {
    return ReactNative.findNodeHandle(this.refs[RK_DRAWER_REF]);
  },

  _updateStatusBarBackground: function _updateStatusBarBackground() {
    var _this = this;

    if (Platform.Version >= 21 && this.props.statusBarBackgroundColor) {
      if (this.state.statusBarBackgroundColor !== 'transparent') {
        requestAnimationFrame(function () {
          _this.setState({ statusBarBackgroundColor: 'transparent' });
        });
      }
    } else {
      this.setState({ statusBarBackgroundColor: undefined });
    }
  }
});

var styles = StyleSheet.create({
  base: {
    flex: 1,
    elevation: 16
  },
  mainSubview: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  drawerSubview: {
    position: 'absolute',
    top: 0,
    bottom: 0
  },
  statusBar: {
    height: StatusBar.currentHeight
  },
  drawerStatusBar: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: StatusBar.currentHeight,
    backgroundColor: 'rgba(0, 0, 0, 0.251)'
  }
});

var AndroidDrawerLayout = requireNativeComponent('AndroidDrawerLayout', DrawerLayoutAndroid);

module.exports = DrawerLayoutAndroid;
}, 323, null, "DrawerLayoutAndroid");
__d(/* StatusBar */function(global, require, module, exports) {
'use strict';

var React = require(235    ); // 235 = React
var ColorPropType = require(82             ); // 82 = ColorPropType
var Platform = require(61        ); // 61 = Platform

var processColor = require(246           ); // 246 = processColor

var StatusBarManager = require(48             ).StatusBarManager; // 48 = NativeModules

function mergePropsStack(propsStack, defaultValues) {
  return propsStack.reduce(function (prev, cur) {
    for (var prop in cur) {
      if (cur[prop] != null) {
        prev[prop] = cur[prop];
      }
    }
    return prev;
  }, babelHelpers.extends({}, defaultValues));
}

function createStackEntry(props) {
  return {
    backgroundColor: props.backgroundColor != null ? {
      value: props.backgroundColor,
      animated: props.animated
    } : null,
    barStyle: props.barStyle != null ? {
      value: props.barStyle,
      animated: props.animated
    } : null,
    translucent: props.translucent,
    hidden: props.hidden != null ? {
      value: props.hidden,
      animated: props.animated,
      transition: props.showHideTransition
    } : null,
    networkActivityIndicatorVisible: props.networkActivityIndicatorVisible
  };
}

var StatusBar = function (_React$Component) {
  babelHelpers.inherits(StatusBar, _React$Component);

  function StatusBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, StatusBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = StatusBar.__proto__ || Object.getPrototypeOf(StatusBar)).call.apply(_ref, [this].concat(args))), _this), _this._stackEntry = null, _this._updatePropsStack = function () {
      clearImmediate(StatusBar._updateImmediate);
      StatusBar._updateImmediate = setImmediate(function () {
        var oldProps = StatusBar._currentValues;
        var mergedProps = mergePropsStack(StatusBar._propsStack, StatusBar._defaultProps);

        if (Platform.OS === 'ios') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value, mergedProps.barStyle.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value, mergedProps.hidden.animated ? mergedProps.hidden.transition : 'none');
          }

          if (!oldProps || oldProps.networkActivityIndicatorVisible !== mergedProps.networkActivityIndicatorVisible) {
            StatusBarManager.setNetworkActivityIndicatorVisible(mergedProps.networkActivityIndicatorVisible);
          }
        } else if (Platform.OS === 'android') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value);
          }
          if (!oldProps || oldProps.backgroundColor.value !== mergedProps.backgroundColor.value) {
            StatusBarManager.setColor(processColor(mergedProps.backgroundColor.value), mergedProps.backgroundColor.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value);
          }
          if (!oldProps || oldProps.translucent !== mergedProps.translucent) {
            StatusBarManager.setTranslucent(mergedProps.translucent);
          }
        }

        StatusBar._currentValues = mergedProps;
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(StatusBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack.push(this._stackEntry);
      this._updatePropsStack();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      StatusBar._propsStack.splice(index, 1);

      this._updatePropsStack();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack[index] = this._stackEntry;

      this._updatePropsStack();
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }], [{
    key: 'setHidden',
    value: function setHidden(hidden, animation) {
      animation = animation || 'none';
      StatusBar._defaultProps.hidden.value = hidden;
      if (Platform.OS === 'ios') {
        StatusBarManager.setHidden(hidden, animation);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setHidden(hidden);
      }
    }
  }, {
    key: 'setBarStyle',
    value: function setBarStyle(style, animated) {
      animated = animated || false;
      StatusBar._defaultProps.barStyle.value = style;
      if (Platform.OS === 'ios') {
        StatusBarManager.setStyle(style, animated);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setStyle(style);
      }
    }
  }, {
    key: 'setNetworkActivityIndicatorVisible',
    value: function setNetworkActivityIndicatorVisible(visible) {
      if (Platform.OS !== 'ios') {
        console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');
        return;
      }
      StatusBar._defaultProps.networkActivityIndicatorVisible = visible;
      StatusBarManager.setNetworkActivityIndicatorVisible(visible);
    }
  }, {
    key: 'setBackgroundColor',
    value: function setBackgroundColor(color, animated) {
      if (Platform.OS !== 'android') {
        console.warn('`setBackgroundColor` is only available on Android');
        return;
      }
      animated = animated || false;
      StatusBar._defaultProps.backgroundColor.value = color;
      StatusBarManager.setColor(processColor(color), animated);
    }
  }, {
    key: 'setTranslucent',
    value: function setTranslucent(translucent) {
      if (Platform.OS !== 'android') {
        console.warn('`setTranslucent` is only available on Android');
        return;
      }
      StatusBar._defaultProps.translucent = translucent;
      StatusBarManager.setTranslucent(translucent);
    }
  }]);
  return StatusBar;
}(React.Component);

StatusBar._propsStack = [];
StatusBar._defaultProps = createStackEntry({
  animated: false,
  showHideTransition: 'fade',
  backgroundColor: 'black',
  barStyle: 'default',
  translucent: false,
  hidden: false,
  networkActivityIndicatorVisible: false
});
StatusBar._updateImmediate = null;
StatusBar._currentValues = null;
StatusBar.currentHeight = StatusBarManager.HEIGHT;
StatusBar.propTypes = {
  hidden: React.PropTypes.bool,

  animated: React.PropTypes.bool,

  backgroundColor: ColorPropType,

  translucent: React.PropTypes.bool,

  barStyle: React.PropTypes.oneOf(['default', 'light-content', 'dark-content']),

  networkActivityIndicatorVisible: React.PropTypes.bool,

  showHideTransition: React.PropTypes.oneOf(['fade', 'slide'])
};
StatusBar.defaultProps = {
  animated: false,
  showHideTransition: 'fade'
};


module.exports = StatusBar;
}, 324, null, "StatusBar");
__d(/* FlatList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Lists\\FlatList.js';
var MetroListView = require(326            ); // 326 = MetroListView
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var View = require(234   ); // 234 = View
var VirtualizedList = require(333              ); // 333 = VirtualizedList

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  getItem: undefined,
  getItemCount: undefined,
  numColumns: 1
});

var FlatList = function (_React$PureComponent) {
  babelHelpers.inherits(FlatList, _React$PureComponent);

  function FlatList() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, FlatList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = FlatList.__proto__ || Object.getPrototypeOf(FlatList)).call.apply(_ref, [this].concat(args))), _this), _this._hasWarnedLegacy = false, _this._captureRef = function (ref) {
      _this._listRef = ref;
    }, _this._getItem = function (data, index) {
      var numColumns = _this.props.numColumns;

      if (numColumns > 1) {
        var ret = [];
        for (var kk = 0; kk < numColumns; kk++) {
          var _item = data[index * numColumns + kk];
          _item && ret.push(_item);
        }
        return ret;
      } else {
        return data[index];
      }
    }, _this._getItemCount = function (data) {
      return data ? Math.ceil(data.length / _this.props.numColumns) : 0;
    }, _this._keyExtractor = function (items, index) {
      var _this$props = _this.props,
          keyExtractor = _this$props.keyExtractor,
          numColumns = _this$props.numColumns;

      if (numColumns > 1) {
        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);
        return items.map(function (it, kk) {
          return keyExtractor(it, index * numColumns + kk);
        }).join(':');
      } else {
        return keyExtractor(items, index);
      }
    }, _this._onViewableItemsChanged = function (info) {
      var _this$props2 = _this.props,
          numColumns = _this$props2.numColumns,
          onViewableItemsChanged = _this$props2.onViewableItemsChanged;

      if (!onViewableItemsChanged) {
        return;
      }
      if (numColumns > 1) {
        var _changed = [];
        var _viewableItems = [];
        info.viewableItems.forEach(function (v) {
          return _this._pushMultiColumnViewable(_viewableItems, v);
        });
        info.changed.forEach(function (v) {
          return _this._pushMultiColumnViewable(_changed, v);
        });
        onViewableItemsChanged({ viewableItems: _viewableItems, changed: _changed });
      } else {
        onViewableItemsChanged(info);
      }
    }, _this._renderItem = function (info) {
      var _this$props3 = _this.props,
          renderItem = _this$props3.renderItem,
          numColumns = _this$props3.numColumns,
          columnWrapperStyle = _this$props3.columnWrapperStyle;

      if (numColumns > 1) {
        var _item2 = info.item,
            _index = info.index;

        invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');
        return React.createElement(
          View,
          { style: [{ flexDirection: 'row' }, columnWrapperStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 414
            }
          },
          _item2.map(function (it, kk) {
            var element = renderItem({ item: it, index: _index * numColumns + kk });
            return element && React.cloneElement(element, { key: kk });
          })
        );
      } else {
        return renderItem(info);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(FlatList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      this._listRef.scrollToEnd(params);
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      this._listRef.scrollToIndex(params);
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      this._listRef.scrollToItem(params);
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      this._listRef.scrollToOffset(params);
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._listRef.recordInteraction();
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._listRef && this._listRef.getScrollableNode) {
        return this._listRef.getScrollableNode();
      } else {
        return ReactNative.findNodeHandle(this._listRef);
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._checkProps(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      invariant(nextProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');
      this._checkProps(nextProps);
    }
  }, {
    key: '_checkProps',
    value: function _checkProps(props) {
      var getItem = props.getItem,
          getItemCount = props.getItemCount,
          horizontal = props.horizontal,
          legacyImplementation = props.legacyImplementation,
          numColumns = props.numColumns,
          columnWrapperStyle = props.columnWrapperStyle;

      invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');
      if (numColumns > 1) {
        invariant(!horizontal, 'numColumns does not support horizontal.');
      } else {
        invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');
      }
      if (legacyImplementation) {
        invariant(numColumns === 1, 'Legacy list does not support multiple columns.');

        if (!this._hasWarnedLegacy) {
          console.warn('FlatList: Using legacyImplementation - some features not supported and performance ' + 'may suffer');
          this._hasWarnedLegacy = true;
        }
      }
    }
  }, {
    key: '_pushMultiColumnViewable',
    value: function _pushMultiColumnViewable(arr, v) {
      var _props = this.props,
          numColumns = _props.numColumns,
          keyExtractor = _props.keyExtractor;

      v.item.forEach(function (item, ii) {
        invariant(v.index != null, 'Missing index!');
        var index = v.index * numColumns + ii;
        arr.push(babelHelpers.extends({}, v, { item: item, key: keyExtractor(item, index), index: index }));
      });
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.legacyImplementation) {
        return React.createElement(MetroListView, babelHelpers.extends({}, this.props, { items: this.props.data, ref: this._captureRef, __source: {
            fileName: _jsxFileName,
            lineNumber: 428
          }
        }));
      } else {
        return React.createElement(VirtualizedList, babelHelpers.extends({}, this.props, {
          renderItem: this._renderItem,
          getItem: this._getItem,
          getItemCount: this._getItemCount,
          keyExtractor: this._keyExtractor,
          ref: this._captureRef,
          onViewableItemsChanged: this.props.onViewableItemsChanged && this._onViewableItemsChanged,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 431
          }
        }));
      }
    }
  }]);
  return FlatList;
}(React.PureComponent);

FlatList.defaultProps = defaultProps;


module.exports = FlatList;
}, 325, null, "FlatList");
__d(/* MetroListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Lists\\MetroListView.js';
var ListView = require(327       ); // 327 = ListView
var React = require(235    ); // 235 = React
var RefreshControl = require(332             ); // 332 = RefreshControl
var ScrollView = require(315         ); // 315 = ScrollView

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var MetroListView = function (_React$Component) {
  babelHelpers.inherits(MetroListView, _React$Component);

  function MetroListView() {
    var _ref,
        _this2 = this;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, MetroListView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = MetroListView.__proto__ || Object.getPrototypeOf(MetroListView)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this._computeState(_this.props, {
      ds: new ListView.DataSource({
        rowHasChanged: function rowHasChanged(itemA, itemB) {
          return true;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged() {
          return true;
        },
        getSectionHeaderData: function getSectionHeaderData(dataBlob, sectionID) {
          return _this.state.sectionHeaderData[sectionID];
        }
      }),
      sectionHeaderData: {}
    }), _this._captureRef = function (ref) {
      _this._listRef = ref;
    }, _this._renderFooter = function () {
      return React.createElement(_this2.props.FooterComponent, { key: '$footer', __source: {
          fileName: _jsxFileName,
          lineNumber: 141
        }
      });
    }, _this._renderRow = function (item, sectionID, rowID, highlightRow) {
      return _this.props.renderItem({ item: item, index: rowID });
    }, _this._renderSectionHeader = function (section, sectionID) {
      var renderSectionHeader = _this.props.renderSectionHeader;

      invariant(renderSectionHeader, 'Must provide renderSectionHeader with sections prop');
      return renderSectionHeader({ section: section });
    }, _this._renderSeparator = function (sID, rID) {
      return React.createElement(_this2.props.SeparatorComponent, { key: sID + rID, __source: {
          fileName: _jsxFileName,
          lineNumber: 150
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(MetroListView, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      throw new Error('scrollToEnd not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      throw new Error('scrollToIndex not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      throw new Error('scrollToItem not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._listRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var _this3 = this;

      this.setState(function (state) {
        return _this3._computeState(newProps, state);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        dataSource: this.state.ds,
        ref: this._captureRef,
        renderRow: this._renderRow,
        renderFooter: this.props.FooterComponent && this._renderFooter,
        renderSectionHeader: this.props.sections && this._renderSectionHeader,
        renderSeparator: this.props.SeparatorComponent && this._renderSeparator,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106
        }
      }));
    }
  }, {
    key: '_computeState',
    value: function _computeState(props, state) {
      var sectionHeaderData = {};
      if (props.sections) {
        invariant(!props.items, 'Cannot have both sections and items props.');
        var _sections = {};
        props.sections.forEach(function (sectionIn, ii) {
          var sectionID = 's' + ii;
          _sections[sectionID] = sectionIn.data;
          sectionHeaderData[sectionID] = sectionIn;
        });
        return {
          ds: state.ds.cloneWithRowsAndSections(_sections),
          sectionHeaderData: sectionHeaderData
        };
      } else {
        invariant(!props.sections, 'Cannot have both sections and items props.');
        return {
          ds: state.ds.cloneWithRows(props.items),
          sectionHeaderData: sectionHeaderData
        };
      }
    }
  }]);
  return MetroListView;
}(React.Component);

MetroListView.defaultProps = {
  keyExtractor: function keyExtractor(item, index) {
    return item.key || index;
  },
  renderScrollComponent: function renderScrollComponent(props) {
    if (props.onRefresh) {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 78
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 75
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 86
        }
      }));
    }
  }
};


module.exports = MetroListView;
}, 326, null, "MetroListView");
__d(/* ListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Lists\\ListView\\ListView.js';
var ListViewDataSource = require(328                 ); // 328 = ListViewDataSource
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var RCTScrollViewManager = require(48             ).ScrollViewManager; // 48 = NativeModules
var ScrollView = require(315         ); // 315 = ScrollView
var ScrollResponder = require(317              ); // 317 = ScrollResponder
var StaticRenderer = require(330             ); // 330 = StaticRenderer
var TimerMixin = require(298                ); // 298 = react-timer-mixin
var View = require(234   ); // 234 = View

var cloneReferencedElement = require(331                             ); // 331 = react-clone-referenced-element
var isEmpty = require(329      ); // 329 = isEmpty
var merge = require(254    ); // 254 = merge

var PropTypes = React.PropTypes;

var DEFAULT_PAGE_SIZE = 1;
var DEFAULT_INITIAL_ROWS = 10;
var DEFAULT_SCROLL_RENDER_AHEAD = 1000;
var DEFAULT_END_REACHED_THRESHOLD = 1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;

var ListView = React.createClass({
  displayName: 'ListView',

  _childFrames: [],
  _sentEndForContentLength: null,
  _scrollComponent: null,
  _prevRenderedRowsCount: 0,
  _visibleRows: {},
  scrollProperties: {},

  mixins: [ScrollResponder.Mixin, TimerMixin],

  statics: {
    DataSource: ListViewDataSource
  },

  propTypes: babelHelpers.extends({}, ScrollView.propTypes, {
    dataSource: PropTypes.instanceOf(ListViewDataSource).isRequired,

    renderSeparator: PropTypes.func,

    renderRow: PropTypes.func.isRequired,

    initialListSize: PropTypes.number.isRequired,

    onEndReached: PropTypes.func,

    onEndReachedThreshold: PropTypes.number.isRequired,

    pageSize: PropTypes.number.isRequired,

    renderFooter: PropTypes.func,
    renderHeader: PropTypes.func,

    renderSectionHeader: PropTypes.func,

    renderScrollComponent: React.PropTypes.func.isRequired,

    scrollRenderAheadDistance: React.PropTypes.number.isRequired,

    onChangeVisibleRows: React.PropTypes.func,

    removeClippedSubviews: React.PropTypes.bool,

    stickySectionHeadersEnabled: React.PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number).isRequired,

    enableEmptySections: PropTypes.bool
  }),

  getMetrics: function getMetrics() {
    return {
      contentLength: this.scrollProperties.contentLength,
      totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),
      renderedRows: this.state.curRenderedRowsCount,
      visibleRows: Object.keys(this._visibleRows).length
    };
  },

  getScrollResponder: function getScrollResponder() {
    if (this._scrollComponent && this._scrollComponent.getScrollResponder) {
      return this._scrollComponent.getScrollResponder();
    }
  },

  getScrollableNode: function getScrollableNode() {
    if (this._scrollComponent && this._scrollComponent.getScrollableNode) {
      return this._scrollComponent.getScrollableNode();
    } else {
      return ReactNative.findNodeHandle(this._scrollComponent);
    }
  },

  scrollTo: function scrollTo() {
    if (this._scrollComponent && this._scrollComponent.scrollTo) {
      var _scrollComponent;

      (_scrollComponent = this._scrollComponent).scrollTo.apply(_scrollComponent, arguments);
    }
  },

  scrollToEnd: function scrollToEnd(options) {
    if (this._scrollComponent) {
      if (this._scrollComponent.scrollToEnd) {
        this._scrollComponent.scrollToEnd(options);
      } else {
        console.warn('The scroll component used by the ListView does not support ' + 'scrollToEnd. Check the renderScrollComponent prop of your ListView.');
      }
    }
  },

  setNativeProps: function setNativeProps(props) {
    if (this._scrollComponent) {
      this._scrollComponent.setNativeProps(props);
    }
  },

  getDefaultProps: function getDefaultProps() {
    return {
      initialListSize: DEFAULT_INITIAL_ROWS,
      pageSize: DEFAULT_PAGE_SIZE,
      renderScrollComponent: function renderScrollComponent(props) {
        return React.createElement(ScrollView, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 310
          }
        }));
      },
      scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,
      onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,
      stickySectionHeadersEnabled: Platform.OS === 'ios',
      stickyHeaderIndices: []
    };
  },

  getInitialState: function getInitialState() {
    return {
      curRenderedRowsCount: this.props.initialListSize,
      highlightedRow: {}
    };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this._scrollComponent.getInnerViewNode();
  },

  componentWillMount: function componentWillMount() {
    this.scrollProperties = {
      visibleLength: null,
      contentLength: null,
      offset: 0
    };
    this._childFrames = [];
    this._visibleRows = {};
    this._prevRenderedRowsCount = 0;
    this._sentEndForContentLength = null;
  },

  componentDidMount: function componentDidMount() {
    var _this = this;

    this.requestAnimationFrame(function () {
      _this._measureAndUpdateScrollProps();
    });
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {
      this.setState(function (state, props) {
        _this2._prevRenderedRowsCount = 0;
        return {
          curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())
        };
      }, function () {
        return _this2._renderMoreRowsIfNeeded();
      });
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var _this3 = this;

    this.requestAnimationFrame(function () {
      _this3._measureAndUpdateScrollProps();
    });
  },

  _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {
    this.setState({ highlightedRow: { sectionID: sectionID, rowID: rowID } });
  },

  render: function render() {
    var bodyComponents = [];

    var dataSource = this.props.dataSource;
    var allRowIDs = dataSource.rowIdentities;
    var rowCount = 0;
    var stickySectionHeaderIndices = [];

    var renderSectionHeader = this.props.renderSectionHeader;


    var header = this.props.renderHeader && this.props.renderHeader();
    var footer = this.props.renderFooter && this.props.renderFooter();
    var totalIndex = header ? 1 : 0;

    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        if (this.props.enableEmptySections === undefined) {
          var warning = require(19                ); // 19 = fbjs/lib/warning
          warning(false, 'In next release empty section headers will be rendered.' + ' In this release you can use \'enableEmptySections\' flag to render empty section headers.');
          continue;
        } else {
          var invariant = require(23                  ); // 23 = fbjs/lib/invariant
          invariant(this.props.enableEmptySections, 'In next release \'enableEmptySections\' flag will be deprecated, empty section headers will always be rendered.' + ' If empty section headers are not desirable their indices should be excluded from sectionIDs object.' + ' In this release \'enableEmptySections\' may only have value \'true\' to allow empty section headers rendering.');
        }
      }

      if (renderSectionHeader) {
        var element = renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx), sectionID);
        if (element) {
          bodyComponents.push(React.cloneElement(element, { key: 's_' + sectionID }));
          if (this.props.stickySectionHeadersEnabled) {
            stickySectionHeaderIndices.push(totalIndex);
          }
          totalIndex++;
        }
      }

      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var comboID = sectionID + '_' + rowID;
        var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);
        var row = React.createElement(StaticRenderer, {
          key: 'r_' + comboID,
          shouldUpdate: !!shouldUpdateRow,
          render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 431
          }
        });
        bodyComponents.push(row);
        totalIndex++;

        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);
          var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);
          if (separator) {
            bodyComponents.push(React.createElement(
              View,
              { key: 's_' + comboID, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 459
                }
              },
              separator
            ));
            totalIndex++;
          }
        }
        if (++rowCount === this.state.curRenderedRowsCount) {
          break;
        }
      }
      if (rowCount >= this.state.curRenderedRowsCount) {
        break;
      }
    }

    var _props = this.props,
        renderScrollComponent = _props.renderScrollComponent,
        props = babelHelpers.objectWithoutProperties(_props, ['renderScrollComponent']);

    if (!props.scrollEventThrottle) {
      props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;
    }
    if (props.removeClippedSubviews === undefined) {
      props.removeClippedSubviews = true;
    }
    babelHelpers.extends(props, {
      onScroll: this._onScroll,
      stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),

      onKeyboardWillShow: undefined,
      onKeyboardWillHide: undefined,
      onKeyboardDidShow: undefined,
      onKeyboardDidHide: undefined
    });

    return cloneReferencedElement(renderScrollComponent(props), {
      ref: this._setScrollComponentRef,
      onContentSizeChange: this._onContentSizeChange,
      onLayout: this._onLayout
    }, header, bodyComponents, footer);
  },

  _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {
    var scrollComponent = this.getScrollResponder();
    if (!scrollComponent || !scrollComponent.getInnerViewNode) {
      return;
    }

    RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(ReactNative.findNodeHandle(scrollComponent), this._updateVisibleRows);
  },

  _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {
    this._scrollComponent = scrollComponent;
  },

  _onContentSizeChange: function _onContentSizeChange(width, height) {
    var contentLength = !this.props.horizontal ? height : width;
    if (contentLength !== this.scrollProperties.contentLength) {
      this.scrollProperties.contentLength = contentLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _onLayout: function _onLayout(event) {
    var _event$nativeEvent$la = event.nativeEvent.layout,
        width = _event$nativeEvent$la.width,
        height = _event$nativeEvent$la.height;

    var visibleLength = !this.props.horizontal ? height : width;
    if (visibleLength !== this.scrollProperties.visibleLength) {
      this.scrollProperties.visibleLength = visibleLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onLayout && this.props.onLayout(event);
  },

  _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {
    if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._sentEndForContentLength = this.scrollProperties.contentLength;
      this.props.onEndReached(event);
      return true;
    }
    return false;
  },

  _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {
    if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._maybeCallOnEndReached();
      return;
    }

    var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);
    if (distanceFromEnd < this.props.scrollRenderAheadDistance) {
      this._pageInNewRows();
    }
  },

  _pageInNewRows: function _pageInNewRows() {
    var _this4 = this;

    this.setState(function (state, props) {
      var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());
      _this4._prevRenderedRowsCount = state.curRenderedRowsCount;
      return {
        curRenderedRowsCount: rowsToRender
      };
    }, function () {
      _this4._measureAndUpdateScrollProps();
      _this4._prevRenderedRowsCount = _this4.state.curRenderedRowsCount;
    });
  },

  _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {
    return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;
  },

  _updateVisibleRows: function _updateVisibleRows(updatedFrames) {
    var _this5 = this;

    if (!this.props.onChangeVisibleRows) {
      return;
    }
    if (updatedFrames) {
      updatedFrames.forEach(function (newFrame) {
        _this5._childFrames[newFrame.index] = merge(newFrame);
      });
    }
    var isVertical = !this.props.horizontal;
    var dataSource = this.props.dataSource;
    var visibleMin = this.scrollProperties.offset;
    var visibleMax = visibleMin + this.scrollProperties.visibleLength;
    var allRowIDs = dataSource.rowIdentities;

    var header = this.props.renderHeader && this.props.renderHeader();
    var totalIndex = header ? 1 : 0;
    var visibilityChanged = false;
    var changedRows = {};
    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        continue;
      }
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      if (this.props.renderSectionHeader) {
        totalIndex++;
      }
      var visibleSection = this._visibleRows[sectionID];
      if (!visibleSection) {
        visibleSection = {};
      }
      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var frame = this._childFrames[totalIndex];
        totalIndex++;
        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          totalIndex++;
        }
        if (!frame) {
          break;
        }
        var rowVisible = visibleSection[rowID];
        var min = isVertical ? frame.y : frame.x;
        var max = min + (isVertical ? frame.height : frame.width);
        if (!min && !max || min === max) {
          break;
        }
        if (min > visibleMax || max < visibleMin) {
          if (rowVisible) {
            visibilityChanged = true;
            delete visibleSection[rowID];
            if (!changedRows[sectionID]) {
              changedRows[sectionID] = {};
            }
            changedRows[sectionID][rowID] = false;
          }
        } else if (!rowVisible) {
          visibilityChanged = true;
          visibleSection[rowID] = true;
          if (!changedRows[sectionID]) {
            changedRows[sectionID] = {};
          }
          changedRows[sectionID][rowID] = true;
        }
      }
      if (!isEmpty(visibleSection)) {
        this._visibleRows[sectionID] = visibleSection;
      } else if (this._visibleRows[sectionID]) {
        delete this._visibleRows[sectionID];
      }
    }
    visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);
  },

  _onScroll: function _onScroll(e) {
    var isVertical = !this.props.horizontal;
    this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];
    this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];
    this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];
    this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
    if (!this._maybeCallOnEndReached(e)) {
      this._renderMoreRowsIfNeeded();
    }

    if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {
      this._sentEndForContentLength = null;
    }

    this.props.onScroll && this.props.onScroll(e);
  }
});

module.exports = ListView;
}, 327, null, "ListView");
__d(/* ListViewDataSource */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var isEmpty = require(329      ); // 329 = isEmpty
var warning = require(19                ); // 19 = fbjs/lib/warning

function defaultGetRowData(dataBlob, sectionID, rowID) {
  return dataBlob[sectionID][rowID];
}

function defaultGetSectionHeaderData(dataBlob, sectionID) {
  return dataBlob[sectionID];
}

var ListViewDataSource = function () {
  function ListViewDataSource(params) {
    babelHelpers.classCallCheck(this, ListViewDataSource);

    invariant(params && typeof params.rowHasChanged === 'function', 'Must provide a rowHasChanged function.');
    this._rowHasChanged = params.rowHasChanged;
    this._getRowData = params.getRowData || defaultGetRowData;
    this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
    this._getSectionHeaderData = params.getSectionHeaderData || defaultGetSectionHeaderData;

    this._dataBlob = null;
    this._dirtyRows = [];
    this._dirtySections = [];
    this._cachedRowCount = 0;

    this.rowIdentities = [];
    this.sectionIdentities = [];
  }

  babelHelpers.createClass(ListViewDataSource, [{
    key: 'cloneWithRows',
    value: function cloneWithRows(dataBlob, rowIdentities) {
      var rowIds = rowIdentities ? [rowIdentities] : null;
      if (!this._sectionHeaderHasChanged) {
        this._sectionHeaderHasChanged = function () {
          return false;
        };
      }
      return this.cloneWithRowsAndSections({ s1: dataBlob }, ['s1'], rowIds);
    }
  }, {
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      invariant(typeof this._sectionHeaderHasChanged === 'function', 'Must provide a sectionHeaderHasChanged function with section data.');
      invariant(!sectionIdentities || !rowIdentities || sectionIdentities.length === rowIdentities.length, 'row and section ids lengths must be the same');

      var newSource = new ListViewDataSource({
        getRowData: this._getRowData,
        getSectionHeaderData: this._getSectionHeaderData,
        rowHasChanged: this._rowHasChanged,
        sectionHeaderHasChanged: this._sectionHeaderHasChanged
      });
      newSource._dataBlob = dataBlob;
      if (sectionIdentities) {
        newSource.sectionIdentities = sectionIdentities;
      } else {
        newSource.sectionIdentities = Object.keys(dataBlob);
      }
      if (rowIdentities) {
        newSource.rowIdentities = rowIdentities;
      } else {
        newSource.rowIdentities = [];
        newSource.sectionIdentities.forEach(function (sectionID) {
          newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
        });
      }
      newSource._cachedRowCount = countRows(newSource.rowIdentities);

      newSource._calculateDirtyArrays(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return newSource;
    }
  }, {
    key: 'getRowCount',
    value: function getRowCount() {
      return this._cachedRowCount;
    }
  }, {
    key: 'getRowAndSectionCount',
    value: function getRowAndSectionCount() {
      return this._cachedRowCount + this.sectionIdentities.length;
    }
  }, {
    key: 'rowShouldUpdate',
    value: function rowShouldUpdate(sectionIndex, rowIndex) {
      var needsUpdate = this._dirtyRows[sectionIndex][rowIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
      return needsUpdate;
    }
  }, {
    key: 'getRowData',
    value: function getRowData(sectionIndex, rowIndex) {
      var sectionID = this.sectionIdentities[sectionIndex];
      var rowID = this.rowIdentities[sectionIndex][rowIndex];
      warning(sectionID !== undefined && rowID !== undefined, 'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);
      return this._getRowData(this._dataBlob, sectionID, rowID);
    }
  }, {
    key: 'getRowIDForFlatIndex',
    value: function getRowIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.rowIdentities[ii][accessIndex];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionIDForFlatIndex',
    value: function getSectionIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.sectionIdentities[ii];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionLengths',
    value: function getSectionLengths() {
      var results = [];
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        results.push(this.rowIdentities[ii].length);
      }
      return results;
    }
  }, {
    key: 'sectionHeaderShouldUpdate',
    value: function sectionHeaderShouldUpdate(sectionIndex) {
      var needsUpdate = this._dirtySections[sectionIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section: ' + sectionIndex);
      return needsUpdate;
    }
  }, {
    key: 'getSectionHeaderData',
    value: function getSectionHeaderData(sectionIndex) {
      if (!this._getSectionHeaderData) {
        return null;
      }
      var sectionID = this.sectionIdentities[sectionIndex];
      warning(sectionID !== undefined, 'renderSection called on invalid section: ' + sectionIndex);
      return this._getSectionHeaderData(this._dataBlob, sectionID);
    }
  }, {
    key: '_calculateDirtyArrays',
    value: function _calculateDirtyArrays(prevDataBlob, prevSectionIDs, prevRowIDs) {
      var prevSectionsHash = keyedDictionaryFromArray(prevSectionIDs);
      var prevRowsHash = {};
      for (var ii = 0; ii < prevRowIDs.length; ii++) {
        var sectionID = prevSectionIDs[ii];
        warning(!prevRowsHash[sectionID], 'SectionID appears more than once: ' + sectionID);
        prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);
      }

      this._dirtySections = [];
      this._dirtyRows = [];

      var dirty;
      for (var sIndex = 0; sIndex < this.sectionIdentities.length; sIndex++) {
        var sectionID = this.sectionIdentities[sIndex];

        dirty = !prevSectionsHash[sectionID];
        var sectionHeaderHasChanged = this._sectionHeaderHasChanged;
        if (!dirty && sectionHeaderHasChanged) {
          dirty = sectionHeaderHasChanged(this._getSectionHeaderData(prevDataBlob, sectionID), this._getSectionHeaderData(this._dataBlob, sectionID));
        }
        this._dirtySections.push(!!dirty);

        this._dirtyRows[sIndex] = [];
        for (var rIndex = 0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
          var rowID = this.rowIdentities[sIndex][rIndex];

          dirty = !prevSectionsHash[sectionID] || !prevRowsHash[sectionID][rowID] || this._rowHasChanged(this._getRowData(prevDataBlob, sectionID, rowID), this._getRowData(this._dataBlob, sectionID, rowID));
          this._dirtyRows[sIndex].push(!!dirty);
        }
      }
    }
  }]);
  return ListViewDataSource;
}();

function countRows(allRowIDs) {
  var totalRows = 0;
  for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
    var rowIDs = allRowIDs[sectionIdx];
    totalRows += rowIDs.length;
  }
  return totalRows;
}

function keyedDictionaryFromArray(arr) {
  if (isEmpty(arr)) {
    return {};
  }
  var result = {};
  for (var ii = 0; ii < arr.length; ii++) {
    var key = arr[ii];
    warning(!result[key], 'Value appears more than once in array: ' + key);
    result[key] = true;
  }
  return result;
}

module.exports = ListViewDataSource;
}, 328, null, "ListViewDataSource");
__d(/* isEmpty */function(global, require, module, exports) {
'use strict';

function isEmpty(obj) {
  if (Array.isArray(obj)) {
    return obj.length === 0;
  } else if (typeof obj === 'object') {
    for (var i in obj) {
      return false;
    }
    return true;
  } else {
    return !obj;
  }
}

module.exports = isEmpty;
}, 329, null, "isEmpty");
__d(/* StaticRenderer */function(global, require, module, exports) {
'use strict';

var React = require(235    ); // 235 = React

var StaticRenderer = function (_React$Component) {
  babelHelpers.inherits(StaticRenderer, _React$Component);

  function StaticRenderer() {
    babelHelpers.classCallCheck(this, StaticRenderer);
    return babelHelpers.possibleConstructorReturn(this, (StaticRenderer.__proto__ || Object.getPrototypeOf(StaticRenderer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticRenderer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.render();
    }
  }]);
  return StaticRenderer;
}(React.Component);

StaticRenderer.propTypes = {
  shouldUpdate: React.PropTypes.bool.isRequired,
  render: React.PropTypes.func.isRequired
};


module.exports = StaticRenderer;
}, 330, null, "StaticRenderer");
__d(/* react-clone-referenced-element/cloneReferencedElement.js */function(global, require, module, exports) {'use strict';

var React = require(13     ); // 13 = react

function cloneReferencedElement(element, config) {
  var cloneRef = config.ref;
  var originalRef = element.ref;

  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  if (originalRef == null || cloneRef == null) {
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  if (typeof originalRef !== 'function') {
    if (__DEV__) {
      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);
    }
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  return React.cloneElement.apply(React, [element, babelHelpers.extends({}, config, {
    ref: function ref(component) {
      cloneRef(component);
      originalRef(component);
    }
  })].concat(children));
}

module.exports = cloneReferencedElement;
}, 331, null, "react-clone-referenced-element/cloneReferencedElement.js");
__d(/* RefreshControl */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\RefreshControl\\RefreshControl.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

if (Platform.OS === 'android') {
  var RefreshLayoutConsts = require(78         ).AndroidSwipeRefreshLayout.Constants; // 78 = UIManager
} else {
  var RefreshLayoutConsts = { SIZE: {} };
}

var RefreshControl = React.createClass({
  displayName: 'RefreshControl',

  statics: {
    SIZE: RefreshLayoutConsts.SIZE
  },

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    onRefresh: React.PropTypes.func,

    refreshing: React.PropTypes.bool.isRequired,

    tintColor: ColorPropType,

    titleColor: ColorPropType,

    title: React.PropTypes.string,

    enabled: React.PropTypes.bool,

    colors: React.PropTypes.arrayOf(ColorPropType),

    progressBackgroundColor: ColorPropType,

    size: React.PropTypes.oneOf([RefreshLayoutConsts.SIZE.DEFAULT, RefreshLayoutConsts.SIZE.LARGE]),

    progressViewOffset: React.PropTypes.number
  }),

  _nativeRef: null,
  _lastNativeRefreshing: false,

  componentDidMount: function componentDidMount() {
    this._lastNativeRefreshing = this.props.refreshing;
  },
  componentDidUpdate: function componentDidUpdate(prevProps) {
    if (this.props.refreshing !== prevProps.refreshing) {
      this._lastNativeRefreshing = this.props.refreshing;
    } else if (this.props.refreshing !== this._lastNativeRefreshing) {
      this._nativeRef.setNativeProps({ refreshing: this.props.refreshing });
      this._lastNativeRefreshing = this.props.refreshing;
    }
  },
  render: function render() {
    var _this = this;

    return React.createElement(NativeRefreshControl, babelHelpers.extends({}, this.props, {
      ref: function ref(_ref) {
        _this._nativeRef = _ref;
      },
      onRefresh: this._onRefresh,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 154
      }
    }));
  },
  _onRefresh: function _onRefresh() {
    this._lastNativeRefreshing = true;

    this.props.onRefresh && this.props.onRefresh();

    this.forceUpdate();
  }
});

if (Platform.OS === 'ios') {
  var NativeRefreshControl = requireNativeComponent('RCTRefreshControl', RefreshControl);
} else if (Platform.OS === 'android') {
  var NativeRefreshControl = requireNativeComponent('AndroidSwipeRefreshLayout', RefreshControl);
}

module.exports = RefreshControl;
}, 332, null, "RefreshControl");
__d(/* VirtualizedList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Lists\\VirtualizedList.js';
var Batchinator = require(334          ); // 334 = Batchinator
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var RefreshControl = require(332             ); // 332 = RefreshControl
var ScrollView = require(315         ); // 315 = ScrollView
var View = require(234   ); // 234 = View
var ViewabilityHelper = require(335                ); // 335 = ViewabilityHelper

var infoLog = require(305      ); // 305 = infoLog
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _require = require(336              ), // 336 = VirtualizeUtils
    computeWindowedRenderLimits = _require.computeWindowedRenderLimits;

var _usedIndexForKey = false;

var VirtualizedList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      var animated = params ? params.animated : true;
      var veryLast = this.props.getItemCount(this.props.data) - 1;
      var frame = this._getFrameMetricsApprox(veryLast);
      var offset = frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength;
      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      var _props = this.props,
          data = _props.data,
          horizontal = _props.horizontal,
          getItemCount = _props.getItemCount,
          getItemLayout = _props.getItemLayout;
      var animated = params.animated,
          index = params.index,
          viewPosition = params.viewPosition;

      invariant(index >= 0 && index < getItemCount(data), 'scrollToIndex out of range: ' + index + ' vs ' + (getItemCount(data) - 1));
      invariant(getItemLayout || index < this._highestMeasuredFrameIndex, 'scrollToIndex should be used in conjunction with getItemLayout, ' + 'otherwise there is no way to know the location of an arbitrary index.');
      var frame = this._getFrameMetricsApprox(index);
      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length));
      this._scrollRef.scrollTo(horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      var item = params.item;
      var _props2 = this.props,
          data = _props2.data,
          getItem = _props2.getItem,
          getItemCount = _props2.getItemCount;

      var itemCount = getItemCount(data);
      for (var _index = 0; _index < itemCount; _index++) {
        if (getItem(data, _index) === item) {
          this.scrollToIndex(babelHelpers.extends({}, params, { index: _index }));
          break;
        }
      }
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._viewabilityHelper.recordInteraction();
      this._updateViewableItems(this.props.data);
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._scrollRef && this._scrollRef.getScrollableNode) {
        return this._scrollRef.getScrollableNode();
      } else {
        return ReactNative.findNodeHandle(this._scrollRef);
      }
    }
  }]);

  function VirtualizedList(props) {
    babelHelpers.classCallCheck(this, VirtualizedList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedList.__proto__ || Object.getPrototypeOf(VirtualizedList)).call(this, props));

    _initialiseProps.call(_this);

    invariant(!props.onScroll || !props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');

    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);
    _this._viewabilityHelper = new ViewabilityHelper(_this.props.viewabilityConfig);
    _this.state = {
      first: 0,
      last: Math.min(_this.props.getItemCount(_this.props.data), _this.props.initialNumToRender) - 1
    };
    return _this;
  }

  babelHelpers.createClass(VirtualizedList, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._updateViewableItems(null);
      this._updateCellsToRenderBatcher.dispose();
      this._viewabilityHelper.dispose();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var data = newProps.data,
          extraData = newProps.extraData,
          getItemCount = newProps.getItemCount,
          maxToRenderPerBatch = newProps.maxToRenderPerBatch;

      this.setState({
        first: Math.max(0, Math.min(this.state.first, getItemCount(data) - 1 - maxToRenderPerBatch)),
        last: Math.max(0, Math.min(this.state.last, getItemCount(data) - 1))
      });
      if (data !== this.props.data || extraData !== this.props.extraData) {
        this._hasDataChangedSinceEndReached = true;
      }
      this._updateCellsToRenderBatcher.schedule();
    }
  }, {
    key: '_pushCells',
    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last) {
      var _this2 = this;

      var _props3 = this.props,
          ItemSeparatorComponent = _props3.ItemSeparatorComponent,
          data = _props3.data,
          getItem = _props3.getItem,
          getItemCount = _props3.getItemCount,
          keyExtractor = _props3.keyExtractor;

      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;
      var end = getItemCount(data) - 1;
      last = Math.min(end, last);

      var _loop = function _loop(ii) {
        var item = getItem(data, ii);
        invariant(item, 'No item for index ' + ii);
        var key = keyExtractor(item, ii);
        if (stickyIndicesFromProps.has(ii + stickyOffset)) {
          stickyHeaderIndices.push(cells.length);
        }
        cells.push(React.createElement(CellRenderer, {
          cellKey: key,
          index: ii,
          item: item,
          key: key,
          onLayout: function onLayout(e) {
            return _this2._onCellLayout(e, key, ii);
          },
          onUnmount: _this2._onCellUnmount,
          parentProps: _this2.props,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 342
          }
        }));
        if (ItemSeparatorComponent && ii < end) {
          cells.push(React.createElement(ItemSeparatorComponent, { key: 'sep' + ii, __source: {
              fileName: _jsxFileName,
              lineNumber: 353
            }
          }));
        }
      };

      for (var ii = first; ii <= last; ii++) {
        _loop(ii);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props4 = this.props,
          ListFooterComponent = _props4.ListFooterComponent,
          ListHeaderComponent = _props4.ListHeaderComponent;
      var _props5 = this.props,
          data = _props5.data,
          disableVirtualization = _props5.disableVirtualization,
          horizontal = _props5.horizontal;

      var cells = [];
      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);
      var stickyHeaderIndices = [];
      if (ListHeaderComponent) {
        cells.push(React.createElement(
          View,
          { key: '$header', onLayout: this._onLayoutHeader, __source: {
              fileName: _jsxFileName,
              lineNumber: 365
            }
          },
          React.createElement(ListHeaderComponent, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 366
            }
          })
        ));
      }
      var itemCount = this.props.getItemCount(data);
      if (itemCount > 0) {
        _usedIndexForKey = false;
        var spacerKey = !horizontal ? 'height' : 'width';
        var lastInitialIndex = this.props.initialNumToRender - 1;
        var _state = this.state,
            _first = _state.first,
            _last = _state.last;

        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex);
        var firstAfterInitial = Math.max(lastInitialIndex + 1, _first);
        if (!disableVirtualization && _first > lastInitialIndex + 1) {
          var insertedStickySpacer = false;
          if (stickyIndicesFromProps.size > 0) {
            var stickyOffset = ListHeaderComponent ? 1 : 0;

            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {
              if (stickyIndicesFromProps.has(ii + stickyOffset)) {
                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);
                var stickyBlock = this._getFrameMetricsApprox(ii);
                var leadSpace = stickyBlock.offset - (initBlock.offset + initBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_lead', style: babelHelpers.defineProperty({}, spacerKey, leadSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 389
                  }
                }));
                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii);
                var trailSpace = this._getFrameMetricsApprox(_first).offset - (stickyBlock.offset + stickyBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_trail', style: babelHelpers.defineProperty({}, spacerKey, trailSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 395
                  }
                }));
                insertedStickySpacer = true;
                break;
              }
            }
          }
          if (!insertedStickySpacer) {
            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);
            var firstSpace = this._getFrameMetricsApprox(_first).offset - (_initBlock.offset + _initBlock.length);
            cells.push(React.createElement(View, { key: '$lead_spacer', style: babelHelpers.defineProperty({}, spacerKey, firstSpace), __source: {
                fileName: _jsxFileName,
                lineNumber: 407
              }
            }));
          }
        }
        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, _last);
        if (!this._hasWarned.keys && _usedIndexForKey) {
          console.warn('VirtualizedList: missing keys for items, make sure to specify a key property on each ' + 'item or provide a custom keyExtractor.');
          this._hasWarned.keys = true;
        }
        if (!disableVirtualization && _last < itemCount - 1) {
          var lastFrame = this._getFrameMetricsApprox(_last);

          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);
          var endFrame = this._getFrameMetricsApprox(end);
          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);
          cells.push(React.createElement(View, { key: '$tail_spacer', style: babelHelpers.defineProperty({}, spacerKey, tailSpacerLength), __source: {
              fileName: _jsxFileName,
              lineNumber: 432
            }
          }));
        }
      }
      if (ListFooterComponent) {
        cells.push(React.createElement(
          View,
          { key: '$footer', onLayout: this._onLayoutFooter, __source: {
              fileName: _jsxFileName,
              lineNumber: 438
            }
          },
          React.createElement(ListFooterComponent, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 439
            }
          })
        ));
      }
      var ret = React.cloneElement(this.props.renderScrollComponent(this.props), {
        onContentSizeChange: this._onContentSizeChange,
        onLayout: this._onLayout,
        onScroll: this._onScroll,
        onScrollBeginDrag: this._onScrollBeginDrag,
        ref: this._captureScrollRef,
        scrollEventThrottle: 50,
        stickyHeaderIndices: stickyHeaderIndices
      }, cells);
      if (this.props.debug) {
        return React.createElement(
          View,
          { style: { flex: 1 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 457
            }
          },
          ret,
          this._renderDebugOverlay()
        );
      } else {
        return ret;
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._updateCellsToRenderBatcher.schedule();
    }
  }, {
    key: '_onCellLayout',
    value: function _onCellLayout(e, cellKey, index) {
      var layout = e.nativeEvent.layout;
      var next = {
        offset: this._selectOffset(layout),
        length: this._selectLength(layout),
        index: index,
        inLayout: true
      };
      var curr = this._frames[cellKey];
      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {
        this._totalCellLength += next.length - (curr ? curr.length : 0);
        this._totalCellsMeasured += curr ? 0 : 1;
        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;
        this._frames[cellKey] = next;
        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);
        this._updateCellsToRenderBatcher.schedule();
      } else {
        this._frames[cellKey].inLayout = true;
      }
    }
  }, {
    key: '_renderDebugOverlay',
    value: function _renderDebugOverlay() {
      var normalize = this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;
      var framesInLayout = [];
      var itemCount = this.props.getItemCount(this.props.data);
      for (var ii = 0; ii < itemCount; ii++) {
        var frame = this._getFrameMetricsApprox(ii);
        if (frame.inLayout) {
          framesInLayout.push(frame);
        }
      }
      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;
      var frameLast = this._getFrameMetricsApprox(this.state.last);
      var windowLen = frameLast.offset + frameLast.length - windowTop;
      var visTop = this._scrollMetrics.offset;
      var visLen = this._scrollMetrics.visibleLength;
      var baseStyle = { position: 'absolute', top: 0, right: 0 };
      return React.createElement(
        View,
        { style: babelHelpers.extends({}, baseStyle, { bottom: 0, width: 20, borderColor: 'blue', borderWidth: 1 }), __source: {
            fileName: _jsxFileName,
            lineNumber: 551
          }
        },
        framesInLayout.map(function (f, ii) {
          return React.createElement(View, { key: 'f' + ii, style: babelHelpers.extends({}, baseStyle, {
              left: 0,
              top: f.offset * normalize,
              height: f.length * normalize,
              backgroundColor: 'orange'
            }), __source: {
              fileName: _jsxFileName,
              lineNumber: 553
            }
          });
        }),
        React.createElement(View, { style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: windowTop * normalize,
            height: windowLen * normalize,
            borderColor: 'green',
            borderWidth: 2
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 561
          }
        }),
        React.createElement(View, { style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: visTop * normalize,
            height: visLen * normalize,
            borderColor: 'red',
            borderWidth: 2
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 569
          }
        })
      );
    }
  }, {
    key: '_selectLength',
    value: function _selectLength(metrics) {
      return !this.props.horizontal ? metrics.height : metrics.width;
    }
  }, {
    key: '_selectOffset',
    value: function _selectOffset(metrics) {
      return !this.props.horizontal ? metrics.y : metrics.x;
    }
  }, {
    key: '_updateViewableItems',
    value: function _updateViewableItems(data) {
      var _props6 = this.props,
          getItemCount = _props6.getItemCount,
          onViewableItemsChanged = _props6.onViewableItemsChanged;

      if (!onViewableItemsChanged) {
        return;
      }
      this._viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, onViewableItemsChanged, this.state);
    }
  }]);
  return VirtualizedList;
}(React.PureComponent);

VirtualizedList.defaultProps = {
  disableVirtualization: false,
  getItem: function getItem(data, index) {
    return data[index];
  },
  getItemCount: function getItemCount(data) {
    return data ? data.length : 0;
  },
  horizontal: false,
  initialNumToRender: 10,
  keyExtractor: function keyExtractor(item, index) {
    if (item.key != null) {
      return item.key;
    }
    _usedIndexForKey = true;
    return String(index);
  },
  maxToRenderPerBatch: 10,
  onEndReached: function onEndReached() {},
  onEndReachedThreshold: 2,
  removeClippedSubviews: true,
  renderScrollComponent: function renderScrollComponent(props) {
    if (props.onRefresh) {
      invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 264
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 261
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 272
        }
      }));
    }
  },
  updateCellsBatchingPeriod: 50,
  windowSize: 21 };

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.state = {
    first: 0,
    last: this.props.initialNumToRender
  };
  this._averageCellLength = 0;
  this._hasDataChangedSinceEndReached = true;
  this._hasWarned = {};
  this._highestMeasuredFrameIndex = 0;
  this._headerLength = 0;
  this._frames = {};
  this._footerLength = 0;
  this._scrollMetrics = {
    visibleLength: 0, contentLength: 0, offset: 0, dt: 10, velocity: 0, timestamp: 0
  };
  this._scrollRef = null;
  this._sentEndForContentLength = 0;
  this._totalCellLength = 0;
  this._totalCellsMeasured = 0;

  this._captureScrollRef = function (ref) {
    _this4._scrollRef = ref;
  };

  this._onCellUnmount = function (cellKey) {
    var curr = _this4._frames[cellKey];
    if (curr) {
      _this4._frames[cellKey] = babelHelpers.extends({}, curr, { inLayout: false });
    }
  };

  this._onLayout = function (e) {
    _this4._scrollMetrics.visibleLength = _this4._selectLength(e.nativeEvent.layout);
    _this4.props.onLayout && _this4.props.onLayout(e);
    _this4._updateCellsToRenderBatcher.schedule();
  };

  this._onLayoutFooter = function (e) {
    _this4._footerLength = _this4._selectLength(e.nativeEvent.layout);
  };

  this._onLayoutHeader = function (e) {
    _this4._headerLength = _this4._selectLength(e.nativeEvent.layout);
  };

  this._onContentSizeChange = function (width, height) {
    if (_this4.props.onContentSizeChange) {
      _this4.props.onContentSizeChange(width, height);
    }
    _this4._scrollMetrics.contentLength = _this4._selectLength({ height: height, width: width });
    _this4._updateCellsToRenderBatcher.schedule();
  };

  this._onScroll = function (e) {
    if (_this4.props.onScroll) {
      _this4.props.onScroll(e);
    }
    var timestamp = e.timeStamp;
    var visibleLength = _this4._selectLength(e.nativeEvent.layoutMeasurement);
    var contentLength = _this4._selectLength(e.nativeEvent.contentSize);
    var offset = _this4._selectOffset(e.nativeEvent.contentOffset);
    var dt = Math.max(1, timestamp - _this4._scrollMetrics.timestamp);
    if (dt > 500 && _this4._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this4._hasWarned.perf) {
      infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', { dt: dt, prevDt: _this4._scrollMetrics.dt, contentLength: contentLength });
      _this4._hasWarned.perf = true;
    }
    var dOffset = offset - _this4._scrollMetrics.offset;
    var velocity = dOffset / dt;
    _this4._scrollMetrics = { contentLength: contentLength, dt: dt, offset: offset, timestamp: timestamp, velocity: velocity, visibleLength: visibleLength };
    var _props8 = _this4.props,
        data = _props8.data,
        getItemCount = _props8.getItemCount,
        onEndReached = _props8.onEndReached,
        onEndReachedThreshold = _props8.onEndReachedThreshold,
        windowSize = _props8.windowSize;

    _this4._updateViewableItems(data);
    if (!data) {
      return;
    }
    var distanceFromEnd = contentLength - visibleLength - offset;
    var itemCount = getItemCount(data);
    if (_this4.state.last === itemCount - 1 && distanceFromEnd < onEndReachedThreshold * visibleLength && (_this4._hasDataChangedSinceEndReached || _this4._scrollMetrics.contentLength !== _this4._sentEndForContentLength)) {
      _this4._hasDataChangedSinceEndReached = false;
      _this4._sentEndForContentLength = _this4._scrollMetrics.contentLength;
      onEndReached({ distanceFromEnd: distanceFromEnd });
    }
    var _state2 = _this4.state,
        first = _state2.first,
        last = _state2.last;

    if (first > 0 && velocity < 0 || last < itemCount - 1 && velocity > 0) {
      var distanceToContentEdge = Math.min(Math.abs(_this4._getFrameMetricsApprox(first).offset - offset), Math.abs(_this4._getFrameMetricsApprox(last).offset - (offset + visibleLength)));
      var hiPri = distanceToContentEdge < windowSize * visibleLength / 4;
      if (hiPri) {
        _this4._updateCellsToRenderBatcher.dispose({ abort: true });
        _this4._updateCellsToRender();
        return;
      }
    }
    _this4._updateCellsToRenderBatcher.schedule();
  };

  this._onScrollBeginDrag = function (e) {
    _this4._viewabilityHelper.recordInteraction();
    _this4.props.onScrollBeginDrag && _this4.props.onScrollBeginDrag(e);
  };

  this._updateCellsToRender = function () {
    var _props9 = _this4.props,
        data = _props9.data,
        disableVirtualization = _props9.disableVirtualization,
        getItemCount = _props9.getItemCount,
        onEndReachedThreshold = _props9.onEndReachedThreshold;

    _this4._updateViewableItems(data);
    if (!data) {
      return;
    }
    _this4.setState(function (state) {
      var newState = void 0;
      if (!disableVirtualization) {
        newState = computeWindowedRenderLimits(_this4.props, state, _this4._getFrameMetricsApprox, _this4._scrollMetrics);
      } else {
        var _scrollMetrics = _this4._scrollMetrics,
            contentLength = _scrollMetrics.contentLength,
            _offset = _scrollMetrics.offset,
            visibleLength = _scrollMetrics.visibleLength;

        var _distanceFromEnd = contentLength - visibleLength - _offset;
        var renderAhead = _distanceFromEnd < onEndReachedThreshold * visibleLength ? _this4.props.maxToRenderPerBatch : 0;
        newState = {
          first: 0,
          last: Math.min(state.last + renderAhead, getItemCount(data) - 1)
        };
      }
      return newState;
    });
  };

  this._createViewToken = function (index, isViewable) {
    var _props10 = _this4.props,
        data = _props10.data,
        getItem = _props10.getItem,
        keyExtractor = _props10.keyExtractor;

    var item = getItem(data, index);
    invariant(item, 'Missing item for index ' + index);
    return { index: index, item: item, key: keyExtractor(item, index), isViewable: isViewable };
  };

  this._getFrameMetricsApprox = function (index) {
    var frame = _this4._getFrameMetrics(index);
    if (frame && frame.index === index) {
      return frame;
    } else {
      var _getItemLayout = _this4.props.getItemLayout;

      invariant(!_getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');
      return {
        length: _this4._averageCellLength,
        offset: _this4._averageCellLength * index
      };
    }
  };

  this._getFrameMetrics = function (index) {
    var _props11 = _this4.props,
        data = _props11.data,
        getItem = _props11.getItem,
        getItemCount = _props11.getItemCount,
        getItemLayout = _props11.getItemLayout,
        keyExtractor = _props11.keyExtractor;

    invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);
    var item = getItem(data, index);
    var frame = item && _this4._frames[keyExtractor(item, index)];
    if (!frame || frame.index !== index) {
      if (getItemLayout) {
        frame = getItemLayout(data, index);
      }
    }
    return frame;
  };
};

var CellRenderer = function (_React$Component) {
  babelHelpers.inherits(CellRenderer, _React$Component);

  function CellRenderer() {
    babelHelpers.classCallCheck(this, CellRenderer);
    return babelHelpers.possibleConstructorReturn(this, (CellRenderer.__proto__ || Object.getPrototypeOf(CellRenderer)).apply(this, arguments));
  }

  babelHelpers.createClass(CellRenderer, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.onUnmount(this.props.cellKey);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props7 = this.props,
          item = _props7.item,
          index = _props7.index,
          parentProps = _props7.parentProps;
      var renderItem = parentProps.renderItem,
          getItemLayout = parentProps.getItemLayout;

      invariant(renderItem, 'no renderItem!');
      var element = renderItem({ item: item, index: index });
      if (getItemLayout && !parentProps.debug) {
        return element;
      }

      return React.createElement(
        View,
        { onLayout: this.props.onLayout, __source: {
            fileName: _jsxFileName,
            lineNumber: 763
          }
        },
        element
      );
    }
  }]);
  return CellRenderer;
}(React.Component);

module.exports = VirtualizedList;
}, 333, null, "VirtualizedList");
__d(/* Batchinator */function(global, require, module, exports) {
'use strict';

var InteractionManager = require(303                 ); // 303 = InteractionManager

var Batchinator = function () {
  function Batchinator(callback, delayMS) {
    babelHelpers.classCallCheck(this, Batchinator);

    this._delay = delayMS;
    this._callback = callback;
  }

  babelHelpers.createClass(Batchinator, [{
    key: 'dispose',
    value: function dispose() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { abort: false };

      if (this._taskHandle) {
        this._taskHandle.cancel();
        if (!options.abort) {
          this._callback();
        }
        this._taskHandle = null;
      }
    }
  }, {
    key: 'schedule',
    value: function schedule() {
      var _this = this;

      if (this._taskHandle) {
        return;
      }
      var timeoutHandle = setTimeout(function () {
        _this._taskHandle = InteractionManager.runAfterInteractions(function () {
          _this._taskHandle = null;
          _this._callback();
        });
      }, this._delay);
      this._taskHandle = { cancel: function cancel() {
          return clearTimeout(timeoutHandle);
        } };
    }
  }]);
  return Batchinator;
}();

module.exports = Batchinator;
}, 334, null, "Batchinator");
__d(/* ViewabilityHelper */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var ViewabilityHelper = function () {
  function ViewabilityHelper() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { viewAreaCoveragePercentThreshold: 0 };
    babelHelpers.classCallCheck(this, ViewabilityHelper);
    this._hasInteracted = false;
    this._lastUpdateTime = 0;
    this._timers = new Set();
    this._viewableIndices = [];
    this._viewableItems = new Map();

    this._config = config;
  }

  babelHelpers.createClass(ViewabilityHelper, [{
    key: 'dispose',
    value: function dispose() {
      this._timers.forEach(clearTimeout);
    }
  }, {
    key: 'computeViewableItems',
    value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {
      var _config = this._config,
          itemVisiblePercentThreshold = _config.itemVisiblePercentThreshold,
          viewAreaCoveragePercentThreshold = _config.viewAreaCoveragePercentThreshold;

      var viewAreaMode = viewAreaCoveragePercentThreshold != null;
      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;
      invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');
      var viewableIndices = [];
      if (itemCount === 0) {
        return viewableIndices;
      }
      var firstVisible = -1;

      var _ref = renderRange || { first: 0, last: itemCount - 1 },
          first = _ref.first,
          last = _ref.last;

      invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({ renderRange: renderRange, itemCount: itemCount }));
      for (var idx = first; idx <= last; idx++) {
        var metrics = getFrameMetrics(idx);
        if (!metrics) {
          continue;
        }
        var top = metrics.offset - scrollOffset;
        var bottom = top + metrics.length;
        if (top < viewportHeight && bottom > 0) {
          firstVisible = idx;
          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {
            viewableIndices.push(idx);
          }
        } else if (firstVisible >= 0) {
          break;
        }
      }
      return viewableIndices;
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {
      var _this = this;

      var updateTime = Date.now();
      if (this._lastUpdateTime === 0 && itemCount > 0 && getFrameMetrics(0)) {
        this._lastUpdateTime = updateTime;
      }
      var updateElapsed = this._lastUpdateTime ? updateTime - this._lastUpdateTime : 0;
      if (this._config.waitForInteraction && !this._hasInteracted) {
        return;
      }
      var viewableIndices = [];
      if (itemCount) {
        viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);
      }
      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {
        return v === viewableIndices[ii];
      })) {
        return;
      }
      this._viewableIndices = viewableIndices;
      this._lastUpdateTime = updateTime;
      if (this._config.minimumViewTime && updateElapsed < this._config.minimumViewTime) {
        var handle = setTimeout(function () {
          _this._timers.delete(handle);
          _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
        }, this._config.minimumViewTime);
        this._timers.add(handle);
      } else {
        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
      }
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._hasInteracted = true;
    }
  }, {
    key: '_onUpdateSync',
    value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {
      var _this2 = this;

      viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {
        return _this2._viewableIndices.includes(ii);
      });
      var prevItems = this._viewableItems;
      var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {
        var viewable = createViewToken(ii, true);
        return [viewable.key, viewable];
      }));

      var changed = [];
      for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref4;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref4 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref4 = _i.value;
        }

        var _ref2 = _ref4;

        var _ref3 = babelHelpers.slicedToArray(_ref2, 2);

        var _key = _ref3[0];
        var viewable = _ref3[1];

        if (!prevItems.has(_key)) {
          changed.push(viewable);
        }
      }
      for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref7;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref7 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref7 = _i2.value;
        }

        var _ref5 = _ref7;

        var _ref6 = babelHelpers.slicedToArray(_ref5, 2);

        var _key2 = _ref6[0];
        var _viewable = _ref6[1];

        if (!nextItems.has(_key2)) {
          changed.push(babelHelpers.extends({}, _viewable, { isViewable: false }));
        }
      }
      if (changed.length > 0) {
        this._viewableItems = nextItems;
        onViewableItemsChanged({ viewableItems: Array.from(nextItems.values()), changed: changed });
      }
    }
  }]);
  return ViewabilityHelper;
}();

function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {
  if (_isEntirelyVisible(top, bottom, viewportHeight)) {
    return true;
  } else {
    var pixels = _getPixelsVisible(top, bottom, viewportHeight);
    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);
    return percent >= viewablePercentThreshold;
  }
}

function _getPixelsVisible(top, bottom, viewportHeight) {
  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);
  return Math.max(0, visibleHeight);
}

function _isEntirelyVisible(top, bottom, viewportHeight) {
  return top >= 0 && bottom <= viewportHeight && bottom > top;
}

module.exports = ViewabilityHelper;
}, 335, null, "ViewabilityHelper");
__d(/* VirtualizeUtils */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {
  var out = [];
  for (var ii = 0; ii < itemCount; ii++) {
    var frame = getFrameMetrics(ii);
    var trailingOffset = frame.offset + frame.length;
    for (var kk = 0; kk < offsets.length; kk++) {
      if (out[kk] == null && trailingOffset >= offsets[kk]) {
        out[kk] = ii;
        if (kk === offsets.length - 1) {
          invariant(out.length === offsets.length, 'bad offsets input, should be in increasing order ' + JSON.stringify(offsets));
          return out;
        }
      }
    }
  }
  return out;
}

function newRangeCount(prev, next) {
  return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));
}

function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {
  var data = props.data,
      getItemCount = props.getItemCount,
      maxToRenderPerBatch = props.maxToRenderPerBatch,
      windowSize = props.windowSize;

  var itemCount = getItemCount(data);
  if (itemCount === 0) {
    return prev;
  }
  var offset = scrollMetrics.offset,
      velocity = scrollMetrics.velocity,
      visibleLength = scrollMetrics.visibleLength;

  var visibleBegin = Math.max(0, offset);
  var visibleEnd = visibleBegin + visibleLength;
  var overscanLength = (windowSize - 1) * visibleLength;
  var leadFactor = Math.max(0, Math.min(1, velocity / 5 + 0.5));
  var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);
  var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);

  var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),
      _elementsThatOverlapO2 = babelHelpers.slicedToArray(_elementsThatOverlapO, 4),
      overscanFirst = _elementsThatOverlapO2[0],
      first = _elementsThatOverlapO2[1],
      last = _elementsThatOverlapO2[2],
      overscanLast = _elementsThatOverlapO2[3];

  overscanFirst = overscanFirst == null ? 0 : overscanFirst;
  first = first == null ? Math.max(0, overscanFirst) : first;
  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;
  last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;
  var visible = { first: first, last: last };

  var newCellCount = newRangeCount(prev, visible);

  while (true) {
    if (first <= overscanFirst && last >= overscanLast) {
      break;
    }
    var maxNewCells = newCellCount >= maxToRenderPerBatch;
    var firstWillAddMore = first <= prev.first || first > prev.last;
    var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);
    var lastWillAddMore = last >= prev.last || last < prev.first;
    var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);
    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {
      break;
    }
    if (firstShouldIncrement) {
      if (firstWillAddMore) {
        newCellCount++;
      }
      first--;
    }
    if (lastShouldIncrement) {
      if (lastWillAddMore) {
        newCellCount++;
      }
      last++;
    }
  }
  if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {
    throw new Error('Bad window calculation ' + JSON.stringify({ first: first, last: last, itemCount: itemCount, overscanFirst: overscanFirst, overscanLast: overscanLast, visible: visible }));
  }
  return { first: first, last: last };
}

var VirtualizeUtils = {
  computeWindowedRenderLimits: computeWindowedRenderLimits,
  elementsThatOverlapOffsets: elementsThatOverlapOffsets,
  newRangeCount: newRangeCount
};

module.exports = VirtualizeUtils;
}, 336, null, "VirtualizeUtils");
__d(/* ImageEditor */function(global, require, module, exports) {
'use strict';

var RCTImageEditingManager = require(48             ).ImageEditingManager; // 48 = NativeModules

var ImageEditor = function () {
  function ImageEditor() {
    babelHelpers.classCallCheck(this, ImageEditor);
  }

  babelHelpers.createClass(ImageEditor, null, [{
    key: 'cropImage',
    value: function cropImage(uri, cropData, success, failure) {
      RCTImageEditingManager.cropImage(uri, cropData, success, failure);
    }
  }]);
  return ImageEditor;
}();

module.exports = ImageEditor;
}, 337, null, "ImageEditor");
__d(/* ImageStore */function(global, require, module, exports) {
'use strict';

var RCTImageStoreManager = require(48             ).ImageStoreManager; // 48 = NativeModules

var ImageStore = function () {
  function ImageStore() {
    babelHelpers.classCallCheck(this, ImageStore);
  }

  babelHelpers.createClass(ImageStore, null, [{
    key: 'hasImageForTag',
    value: function hasImageForTag(uri, callback) {
      if (RCTImageStoreManager.hasImageForTag) {
        RCTImageStoreManager.hasImageForTag(uri, callback);
      } else {
        console.warn('hasImageForTag() not implemented');
      }
    }
  }, {
    key: 'removeImageForTag',
    value: function removeImageForTag(uri) {
      if (RCTImageStoreManager.removeImageForTag) {
        RCTImageStoreManager.removeImageForTag(uri);
      } else {
        console.warn('removeImageForTag() not implemented');
      }
    }
  }, {
    key: 'addImageFromBase64',
    value: function addImageFromBase64(base64ImageData, success, failure) {
      RCTImageStoreManager.addImageFromBase64(base64ImageData, success, failure);
    }
  }, {
    key: 'getBase64ForTag',
    value: function getBase64ForTag(uri, success, failure) {
      RCTImageStoreManager.getBase64ForTag(uri, success, failure);
    }
  }]);
  return ImageStore;
}();

module.exports = ImageStore;
}, 338, null, "ImageStore");
__d(/* KeyboardAvoidingView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Keyboard\\KeyboardAvoidingView.js';
var Keyboard = require(75        ); // 75 = Keyboard
var LayoutAnimation = require(340              ); // 340 = LayoutAnimation
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var TimerMixin = require(298                ); // 298 = react-timer-mixin
var View = require(234   ); // 234 = View

var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var PropTypes = React.PropTypes;

var viewRef = 'VIEW';

var KeyboardAvoidingView = React.createClass({
  displayName: 'KeyboardAvoidingView',

  mixins: [TimerMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    behavior: PropTypes.oneOf(['height', 'position', 'padding']),

    contentContainerStyle: ViewPropTypes.style,

    keyboardVerticalOffset: PropTypes.number.isRequired
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      keyboardVerticalOffset: 0
    };
  },
  getInitialState: function getInitialState() {
    return {
      bottom: 0
    };
  },


  subscriptions: [],
  frame: null,

  relativeKeyboardHeight: function relativeKeyboardHeight(keyboardFrame) {
    var frame = this.frame;
    if (!frame || !keyboardFrame) {
      return 0;
    }

    var y1 = Math.max(frame.y, keyboardFrame.screenY - this.props.keyboardVerticalOffset);
    var y2 = Math.min(frame.y + frame.height, keyboardFrame.screenY + keyboardFrame.height - this.props.keyboardVerticalOffset);
    if (frame.y > keyboardFrame.screenY) {
      return frame.y + frame.height - keyboardFrame.screenY - this.props.keyboardVerticalOffset;
    }
    return Math.max(y2 - y1, 0);
  },
  onKeyboardChange: function onKeyboardChange(event) {
    if (!event) {
      this.setState({ bottom: 0 });
      return;
    }

    var duration = event.duration,
        easing = event.easing,
        endCoordinates = event.endCoordinates;

    var height = this.relativeKeyboardHeight(endCoordinates);

    if (duration && easing) {
      LayoutAnimation.configureNext({
        duration: duration,
        update: {
          duration: duration,
          type: LayoutAnimation.Types[easing] || 'keyboard'
        }
      });
    }
    this.setState({ bottom: height });
  },
  onLayout: function onLayout(event) {
    this.frame = event.nativeEvent.layout;
  },
  componentWillUpdate: function componentWillUpdate(nextProps, nextState, nextContext) {
    if (nextState.bottom === this.state.bottom && this.props.behavior === 'height' && nextProps.behavior === 'height') {
      nextState.bottom = 0;
    }
  },
  componentWillMount: function componentWillMount() {
    if (Platform.OS === 'ios') {
      this.subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange)];
    } else {
      this.subscriptions = [Keyboard.addListener('keyboardDidHide', this.onKeyboardChange), Keyboard.addListener('keyboardDidShow', this.onKeyboardChange)];
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this.subscriptions.forEach(function (sub) {
      return sub.remove();
    });
  },
  render: function render() {
    var _props = this.props,
        behavior = _props.behavior,
        children = _props.children,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['behavior', 'children', 'style']);


    switch (behavior) {
      case 'height':
        var heightStyle = void 0;
        if (this.frame) {
          heightStyle = { height: this.frame.height - this.state.bottom, flex: 0 };
        }
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, heightStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 173
            }
          }),
          children
        );

      case 'position':
        var positionStyle = { bottom: this.state.bottom };
        var contentContainerStyle = this.props.contentContainerStyle;


        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: style, onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 183
            }
          }),
          React.createElement(
            View,
            { style: [contentContainerStyle, positionStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 184
              }
            },
            children
          )
        );

      case 'padding':
        var paddingStyle = { paddingBottom: this.state.bottom };
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, paddingStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 193
            }
          }),
          children
        );

      default:
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, onLayout: this.onLayout, style: style }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 200
            }
          }),
          children
        );
    }
  }
});

module.exports = KeyboardAvoidingView;
}, 339, null, "KeyboardAvoidingView");
__d(/* LayoutAnimation */function(global, require, module, exports) {
'use strict';

var UIManager = require(78         ); // 78 = UIManager

var keyMirror = require(239                 ); // 239 = fbjs/lib/keyMirror

var _require = require(13     ), // 13 = react
    checkPropTypes = _require.checkPropTypes,
    PropTypes = _require.PropTypes;

var TypesEnum = {
  spring: true,
  linear: true,
  easeInEaseOut: true,
  easeIn: true,
  easeOut: true,
  keyboard: true
};
var Types = keyMirror(TypesEnum);

var PropertiesEnum = {
  opacity: true,
  scaleXY: true
};
var Properties = keyMirror(PropertiesEnum);

var animType = PropTypes.shape({
  duration: PropTypes.number,
  delay: PropTypes.number,
  springDamping: PropTypes.number,
  initialVelocity: PropTypes.number,
  type: PropTypes.oneOf(Object.keys(Types)).isRequired,
  property: PropTypes.oneOf(Object.keys(Properties))
});

var configType = PropTypes.shape({
  duration: PropTypes.number.isRequired,
  create: animType,
  update: animType,
  delete: animType
});

function checkConfig(config, location, name) {
  checkPropTypes({ config: configType }, { config: config }, location, name);
}

function configureNext(config, onAnimationDidEnd) {
  if (__DEV__) {
    checkConfig(config, 'config', 'LayoutAnimation.configureNext');
  }
  UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd || function () {}, function () {});
}

function create(duration, type, creationProp) {
  return {
    duration: duration,
    create: {
      type: type,
      property: creationProp
    },
    update: {
      type: type
    },
    delete: {
      type: type,
      property: creationProp
    }
  };
}

var Presets = {
  easeInEaseOut: create(300, Types.easeInEaseOut, Properties.opacity),
  linear: create(500, Types.linear, Properties.opacity),
  spring: {
    duration: 700,
    create: {
      type: Types.linear,
      property: Properties.opacity
    },
    update: {
      type: Types.spring,
      springDamping: 0.4
    },
    delete: {
      type: Types.linear,
      property: Properties.opacity
    }
  }
};

var LayoutAnimation = {
  configureNext: configureNext,

  create: create,
  Types: Types,
  Properties: Properties,
  checkConfig: checkConfig,
  Presets: Presets,
  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
  linear: configureNext.bind(null, Presets.linear),
  spring: configureNext.bind(null, Presets.spring)
};

module.exports = LayoutAnimation;
}, 340, null, "LayoutAnimation");
__d(/* Modal */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Modal\\Modal.js',
    _container;

var AppContainer = require(342           ); // 342 = AppContainer
var I18nManager = require(363          ); // 363 = I18nManager
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var View = require(234   ); // 234 = View

var deprecatedPropType = require(243                 ); // 243 = deprecatedPropType
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent
var RCTModalHostView = requireNativeComponent('RCTModalHostView', null);

var PropTypes = React.PropTypes;

var Modal = function (_React$Component) {
  babelHelpers.inherits(Modal, _React$Component);

  function Modal() {
    babelHelpers.classCallCheck(this, Modal);
    return babelHelpers.possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).apply(this, arguments));
  }

  babelHelpers.createClass(Modal, [{
    key: 'render',
    value: function render() {
      if (this.props.visible === false) {
        return null;
      }

      var containerStyles = {
        backgroundColor: this.props.transparent ? 'transparent' : 'white'
      };

      var animationType = this.props.animationType;
      if (!animationType) {
        animationType = 'none';
        if (this.props.animated) {
          animationType = 'slide';
        }
      }

      var innerChildren = __DEV__ ? React.createElement(
        AppContainer,
        { rootTag: this.context.rootTag, __source: {
            fileName: _jsxFileName,
            lineNumber: 162
          }
        },
        this.props.children
      ) : this.props.children;

      return React.createElement(
        RCTModalHostView,
        {
          animationType: animationType,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 168
          }
        },
        React.createElement(
          View,
          { style: [styles.container, containerStyles], __source: {
              fileName: _jsxFileName,
              lineNumber: 179
            }
          },
          innerChildren
        )
      );
    }
  }, {
    key: '_shouldSetResponder',
    value: function _shouldSetResponder() {
      return true;
    }
  }]);
  return Modal;
}(React.Component);

Modal.propTypes = {
  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),

  transparent: PropTypes.bool,

  hardwareAccelerated: PropTypes.bool,

  visible: PropTypes.bool,

  onRequestClose: Platform.OS === 'android' ? PropTypes.func.isRequired : PropTypes.func,

  onShow: PropTypes.func,
  animated: deprecatedPropType(PropTypes.bool, 'Use the `animationType` prop instead.'),

  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),

  onOrientationChange: PropTypes.func
};
Modal.defaultProps = {
  visible: true,
  hardwareAccelerated: false
};
Modal.contextTypes = {
  rootTag: React.PropTypes.number
};


var side = I18nManager.isRTL ? 'right' : 'left';
var styles = StyleSheet.create({
  modal: {
    position: 'absolute'
  },
  container: (_container = {
    position: 'absolute'
  }, babelHelpers.defineProperty(_container, side, 0), babelHelpers.defineProperty(_container, 'top', 0), _container)
});

module.exports = Modal;
}, 341, null, "Modal");
__d(/* AppContainer */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\ReactNative\\AppContainer.js';
var EmitterSubscription = require(70                   ); // 70 = EmitterSubscription
var RCTDeviceEventEmitter = require(68                     ); // 68 = RCTDeviceEventEmitter
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var StyleSheet = require(262         ); // 262 = StyleSheet
var View = require(234   ); // 234 = View

var AppContainer = function (_React$Component) {
  babelHelpers.inherits(AppContainer, _React$Component);

  function AppContainer() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, AppContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      inspector: null,
      mainKey: 1
    }, _this._subscription = null, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(AppContainer, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        rootTag: this.props.rootTag
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (__DEV__) {
        this._subscription = RCTDeviceEventEmitter.addListener('toggleElementInspector', function () {
          var Inspector = require(343        ); // 343 = Inspector
          var inspector = _this2.state.inspector ? null : React.createElement(Inspector, {
            inspectedViewTag: ReactNative.findNodeHandle(_this2._mainRef),
            onRequestRerenderApp: function onRequestRerenderApp(updateInspectedViewTag) {
              _this2.setState(function (s) {
                return { mainKey: s.mainKey + 1 };
              }, function () {
                return updateInspectedViewTag(ReactNative.findNodeHandle(_this2._mainRef));
              });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          });
          _this2.setState({ inspector: inspector });
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subscription) {
        this._subscription.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var yellowBox = null;
      if (__DEV__) {
        var YellowBox = require(362        ); // 362 = YellowBox
        yellowBox = React.createElement(YellowBox, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        });
      }

      return React.createElement(
        View,
        { style: styles.appContainer, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 92
          }
        },
        React.createElement(
          View,
          {
            collapsable: !this.state.inspector,
            key: this.state.mainKey,
            pointerEvents: 'box-none',
            style: styles.appContainer, ref: function ref(_ref2) {
              _this3._mainRef = _ref2;
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 93
            }
          },
          this.props.children
        ),
        yellowBox,
        this.state.inspector
      );
    }
  }]);
  return AppContainer;
}(React.Component);

AppContainer.childContextTypes = {
  rootTag: React.PropTypes.number
};


var styles = StyleSheet.create({
  appContainer: {
    flex: 1
  }
});

module.exports = AppContainer;
}, 342, null, "AppContainer");
__d(/* Inspector */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\Inspector.js';
var Dimensions = require(264         ); // 264 = Dimensions
var InspectorOverlay = require(344               ); // 344 = InspectorOverlay
var InspectorPanel = require(349             ); // 349 = InspectorPanel
var InspectorUtils = require(345             ); // 345 = InspectorUtils
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Touchable = require(290        ); // 290 = Touchable
var UIManager = require(78         ); // 78 = UIManager
var View = require(234   ); // 234 = View

if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
  window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = require(128           ); // 128 = flattenStyle
}

var Inspector = function (_React$Component) {
  babelHelpers.inherits(Inspector, _React$Component);

  function Inspector(props) {
    babelHelpers.classCallCheck(this, Inspector);

    var _this = babelHelpers.possibleConstructorReturn(this, (Inspector.__proto__ || Object.getPrototypeOf(Inspector)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      devtoolsAgent: null,
      hierarchy: null,
      panelPos: 'bottom',
      inspecting: true,
      perfing: false,
      inspected: null,
      selection: null,
      inspectedViewTag: _this.props.inspectedViewTag,
      networking: false
    };
    return _this;
  }

  babelHelpers.createClass(Inspector, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
        this.attachToDevtools = this.attachToDevtools.bind(this);
        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools', this.attachToDevtools);

        if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent) {
          this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subs) {
        this._subs.map(function (fn) {
          return fn();
        });
      }
      if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools', this.attachToDevtools);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.setState({ inspectedViewTag: newProps.inspectedViewTag });
    }
  }, {
    key: 'setSelection',
    value: function setSelection(i) {
      var _this2 = this;

      var instance = this.state.hierarchy[i];

      var publicInstance = instance['_instance'] || {};
      var source = instance['_currentElement'] && instance['_currentElement']['_source'];
      UIManager.measure(instance.getHostNode(), function (x, y, width, height, left, top) {
        _this2.setState({
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: publicInstance.props ? publicInstance.props.style : {},
            source: source
          },
          selection: i
        });
      });
    }
  }, {
    key: 'onTouchInstance',
    value: function onTouchInstance(touched, frame, pointerY) {
      var hierarchy = InspectorUtils.getOwnerHierarchy(touched);
      var instance = InspectorUtils.lastNotNativeInstance(hierarchy);

      if (this.state.devtoolsAgent) {
        this.state.devtoolsAgent.selectFromReactInstance(instance, true);
      }

      var publicInstance = instance['_instance'] || {};
      var props = publicInstance.props || {};
      var source = instance['_currentElement'] && instance['_currentElement']['_source'];
      this.setState({
        panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',
        selection: hierarchy.indexOf(instance),
        hierarchy: hierarchy,
        inspected: {
          style: props.style || {},
          frame: frame,
          source: source
        }
      });
    }
  }, {
    key: 'setPerfing',
    value: function setPerfing(val) {
      this.setState({
        perfing: val,
        inspecting: false,
        inspected: null,
        networking: false
      });
    }
  }, {
    key: 'setInspecting',
    value: function setInspecting(val) {
      this.setState({
        inspecting: val,
        inspected: null
      });
    }
  }, {
    key: 'setTouchTargetting',
    value: function setTouchTargetting(val) {
      var _this3 = this;

      Touchable.TOUCH_TARGET_DEBUG = val;
      this.props.onRequestRerenderApp(function (inspectedViewTag) {
        _this3.setState({ inspectedViewTag: inspectedViewTag });
      });
    }
  }, {
    key: 'setNetworking',
    value: function setNetworking(val) {
      this.setState({
        networking: val,
        perfing: false,
        inspecting: false,
        inspected: null
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var panelContainerStyle = this.state.panelPos === 'bottom' ? { bottom: 0 } : { top: Platform.OS === 'ios' ? 20 : 0 };
      return React.createElement(
        View,
        { style: styles.container, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 212
          }
        },
        this.state.inspecting && React.createElement(InspectorOverlay, {
          inspected: this.state.inspected,
          inspectedViewTag: this.state.inspectedViewTag,
          onTouchInstance: this.onTouchInstance.bind(this),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 214
          }
        }),
        React.createElement(
          View,
          { style: [styles.panelContainer, panelContainerStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 219
            }
          },
          React.createElement(InspectorPanel, {
            devtoolsIsOpen: !!this.state.devtoolsAgent,
            inspecting: this.state.inspecting,
            perfing: this.state.perfing,
            setPerfing: this.setPerfing.bind(this),
            setInspecting: this.setInspecting.bind(this),
            inspected: this.state.inspected,
            hierarchy: this.state.hierarchy,
            selection: this.state.selection,
            setSelection: this.setSelection.bind(this),
            touchTargetting: Touchable.TOUCH_TARGET_DEBUG,
            setTouchTargetting: this.setTouchTargetting.bind(this),
            networking: this.state.networking,
            setNetworking: this.setNetworking.bind(this),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 220
            }
          })
        )
      );
    }
  }]);
  return Inspector;
}(React.Component);

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.attachToDevtools = function (agent) {
    var _hideWait = null;
    var hlSub = agent.sub('highlight', function (_ref) {
      var node = _ref.node,
          name = _ref.name,
          props = _ref.props;

      clearTimeout(_hideWait);
      UIManager.measure(node, function (x, y, width, height, left, top) {
        _this4.setState({
          hierarchy: [],
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props ? props.style : {}
          }
        });
      });
    });
    var hideSub = agent.sub('hideHighlight', function () {
      if (_this4.state.inspected === null) {
        return;
      }

      _hideWait = setTimeout(function () {
        _this4.setState({
          inspected: null
        });
      }, 100);
    });
    _this4._subs = [hlSub, hideSub];

    agent.on('shutdown', function () {
      _this4.setState({ devtoolsAgent: null });
      _this4._subs = null;
    });
    _this4.setState({
      devtoolsAgent: agent
    });
  };
};

var styles = StyleSheet.create({
  container: {
    position: 'absolute',
    backgroundColor: 'transparent',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  panelContainer: {
    position: 'absolute',
    left: 0,
    right: 0
  }
});

module.exports = Inspector;
}, 343, null, "Inspector");
__d(/* InspectorOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\InspectorOverlay.js';
var Dimensions = require(264         ); // 264 = Dimensions
var InspectorUtils = require(345             ); // 345 = InspectorUtils
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var UIManager = require(78         ); // 78 = UIManager
var View = require(234   ); // 234 = View
var ElementBox = require(346         ); // 346 = ElementBox

var PropTypes = React.PropTypes;

var InspectorOverlay = function (_React$Component) {
  babelHelpers.inherits(InspectorOverlay, _React$Component);

  function InspectorOverlay() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, InspectorOverlay);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = InspectorOverlay.__proto__ || Object.getPrototypeOf(InspectorOverlay)).call.apply(_ref, [this].concat(args))), _this), _this.findViewForTouchEvent = function (e) {
      var _e$nativeEvent$touche = e.nativeEvent.touches[0],
          locationX = _e$nativeEvent$touche.locationX,
          locationY = _e$nativeEvent$touche.locationY;

      UIManager.findSubviewIn(_this.props.inspectedViewTag, [locationX, locationY], function (nativeViewTag, left, top, width, height) {
        var instance = InspectorUtils.findInstanceByNativeTag(nativeViewTag);
        if (!instance) {
          return;
        }
        _this.props.onTouchInstance(instance, { left: left, top: top, width: width, height: height }, locationY);
      });
    }, _this.shouldSetResponser = function (e) {
      _this.findViewForTouchEvent(e);
      return true;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(InspectorOverlay, [{
    key: 'render',
    value: function render() {
      var content = null;
      if (this.props.inspected) {
        content = React.createElement(ElementBox, { frame: this.props.inspected.frame, style: this.props.inspected.style, __source: {
            fileName: _jsxFileName,
            lineNumber: 70
          }
        });
      }

      return React.createElement(
        View,
        {
          onStartShouldSetResponder: this.shouldSetResponser,
          onResponderMove: this.findViewForTouchEvent,
          style: [styles.inspector, { height: Dimensions.get('window').height }], __source: {
            fileName: _jsxFileName,
            lineNumber: 74
          }
        },
        content
      );
    }
  }]);
  return InspectorOverlay;
}(React.Component);

InspectorOverlay.propTypes = {
  inspected: PropTypes.shape({
    frame: PropTypes.object,
    style: PropTypes.any
  }),
  inspectedViewTag: PropTypes.number,
  onTouchInstance: PropTypes.func.isRequired
};


var styles = StyleSheet.create({
  inspector: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0
  }
});

module.exports = InspectorOverlay;
}, 344, null, "InspectorOverlay");
__d(/* InspectorUtils */function(global, require, module, exports) {
'use strict';

var ReactNativeComponentTree = require(129                       ); // 129 = ReactNativeComponentTree

function traverseOwnerTreeUp(hierarchy, instance) {
  if (instance) {
    hierarchy.unshift(instance);
    traverseOwnerTreeUp(hierarchy, instance._currentElement._owner);
  }
}

function findInstanceByNativeTag(nativeTag) {
  var instance = ReactNativeComponentTree.getInstanceFromNode(nativeTag);
  if (!instance || typeof instance.tag === 'number') {
    return null;
  }
  return instance;
}

function getOwnerHierarchy(instance) {
  var hierarchy = [];
  traverseOwnerTreeUp(hierarchy, instance);
  return hierarchy;
}

function lastNotNativeInstance(hierarchy) {
  for (var i = hierarchy.length - 1; i > 1; i--) {
    var instance = hierarchy[i];
    if (!instance.viewConfig) {
      return instance;
    }
  }
  return hierarchy[0];
}

module.exports = { findInstanceByNativeTag: findInstanceByNativeTag, getOwnerHierarchy: getOwnerHierarchy, lastNotNativeInstance: lastNotNativeInstance };
}, 345, null, "InspectorUtils");
__d(/* ElementBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\ElementBox.js';
var React = require(235    ); // 235 = React
var View = require(234   ); // 234 = View
var StyleSheet = require(262         ); // 262 = StyleSheet
var BorderBox = require(347        ); // 347 = BorderBox
var resolveBoxStyle = require(348              ); // 348 = resolveBoxStyle

var flattenStyle = require(128           ); // 128 = flattenStyle

var ElementBox = function (_React$Component) {
  babelHelpers.inherits(ElementBox, _React$Component);

  function ElementBox() {
    babelHelpers.classCallCheck(this, ElementBox);
    return babelHelpers.possibleConstructorReturn(this, (ElementBox.__proto__ || Object.getPrototypeOf(ElementBox)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementBox, [{
    key: 'render',
    value: function render() {
      var style = flattenStyle(this.props.style) || {};
      var margin = resolveBoxStyle('margin', style);
      var padding = resolveBoxStyle('padding', style);
      var frameStyle = this.props.frame;
      if (margin) {
        frameStyle = {
          top: frameStyle.top - margin.top,
          left: frameStyle.left - margin.left,
          height: frameStyle.height + margin.top + margin.bottom,
          width: frameStyle.width + margin.left + margin.right
        };
      }
      var contentStyle = {
        width: this.props.frame.width,
        height: this.props.frame.height
      };
      if (padding) {
        contentStyle = {
          width: contentStyle.width - padding.left - padding.right,
          height: contentStyle.height - padding.top - padding.bottom
        };
      }
      return React.createElement(
        View,
        { style: [styles.frame, frameStyle], pointerEvents: 'none', __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        },
        React.createElement(
          BorderBox,
          { box: margin, style: styles.margin, __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          React.createElement(
            BorderBox,
            { box: padding, style: styles.padding, __source: {
                fileName: _jsxFileName,
                lineNumber: 49
              }
            },
            React.createElement(View, { style: [styles.content, contentStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 50
              }
            })
          )
        )
      );
    }
  }]);
  return ElementBox;
}(React.Component);

var styles = StyleSheet.create({
  frame: {
    position: 'absolute'
  },
  content: {
    backgroundColor: 'rgba(200, 230, 255, 0.8)'
  },
  padding: {
    borderColor: 'rgba(77, 255, 0, 0.3)'
  },
  margin: {
    borderColor: 'rgba(255, 132, 0, 0.3)'
  }
});

module.exports = ElementBox;
}, 346, null, "ElementBox");
__d(/* BorderBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\BorderBox.js';
var React = require(235    ); // 235 = React
var View = require(234   ); // 234 = View

var BorderBox = function (_React$Component) {
  babelHelpers.inherits(BorderBox, _React$Component);

  function BorderBox() {
    babelHelpers.classCallCheck(this, BorderBox);
    return babelHelpers.possibleConstructorReturn(this, (BorderBox.__proto__ || Object.getPrototypeOf(BorderBox)).apply(this, arguments));
  }

  babelHelpers.createClass(BorderBox, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      if (!box) {
        return this.props.children;
      }
      var style = {
        borderTopWidth: box.top,
        borderBottomWidth: box.bottom,
        borderLeftWidth: box.left,
        borderRightWidth: box.right
      };
      return React.createElement(
        View,
        { style: [style, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        this.props.children
      );
    }
  }]);
  return BorderBox;
}(React.Component);

module.exports = BorderBox;
}, 347, null, "BorderBox");
__d(/* resolveBoxStyle */function(global, require, module, exports) {
'use strict';

function resolveBoxStyle(prefix, style) {
  var res = {};
  var subs = ['top', 'left', 'bottom', 'right'];
  var set = false;
  subs.forEach(function (sub) {
    res[sub] = style[prefix] || 0;
  });
  if (style[prefix]) {
    set = true;
  }
  if (style[prefix + 'Vertical']) {
    res.top = res.bottom = style[prefix + 'Vertical'];
    set = true;
  }
  if (style[prefix + 'Horizontal']) {
    res.left = res.right = style[prefix + 'Horizontal'];
    set = true;
  }
  subs.forEach(function (sub) {
    var val = style[prefix + capFirst(sub)];
    if (val) {
      res[sub] = val;
      set = true;
    }
  });
  if (!set) {
    return;
  }
  return res;
}

function capFirst(text) {
  return text[0].toUpperCase() + text.slice(1);
}

module.exports = resolveBoxStyle;
}, 348, null, "resolveBoxStyle");
__d(/* InspectorPanel */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\InspectorPanel.js';
var ElementProperties = require(350                ); // 350 = ElementProperties
var NetworkOverlay = require(358             ); // 358 = NetworkOverlay
var PerformanceOverlay = require(361                 ); // 361 = PerformanceOverlay
var React = require(235    ); // 235 = React
var ScrollView = require(315         ); // 315 = ScrollView
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var TouchableHighlight = require(353                 ); // 353 = TouchableHighlight
var View = require(234   ); // 234 = View

var PropTypes = React.PropTypes;

var InspectorPanel = function (_React$Component) {
  babelHelpers.inherits(InspectorPanel, _React$Component);

  function InspectorPanel() {
    babelHelpers.classCallCheck(this, InspectorPanel);
    return babelHelpers.possibleConstructorReturn(this, (InspectorPanel.__proto__ || Object.getPrototypeOf(InspectorPanel)).apply(this, arguments));
  }

  babelHelpers.createClass(InspectorPanel, [{
    key: 'renderWaiting',
    value: function renderWaiting() {
      if (this.props.inspecting) {
        return React.createElement(
          Text,
          { style: styles.waitingText, __source: {
              fileName: _jsxFileName,
              lineNumber: 30
            }
          },
          'Tap something to inspect it'
        );
      }
      return React.createElement(
        Text,
        { style: styles.waitingText, __source: {
            fileName: _jsxFileName,
            lineNumber: 35
          }
        },
        'Nothing is inspected'
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var contents = void 0;
      if (this.props.inspected) {
        contents = React.createElement(
          ScrollView,
          { style: styles.properties, __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            }
          },
          React.createElement(ElementProperties, {
            style: this.props.inspected.style,
            frame: this.props.inspected.frame,
            source: this.props.inspected.source,
            hierarchy: this.props.hierarchy,
            selection: this.props.selection,
            setSelection: this.props.setSelection,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 43
            }
          })
        );
      } else if (this.props.perfing) {
        contents = React.createElement(PerformanceOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        });
      } else if (this.props.networking) {
        contents = React.createElement(NetworkOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 59
          }
        });
      } else {
        contents = React.createElement(
          View,
          { style: styles.waiting, __source: {
              fileName: _jsxFileName,
              lineNumber: 63
            }
          },
          this.renderWaiting()
        );
      }
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          }
        },
        !this.props.devtoolsIsOpen && contents,
        React.createElement(
          View,
          { style: styles.buttonRow, __source: {
              fileName: _jsxFileName,
              lineNumber: 71
            }
          },
          React.createElement(Button, {
            title: 'Inspect',
            pressed: this.props.inspecting,
            onClick: this.props.setInspecting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 72
            }
          }),
          React.createElement(Button, { title: 'Perf',
            pressed: this.props.perfing,
            onClick: this.props.setPerfing,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          }),
          React.createElement(Button, { title: 'Network',
            pressed: this.props.networking,
            onClick: this.props.setNetworking,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 81
            }
          }),
          React.createElement(Button, { title: 'Touchables',
            pressed: this.props.touchTargetting,
            onClick: this.props.setTouchTargetting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 85
            }
          })
        )
      );
    }
  }]);
  return InspectorPanel;
}(React.Component);

InspectorPanel.propTypes = {
  devtoolsIsOpen: PropTypes.bool,
  inspecting: PropTypes.bool,
  setInspecting: PropTypes.func,
  inspected: PropTypes.object,
  perfing: PropTypes.bool,
  setPerfing: PropTypes.func,
  touchTargetting: PropTypes.bool,
  setTouchTargetting: PropTypes.func,
  networking: PropTypes.bool,
  setNetworking: PropTypes.func
};

var Button = function (_React$Component2) {
  babelHelpers.inherits(Button, _React$Component2);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            return _this3.props.onClick(!_this3.props.pressed);
          }, style: [styles.button, this.props.pressed && styles.buttonPressed], __source: {
            fileName: _jsxFileName,
            lineNumber: 111
          }
        },
        React.createElement(
          Text,
          { style: styles.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 115
            }
          },
          this.props.title
        )
      );
    }
  }]);
  return Button;
}(React.Component);

var styles = StyleSheet.create({
  buttonRow: {
    flexDirection: 'row'
  },
  button: {
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
    margin: 2,
    height: 30,
    justifyContent: 'center',
    alignItems: 'center'
  },
  buttonPressed: {
    backgroundColor: 'rgba(255, 255, 255, 0.3)'
  },
  buttonText: {
    textAlign: 'center',
    color: 'white',
    margin: 5
  },
  container: {
    backgroundColor: 'rgba(0, 0, 0, 0.7)'
  },
  properties: {
    height: 200
  },
  waiting: {
    height: 100
  },
  waitingText: {
    fontSize: 20,
    textAlign: 'center',
    marginVertical: 20,
    color: 'white'
  }
});

module.exports = InspectorPanel;
}, 349, null, "InspectorPanel");
__d(/* ElementProperties */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\ElementProperties.js';
var BoxInspector = require(351           ); // 351 = BoxInspector
var React = require(235    ); // 235 = React
var StyleInspector = require(352             ); // 352 = StyleInspector
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var TouchableHighlight = require(353                 ); // 353 = TouchableHighlight
var TouchableWithoutFeedback = require(297                       ); // 297 = TouchableWithoutFeedback
var View = require(234   ); // 234 = View

var flattenStyle = require(128           ); // 128 = flattenStyle
var mapWithSeparator = require(356               ); // 356 = mapWithSeparator
var openFileInEditor = require(357               ); // 357 = openFileInEditor

var PropTypes = React.PropTypes;

var ElementProperties = function (_React$Component) {
  babelHelpers.inherits(ElementProperties, _React$Component);

  function ElementProperties() {
    babelHelpers.classCallCheck(this, ElementProperties);
    return babelHelpers.possibleConstructorReturn(this, (ElementProperties.__proto__ || Object.getPrototypeOf(ElementProperties)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementProperties, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var style = flattenStyle(this.props.style);

      var selection = this.props.selection;
      var openFileButton = void 0;
      var source = this.props.source;

      var _ref = source || {},
          fileName = _ref.fileName,
          lineNumber = _ref.lineNumber;

      if (fileName && lineNumber) {
        var parts = fileName.split('/');
        var fileNameShort = parts[parts.length - 1];
        openFileButton = React.createElement(
          TouchableHighlight,
          {
            style: styles.openButton,
            onPress: openFileInEditor.bind(null, fileName, lineNumber), __source: {
              fileName: _jsxFileName,
              lineNumber: 63
            }
          },
          React.createElement(
            Text,
            { style: styles.openButtonTitle, numberOfLines: 1, __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            },
            fileNameShort,
            ':',
            lineNumber
          )
        );
      }

      return React.createElement(
        TouchableWithoutFeedback,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75
          }
        },
        React.createElement(
          View,
          { style: styles.info, __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          },
          React.createElement(
            View,
            { style: styles.breadcrumb, __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            mapWithSeparator(this.props.hierarchy, function (item, i) {
              return React.createElement(
                TouchableHighlight,
                {
                  key: 'item-' + i,
                  style: [styles.breadItem, i === selection && styles.selected],

                  onPress: function onPress() {
                    return _this2.props.setSelection(i);
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 81
                  }
                },
                React.createElement(
                  Text,
                  { style: styles.breadItemText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 86
                    }
                  },
                  getInstanceName(item)
                )
              );
            }, function (i) {
              return React.createElement(
                Text,
                { key: 'sep-' + i, style: styles.breadSep, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 92
                  }
                },
                '\u25B8'
              );
            })
          ),
          React.createElement(
            View,
            { style: styles.row, __source: {
                fileName: _jsxFileName,
                lineNumber: 98
              }
            },
            React.createElement(
              View,
              { style: styles.col, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 99
                }
              },
              React.createElement(StyleInspector, { style: style, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 100
                }
              }),
              openFileButton
            ),
            React.createElement(BoxInspector, { style: style, frame: this.props.frame, __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            })
          )
        )
      );
    }
  }]);
  return ElementProperties;
}(React.Component);

ElementProperties.propTypes = {
  hierarchy: PropTypes.array.isRequired,
  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),
  source: PropTypes.shape({
    fileName: PropTypes.string,
    lineNumber: PropTypes.number
  })
};


function getInstanceName(instance) {
  if (instance.getName) {
    return instance.getName();
  }
  if (instance.constructor && instance.constructor.displayName) {
    return instance.constructor.displayName;
  }
  return 'Unknown';
}

var styles = StyleSheet.create({
  breadSep: {
    fontSize: 8,
    color: 'white'
  },
  breadcrumb: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'flex-start',
    marginBottom: 5
  },
  selected: {
    borderColor: 'white',
    borderRadius: 5
  },
  breadItem: {
    borderWidth: 1,
    borderColor: 'transparent',
    marginHorizontal: 2
  },
  breadItemText: {
    fontSize: 10,
    color: 'white',
    marginHorizontal: 5
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  col: {
    flex: 1
  },
  info: {
    padding: 10
  },
  openButton: {
    padding: 10,
    backgroundColor: '#000',
    marginVertical: 5,
    marginRight: 5,
    borderRadius: 2
  },
  openButtonTitle: {
    color: 'white',
    fontSize: 8
  }
});

module.exports = ElementProperties;
}, 350, null, "ElementProperties");
__d(/* BoxInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\BoxInspector.js';
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var View = require(234   ); // 234 = View
var resolveBoxStyle = require(348              ); // 348 = resolveBoxStyle

var blank = {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0
};

var BoxInspector = function (_React$Component) {
  babelHelpers.inherits(BoxInspector, _React$Component);

  function BoxInspector() {
    babelHelpers.classCallCheck(this, BoxInspector);
    return babelHelpers.possibleConstructorReturn(this, (BoxInspector.__proto__ || Object.getPrototypeOf(BoxInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxInspector, [{
    key: 'render',
    value: function render() {
      var frame = this.props.frame;
      var style = this.props.style;
      var margin = style && resolveBoxStyle('margin', style) || blank;
      var padding = style && resolveBoxStyle('padding', style) || blank;
      return React.createElement(
        BoxContainer,
        { title: 'margin', titleStyle: styles.marginLabel, box: margin, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        React.createElement(
          BoxContainer,
          { title: 'padding', box: padding, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              '(',
              frame.left,
              ', ',
              frame.top,
              ')'
            ),
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40
                }
              },
              frame.width,
              ' \xD7 ',
              frame.height
            )
          )
        )
      );
    }
  }]);
  return BoxInspector;
}(React.Component);

var BoxContainer = function (_React$Component2) {
  babelHelpers.inherits(BoxContainer, _React$Component2);

  function BoxContainer() {
    babelHelpers.classCallCheck(this, BoxContainer);
    return babelHelpers.possibleConstructorReturn(this, (BoxContainer.__proto__ || Object.getPrototypeOf(BoxContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxContainer, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      return React.createElement(
        View,
        { style: styles.box, __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        },
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          },
          React.createElement(
            Text,
            { style: [this.props.titleStyle, styles.label], __source: {
                fileName: _jsxFileName,
                lineNumber: 56
              }
            },
            this.props.title
          ),
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 57
              }
            },
            box.top
          )
        ),
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          },
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 60
              }
            },
            box.left
          ),
          this.props.children,
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            box.right
          )
        ),
        React.createElement(
          Text,
          { style: styles.boxText, __source: {
              fileName: _jsxFileName,
              lineNumber: 64
            }
          },
          box.bottom
        )
      );
    }
  }]);
  return BoxContainer;
}(React.Component);

var styles = StyleSheet.create({
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  marginLabel: {
    width: 60
  },
  label: {
    fontSize: 10,
    color: 'rgb(255,100,0)',
    marginLeft: 5,
    flex: 1,
    textAlign: 'left',
    top: -3
  },
  buffer: {
    fontSize: 10,
    color: 'yellow',
    flex: 1,
    textAlign: 'center'
  },
  innerText: {
    color: 'yellow',
    fontSize: 12,
    textAlign: 'center',
    width: 70
  },
  box: {
    borderWidth: 1,
    borderColor: 'grey'
  },
  boxText: {
    color: 'white',
    fontSize: 12,
    marginHorizontal: 3,
    marginVertical: 2,
    textAlign: 'center'
  }
});

module.exports = BoxInspector;
}, 351, null, "BoxInspector");
__d(/* StyleInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\StyleInspector.js';
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var View = require(234   ); // 234 = View

var StyleInspector = function (_React$Component) {
  babelHelpers.inherits(StyleInspector, _React$Component);

  function StyleInspector() {
    babelHelpers.classCallCheck(this, StyleInspector);
    return babelHelpers.possibleConstructorReturn(this, (StyleInspector.__proto__ || Object.getPrototypeOf(StyleInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(StyleInspector, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      if (!this.props.style) {
        return React.createElement(
          Text,
          { style: styles.noStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          'No style'
        );
      }
      var names = Object.keys(this.props.style);
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          },
          names.map(function (name) {
            return React.createElement(
              Text,
              { key: name, style: styles.attr, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28
                }
              },
              name,
              ':'
            );
          })
        ),
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          names.map(function (name) {
            var value = typeof _this2.props.style[name] === 'object' ? JSON.stringify(_this2.props.style[name]) : _this2.props.style[name];
            return React.createElement(
              Text,
              { key: name, style: styles.value, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34
                }
              },
              value
            );
          })
        )
      );
    }
  }]);
  return StyleInspector;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    flexDirection: 'row'
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  attr: {
    fontSize: 10,
    color: '#ccc'
  },
  value: {
    fontSize: 10,
    color: 'white',
    marginLeft: 10
  },
  noStyle: {
    color: 'white',
    fontSize: 10
  }
});

module.exports = StyleInspector;
}, 352, null, "StyleInspector");
__d(/* TouchableHighlight */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Touchable\\TouchableHighlight.js';


var ColorPropType = require(82             ); // 82 = ColorPropType
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var React = require(235    ); // 235 = React
var ReactNativeViewAttributes = require(250                        ); // 250 = ReactNativeViewAttributes
var StyleSheet = require(262         ); // 262 = StyleSheet
var TimerMixin = require(298                ); // 298 = react-timer-mixin
var Touchable = require(290        ); // 290 = Touchable
var TouchableWithoutFeedback = require(297                       ); // 297 = TouchableWithoutFeedback
var View = require(234   ); // 234 = View

var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var ensureComponentIsNative = require(354                      ); // 354 = ensureComponentIsNative
var ensurePositiveDelayProps = require(299                       ); // 299 = ensurePositiveDelayProps
var keyOf = require(355             ); // 355 = fbjs/lib/keyOf
var merge = require(254    ); // 254 = merge

var DEFAULT_PROPS = {
  activeOpacity: 0.85,
  underlayColor: 'black'
};

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableHighlight = React.createClass({
  displayName: 'TouchableHighlight',

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: React.PropTypes.number,

    underlayColor: ColorPropType,
    style: ViewPropTypes.style,

    onShowUnderlay: React.PropTypes.func,

    onHideUnderlay: React.PropTypes.func,

    hasTVPreferredFocus: React.PropTypes.bool,

    tvParallaxProperties: React.PropTypes.object

  }),

  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return DEFAULT_PROPS;
  },

  _computeSyntheticState: function _computeSyntheticState(props) {
    return {
      activeProps: {
        style: {
          opacity: props.activeOpacity
        }
      },
      activeUnderlayProps: {
        style: {
          backgroundColor: props.underlayColor
        }
      },
      underlayStyle: [INACTIVE_UNDERLAY_PROPS.style, props.style],
      hasTVPreferredFocus: props.hasTVPreferredFocus
    };
  },

  getInitialState: function getInitialState() {
    return merge(this.touchableGetInitialState(), this._computeSyntheticState(this.props));
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentDidUpdate: function componentDidUpdate() {
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
    if (nextProps.activeOpacity !== this.props.activeOpacity || nextProps.underlayColor !== this.props.underlayColor || nextProps.style !== this.props.style) {
      this.setState(this._computeSyntheticState(nextProps));
    }
  },

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.clearTimeout(this._hideTimeout);
    this._hideTimeout = null;
    this._showUnderlay();
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    if (!this._hideTimeout) {
      this._hideUnderlay();
    }
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.clearTimeout(this._hideTimeout);
    this._showUnderlay();
    this._hideTimeout = this.setTimeout(this._hideUnderlay, this.props.delayPressOut || 100);
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _showUnderlay: function _showUnderlay() {
    if (!this.isMounted() || !this._hasPressHandler()) {
      return;
    }

    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
    this.props.onShowUnderlay && this.props.onShowUnderlay();
  },

  _hideUnderlay: function _hideUnderlay() {
    this.clearTimeout(this._hideTimeout);
    this._hideTimeout = null;
    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {
      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
      this.refs[UNDERLAY_REF].setNativeProps(babelHelpers.extends({}, INACTIVE_UNDERLAY_PROPS, {
        style: this.state.underlayStyle
      }));
      this.props.onHideUnderlay && this.props.onHideUnderlay();
    }
  },

  _hasPressHandler: function _hasPressHandler() {
    return !!(this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress);
  },

  render: function render() {
    return React.createElement(
      View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        ref: UNDERLAY_REF,
        style: this.state.underlayStyle,
        onLayout: this.props.onLayout,
        hitSlop: this.props.hitSlop,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hasTVPreferredFocus: this.state.hasTVPreferredFocus,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 252
        }
      },
      React.cloneElement(React.Children.only(this.props.children), {
        ref: CHILD_REF
      }),
      Touchable.renderDebugView({ color: 'green', hitSlop: this.props.hitSlop })
    );
  }
});

var CHILD_REF = keyOf({ childRef: null });
var UNDERLAY_REF = keyOf({ underlayRef: null });
var INACTIVE_CHILD_PROPS = {
  style: StyleSheet.create({ x: { opacity: 1.0 } }).x
};
var INACTIVE_UNDERLAY_PROPS = {
  style: StyleSheet.create({ x: { backgroundColor: 'transparent' } }).x
};

module.exports = TouchableHighlight;
}, 353, null, "TouchableHighlight");
__d(/* ensureComponentIsNative */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var ensureComponentIsNative = function ensureComponentIsNative(component) {
  invariant(component && typeof component.setNativeProps === 'function', 'Touchable child must either be native or forward setNativeProps to a ' + 'native component');
};

module.exports = ensureComponentIsNative;
}, 354, null, "ensureComponentIsNative");
__d(/* fbjs/lib/keyOf.js */function(global, require, module, exports) {"use strict";

var keyOf = function keyOf(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
}, 355, null, "fbjs/lib/keyOf.js");
__d(/* mapWithSeparator */function(global, require, module, exports) {
'use strict';

function mapWithSeparator(items, itemRenderer, spacerRenderer) {
  var mapped = [];
  if (items.length > 0) {
    mapped.push(itemRenderer(items[0], 0, items));
    for (var ii = 1; ii < items.length; ii++) {
      mapped.push(spacerRenderer(ii - 1), itemRenderer(items[ii], ii, items));
    }
  }
  return mapped;
}

module.exports = mapWithSeparator;
}, 356, null, "mapWithSeparator");
__d(/* openFileInEditor */function(global, require, module, exports) {
'use strict';

var getDevServer = require(133           ); // 133 = getDevServer

function openFileInEditor(file, lineNumber) {
  fetch(getDevServer().url + 'open-stack-frame', {
    method: 'POST',
    body: JSON.stringify({ file: file, lineNumber: lineNumber })
  });
}

module.exports = openFileInEditor;
}, 357, null, "openFileInEditor");
__d(/* NetworkOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\NetworkOverlay.js';
var ListView = require(327       ); // 327 = ListView
var React = require(235    ); // 235 = React
var ScrollView = require(315         ); // 315 = ScrollView
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var TouchableHighlight = require(353                 ); // 353 = TouchableHighlight
var View = require(234   ); // 234 = View
var WebSocketInterceptor = require(359                   ); // 359 = WebSocketInterceptor
var XHRInterceptor = require(360             ); // 360 = XHRInterceptor

var LISTVIEW_CELL_HEIGHT = 15;
var SEPARATOR_THICKNESS = 2;

var nextXHRId = 0;

var NetworkOverlay = function (_React$Component) {
  babelHelpers.inherits(NetworkOverlay, _React$Component);

  function NetworkOverlay(props) {
    babelHelpers.classCallCheck(this, NetworkOverlay);

    var _this = babelHelpers.possibleConstructorReturn(this, (NetworkOverlay.__proto__ || Object.getPrototypeOf(NetworkOverlay)).call(this, props));

    _this._requests = [];
    _this._detailViewItems = [];
    _this._listViewDataSource = new ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
        return r1 !== r2;
      } });
    _this.state = {
      dataSource: _this._listViewDataSource.cloneWithRows([]),
      newDetailInfo: false,
      detailRowID: null
    };
    _this._listViewHighlighted = false;
    _this._listViewHeight = 0;
    _this._captureRequestListView = _this._captureRequestListView.bind(_this);
    _this._captureDetailScrollView = _this._captureDetailScrollView.bind(_this);
    _this._listViewOnLayout = _this._listViewOnLayout.bind(_this);
    _this._renderRow = _this._renderRow.bind(_this);
    _this._closeButtonClicked = _this._closeButtonClicked.bind(_this);
    _this._socketIdMap = {};
    _this._xhrIdMap = {};
    return _this;
  }

  babelHelpers.createClass(NetworkOverlay, [{
    key: '_enableXHRInterception',
    value: function _enableXHRInterception() {
      var _this2 = this;

      if (XHRInterceptor.isInterceptorEnabled()) {
        return;
      }

      XHRInterceptor.setOpenCallback(function (method, url, xhr) {
        xhr._index = nextXHRId++;
        var xhrIndex = _this2._requests.length;
        _this2._xhrIdMap[xhr._index] = xhrIndex;

        var _xhr = {
          'type': 'XMLHttpRequest',
          'method': method,
          'url': url
        };
        _this2._requests.push(_xhr);
        _this2._detailViewItems.push([]);
        _this2._genDetailViewItem(xhrIndex);
        _this2.setState({ dataSource: _this2._listViewDataSource.cloneWithRows(_this2._requests) }, _this2._scrollToBottom());
      });

      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        if (!networkInfo.requestHeaders) {
          networkInfo.requestHeaders = {};
        }
        networkInfo.requestHeaders[header] = value;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setSendCallback(function (data, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        _this2._requests[xhrIndex].dataSent = data;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.responseContentType = type;
        networkInfo.responseSize = size;
        networkInfo.responseHeaders = responseHeaders;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.status = status;
        networkInfo.timeout = timeout;
        networkInfo.response = response;
        networkInfo.responseURL = responseURL;
        networkInfo.responseType = responseType;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.enableInterception();
    }
  }, {
    key: '_enableWebSocketInterception',
    value: function _enableWebSocketInterception() {
      var _this3 = this;

      if (WebSocketInterceptor.isInterceptorEnabled()) {
        return;
      }

      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {
        var socketIndex = _this3._requests.length;
        _this3._socketIdMap[socketId] = socketIndex;
        var _webSocket = {
          'type': 'WebSocket',
          'url': url,
          'protocols': protocols
        };
        _this3._requests.push(_webSocket);
        _this3._detailViewItems.push([]);
        _this3._genDetailViewItem(socketIndex);
        _this3.setState({ dataSource: _this3._listViewDataSource.cloneWithRows(_this3._requests) }, _this3._scrollToBottom());
      });

      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (statusCode !== null && closeReason !== null) {
          _this3._requests[socketIndex].status = statusCode;
          _this3._requests[socketIndex].closeReason = closeReason;
        }
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setSendCallback(function (data, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Sent: ' + JSON.stringify(data) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Received: ' + JSON.stringify(message) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverClose = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverError = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.enableInterception();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._enableXHRInterception();
      this._enableWebSocketInterception();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      XHRInterceptor.disableInterception();
      WebSocketInterceptor.disableInterception();
    }
  }, {
    key: '_renderRow',
    value: function _renderRow(rowData, sectionID, rowID, highlightRow) {
      var _this4 = this;

      var urlCellViewStyle = styles.urlEvenCellView;
      var methodCellViewStyle = styles.methodEvenCellView;
      if (rowID % 2 === 1) {
        urlCellViewStyle = styles.urlOddCellView;
        methodCellViewStyle = styles.methodOddCellView;
      }
      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            _this4._pressRow(rowID);
            highlightRow(sectionID, rowID);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 302
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 306
            }
          },
          React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 307
              }
            },
            React.createElement(
              View,
              { style: urlCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 308
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 309
                  }
                },
                rowData.url
              )
            ),
            React.createElement(
              View,
              { style: methodCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 313
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 314
                  }
                },
                this._getTypeShortName(rowData.type)
              )
            )
          )
        )
      );
    }
  }, {
    key: '_renderSeperator',
    value: function _renderSeperator(sectionID, rowID, adjacentRowHighlighted) {
      return React.createElement(View, {
        key: sectionID + '-' + rowID,
        style: {
          height: adjacentRowHighlighted ? SEPARATOR_THICKNESS : 0,
          backgroundColor: adjacentRowHighlighted ? '#3B5998' : '#CCCCCC'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 329
        }
      });
    }
  }, {
    key: '_scrollToBottom',
    value: function _scrollToBottom() {
      if (this._listView) {
        var scrollResponder = this._listView.getScrollResponder();
        if (scrollResponder) {
          var scrollY = Math.max(this._requests.length * LISTVIEW_CELL_HEIGHT + (this._listViewHighlighted ? 2 * SEPARATOR_THICKNESS : 0) - this._listViewHeight, 0);
          scrollResponder.scrollResponderScrollTo({
            x: 0,
            y: scrollY,
            animated: true
          });
        }
      }
    }
  }, {
    key: '_captureRequestListView',
    value: function _captureRequestListView(listRef) {
      this._listView = listRef;
    }
  }, {
    key: '_listViewOnLayout',
    value: function _listViewOnLayout(event) {
      var height = event.nativeEvent.layout.height;

      this._listViewHeight = height;
    }
  }, {
    key: '_pressRow',
    value: function _pressRow(rowID) {
      this._listViewHighlighted = true;
      this.setState({ detailRowID: rowID }, this._scrollToTop());
    }
  }, {
    key: '_scrollToTop',
    value: function _scrollToTop() {
      if (this._scrollView) {
        this._scrollView.scrollTo({
          y: 0,
          animated: false
        });
      }
    }
  }, {
    key: '_captureDetailScrollView',
    value: function _captureDetailScrollView(scrollRef) {
      this._scrollView = scrollRef;
    }
  }, {
    key: '_closeButtonClicked',
    value: function _closeButtonClicked() {
      this.setState({ detailRowID: null });
    }
  }, {
    key: '_getStringByValue',
    value: function _getStringByValue(value) {
      if (value === undefined) {
        return 'undefined';
      }
      if (typeof value === 'object') {
        return JSON.stringify(value);
      }
      if (typeof value === 'string' && value.length > 500) {
        return String(value).substr(0, 500).concat('\n***TRUNCATED TO 500 CHARACTERS***');
      }
      return value;
    }
  }, {
    key: '_getRequestIndexByXHRID',
    value: function _getRequestIndexByXHRID(index) {
      if (index === undefined) {
        return -1;
      }
      var xhrIndex = this._xhrIdMap[index];
      if (xhrIndex === undefined) {
        return -1;
      } else {
        return xhrIndex;
      }
    }
  }, {
    key: '_getTypeShortName',
    value: function _getTypeShortName(type) {
      if (type === 'XMLHttpRequest') {
        return 'XHR';
      } else if (type === 'WebSocket') {
        return 'WS';
      }

      return '';
    }
  }, {
    key: '_genDetailViewItem',
    value: function _genDetailViewItem(index) {
      this._detailViewItems[index] = [];
      var detailViewItem = this._detailViewItems[index];
      var requestItem = this._requests[index];
      for (var _key in requestItem) {
        detailViewItem.push(React.createElement(
          View,
          { style: styles.detailViewRow, key: _key, __source: {
              fileName: _jsxFileName,
              lineNumber: 444
            }
          },
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailKeyCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 445
              }
            },
            _key
          ),
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailValueCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 448
              }
            },
            this._getStringByValue(requestItem[_key])
          )
        ));
      }

      if (this.state.detailRowID != null && Number(this.state.detailRowID) === index) {
        this.setState({ newDetailInfo: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 463
          }
        },
        this.state.detailRowID != null && React.createElement(
          TouchableHighlight,
          {
            style: styles.closeButton,
            onPress: this._closeButtonClicked, __source: {
              fileName: _jsxFileName,
              lineNumber: 465
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 468
              }
            },
            React.createElement(
              Text,
              { style: styles.clostButtonText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 469
                }
              },
              'v'
            )
          )
        ),
        this.state.detailRowID != null && React.createElement(
          ScrollView,
          {
            style: styles.detailScrollView,
            ref: this._captureDetailScrollView, __source: {
              fileName: _jsxFileName,
              lineNumber: 473
            }
          },
          this._detailViewItems[this.state.detailRowID]
        ),
        React.createElement(
          View,
          { style: styles.listViewTitle, __source: {
              fileName: _jsxFileName,
              lineNumber: 478
            }
          },
          this._requests.length > 0 && React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 480
              }
            },
            React.createElement(
              View,
              { style: styles.urlTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 481
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 482
                  }
                },
                'URL'
              )
            ),
            React.createElement(
              View,
              { style: styles.methodTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 484
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 485
                  }
                },
                'Type'
              )
            )
          )
        ),
        React.createElement(ListView, {
          style: styles.listView,
          ref: this._captureRequestListView,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow,
          enableEmptySections: true,
          renderSeparator: this._renderSeperator,
          onLayout: this._listViewOnLayout,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 489
          }
        })
      );
    }
  }]);
  return NetworkOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    paddingTop: 10,
    paddingBottom: 10,
    paddingLeft: 5,
    paddingRight: 5
  },
  listViewTitle: {
    height: 20
  },
  listView: {
    flex: 1,
    height: 60
  },
  tableRow: {
    flexDirection: 'row',
    flex: 1
  },
  cellText: {
    color: 'white',
    fontSize: 12
  },
  methodTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 1
  },
  urlTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 5,
    paddingLeft: 3
  },
  methodOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 1
  },
  urlOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 5,
    paddingLeft: 3
  },
  methodEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 1
  },
  urlEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 5,
    paddingLeft: 3
  },
  detailScrollView: {
    flex: 1,
    height: 180,
    marginTop: 5,
    marginBottom: 5
  },
  detailKeyCellView: {
    flex: 1.3
  },
  detailValueCellView: {
    flex: 2
  },
  detailViewRow: {
    flexDirection: 'row',
    paddingHorizontal: 3
  },
  detailViewText: {
    color: 'white',
    fontSize: 11
  },
  clostButtonText: {
    color: 'white',
    fontSize: 10
  },
  closeButton: {
    marginTop: 5,
    backgroundColor: '#888',
    justifyContent: 'center',
    alignItems: 'center'
  }
});

module.exports = NetworkOverlay;
}, 358, null, "NetworkOverlay");
__d(/* WebSocketInterceptor */function(global, require, module, exports) {
'use strict';

var RCTWebSocketModule = require(48             ).WebSocketModule; // 48 = NativeModules
var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter

var base64 = require(146        ); // 146 = base64-js

var originalRCTWebSocketConnect = RCTWebSocketModule.connect;
var originalRCTWebSocketSend = RCTWebSocketModule.send;
var originalRCTWebSocketSendBinary = RCTWebSocketModule.sendBinary;
var originalRCTWebSocketClose = RCTWebSocketModule.close;

var eventEmitter = void 0;
var subscriptions = void 0;

var closeCallback = void 0;
var sendCallback = void 0;
var connectCallback = void 0;
var onOpenCallback = void 0;
var onMessageCallback = void 0;
var onErrorCallback = void 0;
var onCloseCallback = void 0;

var _isInterceptorEnabled = false;

var WebSocketInterceptor = {
  setCloseCallback: function setCloseCallback(callback) {
    closeCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setConnectCallback: function setConnectCallback(callback) {
    connectCallback = callback;
  },
  setOnOpenCallback: function setOnOpenCallback(callback) {
    onOpenCallback = callback;
  },
  setOnMessageCallback: function setOnMessageCallback(callback) {
    onMessageCallback = callback;
  },
  setOnErrorCallback: function setOnErrorCallback(callback) {
    onErrorCallback = callback;
  },
  setOnCloseCallback: function setOnCloseCallback(callback) {
    onCloseCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  _unregisterEvents: function _unregisterEvents() {
    subscriptions.forEach(function (e) {
      return e.remove();
    });
    subscriptions = [];
  },
  _registerEvents: function _registerEvents() {
    subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {
      if (onMessageCallback) {
        onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);
      }
    }), eventEmitter.addListener('websocketOpen', function (ev) {
      if (onOpenCallback) {
        onOpenCallback(ev.id);
      }
    }), eventEmitter.addListener('websocketClosed', function (ev) {
      if (onCloseCallback) {
        onCloseCallback(ev.id, { code: ev.code, reason: ev.reason });
      }
    }), eventEmitter.addListener('websocketFailed', function (ev) {
      if (onErrorCallback) {
        onErrorCallback(ev.id, { message: ev.message });
      }
    })];
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }
    eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    WebSocketInterceptor._registerEvents();

    RCTWebSocketModule.connect = function (url, protocols, options, socketId) {
      if (connectCallback) {
        connectCallback(url, protocols, options, socketId);
      }
      originalRCTWebSocketConnect.apply(this, arguments);
    };

    RCTWebSocketModule.send = function (data, socketId) {
      if (sendCallback) {
        sendCallback(data, socketId);
      }
      originalRCTWebSocketSend.apply(this, arguments);
    };

    RCTWebSocketModule.sendBinary = function (data, socketId) {
      if (sendCallback) {
        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);
      }
      originalRCTWebSocketSendBinary.apply(this, arguments);
    };

    RCTWebSocketModule.close = function () {
      if (closeCallback) {
        if (arguments.length === 3) {
          closeCallback(arguments[0], arguments[1], arguments[2]);
        } else {
          closeCallback(null, null, arguments[0]);
        }
      }
      originalRCTWebSocketClose.apply(this, arguments);
    };

    _isInterceptorEnabled = true;
  },
  _arrayBufferToString: function _arrayBufferToString(data) {
    var value = base64.toByteArray(data).buffer;
    if (value === undefined || value === null) {
      return '(no value)';
    }
    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {
      return 'ArrayBuffer {' + String(Array.from(new Uint8Array(value))) + '}';
    }
    return value;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    RCTWebSocketModule.send = originalRCTWebSocketSend;
    RCTWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;
    RCTWebSocketModule.close = originalRCTWebSocketClose;
    RCTWebSocketModule.connect = originalRCTWebSocketConnect;

    connectCallback = null;
    closeCallback = null;
    sendCallback = null;
    onOpenCallback = null;
    onMessageCallback = null;
    onCloseCallback = null;
    onErrorCallback = null;

    WebSocketInterceptor._unregisterEvents();
  }
};

module.exports = WebSocketInterceptor;
}, 359, null, "WebSocketInterceptor");
__d(/* XHRInterceptor */function(global, require, module, exports) {
'use strict';

var XMLHttpRequest = require(165             ); // 165 = XMLHttpRequest
var originalXHROpen = XMLHttpRequest.prototype.open;
var originalXHRSend = XMLHttpRequest.prototype.send;
var originalXHRSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;

var openCallback;
var sendCallback;
var requestHeaderCallback;
var headerReceivedCallback;
var responseCallback;

var _isInterceptorEnabled = false;

var XHRInterceptor = {
  setOpenCallback: function setOpenCallback(callback) {
    openCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setHeaderReceivedCallback: function setHeaderReceivedCallback(callback) {
    headerReceivedCallback = callback;
  },
  setResponseCallback: function setResponseCallback(callback) {
    responseCallback = callback;
  },
  setRequestHeaderCallback: function setRequestHeaderCallback(callback) {
    requestHeaderCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }

    XMLHttpRequest.prototype.open = function (method, url) {
      if (openCallback) {
        openCallback(method, url, this);
      }
      originalXHROpen.apply(this, arguments);
    };

    XMLHttpRequest.prototype.setRequestHeader = function (header, value) {
      if (requestHeaderCallback) {
        requestHeaderCallback(header, value, this);
      }
      originalXHRSetRequestHeader.apply(this, arguments);
    };

    XMLHttpRequest.prototype.send = function (data) {
      var _this = this;

      if (sendCallback) {
        sendCallback(data, this);
      }
      if (this.addEventListener) {
        this.addEventListener('readystatechange', function () {
          if (!_isInterceptorEnabled) {
            return;
          }
          if (_this.readyState === _this.HEADERS_RECEIVED) {
            var contentTypeString = _this.getResponseHeader('Content-Type');
            var contentLengthString = _this.getResponseHeader('Content-Length');
            var responseContentType = void 0,
                responseSize = void 0;
            if (contentTypeString) {
              responseContentType = contentTypeString.split(';')[0];
            }
            if (contentLengthString) {
              responseSize = parseInt(contentLengthString, 10);
            }
            if (headerReceivedCallback) {
              headerReceivedCallback(responseContentType, responseSize, _this.getAllResponseHeaders(), _this);
            }
          }
          if (_this.readyState === _this.DONE) {
            if (responseCallback) {
              responseCallback(_this.status, _this.timeout, _this.response, _this.responseURL, _this.responseType, _this);
            }
          }
        }, false);
      }
      originalXHRSend.apply(this, arguments);
    };
    _isInterceptorEnabled = true;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    XMLHttpRequest.prototype.send = originalXHRSend;
    XMLHttpRequest.prototype.open = originalXHROpen;
    XMLHttpRequest.prototype.setRequestHeader = originalXHRSetRequestHeader;
    responseCallback = null;
    openCallback = null;
    sendCallback = null;
    headerReceivedCallback = null;
    requestHeaderCallback = null;
  }
};

module.exports = XHRInterceptor;
}, 360, null, "XHRInterceptor");
__d(/* PerformanceOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Inspector\\PerformanceOverlay.js';
var PerformanceLogger = require(183                ); // 183 = PerformanceLogger
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var View = require(234   ); // 234 = View

var PerformanceOverlay = function (_React$Component) {
  babelHelpers.inherits(PerformanceOverlay, _React$Component);

  function PerformanceOverlay() {
    babelHelpers.classCallCheck(this, PerformanceOverlay);
    return babelHelpers.possibleConstructorReturn(this, (PerformanceOverlay.__proto__ || Object.getPrototypeOf(PerformanceOverlay)).apply(this, arguments));
  }

  babelHelpers.createClass(PerformanceOverlay, [{
    key: 'render',
    value: function render() {
      var perfLogs = PerformanceLogger.getTimespans();
      var items = [];

      for (var key in perfLogs) {
        if (perfLogs[key].totalTime) {
          var unit = key === 'BundleSize' ? 'b' : 'ms';
          items.push(React.createElement(
            View,
            { style: styles.row, key: key, __source: {
                fileName: _jsxFileName,
                lineNumber: 29
              }
            },
            React.createElement(
              Text,
              { style: [styles.text, styles.label], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 30
                }
              },
              key
            ),
            React.createElement(
              Text,
              { style: [styles.text, styles.totalTime], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              perfLogs[key].totalTime + unit
            )
          ));
        }
      }

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        },
        items
      );
    }
  }]);
  return PerformanceOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    height: 100,
    paddingTop: 10
  },
  label: {
    flex: 1
  },
  row: {
    flexDirection: 'row',
    paddingHorizontal: 10
  },
  text: {
    color: 'white',
    fontSize: 12
  },
  totalTime: {
    paddingRight: 100
  }
});

module.exports = PerformanceOverlay;
}, 361, null, "PerformanceOverlay");
__d(/* YellowBox */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\ReactNative\\YellowBox.js';
var EventEmitter = require(69            ); // 69 = EventEmitter
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet

var infoLog = require(305      ); // 305 = infoLog
var openFileInEditor = require(357               ); // 357 = openFileInEditor
var parseErrorStack = require(62               ); // 62 = parseErrorStack
var symbolicateStackTrace = require(132                    ); // 132 = symbolicateStackTrace

var _warningEmitter = new EventEmitter();
var _warningMap = new Map();

if (__DEV__) {
  var _console = console,
      error = _console.error,
      warn = _console.warn;


  console.error = function () {
    error.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('Warning: ')) {
      updateWarningMap.apply(null, arguments);
    }
  };

  console.warn = function () {
    warn.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('(ADVICE)')) {
      return;
    }

    updateWarningMap.apply(null, arguments);
  };

  if (Platform.isTesting) {
    console.disableYellowBox = true;
  }
}

function sprintf(format) {
  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  var index = 0;
  return format.replace(/%s/g, function (match) {
    return args[index++];
  });
}

function updateWarningMap(format) {
  if (console.disableYellowBox) {
    return;
  }
  var stringifySafe = require(66             ); // 66 = stringifySafe

  format = String(format);
  var argCount = (format.match(/%s/g) || []).length;

  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  var warning = [sprintf.apply(undefined, [format].concat(babelHelpers.toConsumableArray(args.slice(0, argCount))))].concat(babelHelpers.toConsumableArray(args.slice(argCount).map(stringifySafe))).join(' ');

  var warningInfo = _warningMap.get(warning);
  if (warningInfo) {
    warningInfo.count += 1;
  } else {
    var _error = new Error();
    _error.framesToPop = 2;

    _warningMap.set(warning, {
      count: 1,
      stacktrace: parseErrorStack(_error),
      symbolicated: false
    });
  }

  _warningEmitter.emit('warning', _warningMap);
}

function ensureSymbolicatedWarning(warning) {
  var prevWarningInfo = _warningMap.get(warning);
  if (!prevWarningInfo || prevWarningInfo.symbolicated) {
    return;
  }
  prevWarningInfo.symbolicated = true;

  symbolicateStackTrace(prevWarningInfo.stacktrace).then(function (stack) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      nextWarningInfo.stacktrace = stack;
      _warningEmitter.emit('warning', _warningMap);
    }
  }, function (error) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      infoLog('Failed to symbolicate warning, "%s":', warning, error);
      _warningEmitter.emit('warning', _warningMap);
    }
  });
}

function isWarningIgnored(warning) {
  return Array.isArray(console.ignoredYellowBox) && console.ignoredYellowBox.some(function (ignorePrefix) {
    return warning.startsWith(String(ignorePrefix));
  });
}

var WarningRow = function WarningRow(_ref) {
  var count = _ref.count,
      warning = _ref.warning,
      onPress = _ref.onPress;

  var Text = require(289   ); // 289 = Text
  var TouchableHighlight = require(353                 ); // 353 = TouchableHighlight
  var View = require(234   ); // 234 = View

  var countText = count > 1 ? React.createElement(
    Text,
    { style: styles.listRowCount, __source: {
        fileName: _jsxFileName,
        lineNumber: 170
      }
    },
    '(' + count + ') '
  ) : null;

  return React.createElement(
    View,
    { style: styles.listRow, __source: {
        fileName: _jsxFileName,
        lineNumber: 174
      }
    },
    React.createElement(
      TouchableHighlight,
      {
        activeOpacity: 0.5,
        onPress: onPress,
        style: styles.listRowContent,
        underlayColor: 'transparent', __source: {
          fileName: _jsxFileName,
          lineNumber: 175
        }
      },
      React.createElement(
        Text,
        { style: styles.listRowText, numberOfLines: 2, __source: {
            fileName: _jsxFileName,
            lineNumber: 180
          }
        },
        countText,
        warning
      )
    )
  );
};

var StackRow = function StackRow(_ref2) {
  var frame = _ref2.frame;

  var Text = require(289   ); // 289 = Text
  var TouchableHighlight = require(353                 ); // 353 = TouchableHighlight
  var file = frame.file,
      lineNumber = frame.lineNumber;

  var fileName = void 0;
  if (file) {
    var fileParts = file.split('/');
    fileName = fileParts[fileParts.length - 1];
  } else {
    fileName = '<unknown file>';
  }

  return React.createElement(
    TouchableHighlight,
    {
      activeOpacity: 0.5,
      style: styles.openInEditorButton,
      underlayColor: 'transparent',
      onPress: openFileInEditor.bind(null, file, lineNumber), __source: {
        fileName: _jsxFileName,
        lineNumber: 203
      }
    },
    React.createElement(
      Text,
      { style: styles.inspectorCountText, __source: {
          fileName: _jsxFileName,
          lineNumber: 208
        }
      },
      fileName,
      ':',
      lineNumber
    )
  );
};

var WarningInspector = function WarningInspector(_ref3) {
  var warningInfo = _ref3.warningInfo,
      warning = _ref3.warning,
      stacktraceVisible = _ref3.stacktraceVisible,
      onDismiss = _ref3.onDismiss,
      onDismissAll = _ref3.onDismissAll,
      onMinimize = _ref3.onMinimize,
      toggleStacktrace = _ref3.toggleStacktrace;

  var ScrollView = require(315         ); // 315 = ScrollView
  var Text = require(289   ); // 289 = Text
  var TouchableHighlight = require(353                 ); // 353 = TouchableHighlight
  var View = require(234   ); // 234 = View

  var _ref4 = warningInfo || {},
      count = _ref4.count,
      stacktrace = _ref4.stacktrace;

  var countSentence = 'Warning encountered ' + count + ' time' + (count - 1 ? 's' : '') + '.';

  var stacktraceList = void 0;
  if (stacktraceVisible && stacktrace) {
    stacktraceList = React.createElement(
      View,
      { style: styles.stacktraceList, __source: {
          fileName: _jsxFileName,
          lineNumber: 236
        }
      },
      stacktrace.map(function (frame, ii) {
        return React.createElement(StackRow, { frame: frame, key: ii, __source: {
            fileName: _jsxFileName,
            lineNumber: 237
          }
        });
      })
    );
  }

  return React.createElement(
    View,
    { style: styles.inspector, __source: {
        fileName: _jsxFileName,
        lineNumber: 243
      }
    },
    React.createElement(
      View,
      { style: styles.inspectorCount, __source: {
          fileName: _jsxFileName,
          lineNumber: 244
        }
      },
      React.createElement(
        Text,
        { style: styles.inspectorCountText, __source: {
            fileName: _jsxFileName,
            lineNumber: 245
          }
        },
        countSentence
      ),
      React.createElement(
        TouchableHighlight,
        { onPress: toggleStacktrace, underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 246
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 247
            }
          },
          stacktraceVisible ? '\u25BC' : '\u25B6',
          ' Stacktrace'
        )
      )
    ),
    React.createElement(
      ScrollView,
      { style: styles.inspectorWarning, __source: {
          fileName: _jsxFileName,
          lineNumber: 252
        }
      },
      stacktraceList,
      React.createElement(
        Text,
        { style: styles.inspectorWarningText, __source: {
            fileName: _jsxFileName,
            lineNumber: 254
          }
        },
        warning
      )
    ),
    React.createElement(
      View,
      { style: styles.inspectorButtons, __source: {
          fileName: _jsxFileName,
          lineNumber: 256
        }
      },
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onMinimize,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 257
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 262
            }
          },
          'Minimize'
        )
      ),
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onDismiss,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 266
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 271
            }
          },
          'Dismiss'
        )
      ),
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onDismissAll,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 275
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 280
            }
          },
          'Dismiss All'
        )
      )
    )
  );
};

var YellowBox = function (_React$Component) {
  babelHelpers.inherits(YellowBox, _React$Component);

  function YellowBox(props, context) {
    babelHelpers.classCallCheck(this, YellowBox);

    var _this = babelHelpers.possibleConstructorReturn(this, (YellowBox.__proto__ || Object.getPrototypeOf(YellowBox)).call(this, props, context));

    _this.state = {
      inspecting: null,
      stacktraceVisible: false,
      warningMap: _warningMap
    };
    _this.dismissWarning = function (warning) {
      var _this$state = _this.state,
          inspecting = _this$state.inspecting,
          warningMap = _this$state.warningMap;

      if (warning) {
        warningMap.delete(warning);
      } else {
        warningMap.clear();
      }
      _this.setState({
        inspecting: warning && inspecting !== warning ? inspecting : null,
        warningMap: warningMap
      });
    };
    return _this;
  }

  babelHelpers.createClass(YellowBox, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var scheduled = null;
      this._listener = _warningEmitter.addListener('warning', function (warningMap) {
        scheduled = scheduled || setImmediate(function () {
          scheduled = null;
          _this2.setState({
            warningMap: warningMap
          });
        });
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var inspecting = this.state.inspecting;

      if (inspecting != null) {
        ensureSymbolicatedWarning(inspecting);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._listener) {
        this._listener.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      if (console.disableYellowBox || this.state.warningMap.size === 0) {
        return null;
      }
      var ScrollView = require(315         ); // 315 = ScrollView
      var View = require(234   ); // 234 = View

      var _state = this.state,
          inspecting = _state.inspecting,
          stacktraceVisible = _state.stacktraceVisible;

      var inspector = inspecting !== null ? React.createElement(WarningInspector, {
        warningInfo: this.state.warningMap.get(inspecting),
        warning: inspecting,
        stacktraceVisible: stacktraceVisible,
        onDismiss: function onDismiss() {
          return _this3.dismissWarning(inspecting);
        },
        onDismissAll: function onDismissAll() {
          return _this3.dismissWarning(null);
        },
        onMinimize: function onMinimize() {
          return _this3.setState({ inspecting: null });
        },
        toggleStacktrace: function toggleStacktrace() {
          return _this3.setState({ stacktraceVisible: !stacktraceVisible });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 355
        }
      }) : null;

      var rows = [];
      this.state.warningMap.forEach(function (warningInfo, warning) {
        if (!isWarningIgnored(warning)) {
          rows.push(React.createElement(WarningRow, {
            key: warning,
            count: warningInfo.count,
            warning: warning,
            onPress: function onPress() {
              return _this3.setState({ inspecting: warning });
            },
            onDismiss: function onDismiss() {
              return _this3.dismissWarning(warning);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 370
            }
          }));
        }
      });

      var listStyle = [styles.list, { height: Math.min(rows.length, 4.4) * (rowGutter + rowHeight) }];
      return React.createElement(
        View,
        { style: inspector ? styles.fullScreen : listStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 387
          }
        },
        React.createElement(
          ScrollView,
          { style: listStyle, scrollsToTop: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 388
            }
          },
          rows
        ),
        inspector
      );
    }
  }]);
  return YellowBox;
}(React.Component);

var backgroundColor = function backgroundColor(opacity) {
  return 'rgba(250, 186, 48, ' + opacity + ')';
};
var textColor = 'white';
var rowGutter = 1;
var rowHeight = 46;

var elevation = Platform.OS === 'android' ? Number.MAX_SAFE_INTEGER : undefined;

var styles = StyleSheet.create({
  fullScreen: {
    height: '100%',
    width: '100%',
    elevation: elevation,
    position: 'absolute'
  },
  inspector: {
    backgroundColor: backgroundColor(0.95),
    height: '100%',
    paddingTop: 5,
    elevation: elevation
  },
  inspectorButtons: {
    flexDirection: 'row'
  },
  inspectorButton: {
    flex: 1,
    paddingVertical: 22,
    backgroundColor: backgroundColor(1)
  },
  stacktraceList: {
    paddingBottom: 5
  },
  inspectorButtonText: {
    color: textColor,
    fontSize: 14,
    opacity: 0.8,
    textAlign: 'center'
  },
  openInEditorButton: {
    paddingTop: 5,
    paddingBottom: 5
  },
  inspectorCount: {
    padding: 15,
    paddingBottom: 0,
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  inspectorCountText: {
    color: textColor,
    fontSize: 14
  },
  inspectorWarning: {
    flex: 1,
    paddingHorizontal: 15
  },
  inspectorWarningText: {
    color: textColor,
    fontSize: 16,
    fontWeight: '600'
  },
  list: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    elevation: elevation
  },
  listRow: {
    backgroundColor: backgroundColor(0.95),
    height: rowHeight,
    marginTop: rowGutter
  },
  listRowContent: {
    flex: 1
  },
  listRowCount: {
    color: 'rgba(255, 255, 255, 0.5)'
  },
  listRowText: {
    color: textColor,
    position: 'absolute',
    left: 0,
    top: Platform.OS === 'android' ? 5 : 7,
    marginLeft: 15,
    marginRight: 15
  }
});

module.exports = YellowBox;
}, 362, null, "YellowBox");
__d(/* I18nManager */function(global, require, module, exports) {
'use strict';

var I18nManager = require(48             ).I18nManager || { // 48 = NativeModules
  isRTL: false,
  allowRTL: function allowRTL() {},
  forceRTL: function forceRTL() {}
};

module.exports = I18nManager;
}, 363, null, "I18nManager");
__d(/* NavigatorIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(261                ); // 261 = UnimplementedView
}, 364, null, "NavigatorIOS");
__d(/* Picker */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Picker\\Picker.js',
    _class,
    _temp;

var ColorPropType = require(82             ); // 82 = ColorPropType
var PickerIOS = require(366        ); // 366 = PickerIOS
var PickerAndroid = require(367            ); // 367 = PickerAndroid
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheetPropType = require(257                 ); // 257 = StyleSheetPropType
var TextStylePropTypes = require(244                 ); // 244 = TextStylePropTypes
var UnimplementedView = require(261                ); // 261 = UnimplementedView
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var itemStylePropType = StyleSheetPropType(TextStylePropTypes);

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var MODE_DIALOG = 'dialog';
var MODE_DROPDOWN = 'dropdown';

var Picker = function (_React$Component) {
  babelHelpers.inherits(Picker, _React$Component);

  function Picker() {
    babelHelpers.classCallCheck(this, Picker);
    return babelHelpers.possibleConstructorReturn(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));
  }

  babelHelpers.createClass(Picker, [{
    key: 'render',
    value: function render() {
      if (Platform.OS === 'ios') {
        return React.createElement(
          PickerIOS,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 120
            }
          }),
          this.props.children
        );
      } else if (Platform.OS === 'android') {
        return React.createElement(
          PickerAndroid,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 123
            }
          }),
          this.props.children
        );
      } else {
        return React.createElement(UnimplementedView, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 125
          }
        });
      }
    }
  }]);
  return Picker;
}(React.Component);

Picker.MODE_DIALOG = MODE_DIALOG;
Picker.MODE_DROPDOWN = MODE_DROPDOWN;
Picker.defaultProps = {
  mode: MODE_DIALOG
};
Picker.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: pickerStyleType,

  selectedValue: React.PropTypes.any,

  onValueChange: React.PropTypes.func,

  enabled: React.PropTypes.bool,

  mode: React.PropTypes.oneOf(['dialog', 'dropdown']),

  itemStyle: itemStylePropType,

  prompt: React.PropTypes.string,

  testID: React.PropTypes.string
});

Picker.Item = (_temp = _class = function (_React$Component2) {
  babelHelpers.inherits(_class, _React$Component2);

  function _class() {
    babelHelpers.classCallCheck(this, _class);
    return babelHelpers.possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
  }

  babelHelpers.createClass(_class, [{
    key: 'render',
    value: function render() {
      throw null;
    }
  }]);
  return _class;
}(React.Component), _class.propTypes = {
  label: React.PropTypes.string.isRequired,

  value: React.PropTypes.any,

  color: ColorPropType,

  testID: React.PropTypes.string
}, _temp);

module.exports = Picker;
}, 365, null, "Picker");
__d(/* PickerIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(261                ); // 261 = UnimplementedView
}, 366, null, "PickerIOS");
__d(/* PickerAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Picker\\PickerAndroid.android.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var StyleSheetPropType = require(257                 ); // 257 = StyleSheetPropType
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes
var ViewStylePropTypes = require(245                 ); // 245 = ViewStylePropTypes

var processColor = require(246           ); // 246 = processColor
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var REF_PICKER = 'picker';
var MODE_DROPDOWN = 'dropdown';

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var PickerAndroid = function (_React$Component) {
  babelHelpers.inherits(PickerAndroid, _React$Component);

  function PickerAndroid(props, context) {
    babelHelpers.classCallCheck(this, PickerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (PickerAndroid.__proto__ || Object.getPrototypeOf(PickerAndroid)).call(this, props, context));

    _initialiseProps.call(_this);

    var state = _this._stateFromProps(props);

    _this.state = babelHelpers.extends({}, state, {
      initialSelectedIndex: state.selectedIndex
    });
    return _this;
  }

  babelHelpers.createClass(PickerAndroid, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._stateFromProps(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      var Picker = this.props.mode === MODE_DROPDOWN ? DropdownPicker : DialogPicker;

      var nativeProps = {
        enabled: this.props.enabled,
        items: this.state.items,
        mode: this.props.mode,
        onSelect: this._onChange,
        prompt: this.props.prompt,
        selected: this.state.initialSelectedIndex,
        testID: this.props.testID,
        style: [styles.pickerAndroid, this.props.style],
        accessibilityLabel: this.props.accessibilityLabel
      };

      return React.createElement(Picker, babelHelpers.extends({ ref: REF_PICKER }, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 112
        }
      }));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._lastNativePosition = this.state.initialSelectedIndex;
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.refs[REF_PICKER] && this.state.selectedIndex !== this._lastNativePosition) {
        this.refs[REF_PICKER].setNativeProps({ selected: this.state.selectedIndex });
        this._lastNativePosition = this.state.selectedIndex;
      }
    }
  }]);
  return PickerAndroid;
}(React.Component);

PickerAndroid.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: pickerStyleType,
  selectedValue: React.PropTypes.any,
  enabled: ReactPropTypes.bool,
  mode: ReactPropTypes.oneOf(['dialog', 'dropdown']),
  onValueChange: ReactPropTypes.func,
  prompt: ReactPropTypes.string,
  testID: ReactPropTypes.string
});

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this._stateFromProps = function (props) {
    var selectedIndex = 0;
    var items = React.Children.map(props.children, function (child, index) {
      if (child.props.value === props.selectedValue) {
        selectedIndex = index;
      }
      var childProps = {
        value: child.props.value,
        label: child.props.label
      };
      if (child.props.color) {
        childProps.color = processColor(child.props.color);
      }
      return childProps;
    });
    return { selectedIndex: selectedIndex, items: items };
  };

  this._onChange = function (event) {
    if (_this2.props.onValueChange) {
      var position = event.nativeEvent.position;
      if (position >= 0) {
        var children = React.Children.toArray(_this2.props.children);
        var value = children[position].props.value;
        _this2.props.onValueChange(value, position);
      } else {
        _this2.props.onValueChange(null, position);
      }
    }
    _this2._lastNativePosition = event.nativeEvent.position;
    _this2.forceUpdate();
  };
};

var styles = StyleSheet.create({
  pickerAndroid: {
    height: 50
  }
});

var cfg = {
  nativeOnly: {
    items: true,
    selected: true
  }
};

var DropdownPicker = requireNativeComponent('AndroidDropdownPicker', PickerAndroid, cfg);
var DialogPicker = requireNativeComponent('AndroidDialogPicker', PickerAndroid, cfg);

module.exports = PickerAndroid;
}, 367, null, "PickerAndroid");
__d(/* ProgressBarAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\ProgressBarAndroid\\ProgressBarAndroid.android.js';
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var React = require(235    ); // 235 = React
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes
var ColorPropType = require(82             ); // 82 = ColorPropType

var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var STYLE_ATTRIBUTES = ['Horizontal', 'Normal', 'Small', 'Large', 'Inverse', 'SmallInverse', 'LargeInverse'];

var indeterminateType = function indeterminateType(props, propName, componentName) {
  var checker = function checker() {
    var indeterminate = props[propName];
    var styleAttr = props.styleAttr;
    if (!indeterminate && styleAttr !== 'Horizontal') {
      return new Error('indeterminate=false is only valid for styleAttr=Horizontal');
    }
  };

  return ReactPropTypes.bool(props, propName, componentName) || checker();
};

var ProgressBarAndroid = React.createClass({
  displayName: 'ProgressBarAndroid',

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    styleAttr: ReactPropTypes.oneOf(STYLE_ATTRIBUTES),

    indeterminate: indeterminateType,

    progress: ReactPropTypes.number,

    color: ColorPropType,

    testID: ReactPropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      styleAttr: 'Normal',
      indeterminate: true
    };
  },

  mixins: [NativeMethodsMixin],

  componentDidMount: function componentDidMount() {
    if (this.props.indeterminate && this.props.styleAttr !== 'Horizontal') {
      console.warn('Circular indeterminate `ProgressBarAndroid`' + 'is deprecated. Use `ActivityIndicator` instead.');
    }
  },

  render: function render() {
    return React.createElement(AndroidProgressBar, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120
      }
    }));
  }
});

var AndroidProgressBar = requireNativeComponent('AndroidProgressBar', ProgressBarAndroid, { nativeOnly: { animating: true } });

module.exports = ProgressBarAndroid;
}, 368, null, "ProgressBarAndroid");
__d(/* ProgressViewIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\ProgressViewIOS\\ProgressViewIOS.android.js';
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var View = require(234   ); // 234 = View

var DummyProgressViewIOS = function (_React$Component) {
  babelHelpers.inherits(DummyProgressViewIOS, _React$Component);

  function DummyProgressViewIOS() {
    babelHelpers.classCallCheck(this, DummyProgressViewIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyProgressViewIOS.__proto__ || Object.getPrototypeOf(DummyProgressViewIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyProgressViewIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'ProgressViewIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyProgressViewIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 20,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummyProgressViewIOS;
}, 369, null, "ProgressViewIOS");
__d(/* SectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Lists\\SectionList.js';
var MetroListView = require(326            ); // 326 = MetroListView
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var VirtualizedSectionList = require(371                     ); // 371 = VirtualizedSectionList

var defaultProps = babelHelpers.extends({}, VirtualizedSectionList.defaultProps, {
  stickySectionHeadersEnabled: Platform.OS === 'ios'
});

var SectionList = function (_React$PureComponent) {
  babelHelpers.inherits(SectionList, _React$PureComponent);

  function SectionList() {
    babelHelpers.classCallCheck(this, SectionList);
    return babelHelpers.possibleConstructorReturn(this, (SectionList.__proto__ || Object.getPrototypeOf(SectionList)).apply(this, arguments));
  }

  babelHelpers.createClass(SectionList, [{
    key: 'render',
    value: function render() {
      var List = this.props.legacyImplementation ? MetroListView : VirtualizedSectionList;
      return React.createElement(List, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 195
        }
      }));
    }
  }]);
  return SectionList;
}(React.PureComponent);

SectionList.defaultProps = defaultProps;


module.exports = SectionList;
}, 370, null, "SectionList");
__d(/* VirtualizedSectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Lists\\VirtualizedSectionList.js';
var React = require(235    ); // 235 = React
var View = require(234   ); // 234 = View
var VirtualizedList = require(333              ); // 333 = VirtualizedList

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var VirtualizedSectionList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedSectionList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedSectionList, [{
    key: '_subExtractor',
    value: function _subExtractor(index) {
      var itemIndex = index;
      var defaultKeyExtractor = this.props.keyExtractor;
      for (var ii = 0; ii < this.props.sections.length; ii++) {
        var _section = this.props.sections[ii];
        var _key = _section.key;
        warning(_key != null, 'VirtualizedSectionList: A `section` you supplied is missing the `key` property.');
        itemIndex -= 1;
        if (itemIndex >= _section.data.length) {
          itemIndex -= _section.data.length;
        } else if (itemIndex === -1) {
          return { section: _section, key: _key, index: null };
        } else {
          var _keyExtractor = _section.keyExtractor || defaultKeyExtractor;
          return {
            section: _section,
            key: _key + ':' + _keyExtractor(_section.data[itemIndex], itemIndex),
            index: itemIndex
          };
        }
      }
    }
  }, {
    key: '_getSeparatorComponent',
    value: function _getSeparatorComponent(index, info) {
      info = info || this._subExtractor(index);
      if (!info) {
        return null;
      }
      var ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;
      var SectionSeparatorComponent = this.props.SectionSeparatorComponent;

      var isLastItemInList = index === this.state.childProps.getItemCount() - 1;
      var isLastItemInSection = info.index === info.section.data.length - 1;
      if (SectionSeparatorComponent && isLastItemInSection && !isLastItemInList) {
        return SectionSeparatorComponent;
      }
      if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {
        return ItemSeparatorComponent;
      }
      return null;
    }
  }, {
    key: '_computeState',
    value: function _computeState(props) {
      var offset = props.ListHeaderComponent ? 1 : 0;
      var stickyHeaderIndices = [];
      var itemCount = props.sections.reduce(function (v, section) {
        stickyHeaderIndices.push(v + offset);
        return v + section.data.length + 1;
      }, 0);
      return {
        childProps: babelHelpers.extends({}, props, {
          renderItem: this._renderItem,
          ItemSeparatorComponent: undefined,
          data: props.sections,
          getItemCount: function getItemCount() {
            return itemCount;
          },
          getItem: getItem,
          keyExtractor: this._keyExtractor,
          onViewableItemsChanged: props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,
          stickyHeaderIndices: props.stickySectionHeadersEnabled ? stickyHeaderIndices : undefined
        })
      };
    }
  }]);

  function VirtualizedSectionList(props, context) {
    babelHelpers.classCallCheck(this, VirtualizedSectionList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedSectionList.__proto__ || Object.getPrototypeOf(VirtualizedSectionList)).call(this, props, context));

    _this._keyExtractor = function (item, index) {
      var info = _this._subExtractor(index);
      return info && info.key || String(index);
    };

    _this._convertViewable = function (viewable) {
      invariant(viewable.index != null, 'Received a broken ViewToken');
      var info = _this._subExtractor(viewable.index);
      if (!info) {
        return null;
      }
      var keyExtractor = info.section.keyExtractor || _this.props.keyExtractor;
      return babelHelpers.extends({}, viewable, {
        index: info.index,
        key: keyExtractor(viewable.item, info.index),
        section: info.section
      });
    };

    _this._onViewableItemsChanged = function (_ref) {
      var viewableItems = _ref.viewableItems,
          changed = _ref.changed;

      if (_this.props.onViewableItemsChanged) {
        _this.props.onViewableItemsChanged({
          viewableItems: viewableItems.map(_this._convertViewable, _this).filter(Boolean),
          changed: changed.map(_this._convertViewable, _this).filter(Boolean)
        });
      }
    };

    _this._renderItem = function (_ref2) {
      var item = _ref2.item,
          index = _ref2.index;

      var info = _this._subExtractor(index);
      if (!info) {
        return null;
      } else if (info.index == null) {
        var _renderSectionHeader = _this.props.renderSectionHeader;

        return _renderSectionHeader ? _renderSectionHeader({ section: info.section }) : null;
      } else {
        var _renderItem = info.section.renderItem || _this.props.renderItem;
        var SeparatorComponent = _this._getSeparatorComponent(index, info);
        invariant(_renderItem, 'no renderItem!');
        return React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 198
            }
          },
          _renderItem({ item: item, index: info.index || 0 }),
          SeparatorComponent && React.createElement(SeparatorComponent, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 200
            }
          })
        );
      }
    };

    _this.state = _this._computeState(props);
    return _this;
  }

  babelHelpers.createClass(VirtualizedSectionList, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._computeState(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(VirtualizedList, babelHelpers.extends({}, this.state.childProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 260
        }
      }));
    }
  }]);
  return VirtualizedSectionList;
}(React.PureComponent);

VirtualizedSectionList.defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  data: []
});


function getItem(sections, index) {
  if (!sections) {
    return null;
  }
  var itemIdx = index - 1;
  for (var ii = 0; ii < sections.length; ii++) {
    if (itemIdx === -1) {
      return sections[ii];
    } else if (itemIdx < sections[ii].data.length) {
      return sections[ii].data[itemIdx];
    } else {
      itemIdx -= sections[ii].data.length + 1;
    }
  }
  return null;
}

module.exports = VirtualizedSectionList;
}, 371, null, "VirtualizedSectionList");
__d(/* SegmentedControlIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\SegmentedControlIOS\\SegmentedControlIOS.android.js';
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var View = require(234   ); // 234 = View

var DummySegmentedControlIOS = function (_React$Component) {
  babelHelpers.inherits(DummySegmentedControlIOS, _React$Component);

  function DummySegmentedControlIOS() {
    babelHelpers.classCallCheck(this, DummySegmentedControlIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummySegmentedControlIOS.__proto__ || Object.getPrototypeOf(DummySegmentedControlIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummySegmentedControlIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'SegmentedControlIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummySegmentedControlIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 50,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummySegmentedControlIOS;
}, 372, null, "SegmentedControlIOS");
__d(/* Slider */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Slider\\Slider.js';
var Image = require(313    ); // 313 = Image
var ColorPropType = require(82             ); // 82 = ColorPropType
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var ReactNativeViewAttributes = require(250                        ); // 250 = ReactNativeViewAttributes
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var PropTypes = React.PropTypes;

var Slider = React.createClass({
  displayName: 'Slider',

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    style: ViewPropTypes.style,

    value: PropTypes.number,

    step: PropTypes.number,

    minimumValue: PropTypes.number,

    maximumValue: PropTypes.number,

    minimumTrackTintColor: ColorPropType,

    maximumTrackTintColor: ColorPropType,

    disabled: PropTypes.bool,

    trackImage: Image.propTypes.source,

    minimumTrackImage: Image.propTypes.source,

    maximumTrackImage: Image.propTypes.source,

    thumbImage: Image.propTypes.source,

    thumbTintColor: ColorPropType,

    onValueChange: PropTypes.func,

    onSlidingComplete: PropTypes.func,

    testID: PropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      value: 0,
      minimumValue: 0,
      maximumValue: 1,
      step: 0
    };
  },

  viewConfig: {
    uiViewClassName: 'RCTSlider',
    validAttributes: babelHelpers.extends({}, ReactNativeViewAttributes.RCTView, {
      value: true
    })
  },

  render: function render() {
    var _props = this.props,
        style = _props.style,
        onValueChange = _props.onValueChange,
        onSlidingComplete = _props.onSlidingComplete,
        props = babelHelpers.objectWithoutProperties(_props, ['style', 'onValueChange', 'onSlidingComplete']);

    props.style = [styles.slider, style];

    props.onValueChange = onValueChange && function (event) {
      var userEvent = true;
      if (Platform.OS === 'android') {
        userEvent = event.nativeEvent.fromUser;
      }
      onValueChange && userEvent && onValueChange(event.nativeEvent.value);
    };

    props.onChange = props.onValueChange;

    props.onSlidingComplete = onSlidingComplete && function (event) {
      onSlidingComplete && onSlidingComplete(event.nativeEvent.value);
    };

    return React.createElement(RCTSlider, babelHelpers.extends({}, props, {
      enabled: !this.props.disabled,
      onStartShouldSetResponder: function onStartShouldSetResponder() {
        return true;
      },
      onResponderTerminationRequest: function onResponderTerminationRequest() {
        return false;
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 178
      }
    }));
  }
});

var styles = void 0;
if (Platform.OS === 'ios') {
  styles = StyleSheet.create({
    slider: {
      height: 40
    }
  });
} else {
  styles = StyleSheet.create({
    slider: {}
  });
}

var options = {};
if (Platform.OS === 'android') {
  options = {
    nativeOnly: {
      enabled: true
    }
  };
}
var RCTSlider = requireNativeComponent('RCTSlider', Slider, options);

module.exports = Slider;
}, 373, null, "Slider");
__d(/* SnapshotViewIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(261                ); // 261 = UnimplementedView
}, 374, null, "SnapshotViewIOS");
__d(/* Switch */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\Switch\\Switch.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var PropTypes = React.PropTypes;

var Switch = React.createClass({
  displayName: 'Switch',

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    value: PropTypes.bool,

    disabled: PropTypes.bool,

    onValueChange: PropTypes.func,

    testID: PropTypes.string,

    tintColor: ColorPropType,

    onTintColor: ColorPropType,

    thumbTintColor: ColorPropType
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      value: false,
      disabled: false
    };
  },

  mixins: [NativeMethodsMixin],

  _rctSwitch: {},
  _onChange: function _onChange(event) {
    if (Platform.OS === 'android') {
      this._rctSwitch.setNativeProps({ on: this.props.value });
    } else {
      this._rctSwitch.setNativeProps({ value: this.props.value });
    }

    this.props.onChange && this.props.onChange(event);
    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);
  },

  render: function render() {
    var _this = this;

    var props = babelHelpers.extends({}, this.props);
    props.onStartShouldSetResponder = function () {
      return true;
    };
    props.onResponderTerminationRequest = function () {
      return false;
    };
    if (Platform.OS === 'android') {
      props.enabled = !this.props.disabled;
      props.on = this.props.value;
      props.style = this.props.style;
      props.trackTintColor = this.props.value ? this.props.onTintColor : this.props.tintColor;
    } else if (Platform.OS === 'ios') {
      props.style = [styles.rctSwitchIOS, this.props.style];
    }
    return React.createElement(RCTSwitch, babelHelpers.extends({}, props, {
      ref: function ref(_ref) {
        _this._rctSwitch = _ref;
      },
      onChange: this._onChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 112
      }
    }));
  }
});

var styles = StyleSheet.create({
  rctSwitchIOS: {
    height: 31,
    width: 51
  }
});

if (Platform.OS === 'android') {
  var RCTSwitch = requireNativeComponent('AndroidSwitch', Switch, {
    nativeOnly: {
      onChange: true,
      on: true,
      enabled: true,
      trackTintColor: true
    }
  });
} else {
  var RCTSwitch = requireNativeComponent('RCTSwitch', Switch, {
    nativeOnly: {
      onChange: true
    }
  });
}

module.exports = Switch;
}, 375, null, "Switch");
__d(/* SwipeableListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Experimental\\SwipeableRow\\SwipeableListView.js';
var ListView = require(327       ); // 327 = ListView
var React = require(235    ); // 235 = React
var SwipeableListViewDataSource = require(377                          ); // 377 = SwipeableListViewDataSource
var SwipeableRow = require(378           ); // 378 = SwipeableRow

var PropTypes = React.PropTypes;

var SwipeableListView = function (_React$Component) {
  babelHelpers.inherits(SwipeableListView, _React$Component);
  babelHelpers.createClass(SwipeableListView, null, [{
    key: 'getNewDataSource',
    value: function getNewDataSource() {
      return new SwipeableListViewDataSource({
        getRowData: function getRowData(data, sectionID, rowID) {
          return data[sectionID][rowID];
        },
        getSectionHeaderData: function getSectionHeaderData(data, sectionID) {
          return data[sectionID];
        },
        rowHasChanged: function rowHasChanged(row1, row2) {
          return row1 !== row2;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
          return s1 !== s2;
        }
      });
    }
  }]);

  function SwipeableListView(props, context) {
    babelHelpers.classCallCheck(this, SwipeableListView);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableListView.__proto__ || Object.getPrototypeOf(SwipeableListView)).call(this, props, context));

    _this._listViewRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.props.dataSource.getOpenRowID()) {
        _this.setState({
          dataSource: _this.state.dataSource.setOpenRowID(null)
        });
      }
      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._renderRow = function (rowData, sectionID, rowID) {
      var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);

      if (!slideoutView) {
        return _this.props.renderRow(rowData, sectionID, rowID);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),
          maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),
          key: rowID,
          onOpen: function onOpen() {
            return _this._onOpen(rowData.id);
          },
          onClose: function onClose() {
            return _this._onClose(rowData.id);
          },
          onSwipeEnd: function onSwipeEnd() {
            return _this._setListViewScrollable(true);
          },
          onSwipeStart: function onSwipeStart() {
            return _this._setListViewScrollable(false);
          },
          shouldBounceOnMount: shouldBounceOnMount, __source: {
            fileName: _jsxFileName,
            lineNumber: 181
          }
        },
        _this.props.renderRow(rowData, sectionID, rowID)
      );
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    _this.state = {
      dataSource: _this.props.dataSource
    };
    return _this;
  }

  babelHelpers.createClass(SwipeableListView, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {
        this.setState({
          dataSource: nextProps.dataSource
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._listViewRef = _ref;
        },
        dataSource: this.state.dataSource.getDataSource(),
        onScroll: this._onScroll,
        renderRow: this._renderRow,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 114
        }
      }));
    }
  }, {
    key: '_setListViewScrollable',
    value: function _setListViewScrollable(value) {
      if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {
        this._listViewRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {
        return this._listViewRef.getScrollResponder();
      }
    }
  }, {
    key: '_getMaxSwipeDistance',
    value: function _getMaxSwipeDistance(rowData, sectionID, rowID) {
      if (typeof this.props.maxSwipeDistance === 'function') {
        return this.props.maxSwipeDistance(rowData, sectionID, rowID);
      }

      return this.props.maxSwipeDistance;
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(rowID)
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(null)
      });
    }
  }]);
  return SwipeableListView;
}(React.Component);

SwipeableListView.propTypes = {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  dataSource: PropTypes.instanceOf(SwipeableListViewDataSource).isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderRow: PropTypes.func.isRequired,

  renderQuickActions: PropTypes.func.isRequired
};
SwipeableListView.defaultProps = {
  bounceFirstRowOnMount: false,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
};


module.exports = SwipeableListView;
}, 376, null, "SwipeableListView");
__d(/* SwipeableListViewDataSource */function(global, require, module, exports) {
'use strict';

var ListViewDataSource = require(328                 ); // 328 = ListViewDataSource

var SwipeableListViewDataSource = function () {
  function SwipeableListViewDataSource(params) {
    var _this = this;

    babelHelpers.classCallCheck(this, SwipeableListViewDataSource);

    this._dataSource = new ListViewDataSource({
      getRowData: params.getRowData,
      getSectionHeaderData: params.getSectionHeaderData,
      rowHasChanged: function rowHasChanged(row1, row2) {
        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);
      },
      sectionHeaderHasChanged: params.sectionHeaderHasChanged
    });
  }

  babelHelpers.createClass(SwipeableListViewDataSource, [{
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);

      this._dataBlob = dataBlob;
      this.rowIdentities = this._dataSource.rowIdentities;
      this.sectionIdentities = this._dataSource.sectionIdentities;

      return this;
    }
  }, {
    key: 'getDataSource',
    value: function getDataSource() {
      return this._dataSource;
    }
  }, {
    key: 'getOpenRowID',
    value: function getOpenRowID() {
      return this._openRowID;
    }
  }, {
    key: 'getFirstRowID',
    value: function getFirstRowID() {
      if (this.rowIdentities) {
        return this.rowIdentities[0] && this.rowIdentities[0][0];
      }
      return Object.keys(this._dataBlob)[0];
    }
  }, {
    key: 'setOpenRowID',
    value: function setOpenRowID(rowID) {
      this._previousOpenRowID = this._openRowID;
      this._openRowID = rowID;

      this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return this;
    }
  }]);
  return SwipeableListViewDataSource;
}();

module.exports = SwipeableListViewDataSource;
}, 377, null, "SwipeableListViewDataSource");
__d(/* SwipeableRow */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Experimental\\SwipeableRow\\SwipeableRow.js';
var Animated = require(301       ); // 301 = Animated
var I18nManager = require(363          ); // 363 = I18nManager
var PanResponder = require(379           ); // 379 = PanResponder
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var TimerMixin = require(298                ); // 298 = react-timer-mixin
var View = require(234   ); // 234 = View

var PropTypes = React.PropTypes;


var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction

var IS_RTL = I18nManager.isRTL;

var CLOSED_LEFT_POSITION = 0;

var HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;

var HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;

var SLOW_SPEED_SWIPE_FACTOR = 4;

var SWIPE_DURATION = 300;

var ON_MOUNT_BOUNCE_DELAY = 700;
var ON_MOUNT_BOUNCE_DURATION = 400;

var RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;
var RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;

var RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;

var SwipeableRow = React.createClass({
  displayName: 'SwipeableRow',

  _panResponder: {},
  _previousLeft: CLOSED_LEFT_POSITION,

  mixins: [TimerMixin],

  propTypes: {
    children: PropTypes.any,
    isOpen: PropTypes.bool,
    maxSwipeDistance: PropTypes.number.isRequired,
    onOpen: PropTypes.func.isRequired,
    onClose: PropTypes.func.isRequired,
    onSwipeEnd: PropTypes.func.isRequired,
    onSwipeStart: PropTypes.func.isRequired,

    shouldBounceOnMount: PropTypes.bool,

    slideoutView: PropTypes.node.isRequired,

    swipeThreshold: PropTypes.number.isRequired
  },

  getInitialState: function getInitialState() {
    return {
      currentLeft: new Animated.Value(this._previousLeft),

      isSwipeableViewRendered: false,
      rowHeight: null
    };
  },
  getDefaultProps: function getDefaultProps() {
    return {
      isOpen: false,
      maxSwipeDistance: 0,
      onOpen: emptyFunction,
      onClose: emptyFunction,
      onSwipeEnd: emptyFunction,
      onSwipeStart: emptyFunction,
      swipeThreshold: 30
    };
  },
  componentWillMount: function componentWillMount() {
    this._panResponder = PanResponder.create({
      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,
      onPanResponderGrant: this._handlePanResponderGrant,
      onPanResponderMove: this._handlePanResponderMove,
      onPanResponderRelease: this._handlePanResponderEnd,
      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,
      onPanResponderTerminate: this._handlePanResponderEnd,
      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
        return false;
      }
    });
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    if (this.props.shouldBounceOnMount) {
      this.setTimeout(function () {
        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);
      }, ON_MOUNT_BOUNCE_DELAY);
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.isOpen && !nextProps.isOpen) {
      this._animateToClosedPosition();
    }
  },
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    if (this.props.shouldBounceOnMount && !nextProps.shouldBounceOnMount) {
      return false;
    }

    return true;
  },
  render: function render() {
    var slideOutView = void 0;
    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {
      slideOutView = React.createElement(
        View,
        { style: [styles.slideOutContainer, { height: this.state.rowHeight }], __source: {
            fileName: _jsxFileName,
            lineNumber: 167
          }
        },
        this.props.slideoutView
      );
    }

    var swipeableView = React.createElement(
      Animated.View,
      {
        onLayout: this._onSwipeableViewLayout,
        style: { transform: [{ translateX: this.state.currentLeft }] }, __source: {
          fileName: _jsxFileName,
          lineNumber: 178
        }
      },
      this.props.children
    );

    return React.createElement(
      View,
      babelHelpers.extends({}, this._panResponder.panHandlers, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 186
        }
      }),
      slideOutView,
      swipeableView
    );
  },
  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {
    this.setState({
      isSwipeableViewRendered: true,
      rowHeight: event.nativeEvent.layout.height
    });
  },
  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {
    return gestureState.dy < 10 && this._isValidSwipe(gestureState);
  },
  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},
  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {
    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {
      return;
    }

    this.props.onSwipeStart();

    if (this._isSwipingRightFromClosed(gestureState)) {
      this._swipeSlowSpeed(gestureState);
    } else {
      this._swipeFullSpeed(gestureState);
    }
  },
  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;
  },
  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);
  },
  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);
  },
  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;
  },
  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {
    return false;
  },
  _animateTo: function _animateTo(toValue) {
    var _this2 = this;

    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;
    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;

    Animated.timing(this.state.currentLeft, {
      duration: duration,
      toValue: toValue
    }).start(function () {
      _this2._previousLeft = toValue;
      callback();
    });
  },
  _animateToOpenPosition: function _animateToOpenPosition() {
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance);
  },
  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {
    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;

    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance, duration);
  },
  _animateToClosedPosition: function _animateToClosedPosition() {
    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;

    this._animateTo(CLOSED_LEFT_POSITION, duration);
  },
  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {
    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
  },
  _animateBounceBack: function _animateBounceBack(duration) {
    var swipeBounceBackDistance = IS_RTL ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;
    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);
  },
  _isValidSwipe: function _isValidSwipe(gestureState) {
    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;
  },
  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {
    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
  },
  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {
    var horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;
    if (this._isSwipingRightFromClosed(gestureState)) {
      this.props.onOpen();
      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
    } else if (this._shouldAnimateRemainder(gestureState)) {
      if (horizontalDistance < 0) {
        this.props.onOpen();
        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);
      } else {
        this.props.onClose();
        this._animateToClosedPosition();
      }
    } else {
      if (this._previousLeft === CLOSED_LEFT_POSITION) {
        this._animateToClosedPosition();
      } else {
        this._animateToOpenPosition();
      }
    }

    this.props.onSwipeEnd();
  }
});

var styles = StyleSheet.create({
  slideOutContainer: {
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    top: 0
  }
});

module.exports = SwipeableRow;
}, 378, null, "SwipeableRow");
__d(/* PanResponder */function(global, require, module, exports) {

'use strict';

var InteractionManager = require(303                   ); // 303 = ./InteractionManager
var TouchHistoryMath = require(380               ); // 380 = TouchHistoryMath

var currentCentroidXOfTouchesChangedAfter = TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter = TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter = TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter = TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX = TouchHistoryMath.currentCentroidX;
var currentCentroidY = TouchHistoryMath.currentCentroidY;

var PanResponder = {

  _initializeGestureState: function _initializeGestureState(gestureState) {
    gestureState.moveX = 0;
    gestureState.moveY = 0;
    gestureState.x0 = 0;
    gestureState.y0 = 0;
    gestureState.dx = 0;
    gestureState.dy = 0;
    gestureState.vx = 0;
    gestureState.vy = 0;
    gestureState.numberActiveTouches = 0;

    gestureState._accountsForMovesUpTo = 0;
  },

  _updateGestureStateOnMove: function _updateGestureStateOnMove(gestureState, touchHistory) {
    gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
    gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    var movedAfter = gestureState._accountsForMovesUpTo;
    var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var nextDX = gestureState.dx + (x - prevX);
    var nextDY = gestureState.dy + (y - prevY);

    var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
    gestureState.vx = (nextDX - gestureState.dx) / dt;
    gestureState.vy = (nextDY - gestureState.dy) / dt;

    gestureState.dx = nextDX;
    gestureState.dy = nextDY;
    gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;
  },

  create: function create(config) {
    var interactionState = {
      handle: null
    };
    var gestureState = {
      stateID: Math.random()
    };
    PanResponder._initializeGestureState(gestureState);
    var panHandlers = {
      onStartShouldSetResponder: function onStartShouldSetResponder(e) {
        return config.onStartShouldSetPanResponder === undefined ? false : config.onStartShouldSetPanResponder(e, gestureState);
      },
      onMoveShouldSetResponder: function onMoveShouldSetResponder(e) {
        return config.onMoveShouldSetPanResponder === undefined ? false : config.onMoveShouldSetPanResponder(e, gestureState);
      },
      onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(e) {
        if (e.nativeEvent.touches.length === 1) {
          PanResponder._initializeGestureState(gestureState);
        }
        gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
        return config.onStartShouldSetPanResponderCapture !== undefined ? config.onStartShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return false;
        }
        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onResponderGrant: function onResponderGrant(e) {
        if (!interactionState.handle) {
          interactionState.handle = InteractionManager.createInteractionHandle();
        }
        gestureState.x0 = currentCentroidX(e.touchHistory);
        gestureState.y0 = currentCentroidY(e.touchHistory);
        gestureState.dx = 0;
        gestureState.dy = 0;
        if (config.onPanResponderGrant) {
          config.onPanResponderGrant(e, gestureState);
        }

        return config.onShouldBlockNativeResponder === undefined ? true : config.onShouldBlockNativeResponder();
      },

      onResponderReject: function onResponderReject(e) {
        clearInteractionHandle(interactionState, config.onPanResponderReject, e, gestureState);
      },

      onResponderRelease: function onResponderRelease(e) {
        clearInteractionHandle(interactionState, config.onPanResponderRelease, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderStart: function onResponderStart(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        if (config.onPanResponderStart) {
          config.onPanResponderStart(e, gestureState);
        }
      },

      onResponderMove: function onResponderMove(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return;
        }

        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        if (config.onPanResponderMove) {
          config.onPanResponderMove(e, gestureState);
        }
      },

      onResponderEnd: function onResponderEnd(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        clearInteractionHandle(interactionState, config.onPanResponderEnd, e, gestureState);
      },

      onResponderTerminate: function onResponderTerminate(e) {
        clearInteractionHandle(interactionState, config.onPanResponderTerminate, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderTerminationRequest: function onResponderTerminationRequest(e) {
        return config.onPanResponderTerminationRequest === undefined ? true : config.onPanResponderTerminationRequest(e, gestureState);
      }
    };
    return {
      panHandlers: panHandlers,
      getInteractionHandle: function getInteractionHandle() {
        return interactionState.handle;
      }
    };
  }
};

function clearInteractionHandle(interactionState, callback, event, gestureState) {
  if (interactionState.handle) {
    InteractionManager.clearInteractionHandle(interactionState.handle);
    interactionState.handle = null;
  }
  if (callback) {
    callback(event, gestureState);
  }
}

module.exports = PanResponder;
}, 379, null, "PanResponder");
__d(/* TouchHistoryMath */function(global, require, module, exports) {

'use strict';

var TouchHistoryMath = {
  centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
    var touchBank = touchHistory.touchBank;
    var total = 0;
    var count = 0;

    var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

    if (oneTouchData !== null) {
      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
        total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
        count = 1;
      }
    } else {
      for (var i = 0; i < touchBank.length; i++) {
        var touchTrack = touchBank[i];
        if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
          var toAdd;
          if (ofCurrent && isXAxis) {
            toAdd = touchTrack.currentPageX;
          } else if (ofCurrent && !isXAxis) {
            toAdd = touchTrack.currentPageY;
          } else if (!ofCurrent && isXAxis) {
            toAdd = touchTrack.previousPageX;
          } else {
            toAdd = touchTrack.previousPageY;
          }
          total += toAdd;
          count++;
        }
      }
    }
    return count > 0 ? total / count : TouchHistoryMath.noCentroid;
  },

  currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
  },

  currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
  },

  previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
  },

  previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
  },

  currentCentroidX: function currentCentroidX(touchHistory) {
    return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
  },

  currentCentroidY: function currentCentroidY(touchHistory) {
    return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
  },

  noCentroid: -1
};

module.exports = TouchHistoryMath;
}, 380, null, "TouchHistoryMath");
__d(/* TabBarIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\TabBarIOS\\TabBarIOS.android.js';
var React = require(235    ); // 235 = React
var StyleSheet = require(262         ); // 262 = StyleSheet
var TabBarItemIOS = require(382            ); // 382 = TabBarItemIOS
var View = require(234   ); // 234 = View

var DummyTabBarIOS = function (_React$Component) {
  babelHelpers.inherits(DummyTabBarIOS, _React$Component);

  function DummyTabBarIOS() {
    babelHelpers.classCallCheck(this, DummyTabBarIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyTabBarIOS.__proto__ || Object.getPrototypeOf(DummyTabBarIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTabBarIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [this.props.style, styles.tabGroup], __source: {
            fileName: _jsxFileName,
            lineNumber: 25
          }
        },
        this.props.children
      );
    }
  }]);
  return DummyTabBarIOS;
}(React.Component);

DummyTabBarIOS.Item = TabBarItemIOS;


var styles = StyleSheet.create({
  tabGroup: {
    flex: 1
  }
});

module.exports = DummyTabBarIOS;
}, 381, null, "TabBarIOS");
__d(/* TabBarItemIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\TabBarIOS\\TabBarItemIOS.android.js';
var React = require(235    ); // 235 = React
var View = require(234   ); // 234 = View
var StyleSheet = require(262         ); // 262 = StyleSheet

var DummyTab = function (_React$Component) {
  babelHelpers.inherits(DummyTab, _React$Component);

  function DummyTab() {
    babelHelpers.classCallCheck(this, DummyTab);
    return babelHelpers.possibleConstructorReturn(this, (DummyTab.__proto__ || Object.getPrototypeOf(DummyTab)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTab, [{
    key: 'render',
    value: function render() {
      if (!this.props.selected) {
        return React.createElement(View, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        });
      }
      return React.createElement(
        View,
        { style: [this.props.style, styles.tab], __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        },
        this.props.children
      );
    }
  }]);
  return DummyTab;
}(React.Component);

var styles = StyleSheet.create({
  tab: {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    borderColor: 'red',
    borderWidth: 1
  }
});

module.exports = DummyTab;
}, 382, null, "TabBarItemIOS");
__d(/* TextInput */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\TextInput\\TextInput.js';
var ColorPropType = require(82             ); // 82 = ColorPropType
var DocumentSelectionState = require(384                     ); // 384 = DocumentSelectionState
var EventEmitter = require(69            ); // 69 = EventEmitter
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var Platform = require(61        ); // 61 = Platform
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var StyleSheet = require(262         ); // 262 = StyleSheet
var Text = require(289   ); // 289 = Text
var TextInputState = require(77              ); // 77 = TextInputState
var TimerMixin = require(298                ); // 298 = react-timer-mixin
var TouchableWithoutFeedback = require(297                       ); // 297 = TouchableWithoutFeedback
var UIManager = require(78         ); // 78 = UIManager
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent
var warning = require(19                ); // 19 = fbjs/lib/warning

var PropTypes = React.PropTypes;

var onlyMultiline = {
  onTextInput: true,
  children: true
};

if (Platform.OS === 'android') {
  var AndroidTextInput = requireNativeComponent('AndroidTextInput', null);
} else if (Platform.OS === 'ios') {
  var RCTTextView = requireNativeComponent('RCTTextView', null);
  var RCTTextField = requireNativeComponent('RCTTextField', null);
}

var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];

var TextInput = React.createClass({
  displayName: 'TextInput',

  statics: {
    State: TextInputState
  },

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),

    autoCorrect: PropTypes.bool,

    spellCheck: PropTypes.bool,

    autoFocus: PropTypes.bool,

    editable: PropTypes.bool,

    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search']),

    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),

    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),

    returnKeyLabel: PropTypes.string,

    maxLength: PropTypes.number,

    numberOfLines: PropTypes.number,

    disableFullscreenUI: PropTypes.bool,

    enablesReturnKeyAutomatically: PropTypes.bool,

    multiline: PropTypes.bool,

    textBreakStrategy: React.PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onBlur: PropTypes.func,

    onFocus: PropTypes.func,

    onChange: PropTypes.func,

    onChangeText: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    onEndEditing: PropTypes.func,

    onSelectionChange: PropTypes.func,

    onSubmitEditing: PropTypes.func,

    onKeyPress: PropTypes.func,

    onLayout: PropTypes.func,

    onScroll: PropTypes.func,

    placeholder: PropTypes.node,

    placeholderTextColor: ColorPropType,

    secureTextEntry: PropTypes.bool,

    selectionColor: ColorPropType,

    selectionState: PropTypes.instanceOf(DocumentSelectionState),

    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),

    value: PropTypes.string,

    defaultValue: PropTypes.string,

    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),

    clearTextOnFocus: PropTypes.bool,

    selectTextOnFocus: PropTypes.bool,

    blurOnSubmit: PropTypes.bool,

    style: Text.propTypes.style,

    underlineColorAndroid: ColorPropType,

    inlineImageLeft: PropTypes.string,

    inlineImagePadding: PropTypes.number,

    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),

    caretHidden: PropTypes.bool
  }),

  mixins: [NativeMethodsMixin, TimerMixin],

  isFocused: function isFocused() {
    return TextInputState.currentlyFocusedField() === ReactNative.findNodeHandle(this._inputRef);
  },

  contextTypes: {
    onFocusRequested: React.PropTypes.func,
    focusEmitter: React.PropTypes.instanceOf(EventEmitter)
  },

  _inputRef: undefined,
  _focusSubscription: undefined,
  _lastNativeText: undefined,
  _lastNativeSelection: undefined,

  componentDidMount: function componentDidMount() {
    var _this = this;

    this._lastNativeText = this.props.value;
    if (!this.context.focusEmitter) {
      if (this.props.autoFocus) {
        this.requestAnimationFrame(this.focus);
      }
      return;
    }
    this._focusSubscription = this.context.focusEmitter.addListener('focus', function (el) {
      if (_this === el) {
        _this.requestAnimationFrame(_this.focus);
      } else if (_this.isFocused()) {
        _this.blur();
      }
    });
    if (this.props.autoFocus) {
      this.context.onFocusRequested(this);
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this._focusSubscription && this._focusSubscription.remove();
    if (this.isFocused()) {
      this.blur();
    }
  },

  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: React.PropTypes.bool
  },

  clear: function clear() {
    this.setNativeProps({ text: '' });
  },

  render: function render() {
    if (Platform.OS === 'ios') {
      return this._renderIOS();
    } else if (Platform.OS === 'android') {
      return this._renderAndroid();
    }
  },

  _getText: function _getText() {
    return typeof this.props.value === 'string' ? this.props.value : typeof this.props.defaultValue === 'string' ? this.props.defaultValue : '';
  },

  _setNativeRef: function _setNativeRef(ref) {
    this._inputRef = ref;
  },

  _renderIOS: function _renderIOS() {
    var textContainer;

    var props = babelHelpers.extends({}, this.props);
    props.style = [styles.input, this.props.style];

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    if (!props.multiline) {
      if (__DEV__) {
        for (var propKey in onlyMultiline) {
          if (props[propKey]) {
            var error = new Error('TextInput prop `' + propKey + '` is only supported with multiline.');
            warning(false, '%s', error.stack);
          }
        }
      }
      textContainer = React.createElement(RCTTextField, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onSelectionChange: this._onSelectionChange,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 650
        }
      }));
    } else {
      var children = props.children;
      var childCount = 0;
      React.Children.forEach(children, function () {
        return ++childCount;
      });
      invariant(!(props.value && childCount), 'Cannot specify both value and children.');
      if (childCount >= 1) {
        children = React.createElement(
          Text,
          { style: props.style, __source: {
              fileName: _jsxFileName,
              lineNumber: 669
            }
          },
          children
        );
      }
      if (props.inputView) {
        children = [children, props.inputView];
      }
      props.style.unshift(styles.multilineInput);
      textContainer = React.createElement(RCTTextView, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        children: children,
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onContentSizeChange: this.props.onContentSizeChange,
        onSelectionChange: this._onSelectionChange,
        onTextInput: this._onTextInput,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        dataDetectorTypes: this.props.dataDetectorTypes,
        onScroll: this._onScroll,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 676
        }
      }));
    }

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: props.onLayout,
        onPress: this._onPress,
        rejectResponderTermination: true,
        accessible: props.accessible,
        accessibilityLabel: props.accessibilityLabel,
        accessibilityTraits: props.accessibilityTraits,
        testID: props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 694
        }
      },
      textContainer
    );
  },

  _renderAndroid: function _renderAndroid() {
    var props = babelHelpers.extends({}, this.props);
    props.style = [this.props.style];
    props.autoCapitalize = UIManager.AndroidTextInput.Constants.AutoCapitalizationType[this.props.autoCapitalize];
    var children = this.props.children;
    var childCount = 0;
    React.Children.forEach(children, function () {
      return ++childCount;
    });
    invariant(!(this.props.value && childCount), 'Cannot specify both value and children.');
    if (childCount > 1) {
      children = React.createElement(
        Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 720
          }
        },
        children
      );
    }

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    var textContainer = React.createElement(AndroidTextInput, babelHelpers.extends({
      ref: this._setNativeRef
    }, props, {
      mostRecentEventCount: 0,
      onFocus: this._onFocus,
      onBlur: this._onBlur,
      onChange: this._onChange,
      onSelectionChange: this._onSelectionChange,
      onTextInput: this._onTextInput,
      text: this._getText(),
      children: children,
      disableFullscreenUI: this.props.disableFullscreenUI,
      textBreakStrategy: this.props.textBreakStrategy,
      onScroll: this._onScroll,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 728
      }
    }));

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: this.props.onLayout,
        onPress: this._onPress,
        accessible: this.props.accessible,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 745
        }
      },
      textContainer
    );
  },

  _onFocus: function _onFocus(event) {
    if (this.props.onFocus) {
      this.props.onFocus(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.focus();
    }
  },

  _onPress: function _onPress(event) {
    if (this.props.editable || this.props.editable === undefined) {
      this.focus();
    }
  },

  _onChange: function _onChange(event) {
    if (this._inputRef) {
      this._inputRef.setNativeProps({
        mostRecentEventCount: event.nativeEvent.eventCount
      });
    }

    var text = event.nativeEvent.text;
    this.props.onChange && this.props.onChange(event);
    this.props.onChangeText && this.props.onChangeText(text);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeText = text;
    this.forceUpdate();
  },

  _onSelectionChange: function _onSelectionChange(event) {
    this.props.onSelectionChange && this.props.onSelectionChange(event);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeSelection = event.nativeEvent.selection;

    if (this.props.selection || this.props.selectionState) {
      this.forceUpdate();
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var nativeProps = {};

    if (this._lastNativeText !== this.props.value && typeof this.props.value === 'string') {
      nativeProps.text = this.props.value;
    }

    var selection = this.props.selection;

    if (this._lastNativeSelection && selection && (this._lastNativeSelection.start !== selection.start || this._lastNativeSelection.end !== selection.end)) {
      nativeProps.selection = this.props.selection;
    }

    if (Object.keys(nativeProps).length > 0 && this._inputRef) {
      this._inputRef.setNativeProps(nativeProps);
    }

    if (this.props.selectionState && selection) {
      this.props.selectionState.update(selection.start, selection.end);
    }
  },

  _onBlur: function _onBlur(event) {
    this.blur();
    if (this.props.onBlur) {
      this.props.onBlur(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.blur();
    }
  },

  _onTextInput: function _onTextInput(event) {
    this.props.onTextInput && this.props.onTextInput(event);
  },

  _onScroll: function _onScroll(event) {
    this.props.onScroll && this.props.onScroll(event);
  }
});

var styles = StyleSheet.create({
  input: {
    alignSelf: 'stretch'
  },
  multilineInput: {
    paddingTop: 5
  }
});

module.exports = TextInput;
}, 383, null, "TextInput");
__d(/* DocumentSelectionState */function(global, require, module, exports) {

'use strict';

var mixInEventEmitter = require(385                ); // 385 = mixInEventEmitter

var DocumentSelectionState = function () {
  function DocumentSelectionState(anchor, focus) {
    babelHelpers.classCallCheck(this, DocumentSelectionState);

    this._anchorOffset = anchor;
    this._focusOffset = focus;
    this._hasFocus = false;
  }

  babelHelpers.createClass(DocumentSelectionState, [{
    key: 'update',
    value: function update(anchor, focus) {
      if (this._anchorOffset !== anchor || this._focusOffset !== focus) {
        this._anchorOffset = anchor;
        this._focusOffset = focus;
        this.emit('update');
      }
    }
  }, {
    key: 'constrainLength',
    value: function constrainLength(maxLength) {
      this.update(Math.min(this._anchorOffset, maxLength), Math.min(this._focusOffset, maxLength));
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (!this._hasFocus) {
        this._hasFocus = true;
        this.emit('focus');
      }
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this._hasFocus) {
        this._hasFocus = false;
        this.emit('blur');
      }
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return this._hasFocus;
    }
  }, {
    key: 'isCollapsed',
    value: function isCollapsed() {
      return this._anchorOffset === this._focusOffset;
    }
  }, {
    key: 'isBackward',
    value: function isBackward() {
      return this._anchorOffset > this._focusOffset;
    }
  }, {
    key: 'getAnchorOffset',
    value: function getAnchorOffset() {
      return this._hasFocus ? this._anchorOffset : null;
    }
  }, {
    key: 'getFocusOffset',
    value: function getFocusOffset() {
      return this._hasFocus ? this._focusOffset : null;
    }
  }, {
    key: 'getStartOffset',
    value: function getStartOffset() {
      return this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'getEndOffset',
    value: function getEndOffset() {
      return this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'overlaps',
    value: function overlaps(start, end) {
      return this.hasFocus() && this.getStartOffset() <= end && start <= this.getEndOffset();
    }
  }]);
  return DocumentSelectionState;
}();

mixInEventEmitter(DocumentSelectionState, {
  'blur': true,
  'focus': true,
  'update': true
});

module.exports = DocumentSelectionState;
}, 384, null, "DocumentSelectionState");
__d(/* mixInEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(69            ); // 69 = EventEmitter
var EventEmitterWithHolding = require(386                      ); // 386 = EventEmitterWithHolding
var EventHolder = require(387          ); // 387 = EventHolder

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var keyOf = require(355             ); // 355 = fbjs/lib/keyOf

var TYPES_KEY = keyOf({ __types: true });

function mixInEventEmitter(cls, types) {
  invariant(types, 'Must supply set of valid event types');

  var target = cls.prototype || cls;

  invariant(!target.__eventEmitter, 'An active emitter is already mixed in');

  var ctor = cls.constructor;
  if (ctor) {
    invariant(ctor === Object || ctor === Function, 'Mix EventEmitter into a class, not an instance');
  }

  if (target.hasOwnProperty(TYPES_KEY)) {
    babelHelpers.extends(target.__types, types);
  } else if (target.__types) {
    target.__types = babelHelpers.extends({}, target.__types, types);
  } else {
    target.__types = types;
  }
  babelHelpers.extends(target, EventEmitterMixin);
}

var EventEmitterMixin = {
  emit: function emit(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);
  },

  emitAndHold: function emitAndHold(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);
  },

  addListener: function addListener(eventType, listener, context) {
    return this.__getEventEmitter().addListener(eventType, listener, context);
  },

  once: function once(eventType, listener, context) {
    return this.__getEventEmitter().once(eventType, listener, context);
  },

  addRetroactiveListener: function addRetroactiveListener(eventType, listener, context) {
    return this.__getEventEmitter().addRetroactiveListener(eventType, listener, context);
  },

  addListenerMap: function addListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  addRetroactiveListenerMap: function addRetroactiveListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  removeAllListeners: function removeAllListeners() {
    this.__getEventEmitter().removeAllListeners();
  },

  removeCurrentListener: function removeCurrentListener() {
    this.__getEventEmitter().removeCurrentListener();
  },

  releaseHeldEventType: function releaseHeldEventType(eventType) {
    this.__getEventEmitter().releaseHeldEventType(eventType);
  },

  __getEventEmitter: function __getEventEmitter() {
    if (!this.__eventEmitter) {
      var emitter = new EventEmitter();
      if (__DEV__) {
        var EventValidator = require(388             ); // 388 = EventValidator
        emitter = EventValidator.addValidation(emitter, this.__types);
      }

      var holder = new EventHolder();
      this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);
    }
    return this.__eventEmitter;
  }
};

module.exports = mixInEventEmitter;
}, 385, null, "mixInEventEmitter");
__d(/* EventEmitterWithHolding */function(global, require, module, exports) {
'use strict';

var EventEmitterWithHolding = function () {
  function EventEmitterWithHolding(emitter, holder) {
    babelHelpers.classCallCheck(this, EventEmitterWithHolding);

    this._emitter = emitter;
    this._eventHolder = holder;
    this._currentEventToken = null;
    this._emittingHeldEvents = false;
  }

  babelHelpers.createClass(EventEmitterWithHolding, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      return this._emitter.addListener(eventType, listener, context);
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      return this._emitter.once(eventType, listener, context);
    }
  }, {
    key: 'addRetroactiveListener',
    value: function addRetroactiveListener(eventType, listener, context) {
      var subscription = this._emitter.addListener(eventType, listener, context);

      this._emittingHeldEvents = true;
      this._eventHolder.emitToListener(eventType, listener, context);
      this._emittingHeldEvents = false;

      return subscription;
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._emitter.removeAllListeners(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      this._emitter.removeCurrentListener();
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      return this._emitter.listeners(eventType);
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var _emitter;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_emitter = this._emitter).emit.apply(_emitter, [eventType].concat(babelHelpers.toConsumableArray(args)));
    }
  }, {
    key: 'emitAndHold',
    value: function emitAndHold(eventType) {
      var _eventHolder, _emitter2;

      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      this._currentEventToken = (_eventHolder = this._eventHolder).holdEvent.apply(_eventHolder, [eventType].concat(babelHelpers.toConsumableArray(args)));
      (_emitter2 = this._emitter).emit.apply(_emitter2, [eventType].concat(babelHelpers.toConsumableArray(args)));
      this._currentEventToken = null;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      if (this._currentEventToken) {
        this._eventHolder.releaseEvent(this._currentEventToken);
      } else if (this._emittingHeldEvents) {
        this._eventHolder.releaseCurrentEvent();
      }
    }
  }, {
    key: 'releaseHeldEventType',
    value: function releaseHeldEventType(eventType) {
      this._eventHolder.releaseEventType(eventType);
    }
  }]);
  return EventEmitterWithHolding;
}();

module.exports = EventEmitterWithHolding;
}, 386, null, "EventEmitterWithHolding");
__d(/* EventHolder */function(global, require, module, exports) {
'use strict';

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var EventHolder = function () {
  function EventHolder() {
    babelHelpers.classCallCheck(this, EventHolder);

    this._heldEvents = {};
    this._currentEventKey = null;
  }

  babelHelpers.createClass(EventHolder, [{
    key: 'holdEvent',
    value: function holdEvent(eventType) {
      this._heldEvents[eventType] = this._heldEvents[eventType] || [];
      var eventsOfType = this._heldEvents[eventType];
      var key = {
        eventType: eventType,
        index: eventsOfType.length
      };

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      eventsOfType.push(args);
      return key;
    }
  }, {
    key: 'emitToListener',
    value: function emitToListener(eventType, listener, context) {
      var _this = this;

      var eventsOfType = this._heldEvents[eventType];
      if (!eventsOfType) {
        return;
      }
      var origEventKey = this._currentEventKey;
      eventsOfType.forEach(function (eventHeld, index) {
        if (!eventHeld) {
          return;
        }
        _this._currentEventKey = {
          eventType: eventType,
          index: index
        };
        listener.apply(context, eventHeld);
      });
      this._currentEventKey = origEventKey;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      invariant(this._currentEventKey !== null, 'Not in an emitting cycle; there is no current event');
      this._currentEventKey && this.releaseEvent(this._currentEventKey);
    }
  }, {
    key: 'releaseEvent',
    value: function releaseEvent(token) {
      delete this._heldEvents[token.eventType][token.index];
    }
  }, {
    key: 'releaseEventType',
    value: function releaseEventType(type) {
      this._heldEvents[type] = [];
    }
  }]);
  return EventHolder;
}();

module.exports = EventHolder;
}, 387, null, "EventHolder");
__d(/* EventValidator */function(global, require, module, exports) {
'use strict';

var EventValidator = {
  addValidation: function addValidation(emitter, types) {
    var eventTypes = Object.keys(types);
    var emitterWithValidation = Object.create(emitter);

    babelHelpers.extends(emitterWithValidation, {
      emit: function emit(type, a, b, c, d, e, _) {
        assertAllowsEventType(type, eventTypes);
        return emitter.emit.call(this, type, a, b, c, d, e, _);
      }
    });

    return emitterWithValidation;
  }
};

function assertAllowsEventType(type, allowedTypes) {
  if (allowedTypes.indexOf(type) === -1) {
    throw new TypeError(errorMessageFor(type, allowedTypes));
  }
}

function errorMessageFor(type, allowedTypes) {
  var message = 'Unknown event type "' + type + '". ';
  if (__DEV__) {
    message += recommendationFor(type, allowedTypes);
  }
  message += 'Known event types: ' + allowedTypes.join(', ') + '.';
  return message;
}

if (__DEV__) {
  var recommendationFor = function recommendationFor(type, allowedTypes) {
    var closestTypeRecommendation = closestTypeFor(type, allowedTypes);
    if (isCloseEnough(closestTypeRecommendation, type)) {
      return 'Did you mean "' + closestTypeRecommendation.type + '"? ';
    } else {
      return '';
    }
  };

  var closestTypeFor = function closestTypeFor(type, allowedTypes) {
    var typeRecommendations = allowedTypes.map(typeRecommendationFor.bind(this, type));
    return typeRecommendations.sort(recommendationSort)[0];
  };

  var typeRecommendationFor = function typeRecommendationFor(type, recomendedType) {
    return {
      type: recomendedType,
      distance: damerauLevenshteinDistance(type, recomendedType)
    };
  };

  var recommendationSort = function recommendationSort(recommendationA, recommendationB) {
    if (recommendationA.distance < recommendationB.distance) {
      return -1;
    } else if (recommendationA.distance > recommendationB.distance) {
      return 1;
    } else {
      return 0;
    }
  };

  var isCloseEnough = function isCloseEnough(closestType, actualType) {
    return closestType.distance / actualType.length < 0.334;
  };

  var damerauLevenshteinDistance = function damerauLevenshteinDistance(a, b) {
    var i = void 0,
        j = void 0;
    var d = [];

    for (i = 0; i <= a.length; i++) {
      d[i] = [i];
    }

    for (j = 1; j <= b.length; j++) {
      d[0][j] = j;
    }

    for (i = 1; i <= a.length; i++) {
      for (j = 1; j <= b.length; j++) {
        var cost = a.charAt(i - 1) === b.charAt(j - 1) ? 0 : 1;

        d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);

        if (i > 1 && j > 1 && a.charAt(i - 1) === b.charAt(j - 2) && a.charAt(i - 2) === b.charAt(j - 1)) {
          d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
        }
      }
    }

    return d[a.length][b.length];
  };
}

module.exports = EventValidator;
}, 388, null, "EventValidator");
__d(/* ToolbarAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\ToolbarAndroid\\ToolbarAndroid.android.js';
var Image = require(313    ); // 313 = Image
var NativeMethodsMixin = require(84                  ); // 84 = NativeMethodsMixin
var React = require(235    ); // 235 = React
var ReactNativeViewAttributes = require(250                        ); // 250 = ReactNativeViewAttributes
var UIManager = require(78         ); // 78 = UIManager
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes
var ColorPropType = require(82             ); // 82 = ColorPropType

var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent
var resolveAssetSource = require(277                 ); // 277 = resolveAssetSource

var ReactPropTypes = React.PropTypes;

var optionalImageSource = ReactPropTypes.oneOfType([Image.propTypes.source, ReactPropTypes.oneOf([])]);

var ToolbarAndroid = React.createClass({
  displayName: 'ToolbarAndroid',

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    actions: ReactPropTypes.arrayOf(ReactPropTypes.shape({
      title: ReactPropTypes.string.isRequired,
      icon: optionalImageSource,
      show: ReactPropTypes.oneOf(['always', 'ifRoom', 'never']),
      showWithText: ReactPropTypes.bool
    })),

    logo: optionalImageSource,

    navIcon: optionalImageSource,

    onActionSelected: ReactPropTypes.func,

    onIconClicked: ReactPropTypes.func,

    overflowIcon: optionalImageSource,

    subtitle: ReactPropTypes.string,

    subtitleColor: ColorPropType,

    title: ReactPropTypes.string,

    titleColor: ColorPropType,

    contentInsetStart: ReactPropTypes.number,

    contentInsetEnd: ReactPropTypes.number,

    rtl: ReactPropTypes.bool,

    testID: ReactPropTypes.string
  }),

  render: function render() {
    var nativeProps = babelHelpers.extends({}, this.props);
    if (this.props.logo) {
      nativeProps.logo = resolveAssetSource(this.props.logo);
    }
    if (this.props.navIcon) {
      nativeProps.navIcon = resolveAssetSource(this.props.navIcon);
    }
    if (this.props.overflowIcon) {
      nativeProps.overflowIcon = resolveAssetSource(this.props.overflowIcon);
    }
    if (this.props.actions) {
      var nativeActions = [];
      for (var i = 0; i < this.props.actions.length; i++) {
        var action = babelHelpers.extends({}, this.props.actions[i]);
        if (action.icon) {
          action.icon = resolveAssetSource(action.icon);
        }
        if (action.show) {
          action.show = UIManager.ToolbarAndroid.Constants.ShowAsAction[action.show];
        }
        nativeActions.push(action);
      }
      nativeProps.nativeActions = nativeActions;
    }

    return React.createElement(NativeToolbar, babelHelpers.extends({ onSelect: this._onSelect }, nativeProps, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 195
      }
    }));
  },

  _onSelect: function _onSelect(event) {
    var position = event.nativeEvent.position;
    if (position === -1) {
      this.props.onIconClicked && this.props.onIconClicked();
    } else {
      this.props.onActionSelected && this.props.onActionSelected(position);
    }
  }
});

var NativeToolbar = requireNativeComponent('ToolbarAndroid', ToolbarAndroid, {
  nativeOnly: {
    nativeActions: true
  }
});

module.exports = ToolbarAndroid;
}, 389, null, "ToolbarAndroid");
__d(/* ViewPagerAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\ViewPager\\ViewPagerAndroid.android.js';
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var UIManager = require(78         ); // 78 = UIManager
var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var dismissKeyboard = require(76               ); // 76 = dismissKeyboard
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var VIEWPAGER_REF = 'viewPager';

var ViewPagerAndroid = function (_React$Component) {
  babelHelpers.inherits(ViewPagerAndroid, _React$Component);

  function ViewPagerAndroid() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, ViewPagerAndroid);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = ViewPagerAndroid.__proto__ || Object.getPrototypeOf(ViewPagerAndroid)).call.apply(_ref, [this].concat(args))), _this), _this.getInnerViewNode = function () {
      return _this.refs[VIEWPAGER_REF].getInnerViewNode();
    }, _this._childrenWithOverridenStyle = function () {
      return React.Children.map(_this.props.children, function (child) {
        if (!child) {
          return null;
        }
        var newProps = babelHelpers.extends({}, child.props, {
          style: [child.props.style, {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
            width: undefined,
            height: undefined
          }],
          collapsable: false
        });
        if (child.type && child.type.displayName && child.type.displayName !== 'RCTView' && child.type.displayName !== 'View') {
          console.warn('Each ViewPager child must be a <View>. Was ' + child.type.displayName);
        }
        return React.createElement(child.type, newProps);
      });
    }, _this._onPageScroll = function (e) {
      if (_this.props.onPageScroll) {
        _this.props.onPageScroll(e);
      }
      if (_this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }, _this._onPageScrollStateChanged = function (e) {
      if (_this.props.onPageScrollStateChanged) {
        _this.props.onPageScrollStateChanged(e.nativeEvent.pageScrollState);
      }
    }, _this._onPageSelected = function (e) {
      if (_this.props.onPageSelected) {
        _this.props.onPageSelected(e);
      }
    }, _this.setPage = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPage, [selectedPage]);
    }, _this.setPageWithoutAnimation = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPageWithoutAnimation, [selectedPage]);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(ViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.initialPage != null) {
        this.setPageWithoutAnimation(this.props.initialPage);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(NativeAndroidViewPager, babelHelpers.extends({}, this.props, {
        ref: VIEWPAGER_REF,
        style: this.props.style,
        onPageScroll: this._onPageScroll,
        onPageScrollStateChanged: this._onPageScrollStateChanged,
        onPageSelected: this._onPageSelected,
        children: this._childrenWithOverridenStyle(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 231
        }
      }));
    }
  }]);
  return ViewPagerAndroid;
}(React.Component);

ViewPagerAndroid.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  initialPage: ReactPropTypes.number,

  onPageScroll: ReactPropTypes.func,

  onPageScrollStateChanged: ReactPropTypes.func,

  onPageSelected: ReactPropTypes.func,

  pageMargin: ReactPropTypes.number,

  keyboardDismissMode: ReactPropTypes.oneOf(['none', 'on-drag']),

  scrollEnabled: ReactPropTypes.bool
});


var NativeAndroidViewPager = requireNativeComponent('AndroidViewPager', ViewPagerAndroid);

module.exports = ViewPagerAndroid;
}, 390, null, "ViewPagerAndroid");
__d(/* WebView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\Components\\WebView\\WebView.android.js';
var EdgeInsetsPropType = require(252                 ); // 252 = EdgeInsetsPropType
var ActivityIndicator = require(81                 ); // 81 = ActivityIndicator
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative
var StyleSheet = require(262         ); // 262 = StyleSheet
var UIManager = require(78         ); // 78 = UIManager
var View = require(234   ); // 234 = View

var ViewPropTypes = require(251            ); // 251 = ViewPropTypes

var deprecatedPropType = require(243                 ); // 243 = deprecatedPropType
var keyMirror = require(239                 ); // 239 = fbjs/lib/keyMirror
var requireNativeComponent = require(260                     ); // 260 = requireNativeComponent
var resolveAssetSource = require(277                 ); // 277 = resolveAssetSource

var PropTypes = React.PropTypes;

var RCT_WEBVIEW_REF = 'webview';

var WebViewState = keyMirror({
  IDLE: null,
  LOADING: null,
  ERROR: null
});

var defaultRenderLoading = function defaultRenderLoading() {
  return React.createElement(
    View,
    { style: styles.loadingView, __source: {
        fileName: _jsxFileName,
        lineNumber: 39
      }
    },
    React.createElement(ActivityIndicator, {
      style: styles.loadingProgressBar,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 40
      }
    })
  );
};

var WebView = function (_React$Component) {
  babelHelpers.inherits(WebView, _React$Component);

  function WebView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, WebView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = WebView.__proto__ || Object.getPrototypeOf(WebView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      viewState: WebViewState.IDLE,
      lastErrorEvent: null,
      startInLoadingState: true
    }, _this.goForward = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goForward, null);
    }, _this.goBack = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goBack, null);
    }, _this.reload = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.reload, null);
    }, _this.stopLoading = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.stopLoading, null);
    }, _this.postMessage = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.postMessage, [String(data)]);
    }, _this.injectJavaScript = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.injectJavaScript, [data]);
    }, _this.updateNavigationState = function (event) {
      if (_this.props.onNavigationStateChange) {
        _this.props.onNavigationStateChange(event.nativeEvent);
      }
    }, _this.getWebViewHandle = function () {
      return ReactNative.findNodeHandle(_this.refs[RCT_WEBVIEW_REF]);
    }, _this.onLoadingStart = function (event) {
      var onLoadStart = _this.props.onLoadStart;
      onLoadStart && onLoadStart(event);
      _this.updateNavigationState(event);
    }, _this.onLoadingError = function (event) {
      event.persist();var _this$props = _this.props,
          onError = _this$props.onError,
          onLoadEnd = _this$props.onLoadEnd;

      onError && onError(event);
      onLoadEnd && onLoadEnd(event);
      console.warn('Encountered an error loading page', event.nativeEvent);

      _this.setState({
        lastErrorEvent: event.nativeEvent,
        viewState: WebViewState.ERROR
      });
    }, _this.onLoadingFinish = function (event) {
      var _this$props2 = _this.props,
          onLoad = _this$props2.onLoad,
          onLoadEnd = _this$props2.onLoadEnd;

      onLoad && onLoad(event);
      onLoadEnd && onLoadEnd(event);
      _this.setState({
        viewState: WebViewState.IDLE
      });
      _this.updateNavigationState(event);
    }, _this.onMessage = function (event) {
      var onMessage = _this.props.onMessage;

      onMessage && onMessage(event);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(WebView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.startInLoadingState) {
        this.setState({ viewState: WebViewState.LOADING });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var otherView = null;

      if (this.state.viewState === WebViewState.LOADING) {
        otherView = (this.props.renderLoading || defaultRenderLoading)();
      } else if (this.state.viewState === WebViewState.ERROR) {
        var errorEvent = this.state.lastErrorEvent;
        otherView = this.props.renderError && this.props.renderError(errorEvent.domain, errorEvent.code, errorEvent.description);
      } else if (this.state.viewState !== WebViewState.IDLE) {
        console.error('RCTWebView invalid state encountered: ' + this.state.loading);
      }

      var webViewStyles = [styles.container, this.props.style];
      if (this.state.viewState === WebViewState.LOADING || this.state.viewState === WebViewState.ERROR) {
        webViewStyles.push(styles.hidden);
      }

      var source = this.props.source || {};
      if (this.props.html) {
        source.html = this.props.html;
      } else if (this.props.url) {
        source.uri = this.props.url;
      }

      if (source.method === 'POST' && source.headers) {
        console.warn('WebView: `source.headers` is not supported when using POST.');
      } else if (source.method === 'GET' && source.body) {
        console.warn('WebView: `source.body` is not supported when using GET.');
      }

      var webView = React.createElement(RCTWebView, {
        ref: RCT_WEBVIEW_REF,
        key: 'webViewKey',
        style: webViewStyles,
        source: resolveAssetSource(source),
        scalesPageToFit: this.props.scalesPageToFit,
        injectedJavaScript: this.props.injectedJavaScript,
        userAgent: this.props.userAgent,
        javaScriptEnabled: this.props.javaScriptEnabled,
        domStorageEnabled: this.props.domStorageEnabled,
        messagingEnabled: typeof this.props.onMessage === 'function',
        onMessage: this.onMessage,
        contentInset: this.props.contentInset,
        automaticallyAdjustContentInsets: this.props.automaticallyAdjustContentInsets,
        onContentSizeChange: this.props.onContentSizeChange,
        onLoadingStart: this.onLoadingStart,
        onLoadingFinish: this.onLoadingFinish,
        onLoadingError: this.onLoadingError,
        testID: this.props.testID,
        mediaPlaybackRequiresUserAction: this.props.mediaPlaybackRequiresUserAction,
        allowUniversalAccessFromFileURLs: this.props.allowUniversalAccessFromFileURLs,
        mixedContentMode: this.props.mixedContentMode,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 242
        }
      });

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 267
          }
        },
        webView,
        otherView
      );
    }
  }]);
  return WebView;
}(React.Component);

WebView.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  renderError: PropTypes.func,
  renderLoading: PropTypes.func,
  onLoad: PropTypes.func,
  onLoadEnd: PropTypes.func,
  onLoadStart: PropTypes.func,
  onError: PropTypes.func,
  automaticallyAdjustContentInsets: PropTypes.bool,
  contentInset: EdgeInsetsPropType,
  onNavigationStateChange: PropTypes.func,
  onMessage: PropTypes.func,
  onContentSizeChange: PropTypes.func,
  startInLoadingState: PropTypes.bool,
  style: ViewPropTypes.style,

  html: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  url: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  source: PropTypes.oneOfType([PropTypes.shape({
    uri: PropTypes.string,

    method: PropTypes.oneOf(['GET', 'POST']),

    headers: PropTypes.object,

    body: PropTypes.string
  }), PropTypes.shape({
    html: PropTypes.string,

    baseUrl: PropTypes.string
  }), PropTypes.number]),

  javaScriptEnabled: PropTypes.bool,

  domStorageEnabled: PropTypes.bool,

  injectedJavaScript: PropTypes.string,

  scalesPageToFit: PropTypes.bool,

  userAgent: PropTypes.string,

  testID: PropTypes.string,

  mediaPlaybackRequiresUserAction: PropTypes.bool,

  allowUniversalAccessFromFileURLs: PropTypes.bool,

  injectJavaScript: PropTypes.func,

  mixedContentMode: PropTypes.oneOf(['never', 'always', 'compatibility'])
});
WebView.defaultProps = {
  javaScriptEnabled: true,
  scalesPageToFit: true
};


var RCTWebView = requireNativeComponent('RCTWebView', WebView, {
  nativeOnly: {
    messagingEnabled: PropTypes.bool
  }
});

var styles = StyleSheet.create({
  container: {
    flex: 1
  },
  hidden: {
    height: 0,
    flex: 0 },
  loadingView: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  loadingProgressBar: {
    height: 20
  }
});

module.exports = WebView;
}, 391, null, "WebView");
__d(/* ActionSheetIOS */function(global, require, module, exports) {
'use strict';

var RCTActionSheetManager = require(48             ).ActionSheetManager; // 48 = NativeModules

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var processColor = require(246           ); // 246 = processColor

var ActionSheetIOS = {
  showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof callback === 'function', 'Must provide a valid callback');
    RCTActionSheetManager.showActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), callback);
  },
  showShareActionSheetWithOptions: function showShareActionSheetWithOptions(options, failureCallback, successCallback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof failureCallback === 'function', 'Must provide a valid failureCallback');
    invariant(typeof successCallback === 'function', 'Must provide a valid successCallback');
    RCTActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), failureCallback, successCallback);
  }
};

module.exports = ActionSheetIOS;
}, 392, null, "ActionSheetIOS");
__d(/* AdSupportIOS */function(global, require, module, exports) {
'use strict';

var AdSupport = require(48             ).AdSupport; // 48 = NativeModules

module.exports = {
  getAdvertisingId: function getAdvertisingId(onSuccess, onFailure) {
    AdSupport.getAdvertisingId(onSuccess, onFailure);
  },

  getAdvertisingTrackingEnabled: function getAdvertisingTrackingEnabled(onSuccess, onFailure) {
    AdSupport.getAdvertisingTrackingEnabled(onSuccess, onFailure);
  }
};
}, 393, null, "AdSupportIOS");
__d(/* AppRegistry */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(49             ); // 49 = BatchedBridge
var BugReporting = require(395           ); // 395 = BugReporting
var FrameRateLogger = require(318              ); // 318 = FrameRateLogger
var NativeModules = require(48             ); // 48 = NativeModules
var ReactNative = require(85           ); // 85 = ReactNative

var infoLog = require(305      ); // 305 = infoLog
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var renderApplication = require(397                ); // 397 = renderApplication

if (__DEV__) {
  require(399               ); // 399 = RCTRenderingPerf
}

var runnables = {};
var runCount = 1;
var sections = {};
var tasks = new Map();
var componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {
  return component();
};

var AppRegistry = {
  registerConfig: function registerConfig(config) {
    config.forEach(function (appConfig) {
      if (appConfig.run) {
        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);
      } else {
        invariant(appConfig.component != null, 'AppRegistry.registerConfig(...): Every config is expected to set ' + 'either `run` or `component`, but `%s` has neither.', appConfig.appKey);
        AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);
      }
    });
  },
  registerComponent: function registerComponent(appKey, component, section) {
    runnables[appKey] = {
      component: component,
      run: function run(appParameters) {
        return renderApplication(componentProviderInstrumentationHook(component), appParameters.initialProps, appParameters.rootTag);
      }
    };
    if (section) {
      sections[appKey] = runnables[appKey];
    }
    return appKey;
  },
  registerRunnable: function registerRunnable(appKey, run) {
    runnables[appKey] = { run: run };
    return appKey;
  },
  registerSection: function registerSection(appKey, component) {
    AppRegistry.registerComponent(appKey, component, true);
  },
  getAppKeys: function getAppKeys() {
    return Object.keys(runnables);
  },
  getSectionKeys: function getSectionKeys() {
    return Object.keys(sections);
  },
  getSections: function getSections() {
    return babelHelpers.extends({}, sections);
  },
  getRunnable: function getRunnable(appKey) {
    return runnables[appKey];
  },
  getRegistry: function getRegistry() {
    return {
      sections: AppRegistry.getSectionKeys(),
      runnables: babelHelpers.extends({}, runnables)
    };
  },
  setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {
    componentProviderInstrumentationHook = hook;
  },
  runApplication: function runApplication(appKey, appParameters) {
    var msg = 'Running application "' + appKey + '" with appParams: ' + JSON.stringify(appParameters) + '. ' + '__DEV__ === ' + String(__DEV__) + ', development-level warning are ' + (__DEV__ ? 'ON' : 'OFF') + ', performance optimizations are ' + (__DEV__ ? 'OFF' : 'ON');
    infoLog(msg);
    BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {
      return msg;
    });
    invariant(runnables[appKey] && runnables[appKey].run, 'Application ' + appKey + ' has not been registered.\n\n' + 'Hint: This error often happens when you\'re running the packager ' + '(local dev server) from a wrong folder. For example you have ' + 'multiple apps and the packager is still running for the app you ' + 'were working on before.\nIf this is the case, simply kill the old ' + 'packager instance (e.g. close the packager terminal window) ' + 'and start the packager in the correct app folder (e.g. cd into app ' + 'folder and run \'npm start\').\n\n' + 'This error can also happen due to a require() error during ' + 'initialization or failure to call AppRegistry.registerComponent.\n\n');
    FrameRateLogger.setContext(appKey);
    runnables[appKey].run(appParameters);
  },
  unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {
    ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);
  },
  registerHeadlessTask: function registerHeadlessTask(taskKey, task) {
    if (tasks.has(taskKey)) {
      console.warn('registerHeadlessTask called multiple times for same key \'' + taskKey + '\'');
    }
    tasks.set(taskKey, task);
  },
  startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {
    var taskProvider = tasks.get(taskKey);
    if (!taskProvider) {
      throw new Error('No task registered for key ' + taskKey);
    }
    taskProvider()(data).then(function () {
      return NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    }).catch(function (reason) {
      console.error(reason);
      NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    });
  }
};

BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);

module.exports = AppRegistry;
}, 394, null, "AppRegistry");
__d(/* BugReporting */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(68                     ); // 68 = RCTDeviceEventEmitter
var Map = require(170  ); // 170 = Map
var infoLog = require(305      ); // 305 = infoLog

function defaultExtras() {
  BugReporting.addFileSource('react_hierarchy.txt', function () {
    return require(396            )(); // 396 = dumpReactTree
  });
}

var BugReporting = function () {
  function BugReporting() {
    babelHelpers.classCallCheck(this, BugReporting);
  }

  babelHelpers.createClass(BugReporting, null, [{
    key: '_maybeInit',
    value: function _maybeInit() {
      if (!BugReporting._subscription) {
        BugReporting._subscription = RCTDeviceEventEmitter.addListener('collectBugExtraData', BugReporting.collectExtraData, null);
        defaultExtras();
      }
    }
  }, {
    key: 'addSource',
    value: function addSource(key, callback) {
      return this._addSource(key, callback, BugReporting._extraSources);
    }
  }, {
    key: 'addFileSource',
    value: function addFileSource(key, callback) {
      return this._addSource(key, callback, BugReporting._fileSources);
    }
  }, {
    key: '_addSource',
    value: function _addSource(key, callback, source) {
      BugReporting._maybeInit();
      if (source.has(key)) {
        console.warn('BugReporting.add* called multiple times for same key \'' + key + '\'');
      }
      source.set(key, callback);
      return { remove: function remove() {
          source.delete(key);
        } };
    }
  }, {
    key: 'collectExtraData',
    value: function collectExtraData() {
      var extraData = {};
      for (var _iterator = BugReporting._extraSources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var _key = _ref2[0];
        var callback = _ref2[1];

        extraData[_key] = callback();
      }
      var fileData = {};
      for (var _iterator2 = BugReporting._fileSources, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref6;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref6 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref6 = _i2.value;
        }

        var _ref4 = _ref6;

        var _ref5 = babelHelpers.slicedToArray(_ref4, 2);

        var _key2 = _ref5[0];
        var _callback = _ref5[1];

        fileData[_key2] = _callback();
      }
      infoLog('BugReporting extraData:', extraData);
      var BugReportingNativeModule = require(48             ).BugReporting; // 48 = NativeModules
      BugReportingNativeModule && BugReportingNativeModule.setExtraData && BugReportingNativeModule.setExtraData(extraData, fileData);

      return { extras: extraData, files: fileData };
    }
  }]);
  return BugReporting;
}();

BugReporting._extraSources = new Map();
BugReporting._fileSources = new Map();
BugReporting._subscription = null;


module.exports = BugReporting;
}, 395, null, "BugReporting");
__d(/* dumpReactTree */function(global, require, module, exports) {
'use strict';

function dumpReactTree() {
  try {
    return getReactTree();
  } catch (e) {
    return 'Failed to dump react tree: ' + e;
  }
}

function getReactTree() {
  return 'React tree dumps have been temporarily disabled while React is ' + 'upgraded to Fiber.';
}

module.exports = dumpReactTree;
}, 396, null, "dumpReactTree");
__d(/* renderApplication */function(global, require, module, exports) {

'use strict';

var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native\\Libraries\\ReactNative\\renderApplication.js';
var AppContainer = require(342           ); // 342 = AppContainer
var React = require(235    ); // 235 = React
var ReactNative = require(85           ); // 85 = ReactNative

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

require(398          ); // 398 = BackHandler

function renderApplication(RootComponent, initialProps, rootTag) {
  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
  ReactNative.render(React.createElement(
    AppContainer,
    { rootTag: rootTag, __source: {
        fileName: _jsxFileName,
        lineNumber: 34
      }
    },
    React.createElement(RootComponent, babelHelpers.extends({}, initialProps, {
      rootTag: rootTag,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 35
      }
    }))
  ), rootTag);
}

module.exports = renderApplication;
}, 397, null, "renderApplication");
__d(/* BackHandler */function(global, require, module, exports) {

'use strict';

var DeviceEventManager = require(48             ).DeviceEventManager; // 48 = NativeModules
var RCTDeviceEventEmitter = require(68                     ); // 68 = RCTDeviceEventEmitter

var DEVICE_BACK_EVENT = 'hardwareBackPress';

var _backPressSubscriptions = new Set();

RCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {
  var backPressSubscriptions = new Set(_backPressSubscriptions);
  var invokeDefault = true;
  var subscriptions = [].concat(babelHelpers.toConsumableArray(backPressSubscriptions)).reverse();
  for (var i = 0; i < subscriptions.length; ++i) {
    if (subscriptions[i]()) {
      invokeDefault = false;
      break;
    }
  }

  if (invokeDefault) {
    BackHandler.exitApp();
  }
});

var BackHandler = {

  exitApp: function exitApp() {
    DeviceEventManager.invokeDefaultBackPressHandler();
  },

  addEventListener: function addEventListener(eventName, handler) {
    _backPressSubscriptions.add(handler);
    return {
      remove: function remove() {
        return BackHandler.removeEventListener(eventName, handler);
      }
    };
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    _backPressSubscriptions.delete(handler);
  }

};

module.exports = BackHandler;
}, 398, null, "BackHandler");
__d(/* RCTRenderingPerf */function(global, require, module, exports) {
'use strict';

var ReactDebugTool = require(54              ); // 54 = ReactDebugTool
var ReactPerf = require(400        ); // 400 = ReactPerf

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var performanceNow = require(58                       ); // 58 = fbjs/lib/performanceNow

var perfModules = [];
var enabled = false;
var lastRenderStartTime = 0;
var totalRenderDuration = 0;

var RCTRenderingPerfDevtool = {
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    if (timerType === 'render') {
      lastRenderStartTime = performanceNow();
    }
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    if (timerType === 'render') {
      var lastRenderDuration = performanceNow() - lastRenderStartTime;
      totalRenderDuration += lastRenderDuration;
    }
  }
};

var RCTRenderingPerf = {
  toggle: function toggle() {
    console.log('Render perfomance measurements enabled');
    enabled = true;
  },

  start: function start() {
    if (!enabled) {
      return;
    }

    ReactPerf.start();
    ReactDebugTool.addHook(RCTRenderingPerfDevtool);
    perfModules.forEach(function (module) {
      return module.start();
    });
  },

  stop: function stop() {
    if (!enabled) {
      return;
    }

    ReactPerf.stop();
    ReactPerf.printInclusive();
    ReactPerf.printWasted();
    ReactDebugTool.removeHook(RCTRenderingPerfDevtool);

    console.log('Total time spent in render(): ' + totalRenderDuration.toFixed(2) + ' ms');
    lastRenderStartTime = 0;
    totalRenderDuration = 0;

    perfModules.forEach(function (module) {
      return module.stop();
    });
  },

  register: function register(module) {
    invariant(typeof module.start === 'function', 'Perf module should have start() function');
    invariant(typeof module.stop === 'function', 'Perf module should have stop() function');
    perfModules.push(module);
  }
};

module.exports = RCTRenderingPerf;
}, 399, null, "RCTRenderingPerf");
__d(/* ReactPerf */function(global, require, module, exports) {

'use strict';

var ReactDebugTool = require(54              ); // 54 = ReactDebugTool
var warning = require(19                ); // 19 = fbjs/lib/warning
var alreadyWarned = false;

function roundFloat(val) {
  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;

  var n = Math.pow(10, base);
  return Math.floor(val * n) / n;
}

function consoleTable(table) {
  console.table(table);
}

function warnInProduction() {
  if (alreadyWarned) {
    return;
  }
  alreadyWarned = true;
  if (typeof console !== 'undefined') {
    console.error('ReactPerf is not supported in the production builds of React. ' + 'To collect measurements, please use the development build of React instead.');
  }
}

function getLastMeasurements() {
  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  return ReactDebugTool.getFlushHistory();
}

function getExclusive() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
    var displayName = treeSnapshot[instanceID].displayName;

    var key = displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        counts: {},
        durations: {},
        totalDuration: 0
      };
    }
    if (!stats.durations[timerType]) {
      stats.durations[timerType] = 0;
    }
    if (!stats.counts[timerType]) {
      stats.counts[timerType] = 0;
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot;

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      updateAggregatedStats(treeSnapshot, instanceID, timerType, function (stats) {
        stats.totalDuration += duration;
        stats.durations[timerType] += duration;
        stats.counts[timerType]++;
      });
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return babelHelpers.extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.totalDuration - a.totalDuration;
  });
}

function getInclusive() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
    var _treeSnapshot$instanc = treeSnapshot[instanceID],
        displayName = _treeSnapshot$instanc.displayName,
        ownerID = _treeSnapshot$instanc.ownerID;

    var owner = treeSnapshot[ownerID];
    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        inclusiveRenderDuration: 0,
        renderCount: 0
      };
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  var isCompositeByID = {};
  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements;

    measurements.forEach(function (measurement) {
      var instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      isCompositeByID[instanceID] = true;
    });
  });

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot;

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
        stats.renderCount++;
      });
      var nextParentID = instanceID;
      while (nextParentID) {
        if (isCompositeByID[nextParentID]) {
          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
            stats.inclusiveRenderDuration += duration;
          });
        }
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return babelHelpers.extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
  });
}

function getWasted() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
    var _treeSnapshot$instanc2 = treeSnapshot[instanceID],
        displayName = _treeSnapshot$instanc2.displayName,
        ownerID = _treeSnapshot$instanc2.ownerID;

    var owner = treeSnapshot[ownerID];
    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        inclusiveRenderDuration: 0,
        renderCount: 0
      };
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot,
        operations = flush.operations;

    var isDefinitelyNotWastedByID = {};

    operations.forEach(function (operation) {
      var instanceID = operation.instanceID;

      var nextParentID = instanceID;
      while (nextParentID) {
        isDefinitelyNotWastedByID[nextParentID] = true;
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });

    var renderedCompositeIDs = {};
    measurements.forEach(function (measurement) {
      var instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      renderedCompositeIDs[instanceID] = true;
    });

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }

      var updateCount = treeSnapshot[instanceID].updateCount;

      if (isDefinitelyNotWastedByID[instanceID] || updateCount === 0) {
        return;
      }

      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
        stats.renderCount++;
      });

      var nextParentID = instanceID;
      while (nextParentID) {
        var isWasted = renderedCompositeIDs[nextParentID] && !isDefinitelyNotWastedByID[nextParentID];
        if (isWasted) {
          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
            stats.inclusiveRenderDuration += duration;
          });
        }
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return babelHelpers.extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
  });
}

function getOperations() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var stats = [];
  flushHistory.forEach(function (flush, flushIndex) {
    var operations = flush.operations,
        treeSnapshot = flush.treeSnapshot;

    operations.forEach(function (operation) {
      var instanceID = operation.instanceID,
          type = operation.type,
          payload = operation.payload;
      var _treeSnapshot$instanc3 = treeSnapshot[instanceID],
          displayName = _treeSnapshot$instanc3.displayName,
          ownerID = _treeSnapshot$instanc3.ownerID;

      var owner = treeSnapshot[ownerID];
      var key = (owner ? owner.displayName + ' > ' : '') + displayName;

      stats.push({
        flushIndex: flushIndex,
        instanceID: instanceID,
        key: key,
        type: type,
        ownerID: ownerID,
        payload: payload
      });
    });
  });
  return stats;
}

function printExclusive(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getExclusive(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        totalDuration = item.totalDuration;

    var renderCount = item.counts.render || 0;
    var renderDuration = item.durations.render || 0;
    return {
      Component: key,
      'Total time (ms)': roundFloat(totalDuration),
      'Instance count': instanceCount,
      'Total render time (ms)': roundFloat(renderDuration),
      'Average render time (ms)': renderCount ? roundFloat(renderDuration / renderCount) : undefined,
      'Render count': renderCount,
      'Total lifecycle time (ms)': roundFloat(totalDuration - renderDuration)
    };
  });
  consoleTable(table);
}

function printInclusive(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getInclusive(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        inclusiveRenderDuration = item.inclusiveRenderDuration,
        renderCount = item.renderCount;

    return {
      'Owner > Component': key,
      'Inclusive render time (ms)': roundFloat(inclusiveRenderDuration),
      'Instance count': instanceCount,
      'Render count': renderCount
    };
  });
  consoleTable(table);
}

function printWasted(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getWasted(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        inclusiveRenderDuration = item.inclusiveRenderDuration,
        renderCount = item.renderCount;

    return {
      'Owner > Component': key,
      'Inclusive wasted time (ms)': roundFloat(inclusiveRenderDuration),
      'Instance count': instanceCount,
      'Render count': renderCount
    };
  });
  consoleTable(table);
}

function printOperations(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getOperations(flushHistory);
  var table = stats.map(function (stat) {
    return {
      'Owner > Node': stat.key,
      Operation: stat.type,
      Payload: typeof stat.payload === 'object' ? JSON.stringify(stat.payload) : stat.payload,
      'Flush index': stat.flushIndex,
      'Owner Component ID': stat.ownerID,
      'DOM Component ID': stat.instanceID
    };
  });
  consoleTable(table);
}

var warnedAboutPrintDOM = false;
function printDOM(measurements) {
  warning(warnedAboutPrintDOM, '`ReactPerf.printDOM(...)` is deprecated. Use ' + '`ReactPerf.printOperations(...)` instead.');
  warnedAboutPrintDOM = true;
  return printOperations(measurements);
}

var warnedAboutGetMeasurementsSummaryMap = false;
function getMeasurementsSummaryMap(measurements) {
  warning(warnedAboutGetMeasurementsSummaryMap, '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' + '`ReactPerf.getWasted(...)` instead.');
  warnedAboutGetMeasurementsSummaryMap = true;
  return getWasted(measurements);
}

function start() {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  ReactDebugTool.beginProfiling();
}

function stop() {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  ReactDebugTool.endProfiling();
}

function isRunning() {
  if (!__DEV__) {
    warnInProduction();
    return false;
  }

  return ReactDebugTool.isProfiling();
}

var ReactPerfAnalysis = {
  getLastMeasurements: getLastMeasurements,
  getExclusive: getExclusive,
  getInclusive: getInclusive,
  getWasted: getWasted,
  getOperations: getOperations,
  printExclusive: printExclusive,
  printInclusive: printInclusive,
  printWasted: printWasted,
  printOperations: printOperations,
  start: start,
  stop: stop,
  isRunning: isRunning,

  printDOM: printDOM,
  getMeasurementsSummaryMap: getMeasurementsSummaryMap
};

module.exports = ReactPerfAnalysis;
}, 400, null, "ReactPerf");
__d(/* AsyncStorage */function(global, require, module, exports) {
'use strict';

var NativeModules = require(48             ); // 48 = NativeModules

var RCTAsyncStorage = NativeModules.AsyncRocksDBStorage || NativeModules.AsyncSQLiteDBStorage || NativeModules.AsyncLocalStorage;

var AsyncStorage = {
  _getRequests: [],
  _getKeys: [],
  _immediate: null,

  getItem: function getItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiGet([key], function (errors, result) {
        var value = result && result[0] && result[0][1] ? result[0][1] : null;
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0], value);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(value);
        }
      });
    });
  },

  setItem: function setItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  removeItem: function removeItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove([key], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  mergeItem: function mergeItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  clear: function clear(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.clear(function (error) {
        callback && callback(convertError(error));
        if (error && convertError(error)) {
          reject(convertError(error));
        } else {
          resolve(null);
        }
      });
    });
  },

  getAllKeys: function getAllKeys(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.getAllKeys(function (error, keys) {
        callback && callback(convertError(error), keys);
        if (error) {
          reject(convertError(error));
        } else {
          resolve(keys);
        }
      });
    });
  },

  flushGetRequests: function flushGetRequests() {
    var getRequests = this._getRequests;
    var getKeys = this._getKeys;

    this._getRequests = [];
    this._getKeys = [];

    RCTAsyncStorage.multiGet(getKeys, function (errors, result) {
      var map = {};
      result && result.forEach(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        map[key] = value;return value;
      });
      var reqLength = getRequests.length;
      for (var i = 0; i < reqLength; i++) {
        var request = getRequests[i];
        var requestKeys = request.keys;
        var requestResult = requestKeys.map(function (key) {
          return [key, map[key]];
        });
        request.callback && request.callback(null, requestResult);
        request.resolve && request.resolve(requestResult);
      }
    });
  },

  multiGet: function multiGet(keys, callback) {
    var _this = this;

    if (!this._immediate) {
      this._immediate = setImmediate(function () {
        _this._immediate = null;
        _this.flushGetRequests();
      });
    }

    var getRequest = {
      keys: keys,
      callback: callback,

      keyIndex: this._getKeys.length,
      resolve: null,
      reject: null
    };

    var promiseResult = new Promise(function (resolve, reject) {
      getRequest.resolve = resolve;
      getRequest.reject = reject;
    });

    this._getRequests.push(getRequest);

    keys.forEach(function (key) {
      if (_this._getKeys.indexOf(key) === -1) {
        _this._getKeys.push(key);
      }
    });

    return promiseResult;
  },

  multiSet: function multiSet(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiRemove: function multiRemove(keys, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove(keys, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiMerge: function multiMerge(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  }
};

if (!RCTAsyncStorage.multiMerge) {
  delete AsyncStorage.mergeItem;
  delete AsyncStorage.multiMerge;
}

function convertErrors(errs) {
  if (!errs) {
    return null;
  }
  return (Array.isArray(errs) ? errs : [errs]).map(function (e) {
    return convertError(e);
  });
}

function convertError(error) {
  if (!error) {
    return null;
  }
  var out = new Error(error.message);
  out.key = error.key;
  return out;
}

module.exports = AsyncStorage;
}, 401, null, "AsyncStorage");
__d(/* BackAndroid */function(global, require, module, exports) {

'use strict';

var BackHandler = require(398          ); // 398 = BackHandler

var warning = require(19                ); // 19 = fbjs/lib/warning

var BackAndroid = {

  exitApp: function exitApp() {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.exitApp();
  },

  addEventListener: function addEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    return BackHandler.addEventListener(eventName, handler);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.removeEventListener(eventName, handler);
  }

};

module.exports = BackAndroid;
}, 402, null, "BackAndroid");
__d(/* CameraRoll */function(global, require, module, exports) {
'use strict';

var _require = require(235    ), // 235 = React
    PropTypes = _require.PropTypes,
    checkPropTypes = _require.checkPropTypes;

var RCTCameraRollManager = require(48             ).CameraRollManager; // 48 = NativeModules

var createStrictShapeTypeChecker = require(253                           ); // 253 = createStrictShapeTypeChecker
var deepFreezeAndThrowOnMutationInDev = require(65                                 ); // 65 = deepFreezeAndThrowOnMutationInDev
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var GROUP_TYPES_OPTIONS = ['Album', 'All', 'Event', 'Faces', 'Library', 'PhotoStream', 'SavedPhotos'];

var ASSET_TYPE_OPTIONS = ['All', 'Videos', 'Photos'];

deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);

var getPhotosParamChecker = createStrictShapeTypeChecker({
  first: PropTypes.number.isRequired,

  after: PropTypes.string,

  groupTypes: PropTypes.oneOf(GROUP_TYPES_OPTIONS),

  groupName: PropTypes.string,

  assetType: PropTypes.oneOf(ASSET_TYPE_OPTIONS),

  mimeTypes: PropTypes.arrayOf(PropTypes.string)
});

var getPhotosReturnChecker = createStrictShapeTypeChecker({
  edges: PropTypes.arrayOf(createStrictShapeTypeChecker({
    node: createStrictShapeTypeChecker({
      type: PropTypes.string.isRequired,
      group_name: PropTypes.string.isRequired,
      image: createStrictShapeTypeChecker({
        uri: PropTypes.string.isRequired,
        height: PropTypes.number.isRequired,
        width: PropTypes.number.isRequired,
        isStored: PropTypes.bool
      }).isRequired,
      timestamp: PropTypes.number.isRequired,
      location: createStrictShapeTypeChecker({
        latitude: PropTypes.number,
        longitude: PropTypes.number,
        altitude: PropTypes.number,
        heading: PropTypes.number,
        speed: PropTypes.number
      })
    }).isRequired
  })).isRequired,
  page_info: createStrictShapeTypeChecker({
    has_next_page: PropTypes.bool.isRequired,
    start_cursor: PropTypes.string,
    end_cursor: PropTypes.string
  }).isRequired
});

var CameraRoll = function () {
  function CameraRoll() {
    babelHelpers.classCallCheck(this, CameraRoll);
  }

  babelHelpers.createClass(CameraRoll, null, [{
    key: 'saveImageWithTag',
    value: function saveImageWithTag(tag) {
      console.warn('CameraRoll.saveImageWithTag is deprecated. Use CameraRoll.saveToCameraRoll instead');
      return this.saveToCameraRoll(tag, 'photo');
    }
  }, {
    key: 'saveToCameraRoll',
    value: function saveToCameraRoll(tag, type) {
      invariant(typeof tag === 'string', 'CameraRoll.saveToCameraRoll must be a valid string.');

      invariant(type === 'photo' || type === 'video' || type === undefined, 'The second argument to saveToCameraRoll must be \'photo\' or \'video\'. You passed ' + type);

      var mediaType = 'photo';
      if (type) {
        mediaType = type;
      } else if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {
        mediaType = 'video';
      }

      return RCTCameraRollManager.saveToCameraRoll(tag, mediaType);
    }
  }, {
    key: 'getPhotos',
    value: function getPhotos(params) {
      if (__DEV__) {
        checkPropTypes({ params: getPhotosParamChecker }, { params: params }, 'params', 'CameraRoll.getPhotos');
      }
      if (arguments.length > 1) {
        console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');
        var successCallback = arguments[1];
        if (__DEV__) {
          var callback = arguments[1];
          successCallback = function successCallback(response) {
            checkPropTypes({ response: getPhotosReturnChecker }, { response: response }, 'response', 'CameraRoll.getPhotos callback');
            callback(response);
          };
        }
        var errorCallback = arguments[2] || function () {};
        RCTCameraRollManager.getPhotos(params).then(successCallback, errorCallback);
      }

      return RCTCameraRollManager.getPhotos(params);
    }
  }]);
  return CameraRoll;
}();

CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;
}, 403, null, "CameraRoll");
__d(/* Clipboard */function(global, require, module, exports) {
'use strict';

var Clipboard = require(48             ).Clipboard; // 48 = NativeModules

module.exports = {
  getString: function getString() {
    return Clipboard.getString();
  },
  setString: function setString(content) {
    Clipboard.setString(content);
  }
};
}, 404, null, "Clipboard");
__d(/* DatePickerAndroid */function(global, require, module, exports) {
'use strict';

var DatePickerModule = require(48             ).DatePickerAndroid; // 48 = NativeModules

function _toMillis(options, key) {
  var dateVal = options[key];

  if (typeof dateVal === 'object' && typeof dateVal.getMonth === 'function') {
    options[key] = dateVal.getTime();
  }
}

var DatePickerAndroid = function () {
  function DatePickerAndroid() {
    babelHelpers.classCallCheck(this, DatePickerAndroid);
  }

  babelHelpers.createClass(DatePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      var optionsMs;
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              optionsMs = options;

              if (optionsMs) {
                _toMillis(options, 'date');
                _toMillis(options, 'minDate');
                _toMillis(options, 'maxDate');
              }
              return _context.abrupt('return', DatePickerModule.open(options));

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'dateSetAction',
    get: function get() {
      return 'dateSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return DatePickerAndroid;
}();

module.exports = DatePickerAndroid;
}, 405, null, "DatePickerAndroid");
__d(/* ImagePickerIOS */function(global, require, module, exports) {
'use strict';

var RCTImagePicker = require(48             ).ImagePickerIOS; // 48 = NativeModules

var ImagePickerIOS = {
  canRecordVideos: function canRecordVideos(callback) {
    return RCTImagePicker.canRecordVideos(callback);
  },
  canUseCamera: function canUseCamera(callback) {
    return RCTImagePicker.canUseCamera(callback);
  },
  openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      videoMode: false
    }, config);
    return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);
  },
  openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      showImages: true,
      showVideos: false
    }, config);
    return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);
  }
};

module.exports = ImagePickerIOS;
}, 406, null, "ImagePickerIOS");
__d(/* Linking */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var NativeModules = require(48             ); // 48 = NativeModules
var Platform = require(61        ); // 61 = Platform

var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var LinkingManager = Platform.OS === 'android' ? NativeModules.IntentAndroid : NativeModules.LinkingManager;

var Linking = function (_NativeEventEmitter) {
  babelHelpers.inherits(Linking, _NativeEventEmitter);

  function Linking() {
    babelHelpers.classCallCheck(this, Linking);
    return babelHelpers.possibleConstructorReturn(this, (Linking.__proto__ || Object.getPrototypeOf(Linking)).call(this, LinkingManager));
  }

  babelHelpers.createClass(Linking, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      this.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      this.removeListener(type, handler);
    }
  }, {
    key: 'openURL',
    value: function openURL(url) {
      this._validateURL(url);
      return LinkingManager.openURL(url);
    }
  }, {
    key: 'canOpenURL',
    value: function canOpenURL(url) {
      this._validateURL(url);
      return LinkingManager.canOpenURL(url);
    }
  }, {
    key: 'getInitialURL',
    value: function getInitialURL() {
      return LinkingManager.getInitialURL();
    }
  }, {
    key: '_validateURL',
    value: function _validateURL(url) {
      invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);
      invariant(url, 'Invalid URL: cannot be empty');
    }
  }]);
  return Linking;
}(NativeEventEmitter);

module.exports = new Linking();
}, 407, null, "Linking");
__d(/* NetInfo */function(global, require, module, exports) {
'use strict';

var Map = require(170  ); // 170 = Map
var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var NativeModules = require(48             ); // 48 = NativeModules
var Platform = require(61        ); // 61 = Platform
var RCTNetInfo = NativeModules.NetInfo;

var NetInfoEventEmitter = new NativeEventEmitter(RCTNetInfo);

var DEVICE_CONNECTIVITY_EVENT = 'networkStatusDidChange';

var _subscriptions = new Map();

var _isConnected = void 0;
if (Platform.OS === 'ios') {
  _isConnected = function _isConnected(reachability) {
    return reachability !== 'none' && reachability !== 'unknown';
  };
} else if (Platform.OS === 'android') {
  _isConnected = function _isConnected(connectionType) {
    return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';
  };
}

var _isConnectedSubscriptions = new Map();

var NetInfo = {
  addEventListener: function addEventListener(eventName, handler) {
    var listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
      handler(appStateData.network_info);
    });
    _subscriptions.set(handler, listener);
    return {
      remove: function remove() {
        return NetInfo.removeEventListener(eventName, handler);
      }
    };
  },
  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  },
  fetch: function fetch() {
    return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
      return resp.network_info;
    });
  },

  isConnected: {
    addEventListener: function addEventListener(eventName, handler) {
      var listener = function listener(connection) {
        handler(_isConnected(connection));
      };
      _isConnectedSubscriptions.set(handler, listener);
      NetInfo.addEventListener(eventName, listener);
      return {
        remove: function remove() {
          return NetInfo.isConnected.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      var listener = _isConnectedSubscriptions.get(handler);
      NetInfo.removeEventListener(eventName, listener);
      _isConnectedSubscriptions.delete(handler);
    },
    fetch: function fetch() {
      return NetInfo.fetch().then(function (connection) {
        return _isConnected(connection);
      });
    }
  },

  isConnectionExpensive: function isConnectionExpensive() {
    return Platform.OS === 'android' ? RCTNetInfo.isConnectionMetered() : Promise.reject(new Error('Currently not supported on iOS'));
  }
};

module.exports = NetInfo;
}, 408, null, "NetInfo");
__d(/* PermissionsAndroid */function(global, require, module, exports) {
'use strict';

var NativeModules = require(48             ); // 48 = NativeModules

var PermissionsAndroid = function () {
  function PermissionsAndroid() {
    babelHelpers.classCallCheck(this, PermissionsAndroid);

    this.PERMISSIONS = {
      READ_CALENDAR: 'android.permission.READ_CALENDAR',
      WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
      CAMERA: 'android.permission.CAMERA',
      READ_CONTACTS: 'android.permission.READ_CONTACTS',
      WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
      GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
      ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
      ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
      RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
      READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
      CALL_PHONE: 'android.permission.CALL_PHONE',
      READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
      WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
      ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
      USE_SIP: 'android.permission.USE_SIP',
      PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
      BODY_SENSORS: 'android.permission.BODY_SENSORS',
      SEND_SMS: 'android.permission.SEND_SMS',
      RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
      READ_SMS: 'android.permission.READ_SMS',
      RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
      RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
      READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
      WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE'
    };

    this.RESULTS = {
      GRANTED: 'granted',
      DENIED: 'denied',
      NEVER_ASK_AGAIN: 'never_ask_again'
    };
  }

  babelHelpers.createClass(PermissionsAndroid, [{
    key: 'checkPermission',
    value: function checkPermission(permission) {
      console.warn('"PermissionsAndroid.checkPermission" is deprecated. Use "PermissionsAndroid.check" instead');
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'check',
    value: function check(permission) {
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'requestPermission',
    value: function requestPermission(permission, rationale) {
      var response;
      return regeneratorRuntime.async(function requestPermission$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.warn('"PermissionsAndroid.requestPermission" is deprecated. Use "PermissionsAndroid.request" instead');
              _context.next = 3;
              return regeneratorRuntime.awrap(this.request(permission, rationale));

            case 3:
              response = _context.sent;
              return _context.abrupt('return', response === this.RESULTS.GRANTED);

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'request',
    value: function request(permission, rationale) {
      var shouldShowRationale;
      return regeneratorRuntime.async(function request$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!rationale) {
                _context2.next = 6;
                break;
              }

              _context2.next = 3;
              return regeneratorRuntime.awrap(NativeModules.PermissionsAndroid.shouldShowRequestPermissionRationale(permission));

            case 3:
              shouldShowRationale = _context2.sent;

              if (!shouldShowRationale) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt('return', new Promise(function (resolve, reject) {
                NativeModules.DialogManagerAndroid.showAlert(rationale, function () {
                  return reject(new Error('Error showing rationale'));
                }, function () {
                  return resolve(NativeModules.PermissionsAndroid.requestPermission(permission));
                });
              }));

            case 6:
              return _context2.abrupt('return', NativeModules.PermissionsAndroid.requestPermission(permission));

            case 7:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'requestMultiple',
    value: function requestMultiple(permissions) {
      return NativeModules.PermissionsAndroid.requestMultiplePermissions(permissions);
    }
  }]);
  return PermissionsAndroid;
}();

PermissionsAndroid = new PermissionsAndroid();

module.exports = PermissionsAndroid;
}, 409, null, "PermissionsAndroid");
__d(/* PushNotificationIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(74                  ); // 74 = NativeEventEmitter
var RCTPushNotificationManager = require(48             ).PushNotificationManager; // 48 = NativeModules
var invariant = require(23                  ); // 23 = fbjs/lib/invariant

var PushNotificationEmitter = new NativeEventEmitter(RCTPushNotificationManager);

var _notifHandlers = new Map();

var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';
var NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';
var NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';
var DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';

var PushNotificationIOS = function () {
  babelHelpers.createClass(PushNotificationIOS, null, [{
    key: 'presentLocalNotification',
    value: function presentLocalNotification(details) {
      RCTPushNotificationManager.presentLocalNotification(details);
    }
  }, {
    key: 'scheduleLocalNotification',
    value: function scheduleLocalNotification(details) {
      RCTPushNotificationManager.scheduleLocalNotification(details);
    }
  }, {
    key: 'cancelAllLocalNotifications',
    value: function cancelAllLocalNotifications() {
      RCTPushNotificationManager.cancelAllLocalNotifications();
    }
  }, {
    key: 'removeAllDeliveredNotifications',
    value: function removeAllDeliveredNotifications() {
      RCTPushNotificationManager.removeAllDeliveredNotifications();
    }
  }, {
    key: 'getDeliveredNotifications',
    value: function getDeliveredNotifications(callback) {
      RCTPushNotificationManager.getDeliveredNotifications(callback);
    }
  }, {
    key: 'removeDeliveredNotifications',
    value: function removeDeliveredNotifications(identifiers) {
      RCTPushNotificationManager.removeDeliveredNotifications(identifiers);
    }
  }, {
    key: 'setApplicationIconBadgeNumber',
    value: function setApplicationIconBadgeNumber(number) {
      RCTPushNotificationManager.setApplicationIconBadgeNumber(number);
    }
  }, {
    key: 'getApplicationIconBadgeNumber',
    value: function getApplicationIconBadgeNumber(callback) {
      RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);
    }
  }, {
    key: 'cancelLocalNotifications',
    value: function cancelLocalNotifications(userInfo) {
      RCTPushNotificationManager.cancelLocalNotifications(userInfo);
    }
  }, {
    key: 'getScheduledLocalNotifications',
    value: function getScheduledLocalNotifications(callback) {
      RCTPushNotificationManager.getScheduledLocalNotifications(callback);
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener;
      if (type === 'notification') {
        listener = PushNotificationEmitter.addListener(DEVICE_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'localNotification') {
        listener = PushNotificationEmitter.addListener(DEVICE_LOCAL_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'register') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTER_EVENT, function (registrationInfo) {
          handler(registrationInfo.deviceToken);
        });
      } else if (type === 'registrationError') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTRATION_ERROR_EVENT, function (errorInfo) {
          handler(errorInfo);
        });
      }
      _notifHandlers.set(type, listener);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener = _notifHandlers.get(type);
      if (!listener) {
        return;
      }
      listener.remove();
      _notifHandlers.delete(type);
    }
  }, {
    key: 'requestPermissions',
    value: function requestPermissions(permissions) {
      var requestedPermissions = {};
      if (permissions) {
        requestedPermissions = {
          alert: !!permissions.alert,
          badge: !!permissions.badge,
          sound: !!permissions.sound
        };
      } else {
        requestedPermissions = {
          alert: true,
          badge: true,
          sound: true
        };
      }
      return RCTPushNotificationManager.requestPermissions(requestedPermissions);
    }
  }, {
    key: 'abandonPermissions',
    value: function abandonPermissions() {
      RCTPushNotificationManager.abandonPermissions();
    }
  }, {
    key: 'checkPermissions',
    value: function checkPermissions(callback) {
      invariant(typeof callback === 'function', 'Must provide a valid callback');
      RCTPushNotificationManager.checkPermissions(callback);
    }
  }, {
    key: 'getInitialNotification',
    value: function getInitialNotification() {
      return RCTPushNotificationManager.getInitialNotification().then(function (notification) {
        return notification && new PushNotificationIOS(notification);
      });
    }
  }]);

  function PushNotificationIOS(nativeNotif) {
    var _this = this;

    babelHelpers.classCallCheck(this, PushNotificationIOS);

    this._data = {};
    this._remoteNotificationCompleteCalllbackCalled = false;
    this._isRemote = nativeNotif.remote;
    if (this._isRemote) {
      this._notificationId = nativeNotif.notificationId;
    }

    if (nativeNotif.remote) {
      Object.keys(nativeNotif).forEach(function (notifKey) {
        var notifVal = nativeNotif[notifKey];
        if (notifKey === 'aps') {
          _this._alert = notifVal.alert;
          _this._sound = notifVal.sound;
          _this._badgeCount = notifVal.badge;
        } else {
          _this._data[notifKey] = notifVal;
        }
      });
    } else {
      this._badgeCount = nativeNotif.applicationIconBadgeNumber;
      this._sound = nativeNotif.soundName;
      this._alert = nativeNotif.alertBody;
      this._data = nativeNotif.userInfo;
    }
  }

  babelHelpers.createClass(PushNotificationIOS, [{
    key: 'finish',
    value: function finish(fetchResult) {
      if (!this._isRemote || !this._notificationId || this._remoteNotificationCompleteCalllbackCalled) {
        return;
      }
      this._remoteNotificationCompleteCalllbackCalled = true;

      RCTPushNotificationManager.onFinishRemoteNotification(this._notificationId, fetchResult);
    }
  }, {
    key: 'getMessage',
    value: function getMessage() {
      return this._alert;
    }
  }, {
    key: 'getSound',
    value: function getSound() {
      return this._sound;
    }
  }, {
    key: 'getAlert',
    value: function getAlert() {
      return this._alert;
    }
  }, {
    key: 'getBadgeCount',
    value: function getBadgeCount() {
      return this._badgeCount;
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this._data;
    }
  }]);
  return PushNotificationIOS;
}();

PushNotificationIOS.FetchResult = {
  NewData: 'UIBackgroundFetchResultNewData',
  NoData: 'UIBackgroundFetchResultNoData',
  ResultFailed: 'UIBackgroundFetchResultFailed'
};


module.exports = PushNotificationIOS;
}, 410, null, "PushNotificationIOS");
__d(/* Settings */function(global, require, module, exports) {
'use strict';

var Settings = {
  get: function get(key) {
    console.warn('Settings is not yet supported on Android');
    return null;
  },
  set: function set(settings) {
    console.warn('Settings is not yet supported on Android');
  },
  watchKeys: function watchKeys(keys, callback) {
    console.warn('Settings is not yet supported on Android');
    return -1;
  },
  clearWatch: function clearWatch(watchId) {
    console.warn('Settings is not yet supported on Android');
  }
};

module.exports = Settings;
}, 411, null, "Settings");
__d(/* Share */function(global, require, module, exports) {
'use strict';

var Platform = require(61        ); // 61 = Platform

var _require = require(48             ), // 48 = NativeModules
    ActionSheetManager = _require.ActionSheetManager,
    ShareModule = _require.ShareModule;

var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var processColor = require(246           ); // 246 = processColor

var Share = function () {
  function Share() {
    babelHelpers.classCallCheck(this, Share);
  }

  babelHelpers.createClass(Share, null, [{
    key: 'share',
    value: function share(content) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');
      invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');
      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');

      if (Platform.OS === 'android') {
        invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');
        return ShareModule.share(content, options.dialogTitle);
      } else if (Platform.OS === 'ios') {
        return new Promise(function (resolve, reject) {
          ActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, content, options, { tintColor: processColor(options.tintColor) }), function (error) {
            return reject(error);
          }, function (success, activityType) {
            if (success) {
              resolve({
                'action': 'sharedAction',
                'activityType': activityType
              });
            } else {
              resolve({
                'action': 'dismissedAction'
              });
            }
          });
        });
      } else {
        return Promise.reject(new Error('Unsupported platform'));
      }
    }
  }, {
    key: 'sharedAction',
    get: function get() {
      return 'sharedAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return Share;
}();

module.exports = Share;
}, 412, null, "Share");
__d(/* TimePickerAndroid */function(global, require, module, exports) {
'use strict';

var TimePickerModule = require(48             ).TimePickerAndroid; // 48 = NativeModules

var TimePickerAndroid = function () {
  function TimePickerAndroid() {
    babelHelpers.classCallCheck(this, TimePickerAndroid);
  }

  babelHelpers.createClass(TimePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt('return', TimePickerModule.open(options));

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'timeSetAction',
    get: function get() {
      return 'timeSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return TimePickerAndroid;
}();

module.exports = TimePickerAndroid;
}, 413, null, "TimePickerAndroid");
__d(/* Vibration */function(global, require, module, exports) {
'use strict';

var RCTVibration = require(48             ).Vibration; // 48 = NativeModules
var Platform = require(61        ); // 61 = Platform

var _vibrating = false;
var _id = 0;

function vibrateByPattern(pattern) {
  var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (_vibrating) {
    return;
  }
  _vibrating = true;
  if (pattern[0] === 0) {
    RCTVibration.vibrate();
    pattern = pattern.slice(1);
  }
  if (pattern.length === 0) {
    _vibrating = false;
    return;
  }
  setTimeout(function () {
    return vibrateScheduler(++_id, pattern, repeat, 1);
  }, pattern[0]);
}

function vibrateScheduler(id, pattern, repeat, nextIndex) {
  if (!_vibrating || id !== _id) {
    return;
  }
  RCTVibration.vibrate();
  if (nextIndex >= pattern.length) {
    if (repeat) {
      nextIndex = 0;
    } else {
      _vibrating = false;
      return;
    }
  }
  setTimeout(function () {
    return vibrateScheduler(id, pattern, repeat, nextIndex + 1);
  }, pattern[nextIndex]);
}

var Vibration = {
  vibrate: function vibrate() {
    var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 400;
    var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (Platform.OS === 'android') {
      if (typeof pattern === 'number') {
        RCTVibration.vibrate(pattern);
      } else if (Array.isArray(pattern)) {
        RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    } else {
      if (_vibrating) {
        return;
      }
      if (typeof pattern === 'number') {
        RCTVibration.vibrate();
      } else if (Array.isArray(pattern)) {
        vibrateByPattern(pattern, repeat);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    }
  },

  cancel: function cancel() {
    if (Platform.OS === 'ios') {
      _vibrating = false;
    } else {
      RCTVibration.cancel();
    }
  }
};

module.exports = Vibration;
}, 414, null, "Vibration");
__d(/* VibrationIOS */function(global, require, module, exports) {
'use strict';

var warning = require(19                ); // 19 = fbjs/lib/warning

var VibrationIOS = {
  vibrate: function vibrate() {
    warning('VibrationIOS is not supported on this platform!');
  }
};

module.exports = VibrationIOS;
}, 415, null, "VibrationIOS");
__d(/* throwOnWrongReactAPI */function(global, require, module, exports) {

'use strict';

function throwOnWrongReactAPI(key) {
  throw new Error('Seems you\'re trying to access \'ReactNative.' + key + '\' from the \'react-native\' package. Perhaps you meant to access \'React.' + key + '\' from the \'react\' package instead?\n\nFor example, instead of:\n\n  import React, { Component, View } from \'react-native\';\n\nYou should now do:\n\n  import React, { Component } from \'react\';\n  import { View } from \'react-native\';\n\nCheck the release notes on how to upgrade your code - https://github.com/facebook/react-native/releases/tag/v0.25.1\n');
}

module.exports = throwOnWrongReactAPI;
}, 416, null, "throwOnWrongReactAPI");
__d(/* Student_Counter/src/components/CameraScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\CameraScreen.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNativeCamera = require(418                  ); // 418 = react-native-camera

var _reactNativeCamera2 = babelHelpers.interopRequireDefault(_reactNativeCamera);

var _firebase = require(419       ); // 419 = firebase

var firebase = babelHelpers.interopRequireWildcard(_firebase);

var _reactNativeFetchBlob = require(462                      ); // 462 = react-native-fetch-blob

var _reactNativeFetchBlob2 = babelHelpers.interopRequireDefault(_reactNativeFetchBlob);

var _reactNavigation = require(490               ); // 490 = react-navigation

var CameraScreen = function (_Component) {
  babelHelpers.inherits(CameraScreen, _Component);

  function CameraScreen(props) {
    babelHelpers.classCallCheck(this, CameraScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (CameraScreen.__proto__ || Object.getPrototypeOf(CameraScreen)).call(this, props));

    _this.state = {
      options: {
        captureTarget: _reactNativeCamera2.default.constants.CaptureTarget.disk
      }
    };
    return _this;
  }

  babelHelpers.createClass(CameraScreen, [{
    key: 'takePicture',
    value: function takePicture() {
      var _this2 = this;

      this.camera.capture({ metadata: this.state.options }).then(function (data) {
        console.log(data.path);

        _this2.saveOnFirebase('/Student/140221061/profile_pic.jpg', data.path);
      }).catch(function (err) {
        return console.error(err);
      });
    }
  }, {
    key: 'saveOnFirebase',
    value: function saveOnFirebase(storagePath, uri) {
      var polyfill = _reactNativeFetchBlob2.default.polyfill;

      window.XMLHttpRequest = polyfill.XMLHttpRequest;
      window.Blob = polyfill.Blob;

      _reactNativeFetchBlob2.default.fs.readFile(uri, 'base64').then(function (data) {
        console.log(data);
        var metadata = {
          contentType: 'image/jpeg'
        };

        Blob.build(_reactNativeFetchBlob2.default.wrap(uri), { type: 'image/jpeg' }).then(function (blob) {
          var storageRef = firebase.storage().ref('images');
          var testImagesRef = storageRef.child(storagePath);
          var uploadTask = testImagesRef.put(blob, metadata).then(function (snapshot) {});
        }).catch(function (err) {
          return console.log(err);
        });
      }).catch(function (err) {
        return console.log(err);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var navigate = this.props.navigation.navigate;
      var params = this.props.navigation.state.params;

      return _react2.default.createElement(
        _reactNativeCamera2.default,
        { ref: function ref(cam) {
            _this3.camera = cam;
          }, style: styles.preview, aspect: _reactNativeCamera2.default.constants.Aspect.fill, __source: {
            fileName: _jsxFileName,
            lineNumber: 52
          }
        },
        _react2.default.createElement(
          _reactNative.Text,
          { style: styles.capture, onPress: function onPress() {
              _this3.takePicture.bind(_this3);
              navigate(params.screenName);
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          },
          'CAPTURE'
        )
      );
    }
  }]);
  return CameraScreen;
}(_react.Component);

CameraScreen.navigationOptions = {
  drawerLabel: 'Presence'
};
exports.default = CameraScreen;


var styles = _reactNative.StyleSheet.create({
  preview: {
    flex: 1,
    justifyContent: 'flex-end',
    alignItems: 'center',
    height: _reactNative.Dimensions.get('window').height,
    width: _reactNative.Dimensions.get('window').width
  },
  capture: {
    flex: 0,
    backgroundColor: 'white',
    borderRadius: 5,
    color: '#000',
    padding: 10,
    margin: 40
  }
});
}, 417, null, "Student_Counter/src/components/CameraScreen.js");
__d(/* react-native-camera/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constants = undefined;
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-camera\\index.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var CameraManager = _reactNative.NativeModules.CameraManager || _reactNative.NativeModules.CameraModule;
var CAMERA_REF = 'camera';

function convertNativeProps(props) {
  var newProps = babelHelpers.extends({}, props);
  if (typeof props.aspect === 'string') {
    newProps.aspect = Camera.constants.Aspect[props.aspect];
  }

  if (typeof props.flashMode === 'string') {
    newProps.flashMode = Camera.constants.FlashMode[props.flashMode];
  }

  if (typeof props.orientation === 'string') {
    newProps.orientation = Camera.constants.Orientation[props.orientation];
  }

  if (typeof props.torchMode === 'string') {
    newProps.torchMode = Camera.constants.TorchMode[props.torchMode];
  }

  if (typeof props.type === 'string') {
    newProps.type = Camera.constants.Type[props.type];
  }

  if (typeof props.captureQuality === 'string') {
    newProps.captureQuality = Camera.constants.CaptureQuality[props.captureQuality];
  }

  if (typeof props.captureMode === 'string') {
    newProps.captureMode = Camera.constants.CaptureMode[props.captureMode];
  }

  if (typeof props.captureTarget === 'string') {
    newProps.captureTarget = Camera.constants.CaptureTarget[props.captureTarget];
  }

  if (typeof props.onBarCodeRead !== 'function') {
    newProps.barCodeTypes = [];
  }

  newProps.barcodeScannerEnabled = typeof props.onBarCodeRead === 'function';

  return newProps;
}

var Camera = function (_Component) {
  babelHelpers.inherits(Camera, _Component);
  babelHelpers.createClass(Camera, [{
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      this.refs[CAMERA_REF].setNativeProps(props);
    }
  }]);

  function Camera() {
    babelHelpers.classCallCheck(this, Camera);

    var _this = babelHelpers.possibleConstructorReturn(this, (Camera.__proto__ || Object.getPrototypeOf(Camera)).call(this));

    _this._onBarCodeRead = function (data) {
      if (_this.props.onBarCodeRead) {
        _this.props.onBarCodeRead(data);
      }
    };

    _this.state = {
      isAuthorized: false,
      isRecording: false
    };
    return _this;
  }

  babelHelpers.createClass(Camera, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _convertNativeProps, captureMode, hasVideoAndAudio, check, isAuthorized;

      return regeneratorRuntime.async(function componentWillMount$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              this._addOnBarCodeReadListener();

              _convertNativeProps = convertNativeProps({ captureMode: this.props.captureMode }), captureMode = _convertNativeProps.captureMode;
              hasVideoAndAudio = this.props.captureAudio && captureMode === Camera.constants.CaptureMode.video;
              check = hasVideoAndAudio ? Camera.checkDeviceAuthorizationStatus : Camera.checkVideoAuthorizationStatus;

              if (!check) {
                _context.next = 9;
                break;
              }

              _context.next = 7;
              return regeneratorRuntime.awrap(check());

            case 7:
              isAuthorized = _context.sent;

              this.setState({ isAuthorized: isAuthorized });

            case 9:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._removeOnBarCodeReadListener();

      if (this.state.isRecording) {
        this.stopCapture();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var onBarCodeRead = this.props.onBarCodeRead;

      if (onBarCodeRead !== newProps.onBarCodeRead) {
        this._addOnBarCodeReadListener(newProps);
      }
    }
  }, {
    key: '_addOnBarCodeReadListener',
    value: function _addOnBarCodeReadListener(props) {
      var _ref = props || this.props,
          onBarCodeRead = _ref.onBarCodeRead;

      this._removeOnBarCodeReadListener();
      if (onBarCodeRead) {
        this.cameraBarCodeReadListener = _reactNative.Platform.select({
          ios: _reactNative.NativeAppEventEmitter.addListener('CameraBarCodeRead', this._onBarCodeRead),
          android: _reactNative.DeviceEventEmitter.addListener('CameraBarCodeReadAndroid', this._onBarCodeRead)
        });
      }
    }
  }, {
    key: '_removeOnBarCodeReadListener',
    value: function _removeOnBarCodeReadListener() {
      var listener = this.cameraBarCodeReadListener;
      if (listener) {
        listener.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var style = [styles.base, this.props.style];
      var nativeProps = convertNativeProps(this.props);

      return _react2.default.createElement(RCTCamera, babelHelpers.extends({ ref: CAMERA_REF }, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 203
        }
      }));
    }
  }, {
    key: 'capture',
    value: function capture(options) {
      var props = convertNativeProps(this.props);
      options = babelHelpers.extends({
        audio: props.captureAudio,
        barCodeTypes: props.barCodeTypes,
        mode: props.captureMode,
        playSoundOnCapture: props.playSoundOnCapture,
        target: props.captureTarget,
        quality: props.captureQuality,
        type: props.type,
        title: '',
        description: '',
        mirrorImage: props.mirrorImage,
        fixOrientation: props.fixOrientation
      }, options);

      if (options.mode === Camera.constants.CaptureMode.video) {
        options.totalSeconds = options.totalSeconds > -1 ? options.totalSeconds : -1;
        options.preferredTimeScale = options.preferredTimeScale || 30;
        this.setState({ isRecording: true });
      }

      return CameraManager.capture(options);
    }
  }, {
    key: 'stopCapture',
    value: function stopCapture() {
      if (this.state.isRecording) {
        this.setState({ isRecording: false });
        return CameraManager.stopCapture();
      }
      return Promise.resolve("Not Recording.");
    }
  }, {
    key: 'getFOV',
    value: function getFOV() {
      return CameraManager.getFOV();
    }
  }, {
    key: 'hasFlash',
    value: function hasFlash() {
      if (_reactNative.Platform.OS === 'android') {
        var props = convertNativeProps(this.props);
        return CameraManager.hasFlash({
          type: props.type
        });
      }
      return CameraManager.hasFlash();
    }
  }]);
  return Camera;
}(_react.Component);

Camera.constants = {
  Aspect: CameraManager.Aspect,
  BarCodeType: CameraManager.BarCodeType,
  Type: CameraManager.Type,
  CaptureMode: CameraManager.CaptureMode,
  CaptureTarget: CameraManager.CaptureTarget,
  CaptureQuality: CameraManager.CaptureQuality,
  Orientation: CameraManager.Orientation,
  FlashMode: CameraManager.FlashMode,
  TorchMode: CameraManager.TorchMode
};
Camera.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
  aspect: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  captureAudio: _react.PropTypes.bool,
  captureMode: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  captureQuality: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  captureTarget: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  defaultOnFocusComponent: _react.PropTypes.bool,
  flashMode: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  keepAwake: _react.PropTypes.bool,
  onBarCodeRead: _react.PropTypes.func,
  barcodeScannerEnabled: _react.PropTypes.bool,
  onFocusChanged: _react.PropTypes.func,
  onZoomChanged: _react.PropTypes.func,
  mirrorImage: _react.PropTypes.bool,
  fixOrientation: _react.PropTypes.bool,
  barCodeTypes: _react.PropTypes.array,
  orientation: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  playSoundOnCapture: _react.PropTypes.bool,
  torchMode: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  type: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
});
Camera.defaultProps = {
  aspect: CameraManager.Aspect.fill,
  type: CameraManager.Type.back,
  orientation: CameraManager.Orientation.auto,
  fixOrientation: false,
  captureAudio: false,
  captureMode: CameraManager.CaptureMode.still,
  captureTarget: CameraManager.CaptureTarget.cameraRoll,
  captureQuality: CameraManager.CaptureQuality.high,
  defaultOnFocusComponent: true,
  flashMode: CameraManager.FlashMode.off,
  playSoundOnCapture: true,
  torchMode: CameraManager.TorchMode.off,
  mirrorImage: false,
  barCodeTypes: Object.values(CameraManager.BarCodeType)
};
Camera.checkDeviceAuthorizationStatus = CameraManager.checkDeviceAuthorizationStatus;
Camera.checkVideoAuthorizationStatus = CameraManager.checkVideoAuthorizationStatus;
Camera.checkAudioAuthorizationStatus = CameraManager.checkAudioAuthorizationStatus;
exports.default = Camera;
var constants = exports.constants = Camera.constants;

var RCTCamera = (0, _reactNative.requireNativeComponent)('RCTCamera', Camera, { nativeOnly: {
    testID: true,
    renderToHardwareTextureAndroid: true,
    accessibilityLabel: true,
    importantForAccessibility: true,
    accessibilityLiveRegion: true,
    accessibilityComponentType: true,
    onLayout: true
  } });

var styles = _reactNative.StyleSheet.create({
  base: {}
});
}, 418, null, "react-native-camera/index.js");
__d(/* firebase/firebase-react-native.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _app = require(420    ); // 420 = ./app

var _app2 = _interopRequireDefault(_app);

require(427     ); // 427 = ./auth

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Storage, XMLHttpRequest;

require(428         ); // 428 = ./database
require(429        ); // 429 = ./storage

var AsyncStorage = require(46            ).AsyncStorage; // 46 = react-native
_app2.default.INTERNAL.extendNamespace({
    'INTERNAL': {
        'reactNative': {
            'AsyncStorage': AsyncStorage
        }
    }
});

exports.default = _app2.default;
module.exports = exports['default'];
}, 419, null, "firebase/firebase-react-native.js");
__d(/* firebase/app.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
                                                             value: true
});

var _firebase_app = require(421                 ); // 421 = ./app/firebase_app

var firebase = (0, _firebase_app.createFirebaseNamespace)();
exports.default = firebase;
module.exports = exports['default'];
}, 420, null, "firebase/app.js");
__d(/* firebase/app/firebase_app.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

exports.createFirebaseNamespace = createFirebaseNamespace;

var _subscribe = require(422          ); // 422 = ./subscribe

var _errors = require(425       ); // 425 = ./errors

var _shared_promise = require(423               ); // 423 = ./shared_promise

var _deep_copy = require(426          ); // 426 = ./deep_copy

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var LocalPromise = _shared_promise.local.Promise;
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

var tokenListeners = [];


var FirebaseAppImpl = function () {
    function FirebaseAppImpl(options, name, firebase_) {
        _classCallCheck(this, FirebaseAppImpl);

        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.services_ = {};
        this.name_ = name;
        this.options_ = (0, _deep_copy.deepCopy)(options);
        this.INTERNAL = {
            'getUid': function getUid() {
                return null;
            },
            'getToken': function getToken() {
                return LocalPromise.resolve(null);
            },
            'addAuthTokenListener': function addAuthTokenListener(callback) {
                tokenListeners.push(callback);

                setTimeout(function () {
                    return callback(null);
                }, 0);
            },
            'removeAuthTokenListener': function removeAuthTokenListener(callback) {
                tokenListeners = tokenListeners.filter(function (listener) {
                    return listener !== callback;
                });
            }
        };
    }

    _createClass(FirebaseAppImpl, [{
        key: 'delete',
        value: function _delete() {
            var _this = this;

            return new LocalPromise(function (resolve) {
                _this.checkDestroyed_();
                resolve();
            }).then(function () {
                _this.firebase_.INTERNAL.removeApp(_this.name_);
                var services = [];
                Object.keys(_this.services_).forEach(function (serviceKey) {
                    Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {
                        services.push(_this.services_[serviceKey][instanceKey]);
                    });
                });
                return LocalPromise.all(services.map(function (service) {
                    return service.INTERNAL.delete();
                }));
            }).then(function () {
                _this.isDeleted_ = true;
                _this.services_ = {};
            });
        }
    }, {
        key: '_getService',
        value: function _getService(name) {
            var instanceIdentifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ENTRY_NAME;

            this.checkDestroyed_();
            if (!this.services_[name]) {
                this.services_[name] = {};
            }
            if (!this.services_[name][instanceIdentifier]) {
                var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME ? instanceIdentifier : undefined;
                var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);
                this.services_[name][instanceIdentifier] = service;
            }
            return this.services_[name][instanceIdentifier];
        }
    }, {
        key: 'extendApp',
        value: function extendApp(props) {
            var _this2 = this;

            (0, _deep_copy.deepExtend)(this, props);

            if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {
                tokenListeners.forEach(function (listener) {
                    _this2.INTERNAL.addAuthTokenListener(listener);
                });
                tokenListeners = [];
            }
        }
    }, {
        key: 'checkDestroyed_',
        value: function checkDestroyed_() {
            if (this.isDeleted_) {
                error('app-deleted', { 'name': this.name_ });
            }
        }
    }, {
        key: 'name',
        get: function get() {
            this.checkDestroyed_();
            return this.name_;
        }
    }, {
        key: 'options',
        get: function get() {
            this.checkDestroyed_();
            return this.options_;
        }
    }]);

    return FirebaseAppImpl;
}();

FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log("dc");

function createFirebaseNamespace() {
    var apps_ = {};
    var factories = {};
    var appHooks = {};

    var namespace = {
        '__esModule': true,
        'initializeApp': function initializeApp(options, name) {
            if (name === undefined) {
                name = DEFAULT_ENTRY_NAME;
            } else {
                if (typeof name !== 'string' || name === '') {
                    error('bad-app-name', { 'name': name + '' });
                }
            }
            if (apps_[name] !== undefined) {
                error('duplicate-app', { 'name': name });
            }
            var app = new FirebaseAppImpl(options, name, namespace);
            apps_[name] = app;
            callAppHooks(app, 'create');
            return app;
        },

        'app': app,
        'apps': null,
        'Promise': LocalPromise,
        'SDK_VERSION': '4.1.2',
        'INTERNAL': {
            'registerService': function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {
                if (factories[name]) {
                    error('duplicate-service', { 'name': name });
                }

                factories[name] = createService;

                if (appHook) {
                    appHooks[name] = appHook;

                    getApps().forEach(function (app) {
                        appHook('create', app);
                    });
                }

                var serviceNamespace = function serviceNamespace() {
                    var appArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : app();

                    if (typeof appArg[name] !== 'function') {
                        error('invalid-app-argument', { 'name': name });
                    }

                    return appArg[name]();
                };

                if (serviceProperties !== undefined) {
                    (0, _deep_copy.deepExtend)(serviceNamespace, serviceProperties);
                }

                namespace[name] = serviceNamespace;

                FirebaseAppImpl.prototype[name] = function () {
                    var serviceFxn = this._getService.bind(this, name);

                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                    }

                    return serviceFxn.apply(this, allowMultipleInstances ? args : []);
                };
                return serviceNamespace;
            },

            'createFirebaseNamespace': createFirebaseNamespace,
            'extendNamespace': function extendNamespace(props) {
                (0, _deep_copy.deepExtend)(namespace, props);
            },
            'createSubscribe': _subscribe.createSubscribe,
            'ErrorFactory': _errors.ErrorFactory,
            'removeApp': function removeApp(name) {
                var app = apps_[name];
                callAppHooks(app, 'delete');
                delete apps_[name];
            },

            'factories': factories,
            'useAsService': useAsService,
            'Promise': _shared_promise.local.GoogPromise,
            'deepExtend': _deep_copy.deepExtend
        }
    };

    (0, _deep_copy.patchProperty)(namespace, 'default', namespace);

    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        var result = apps_[name];
        if (result === undefined) {
            error('no-app', { 'name': name });
        }
        return result;
    }
    (0, _deep_copy.patchProperty)(app, 'App', FirebaseAppImpl);function getApps() {
        return Object.keys(apps_).map(function (name) {
            return apps_[name];
        });
    }
    function callAppHooks(app, eventName) {
        Object.keys(factories).forEach(function (serviceName) {
            var factoryName = useAsService(app, serviceName);
            if (factoryName === null) {
                return;
            }
            if (appHooks[factoryName]) {
                appHooks[factoryName](eventName, app);
            }
        });
    }

    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        app.options;

        return name;
    }
    return namespace;
}
function error(code, args) {
    throw appErrors.create(code, args);
}

var errors = {
    'no-app': 'No Firebase App \'{$name}\' has been created - ' + 'call Firebase App.initializeApp()',
    'bad-app-name': 'Illegal App name: \'{$name}',
    'duplicate-app': 'Firebase App named \'{$name}\' already exists',
    'app-deleted': 'Firebase App named \'{$name}\' already deleted',
    'duplicate-service': 'Firebase service named \'{$name}\' already registered',
    'sa-not-supported': 'Initializing the Firebase SDK with a service ' + 'account is only allowed in a Node.js environment. On client ' + 'devices, you should instead initialize the SDK with an api key and ' + 'auth domain',
    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' + 'Firebase App instance.'
};
var appErrors = new _errors.ErrorFactory('app', 'Firebase', errors);
}, 421, null, "firebase/app/firebase_app.js");
__d(/* firebase/app/subscribe.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
    return typeof obj;
} : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

exports.createSubscribe = createSubscribe;
exports.async = async;

var _shared_promise = require(423               ); // 423 = ./shared_promise

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var LocalPromise = _shared_promise.local.Promise;

function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}


var ObserverProxy = function () {
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;

        _classCallCheck(this, ObserverProxy);

        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;

        this.task = LocalPromise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;

        this.task.then(function () {
            executor(_this);
        }).catch(function (e) {
            _this.error(e);
        });
    }

    _createClass(ObserverProxy, [{
        key: 'next',
        value: function next(value) {
            this.forEachObserver(function (observer) {
                observer.next(value);
            });
        }
    }, {
        key: 'error',
        value: function error(_error) {
            this.forEachObserver(function (observer) {
                observer.error(_error);
            });
            this.close(_error);
        }
    }, {
        key: 'complete',
        value: function complete() {
            this.forEachObserver(function (observer) {
                observer.complete();
            });
            this.close();
        }
    }, {
        key: 'subscribe',
        value: function subscribe(nextOrObserver, error, complete) {
            var _this2 = this;

            var observer = void 0;
            if (nextOrObserver === undefined && error === undefined && complete === undefined) {
                throw new Error("Missing Observer.");
            }

            if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
                observer = nextOrObserver;
            } else {
                observer = {
                    next: nextOrObserver,
                    error: error,
                    complete: complete
                };
            }
            if (observer.next === undefined) {
                observer.next = noop;
            }
            if (observer.error === undefined) {
                observer.error = noop;
            }
            if (observer.complete === undefined) {
                observer.complete = noop;
            }
            var unsub = this.unsubscribeOne.bind(this, this.observers.length);

            if (this.finalized) {
                this.task.then(function () {
                    try {
                        if (_this2.finalError) {
                            observer.error(_this2.finalError);
                        } else {
                            observer.complete();
                        }
                    } catch (e) {}
                });
            }
            this.observers.push(observer);
            return unsub;
        }
    }, {
        key: 'unsubscribeOne',
        value: function unsubscribeOne(i) {
            if (this.observers === undefined || this.observers[i] === undefined) {
                return;
            }
            delete this.observers[i];
            this.observerCount -= 1;
            if (this.observerCount === 0 && this.onNoObservers !== undefined) {
                this.onNoObservers(this);
            }
        }
    }, {
        key: 'forEachObserver',
        value: function forEachObserver(fn) {
            if (this.finalized) {
                return;
            }

            for (var i = 0; i < this.observers.length; i++) {
                this.sendOne(i, fn);
            }
        }
    }, {
        key: 'sendOne',
        value: function sendOne(i, fn) {
            var _this3 = this;

            this.task.then(function () {
                if (_this3.observers !== undefined && _this3.observers[i] !== undefined) {
                    try {
                        fn(_this3.observers[i]);
                    } catch (e) {
                        if (typeof console !== "undefined" && console.error) {
                            console.error(e);
                        }
                    }
                }
            });
        }
    }, {
        key: 'close',
        value: function close(err) {
            var _this4 = this;

            if (this.finalized) {
                return;
            }
            this.finalized = true;
            if (err !== undefined) {
                this.finalError = err;
            }

            this.task.then(function () {
                _this4.observers = undefined;
                _this4.onNoObservers = undefined;
            });
        }
    }]);

    return ObserverProxy;
}();


function async(fn, onError) {
    return function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        LocalPromise.resolve(true).then(function () {
            fn.apply(undefined, args);
        }).catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}

function implementsAnyMethods(obj, methods) {
    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {
        return false;
    }
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = methods[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var method = _step.value;

            if (method in obj && typeof obj[method] === 'function') {
                return true;
            }
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    return false;
}
function noop() {}
}, 422, null, "firebase/app/subscribe.js");
__d(/* firebase/app/shared_promise.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var scope = void 0;
if (typeof global !== 'undefined') {
    scope = global;
} else if (typeof self !== 'undefined') {
    scope = self;
} else {
    try {
        scope = Function('return this')();
    } catch (e) {
        throw new Error('polyfill failed because global object is unavailable in this environment');
    }
}
var PromiseImpl = scope.Promise || require(424               ); // 424 = promise-polyfill
var local = exports.local = {
    Promise: PromiseImpl,
    GoogPromise: PromiseImpl
};
}, 423, null, "firebase/app/shared_promise.js");
__d(/* promise-polyfill/promise.js */function(global, require, module, exports) {(function (root) {
  var setTimeoutFunc = setTimeout;

  function noop() {}

  function bind(fn, thisArg) {
    return function () {
      fn.apply(thisArg, arguments);
    };
  }

  function Promise(fn) {
    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');
    if (typeof fn !== 'function') throw new TypeError('not a function');
    this._state = 0;
    this._handled = false;
    this._value = undefined;
    this._deferreds = [];

    doResolve(fn, this);
  }

  function handle(self, deferred) {
    while (self._state === 3) {
      self = self._value;
    }
    if (self._state === 0) {
      self._deferreds.push(deferred);
      return;
    }
    self._handled = true;
    Promise._immediateFn(function () {
      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
      if (cb === null) {
        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
        return;
      }
      var ret;
      try {
        ret = cb(self._value);
      } catch (e) {
        reject(deferred.promise, e);
        return;
      }
      resolve(deferred.promise, ret);
    });
  }

  function resolve(self, newValue) {
    try {
      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
        var then = newValue.then;
        if (newValue instanceof Promise) {
          self._state = 3;
          self._value = newValue;
          finale(self);
          return;
        } else if (typeof then === 'function') {
          doResolve(bind(then, newValue), self);
          return;
        }
      }
      self._state = 1;
      self._value = newValue;
      finale(self);
    } catch (e) {
      reject(self, e);
    }
  }

  function reject(self, newValue) {
    self._state = 2;
    self._value = newValue;
    finale(self);
  }

  function finale(self) {
    if (self._state === 2 && self._deferreds.length === 0) {
      Promise._immediateFn(function () {
        if (!self._handled) {
          Promise._unhandledRejectionFn(self._value);
        }
      });
    }

    for (var i = 0, len = self._deferreds.length; i < len; i++) {
      handle(self, self._deferreds[i]);
    }
    self._deferreds = null;
  }

  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.promise = promise;
  }

  function doResolve(fn, self) {
    var done = false;
    try {
      fn(function (value) {
        if (done) return;
        done = true;
        resolve(self, value);
      }, function (reason) {
        if (done) return;
        done = true;
        reject(self, reason);
      });
    } catch (ex) {
      if (done) return;
      done = true;
      reject(self, ex);
    }
  }

  Promise.prototype['catch'] = function (onRejected) {
    return this.then(null, onRejected);
  };

  Promise.prototype.then = function (onFulfilled, onRejected) {
    var prom = new this.constructor(noop);

    handle(this, new Handler(onFulfilled, onRejected, prom));
    return prom;
  };

  Promise.all = function (arr) {
    var args = Array.prototype.slice.call(arr);

    return new Promise(function (resolve, reject) {
      if (args.length === 0) return resolve([]);
      var remaining = args.length;

      function res(i, val) {
        try {
          if (val && (typeof val === 'object' || typeof val === 'function')) {
            var then = val.then;
            if (typeof then === 'function') {
              then.call(val, function (val) {
                res(i, val);
              }, reject);
              return;
            }
          }
          args[i] = val;
          if (--remaining === 0) {
            resolve(args);
          }
        } catch (ex) {
          reject(ex);
        }
      }

      for (var i = 0; i < args.length; i++) {
        res(i, args[i]);
      }
    });
  };

  Promise.resolve = function (value) {
    if (value && typeof value === 'object' && value.constructor === Promise) {
      return value;
    }

    return new Promise(function (resolve) {
      resolve(value);
    });
  };

  Promise.reject = function (value) {
    return new Promise(function (resolve, reject) {
      reject(value);
    });
  };

  Promise.race = function (values) {
    return new Promise(function (resolve, reject) {
      for (var i = 0, len = values.length; i < len; i++) {
        values[i].then(resolve, reject);
      }
    });
  };

  Promise._immediateFn = typeof setImmediate === 'function' && function (fn) {
    setImmediate(fn);
  } || function (fn) {
    setTimeoutFunc(fn, 0);
  };

  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
    if (typeof console !== 'undefined' && console) {
      console.warn('Possible Unhandled Promise Rejection:', err);
    }
  };

  Promise._setImmediateFn = function _setImmediateFn(fn) {
    Promise._immediateFn = fn;
  };

  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
    Promise._unhandledRejectionFn = fn;
  };

  if (typeof module !== 'undefined' && module.exports) {
    module.exports = Promise;
  } else if (!root.Promise) {
    root.Promise = Promise;
  }
})(this);
}, 424, null, "promise-polyfill/promise.js");
__d(/* firebase/app/errors.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

exports.patchCapture = patchCapture;

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var ERROR_NAME = 'FirebaseError';
var captureStackTrace = Error.captureStackTrace;

function patchCapture(captureFake) {
    var result = captureStackTrace;
    captureStackTrace = captureFake;
    return result;
}

var FirebaseError = exports.FirebaseError = function FirebaseError(code, message) {
    _classCallCheck(this, FirebaseError);

    this.code = code;
    this.message = message;

    if (captureStackTrace) {
        captureStackTrace(this, ErrorFactory.prototype.create);
    } else {
        var err = Error.apply(this, arguments);
        this.name = ERROR_NAME;

        Object.defineProperty(this, 'stack', {
            get: function get() {
                return err.stack;
            }
        });
    }
};


FirebaseError.prototype = Object.create(Error.prototype);
FirebaseError.prototype.constructor = FirebaseError;
FirebaseError.prototype.name = ERROR_NAME;

var ErrorFactory = exports.ErrorFactory = function () {
    function ErrorFactory(service, serviceName, errors) {
        _classCallCheck(this, ErrorFactory);

        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;

        this.pattern = /\{\$([^}]+)}/g;
    }

    _createClass(ErrorFactory, [{
        key: 'create',
        value: function create(code, data) {
            if (data === undefined) {
                data = {};
            }
            var template = this.errors[code];
            var fullCode = this.service + '/' + code;
            var message = void 0;
            if (template === undefined) {
                message = "Error";
            } else {
                message = template.replace(this.pattern, function (match, key) {
                    var value = data[key];
                    return value !== undefined ? value.toString() : '<' + key + '?>';
                });
            }

            message = this.serviceName + ': ' + message + ' (' + fullCode + ').';
            var err = new FirebaseError(fullCode, message);

            for (var prop in data) {
                if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {
                    continue;
                }
                err[prop] = data[prop];
            }
            return err;
        }
    }]);

    return ErrorFactory;
}();
}, 425, null, "firebase/app/errors.js");
__d(/* firebase/app/deep_copy.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deepCopy = deepCopy;
exports.deepExtend = deepExtend;
exports.patchProperty = patchProperty;
function deepCopy(value) {
    return deepExtend(undefined, value);
}

function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            return new Date(source.getTime());


        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            target = [];
            break;
        default:
            return source;
    }
    for (var prop in source) {
        if (!source.hasOwnProperty(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}

function patchProperty(obj, prop, value) {
    obj[prop] = value;
}
}, 426, null, "firebase/app/deep_copy.js");
__d(/* firebase/auth.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

var firebase = require(420    ); // 420 = ./app
(function () {
  (function () {
    var h,
        aa = aa || {},
        k = this,
        m = function m(a) {
      return "string" == typeof a;
    },
        ba = function ba(a) {
      return "boolean" == typeof a;
    },
        ca = function ca(a) {
      return "number" == typeof a;
    },
        da = function da() {},
        ea = function ea(a) {
      var b = typeof a;if ("object" == b) {
        if (a) {
          if (a instanceof Array) return "array";if (a instanceof Object) return b;var c = Object.prototype.toString.call(a);if ("[object Window]" == c) return "object";if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";
          if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
        } else return "null";
      } else if ("function" == b && "undefined" == typeof a.call) return "object";return b;
    },
        fa = function fa(a) {
      return null === a;
    },
        ga = function ga(a) {
      return "array" == ea(a);
    },
        ha = function ha(a) {
      var b = ea(a);return "array" == b || "object" == b && "number" == typeof a.length;
    },
        p = function p(a) {
      return "function" == ea(a);
    },
        ia = function ia(a) {
      var b = typeof a;return "object" == b && null != a || "function" == b;
    },
        ja = function ja(a, b, c) {
      return a.call.apply(a.bind, arguments);
    },
        ka = function ka(a, b, c) {
      if (!a) throw Error();if (2 < arguments.length) {
        var d = Array.prototype.slice.call(arguments, 2);return function () {
          var c = Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c, d);return a.apply(b, c);
        };
      }return function () {
        return a.apply(b, arguments);
      };
    },
        _q = function q(a, b, c) {
      _q = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? ja : ka;return _q.apply(null, arguments);
    },
        la = function la(a, b) {
      var c = Array.prototype.slice.call(arguments, 1);return function () {
        var b = c.slice();b.push.apply(b, arguments);return a.apply(this, b);
      };
    },
        ma = Date.now || function () {
      return +new Date();
    },
        r = function r(a, b) {
      function c() {}c.prototype = b.prototype;a.Id = b.prototype;a.prototype = new c();a.prototype.constructor = a;a.ag = function (a, c, f) {
        for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++) {
          d[e - 2] = arguments[e];
        }return b.prototype[c].apply(a, d);
      };
    };var t = function t(a) {
      if (Error.captureStackTrace) Error.captureStackTrace(this, t);else {
        var b = Error().stack;b && (this.stack = b);
      }a && (this.message = String(a));
    };r(t, Error);t.prototype.name = "CustomError";var na = function na(a, b) {
      for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {
        d += c.shift() + e.shift();
      }return d + c.join("%s");
    },
        oa = String.prototype.trim ? function (a) {
      return a.trim();
    } : function (a) {
      return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
    },
        wa = function wa(a) {
      if (!pa.test(a)) return a;-1 != a.indexOf("&") && (a = a.replace(qa, "&amp;"));-1 != a.indexOf("<") && (a = a.replace(ra, "&lt;"));-1 != a.indexOf(">") && (a = a.replace(sa, "&gt;"));-1 != a.indexOf('"') && (a = a.replace(ta, "&quot;"));-1 != a.indexOf("'") && (a = a.replace(ua, "&#39;"));-1 != a.indexOf("\x00") && (a = a.replace(va, "&#0;"));return a;
    },
        qa = /&/g,
        ra = /</g,
        sa = />/g,
        ta = /"/g,
        ua = /'/g,
        va = /\x00/g,
        pa = /[\x00&<>"']/,
        u = function u(a, b) {
      return -1 != a.indexOf(b);
    },
        xa = function xa(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    };var ya = function ya(a, b) {
      b.unshift(a);t.call(this, na.apply(null, b));b.shift();
    };r(ya, t);ya.prototype.name = "AssertionError";
    var za = function za(a, b, c, d) {
      var e = "Assertion failed";if (c) {
        e += ": " + c;var f = d;
      } else a && (e += ": " + a, f = b);throw new ya("" + e, f || []);
    },
        v = function v(a, b, c) {
      a || za("", null, b, Array.prototype.slice.call(arguments, 2));
    },
        Aa = function Aa(a, b) {
      throw new ya("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1));
    },
        Ba = function Ba(a, b, c) {
      ca(a) || za("Expected number but got %s: %s.", [ea(a), a], b, Array.prototype.slice.call(arguments, 2));return a;
    },
        Ca = function Ca(a, b, c) {
      m(a) || za("Expected string but got %s: %s.", [ea(a), a], b, Array.prototype.slice.call(arguments, 2));
    },
        Da = function Da(a, b, c) {
      p(a) || za("Expected function but got %s: %s.", [ea(a), a], b, Array.prototype.slice.call(arguments, 2));
    };var Ea = Array.prototype.indexOf ? function (a, b, c) {
      v(null != a.length);return Array.prototype.indexOf.call(a, b, c);
    } : function (a, b, c) {
      c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;if (m(a)) return m(b) && 1 == b.length ? a.indexOf(b, c) : -1;for (; c < a.length; c++) {
        if (c in a && a[c] === b) return c;
      }return -1;
    },
        w = Array.prototype.forEach ? function (a, b, c) {
      v(null != a.length);Array.prototype.forEach.call(a, b, c);
    } : function (a, b, c) {
      for (var d = a.length, e = m(a) ? a.split("") : a, f = 0; f < d; f++) {
        f in e && b.call(c, e[f], f, a);
      }
    },
        Fa = function Fa(a, b) {
      for (var c = m(a) ? a.split("") : a, d = a.length - 1; 0 <= d; --d) {
        d in c && b.call(void 0, c[d], d, a);
      }
    },
        Ga = Array.prototype.map ? function (a, b, c) {
      v(null != a.length);return Array.prototype.map.call(a, b, c);
    } : function (a, b, c) {
      for (var d = a.length, e = Array(d), f = m(a) ? a.split("") : a, g = 0; g < d; g++) {
        g in f && (e[g] = b.call(c, f[g], g, a));
      }return e;
    },
        Ha = Array.prototype.some ? function (a, b, c) {
      v(null != a.length);return Array.prototype.some.call(a, b, c);
    } : function (a, b, c) {
      for (var d = a.length, e = m(a) ? a.split("") : a, f = 0; f < d; f++) {
        if (f in e && b.call(c, e[f], f, a)) return !0;
      }return !1;
    },
        Ja = function Ja(a) {
      a: {
        var b = Ia;for (var c = a.length, d = m(a) ? a.split("") : a, e = 0; e < c; e++) {
          if (e in d && b.call(void 0, d[e], e, a)) {
            b = e;break a;
          }
        }b = -1;
      }return 0 > b ? null : m(a) ? a.charAt(b) : a[b];
    },
        Ka = function Ka(a, b) {
      return 0 <= Ea(a, b);
    },
        Ma = function Ma(a, b) {
      b = Ea(a, b);var c;(c = 0 <= b) && La(a, b);return c;
    },
        La = function La(a, b) {
      v(null != a.length);return 1 == Array.prototype.splice.call(a, b, 1).length;
    },
        Na = function Na(a, b) {
      var c = 0;Fa(a, function (d, e) {
        b.call(void 0, d, e, a) && La(a, e) && c++;
      });
    },
        Oa = function Oa(a) {
      return Array.prototype.concat.apply([], arguments);
    },
        Pa = function Pa(a) {
      var b = a.length;if (0 < b) {
        for (var c = Array(b), d = 0; d < b; d++) {
          c[d] = a[d];
        }return c;
      }return [];
    };var Qa = function Qa(a) {
      return Ga(a, function (a) {
        a = a.toString(16);return 1 < a.length ? a : "0" + a;
      }).join("");
    };var Ra;a: {
      var Sa = k.navigator;if (Sa) {
        var Ta = Sa.userAgent;if (Ta) {
          Ra = Ta;break a;
        }
      }Ra = "";
    }var x = function x(a) {
      return u(Ra, a);
    };var Ua = function Ua(a, b) {
      for (var c in a) {
        b.call(void 0, a[c], c, a);
      }
    },
        Va = function Va(a) {
      var b = [],
          c = 0,
          d;for (d in a) {
        b[c++] = a[d];
      }return b;
    },
        Wa = function Wa(a) {
      var b = [],
          c = 0,
          d;for (d in a) {
        b[c++] = d;
      }return b;
    },
        Xa = function Xa(a) {
      for (var b in a) {
        return !1;
      }return !0;
    },
        Ya = function Ya(a, b) {
      for (var c in a) {
        if (!(c in b) || a[c] !== b[c]) return !1;
      }for (c in b) {
        if (!(c in a)) return !1;
      }return !0;
    },
        Za = function Za(a) {
      var b = {},
          c;for (c in a) {
        b[c] = a[c];
      }return b;
    },
        $a = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),
        ab = function ab(a, b) {
      for (var c, d, e = 1; e < arguments.length; e++) {
        d = arguments[e];for (c in d) {
          a[c] = d[c];
        }for (var f = 0; f < $a.length; f++) {
          c = $a[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
        }
      }
    };var bb = function bb(a) {
      bb[" "](a);return a;
    };bb[" "] = da;var db = function db(a, b) {
      var c = cb;return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
    };var eb = x("Opera"),
        y = x("Trident") || x("MSIE"),
        fb = x("Edge"),
        gb = fb || y,
        hb = x("Gecko") && !(u(Ra.toLowerCase(), "webkit") && !x("Edge")) && !(x("Trident") || x("MSIE")) && !x("Edge"),
        ib = u(Ra.toLowerCase(), "webkit") && !x("Edge"),
        jb = function jb() {
      var a = k.document;return a ? a.documentMode : void 0;
    },
        kb;
    a: {
      var mb = "",
          nb = function () {
        var a = Ra;if (hb) return (/rv\:([^\);]+)(\)|;)/.exec(a)
        );if (fb) return (/Edge\/([\d\.]+)/.exec(a)
        );if (y) return (/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a)
        );if (ib) return (/WebKit\/(\S+)/.exec(a)
        );if (eb) return (/(?:Version)[ \/]?(\S+)/.exec(a)
        );
      }();nb && (mb = nb ? nb[1] : "");if (y) {
        var ob = jb();if (null != ob && ob > parseFloat(mb)) {
          kb = String(ob);break a;
        }
      }kb = mb;
    }
    var pb = kb,
        cb = {},
        z = function z(a) {
      return db(a, function () {
        for (var b = 0, c = oa(String(pb)).split("."), d = oa(String(a)).split("."), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {
          var g = c[f] || "",
              l = d[f] || "";do {
            g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];l = /(\d*)(\D*)(.*)/.exec(l) || ["", "", "", ""];if (0 == g[0].length && 0 == l[0].length) break;b = xa(0 == g[1].length ? 0 : parseInt(g[1], 10), 0 == l[1].length ? 0 : parseInt(l[1], 10)) || xa(0 == g[2].length, 0 == l[2].length) || xa(g[2], l[2]);g = g[3];l = l[3];
          } while (0 == b);
        }return 0 <= b;
      });
    },
        qb;var rb = k.document;
    qb = rb && y ? jb() || ("CSS1Compat" == rb.compatMode ? parseInt(pb, 10) : 5) : void 0;var sb = null,
        tb = null,
        vb = function vb(a) {
      var b = "";ub(a, function (a) {
        b += String.fromCharCode(a);
      });return b;
    },
        ub = function ub(a, b) {
      function c(b) {
        for (; d < a.length;) {
          var c = a.charAt(d++),
              e = tb[c];if (null != e) return e;if (!/^[\s\xa0]*$/.test(c)) throw Error("Unknown base64 encoding at char: " + c);
        }return b;
      }wb();for (var d = 0;;) {
        var e = c(-1),
            f = c(0),
            g = c(64),
            l = c(64);if (64 === l && -1 === e) break;b(e << 2 | f >> 4);64 != g && (b(f << 4 & 240 | g >> 2), 64 != l && b(g << 6 & 192 | l));
      }
    },
        wb = function wb() {
      if (!sb) {
        sb = {};tb = {};for (var a = 0; 65 > a; a++) {
          sb[a] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a), tb[sb[a]] = a, 62 <= a && (tb["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(a)] = a);
        }
      }
    };var xb = function xb() {
      this.Ea = -1;
    };var Ab = function Ab(a, b) {
      this.Ea = 64;this.kc = k.Uint8Array ? new Uint8Array(this.Ea) : Array(this.Ea);this.Qc = this.jb = 0;this.i = [];this.uf = a;this.ge = b;this.Uf = k.Int32Array ? new Int32Array(64) : Array(64);void 0 !== yb || (yb = k.Int32Array ? new Int32Array(zb) : zb);this.reset();
    },
        yb;r(Ab, xb);for (var Bb = [], Cb = 0; 63 > Cb; Cb++) {
      Bb[Cb] = 0;
    }var Db = Oa(128, Bb);Ab.prototype.reset = function () {
      this.Qc = this.jb = 0;this.i = k.Int32Array ? new Int32Array(this.ge) : Pa(this.ge);
    };
    var Eb = function Eb(a) {
      var b = a.kc;v(b.length == a.Ea);for (var c = a.Uf, d = 0, e = 0; e < b.length;) {
        c[d++] = b[e] << 24 | b[e + 1] << 16 | b[e + 2] << 8 | b[e + 3], e = 4 * d;
      }for (b = 16; 64 > b; b++) {
        d = c[b - 15] | 0;e = c[b - 2] | 0;e = (e >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10;var f = (c[b - 16] | 0) + ((d >>> 7 | d << 25) ^ (d >>> 18 | d << 14) ^ d >>> 3) | 0;var g = (c[b - 7] | 0) + e | 0;c[b] = f + g | 0;
      }var d = a.i[0] | 0,
          e = a.i[1] | 0,
          l = a.i[2] | 0,
          n = a.i[3] | 0,
          C = a.i[4] | 0,
          lb = a.i[5] | 0,
          Tb = a.i[6] | 0;f = a.i[7] | 0;for (b = 0; 64 > b; b++) {
        var Mh = ((d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10)) + (d & e ^ d & l ^ e & l) | 0;g = C & lb ^ ~C & Tb;f = f + ((C >>> 6 | C << 26) ^ (C >>> 11 | C << 21) ^ (C >>> 25 | C << 7)) | 0;g = g + (yb[b] | 0) | 0;g = f + (g + (c[b] | 0) | 0) | 0;f = Tb;Tb = lb;lb = C;C = n + g | 0;n = l;l = e;e = d;d = g + Mh | 0;
      }a.i[0] = a.i[0] + d | 0;a.i[1] = a.i[1] + e | 0;a.i[2] = a.i[2] + l | 0;a.i[3] = a.i[3] + n | 0;a.i[4] = a.i[4] + C | 0;a.i[5] = a.i[5] + lb | 0;a.i[6] = a.i[6] + Tb | 0;a.i[7] = a.i[7] + f | 0;
    };
    Ab.prototype.update = function (a, b) {
      void 0 === b && (b = a.length);var c = 0,
          d = this.jb;if (m(a)) for (; c < b;) {
        this.kc[d++] = a.charCodeAt(c++), d == this.Ea && (Eb(this), d = 0);
      } else if (ha(a)) for (; c < b;) {
        var e = a[c++];if (!("number" == typeof e && 0 <= e && 255 >= e && e == (e | 0))) throw Error("message must be a byte array");this.kc[d++] = e;d == this.Ea && (Eb(this), d = 0);
      } else throw Error("message must be string or array");this.jb = d;this.Qc += b;
    };
    Ab.prototype.digest = function () {
      var a = [],
          b = 8 * this.Qc;56 > this.jb ? this.update(Db, 56 - this.jb) : this.update(Db, this.Ea - (this.jb - 56));for (var c = 63; 56 <= c; c--) {
        this.kc[c] = b & 255, b /= 256;
      }Eb(this);for (c = b = 0; c < this.uf; c++) {
        for (var d = 24; 0 <= d; d -= 8) {
          a[b++] = this.i[c] >> d & 255;
        }
      }return a;
    };
    var zb = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];var Gb = function Gb() {
      Ab.call(this, 8, Fb);
    };r(Gb, Ab);var Fb = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];var Hb = function Hb() {
      this.Ha = this.Ha;this.Cc = this.Cc;
    };Hb.prototype.Ha = !1;Hb.prototype.isDisposed = function () {
      return this.Ha;
    };Hb.prototype.gb = function () {
      if (this.Cc) for (; this.Cc.length;) {
        this.Cc.shift()();
      }
    };var Ib = !y || 9 <= Number(qb),
        Jb = y && !z("9");!ib || z("528");hb && z("1.9b") || y && z("8") || eb && z("9.5") || ib && z("528");hb && !z("8") || y && z("9");var Kb = function Kb(a, b) {
      this.type = a;this.currentTarget = this.target = b;this.defaultPrevented = this.pb = !1;this.qe = !0;
    };Kb.prototype.preventDefault = function () {
      this.defaultPrevented = !0;this.qe = !1;
    };var Lb = function Lb(a, b) {
      Kb.call(this, a ? a.type : "");this.relatedTarget = this.currentTarget = this.target = null;this.button = this.screenY = this.screenX = this.clientY = this.clientX = this.offsetY = this.offsetX = 0;this.key = "";this.charCode = this.keyCode = 0;this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;this.Ia = this.state = null;a && this.init(a, b);
    };r(Lb, Kb);
    Lb.prototype.init = function (a, b) {
      var c = this.type = a.type,
          d = a.changedTouches ? a.changedTouches[0] : null;this.target = a.target || a.srcElement;this.currentTarget = b;if (b = a.relatedTarget) {
        if (hb) {
          a: {
            try {
              bb(b.nodeName);var e = !0;break a;
            } catch (f) {}e = !1;
          }e || (b = null);
        }
      } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);this.relatedTarget = b;null === d ? (this.offsetX = ib || void 0 !== a.offsetX ? a.offsetX : a.layerX, this.offsetY = ib || void 0 !== a.offsetY ? a.offsetY : a.layerY, this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0) : (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0);this.button = a.button;this.keyCode = a.keyCode || 0;this.key = a.key || "";this.charCode = a.charCode || ("keypress" == c ? a.keyCode : 0);this.ctrlKey = a.ctrlKey;this.altKey = a.altKey;this.shiftKey = a.shiftKey;this.metaKey = a.metaKey;this.state = a.state;this.Ia = a;a.defaultPrevented && this.preventDefault();
    };Lb.prototype.preventDefault = function () {
      Lb.Id.preventDefault.call(this);var a = this.Ia;if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Jb) try {
        if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
      } catch (b) {}
    };Lb.prototype.Ze = function () {
      return this.Ia;
    };var Mb = "closure_listenable_" + (1E6 * Math.random() | 0),
        Nb = 0;var Ob = function Ob(a, b, c, d, e) {
      this.listener = a;this.Gc = null;this.src = b;this.type = c;this.capture = !!d;this.qc = e;this.key = ++Nb;this.tb = this.jc = !1;
    },
        Pb = function Pb(a) {
      a.tb = !0;a.listener = null;a.Gc = null;a.src = null;a.qc = null;
    };var Qb = function Qb(a) {
      this.src = a;this.J = {};this.ec = 0;
    };Qb.prototype.add = function (a, b, c, d, e) {
      var f = a.toString();a = this.J[f];a || (a = this.J[f] = [], this.ec++);var g = Rb(a, b, d, e);-1 < g ? (b = a[g], c || (b.jc = !1)) : (b = new Ob(b, this.src, f, !!d, e), b.jc = c, a.push(b));return b;
    };Qb.prototype.remove = function (a, b, c, d) {
      a = a.toString();if (!(a in this.J)) return !1;var e = this.J[a];b = Rb(e, b, c, d);return -1 < b ? (Pb(e[b]), La(e, b), 0 == e.length && (delete this.J[a], this.ec--), !0) : !1;
    };
    var Sb = function Sb(a, b) {
      var c = b.type;c in a.J && Ma(a.J[c], b) && (Pb(b), 0 == a.J[c].length && (delete a.J[c], a.ec--));
    };Qb.prototype.fd = function (a, b, c, d) {
      a = this.J[a.toString()];var e = -1;a && (e = Rb(a, b, c, d));return -1 < e ? a[e] : null;
    };var Rb = function Rb(a, b, c, d) {
      for (var e = 0; e < a.length; ++e) {
        var f = a[e];if (!f.tb && f.listener == b && f.capture == !!c && f.qc == d) return e;
      }return -1;
    };var Ub = "closure_lm_" + (1E6 * Math.random() | 0),
        Vb = {},
        Wb = 0,
        Xb = function Xb(a, b, c, d, e) {
      if (ga(b)) for (var f = 0; f < b.length; f++) {
        Xb(a, b[f], c, d, e);
      } else c = Yb(c), a && a[Mb] ? a.listen(b, c, d, e) : Zb(a, b, c, !1, d, e);
    },
        Zb = function Zb(a, b, c, d, e, f) {
      if (!b) throw Error("Invalid event type");var g = !!e,
          l = $b(a);l || (a[Ub] = l = new Qb(a));c = l.add(b, c, d, e, f);if (!c.Gc) {
        d = ac();c.Gc = d;d.src = a;d.listener = c;if (a.addEventListener) a.addEventListener(b.toString(), d, g);else if (a.attachEvent) a.attachEvent(bc(b.toString()), d);else throw Error("addEventListener and attachEvent are unavailable.");
        Wb++;
      }
    },
        ac = function ac() {
      var a = cc,
          b = Ib ? function (c) {
        return a.call(b.src, b.listener, c);
      } : function (c) {
        c = a.call(b.src, b.listener, c);if (!c) return c;
      };return b;
    },
        dc = function dc(a, b, c, d, e) {
      if (ga(b)) for (var f = 0; f < b.length; f++) {
        dc(a, b[f], c, d, e);
      } else c = Yb(c), a && a[Mb] ? ec(a, b, c, d, e) : Zb(a, b, c, !0, d, e);
    },
        fc = function fc(a, b, c, d, e) {
      if (ga(b)) for (var f = 0; f < b.length; f++) {
        fc(a, b[f], c, d, e);
      } else c = Yb(c), a && a[Mb] ? a.ja.remove(String(b), c, d, e) : a && (a = $b(a)) && (b = a.fd(b, c, !!d, e)) && gc(b);
    },
        gc = function gc(a) {
      if (!ca(a) && a && !a.tb) {
        var b = a.src;if (b && b[Mb]) Sb(b.ja, a);else {
          var c = a.type,
              d = a.Gc;b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent && b.detachEvent(bc(c), d);Wb--;(c = $b(b)) ? (Sb(c, a), 0 == c.ec && (c.src = null, b[Ub] = null)) : Pb(a);
        }
      }
    },
        bc = function bc(a) {
      return a in Vb ? Vb[a] : Vb[a] = "on" + a;
    },
        ic = function ic(a, b, c, d) {
      var e = !0;if (a = $b(a)) if (b = a.J[b.toString()]) for (b = b.concat(), a = 0; a < b.length; a++) {
        var f = b[a];f && f.capture == c && !f.tb && (f = hc(f, d), e = e && !1 !== f);
      }return e;
    },
        hc = function hc(a, b) {
      var c = a.listener,
          d = a.qc || a.src;a.jc && gc(a);return c.call(d, b);
    },
        cc = function cc(a, b) {
      if (a.tb) return !0;if (!Ib) {
        if (!b) a: {
          b = ["window", "event"];for (var c = k, d; d = b.shift();) {
            if (null != c[d]) c = c[d];else {
              b = null;break a;
            }
          }b = c;
        }d = b;b = new Lb(d, this);c = !0;if (!(0 > d.keyCode || void 0 != d.returnValue)) {
          a: {
            var e = !1;if (0 == d.keyCode) try {
              d.keyCode = -1;break a;
            } catch (g) {
              e = !0;
            }if (e || void 0 == d.returnValue) d.returnValue = !0;
          }d = [];for (e = b.currentTarget; e; e = e.parentNode) {
            d.push(e);
          }for (var e = a.type, f = d.length - 1; !b.pb && 0 <= f; f--) {
            b.currentTarget = d[f], a = ic(d[f], e, !0, b), c = c && a;
          }for (f = 0; !b.pb && f < d.length; f++) {
            b.currentTarget = d[f], a = ic(d[f], e, !1, b), c = c && a;
          }
        }return c;
      }return hc(a, new Lb(b, this));
    },
        $b = function $b(a) {
      a = a[Ub];return a instanceof Qb ? a : null;
    },
        jc = "__closure_events_fn_" + (1E9 * Math.random() >>> 0),
        Yb = function Yb(a) {
      v(a, "Listener can not be null.");if (p(a)) return a;v(a.handleEvent, "An object listener must have handleEvent method.");a[jc] || (a[jc] = function (b) {
        return a.handleEvent(b);
      });return a[jc];
    };var kc = /^[+a-zA-Z0-9_.!#$%&'*\/=?^`{|}~-]+@([a-zA-Z0-9-]+\.)+[a-zA-Z0-9]{2,63}$/;var mc = function mc() {
      this.Mc = "";this.Ge = lc;
    };mc.prototype.Ib = !0;mc.prototype.Fb = function () {
      return this.Mc;
    };mc.prototype.toString = function () {
      return "Const{" + this.Mc + "}";
    };var nc = function nc(a) {
      if (a instanceof mc && a.constructor === mc && a.Ge === lc) return a.Mc;Aa("expected object of type Const, got '" + a + "'");return "type_error:Const";
    },
        lc = {},
        oc = function oc(a) {
      var b = new mc();b.Mc = a;return b;
    };oc("");var qc = function qc() {
      this.Fc = "";this.He = pc;
    };qc.prototype.Ib = !0;qc.prototype.Fb = function () {
      return this.Fc;
    };qc.prototype.toString = function () {
      return "TrustedResourceUrl{" + this.Fc + "}";
    };var rc = function rc(a) {
      if (a instanceof qc && a.constructor === qc && a.He === pc) return a.Fc;Aa("expected object of type TrustedResourceUrl, got '" + a + "' of type " + ea(a));return "type_error:TrustedResourceUrl";
    },
        pc = {};var tc = function tc() {
      this.qa = "";this.Fe = sc;
    };tc.prototype.Ib = !0;tc.prototype.Fb = function () {
      return this.qa;
    };tc.prototype.toString = function () {
      return "SafeUrl{" + this.qa + "}";
    };
    var uc = function uc(a) {
      if (a instanceof tc && a.constructor === tc && a.Fe === sc) return a.qa;Aa("expected object of type SafeUrl, got '" + a + "' of type " + ea(a));return "type_error:SafeUrl";
    },
        vc = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i,
        xc = function xc(a) {
      if (a instanceof tc) return a;a = a.Ib ? a.Fb() : String(a);vc.test(a) || (a = "about:invalid#zClosurez");return wc(a);
    },
        sc = {},
        wc = function wc(a) {
      var b = new tc();b.qa = a;return b;
    };wc("about:blank");var Ac = function Ac(a) {
      var b = [];yc(new zc(), a, b);return b.join("");
    },
        zc = function zc() {
      this.Hc = void 0;
    },
        yc = function yc(a, b, c) {
      if (null == b) c.push("null");else {
        if ("object" == typeof b) {
          if (ga(b)) {
            var d = b;b = d.length;c.push("[");for (var e = "", f = 0; f < b; f++) {
              c.push(e), e = d[f], yc(a, a.Hc ? a.Hc.call(d, String(f), e) : e, c), e = ",";
            }c.push("]");return;
          }if (b instanceof String || b instanceof Number || b instanceof Boolean) b = b.valueOf();else {
            c.push("{");f = "";for (d in b) {
              Object.prototype.hasOwnProperty.call(b, d) && (e = b[d], "function" != typeof e && (c.push(f), Bc(d, c), c.push(":"), yc(a, a.Hc ? a.Hc.call(b, d, e) : e, c), f = ","));
            }c.push("}");return;
          }
        }switch (typeof b) {case "string":
            Bc(b, c);break;case "number":
            c.push(isFinite(b) && !isNaN(b) ? String(b) : "null");break;case "boolean":
            c.push(String(b));break;case "function":
            c.push("null");break;default:
            throw Error("Unknown type: " + typeof b);}
      }
    },
        Cc = { '"': '\\"', "\\": "\\\\", "/": "\\/", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "\t": "\\t", "\x0B": "\\u000b" },
        Dc = /\uffff/.test("\uFFFF") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g,
        Bc = function Bc(a, b) {
      b.push('"', a.replace(Dc, function (a) {
        var b = Cc[a];b || (b = "\\u" + (a.charCodeAt(0) | 65536).toString(16).substr(1), Cc[a] = b);return b;
      }), '"');
    };var Ec = function Ec() {};Ec.prototype.Nd = null;var Fc = function Fc(a) {
      return a.Nd || (a.Nd = a.md());
    };var Gc,
        Hc = function Hc() {};r(Hc, Ec);Hc.prototype.lc = function () {
      var a = Ic(this);return a ? new ActiveXObject(a) : new XMLHttpRequest();
    };Hc.prototype.md = function () {
      var a = {};Ic(this) && (a[0] = !0, a[1] = !0);return a;
    };
    var Ic = function Ic(a) {
      if (!a.fe && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
        for (var b = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], c = 0; c < b.length; c++) {
          var d = b[c];try {
            return new ActiveXObject(d), a.fe = d;
          } catch (e) {}
        }throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
      }return a.fe;
    };Gc = new Hc();var Jc = function Jc() {};r(Jc, Ec);Jc.prototype.lc = function () {
      var a = new XMLHttpRequest();if ("withCredentials" in a) return a;if ("undefined" != typeof XDomainRequest) return new Kc();throw Error("Unsupported browser");
    };Jc.prototype.md = function () {
      return {};
    };
    var Kc = function Kc() {
      this.va = new XDomainRequest();this.readyState = 0;this.onreadystatechange = null;this.responseText = "";this.status = -1;this.statusText = this.responseXML = null;this.va.onload = _q(this.af, this);this.va.onerror = _q(this.be, this);this.va.onprogress = _q(this.bf, this);this.va.ontimeout = _q(this.cf, this);
    };h = Kc.prototype;h.open = function (a, b, c) {
      if (null != c && !c) throw Error("Only async requests are supported.");this.va.open(a, b);
    };
    h.send = function (a) {
      if (a) {
        if ("string" == typeof a) this.va.send(a);else throw Error("Only string data is supported");
      } else this.va.send();
    };h.abort = function () {
      this.va.abort();
    };h.setRequestHeader = function () {};h.af = function () {
      this.status = 200;this.responseText = this.va.responseText;Lc(this, 4);
    };h.be = function () {
      this.status = 500;this.responseText = "";Lc(this, 4);
    };h.cf = function () {
      this.be();
    };h.bf = function () {
      this.status = 200;Lc(this, 1);
    };var Lc = function Lc(a, b) {
      a.readyState = b;if (a.onreadystatechange) a.onreadystatechange();
    };var Mc = function Mc(a, b, c) {
      this.pf = c;this.Oe = a;this.Ef = b;this.Bc = 0;this.rc = null;
    };Mc.prototype.get = function () {
      if (0 < this.Bc) {
        this.Bc--;var a = this.rc;this.rc = a.next;a.next = null;
      } else a = this.Oe();return a;
    };Mc.prototype.put = function (a) {
      this.Ef(a);this.Bc < this.pf && (this.Bc++, a.next = this.rc, this.rc = a);
    };var Nc = function Nc(a) {
      k.setTimeout(function () {
        throw a;
      }, 0);
    },
        Oc,
        Pc = function Pc() {
      var a = k.MessageChannel;"undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !x("Presto") && (a = function a() {
        var a = document.createElement("IFRAME");a.style.display = "none";a.src = "";document.documentElement.appendChild(a);var b = a.contentWindow,
            a = b.document;a.open();a.write("");a.close();var c = "callImmediate" + Math.random(),
            d = "file:" == b.location.protocol ? "*" : b.location.protocol + "//" + b.location.host,
            a = _q(function (a) {
          if (("*" == d || a.origin == d) && a.data == c) this.port1.onmessage();
        }, this);b.addEventListener("message", a, !1);this.port1 = {};this.port2 = { postMessage: function postMessage() {
            b.postMessage(c, d);
          } };
      });if ("undefined" !== typeof a && !x("Trident") && !x("MSIE")) {
        var b = new a(),
            c = {},
            d = c;b.port1.onmessage = function () {
          if (void 0 !== c.next) {
            c = c.next;var a = c.Qd;c.Qd = null;a();
          }
        };return function (a) {
          d.next = { Qd: a };d = d.next;b.port2.postMessage(0);
        };
      }return "undefined" !== typeof document && "onreadystatechange" in document.createElement("SCRIPT") ? function (a) {
        var b = document.createElement("SCRIPT");b.onreadystatechange = function () {
          b.onreadystatechange = null;b.parentNode.removeChild(b);b = null;a();a = null;
        };document.documentElement.appendChild(b);
      } : function (a) {
        k.setTimeout(a, 0);
      };
    };var Qc = function Qc() {
      this.Vc = this.bb = null;
    },
        Sc = new Mc(function () {
      return new Rc();
    }, function (a) {
      a.reset();
    }, 100);Qc.prototype.add = function (a, b) {
      var c = Sc.get();c.set(a, b);this.Vc ? this.Vc.next = c : (v(!this.bb), this.bb = c);this.Vc = c;
    };Qc.prototype.remove = function () {
      var a = null;this.bb && (a = this.bb, this.bb = this.bb.next, this.bb || (this.Vc = null), a.next = null);return a;
    };var Rc = function Rc() {
      this.next = this.scope = this.ed = null;
    };Rc.prototype.set = function (a, b) {
      this.ed = a;this.scope = b;this.next = null;
    };
    Rc.prototype.reset = function () {
      this.next = this.scope = this.ed = null;
    };var Xc = function Xc(a, b) {
      Tc || Uc();Vc || (Tc(), Vc = !0);Wc.add(a, b);
    },
        Tc,
        Uc = function Uc() {
      if (-1 != String(k.Promise).indexOf("[native code]")) {
        var a = k.Promise.resolve(void 0);Tc = function Tc() {
          a.then(Yc);
        };
      } else Tc = function Tc() {
        var a = Yc;!p(k.setImmediate) || k.Window && k.Window.prototype && !x("Edge") && k.Window.prototype.setImmediate == k.setImmediate ? (Oc || (Oc = Pc()), Oc(a)) : k.setImmediate(a);
      };
    },
        Vc = !1,
        Wc = new Qc(),
        Yc = function Yc() {
      for (var a; a = Wc.remove();) {
        try {
          a.ed.call(a.scope);
        } catch (b) {
          Nc(b);
        }Sc.put(a);
      }Vc = !1;
    };var Zc = function Zc(a) {
      return ia(a) ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : void 0 === a ? "undefined" : null === a ? "null" : typeof a;
    };var $c = !y || 9 <= Number(qb);!hb && !y || y && 9 <= Number(qb) || hb && z("1.9.1");y && z("9");var bd = function bd() {
      this.qa = "";this.Ee = ad;
    };bd.prototype.Ib = !0;bd.prototype.Fb = function () {
      return this.qa;
    };bd.prototype.toString = function () {
      return "SafeHtml{" + this.qa + "}";
    };var cd = function cd(a) {
      if (a instanceof bd && a.constructor === bd && a.Ee === ad) return a.qa;Aa("expected object of type SafeHtml, got '" + a + "' of type " + ea(a));return "type_error:SafeHtml";
    },
        ad = {};bd.prototype.jf = function (a) {
      this.qa = a;return this;
    };var dd = function dd(a, b) {
      "undefined" != typeof HTMLScriptElement && "undefined" != typeof Element && v(a && (a instanceof HTMLScriptElement || !(a instanceof Element)), "Argument is not a HTMLScriptElement (or a non-Element mock); got: %s", Zc(a));a.src = rc(b);
    };var ed = function ed(a) {
      var b = document;return m(a) ? b.getElementById(a) : a;
    },
        gd = function gd(a, b) {
      Ua(b, function (b, d) {
        b && b.Ib && (b = b.Fb());"style" == d ? a.style.cssText = b : "class" == d ? a.className = b : "for" == d ? a.htmlFor = b : fd.hasOwnProperty(d) ? a.setAttribute(fd[d], b) : 0 == d.lastIndexOf("aria-", 0) || 0 == d.lastIndexOf("data-", 0) ? a.setAttribute(d, b) : a[d] = b;
      });
    },
        fd = { cellpadding: "cellPadding", cellspacing: "cellSpacing", colspan: "colSpan", frameborder: "frameBorder", height: "height", maxlength: "maxLength", nonce: "nonce", role: "role", rowspan: "rowSpan",
      type: "type", usemap: "useMap", valign: "vAlign", width: "width" },
        id = function id(a, b, c) {
      var d = arguments,
          e = document,
          f = String(d[0]),
          g = d[1];if (!$c && g && (g.name || g.type)) {
        f = ["<", f];g.name && f.push(' name="', wa(g.name), '"');if (g.type) {
          f.push(' type="', wa(g.type), '"');var l = {};ab(l, g);delete l.type;g = l;
        }f.push(">");f = f.join("");
      }f = e.createElement(f);g && (m(g) ? f.className = g : ga(g) ? f.className = g.join(" ") : gd(f, g));2 < d.length && hd(e, f, d);return f;
    },
        hd = function hd(a, b, c) {
      function d(c) {
        c && b.appendChild(m(c) ? a.createTextNode(c) : c);
      }for (var e = 2; e < c.length; e++) {
        var f = c[e];!ha(f) || ia(f) && 0 < f.nodeType ? d(f) : w(jd(f) ? Pa(f) : f, d);
      }
    },
        jd = function jd(a) {
      if (a && "number" == typeof a.length) {
        if (ia(a)) return "function" == typeof a.item || "string" == typeof a.item;if (p(a)) return "function" == typeof a.item;
      }return !1;
    };var kd = function kd(a) {
      a.prototype.then = a.prototype.then;a.prototype.$goog_Thenable = !0;
    },
        ld = function ld(a) {
      if (!a) return !1;try {
        return !!a.$goog_Thenable;
      } catch (b) {
        return !1;
      }
    };var A = function A(a, b) {
      this.W = 0;this.sa = void 0;this.fb = this.oa = this.u = null;this.pc = this.dd = !1;if (a != da) try {
        var c = this;a.call(b, function (a) {
          md(c, 2, a);
        }, function (a) {
          if (!(a instanceof nd)) try {
            if (a instanceof Error) throw a;throw Error("Promise rejected.");
          } catch (e) {}md(c, 3, a);
        });
      } catch (d) {
        md(this, 3, d);
      }
    },
        od = function od() {
      this.next = this.context = this.lb = this.Qa = this.child = null;this.yb = !1;
    };od.prototype.reset = function () {
      this.context = this.lb = this.Qa = this.child = null;this.yb = !1;
    };
    var pd = new Mc(function () {
      return new od();
    }, function (a) {
      a.reset();
    }, 100),
        qd = function qd(a, b, c) {
      var d = pd.get();d.Qa = a;d.lb = b;d.context = c;return d;
    },
        B = function B(a) {
      if (a instanceof A) return a;var b = new A(da);md(b, 2, a);return b;
    },
        D = function D(a) {
      return new A(function (b, c) {
        c(a);
      });
    },
        sd = function sd(a, b, c) {
      rd(a, b, c, null) || Xc(la(b, a));
    },
        td = function td(a) {
      return new A(function (b) {
        var c = a.length,
            d = [];if (c) for (var e = function e(a, _e, f) {
          c--;d[a] = _e ? { Xe: !0, value: f } : { Xe: !1, reason: f };0 == c && b(d);
        }, f = 0, g; f < a.length; f++) {
          g = a[f], sd(g, la(e, f, !0), la(e, f, !1));
        } else b(d);
      });
    };A.prototype.then = function (a, b, c) {
      null != a && Da(a, "opt_onFulfilled should be a function.");null != b && Da(b, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");return ud(this, p(a) ? a : null, p(b) ? b : null, c);
    };kd(A);var wd = function wd(a, b) {
      b = qd(b, b, void 0);b.yb = !0;vd(a, b);return a;
    };A.prototype.f = function (a, b) {
      return ud(this, null, a, b);
    };A.prototype.cancel = function (a) {
      0 == this.W && Xc(function () {
        var b = new nd(a);xd(this, b);
      }, this);
    };
    var xd = function xd(a, b) {
      if (0 == a.W) if (a.u) {
        var c = a.u;if (c.oa) {
          for (var d = 0, e = null, f = null, g = c.oa; g && (g.yb || (d++, g.child == a && (e = g), !(e && 1 < d))); g = g.next) {
            e || (f = g);
          }e && (0 == c.W && 1 == d ? xd(c, b) : (f ? (d = f, v(c.oa), v(null != d), d.next == c.fb && (c.fb = d), d.next = d.next.next) : yd(c), zd(c, e, 3, b)));
        }a.u = null;
      } else md(a, 3, b);
    },
        vd = function vd(a, b) {
      a.oa || 2 != a.W && 3 != a.W || Ad(a);v(null != b.Qa);a.fb ? a.fb.next = b : a.oa = b;a.fb = b;
    },
        ud = function ud(a, b, c, d) {
      var e = qd(null, null, null);e.child = new A(function (a, g) {
        e.Qa = b ? function (c) {
          try {
            var e = b.call(d, c);a(e);
          } catch (C) {
            g(C);
          }
        } : a;e.lb = c ? function (b) {
          try {
            var e = c.call(d, b);void 0 === e && b instanceof nd ? g(b) : a(e);
          } catch (C) {
            g(C);
          }
        } : g;
      });e.child.u = a;vd(a, e);return e.child;
    };A.prototype.Rf = function (a) {
      v(1 == this.W);this.W = 0;md(this, 2, a);
    };A.prototype.Sf = function (a) {
      v(1 == this.W);this.W = 0;md(this, 3, a);
    };
    var md = function md(a, b, c) {
      0 == a.W && (a === c && (b = 3, c = new TypeError("Promise cannot resolve to itself")), a.W = 1, rd(c, a.Rf, a.Sf, a) || (a.sa = c, a.W = b, a.u = null, Ad(a), 3 != b || c instanceof nd || Bd(a, c)));
    },
        rd = function rd(a, b, c, d) {
      if (a instanceof A) return null != b && Da(b, "opt_onFulfilled should be a function."), null != c && Da(c, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?"), vd(a, qd(b || da, c || null, d)), !0;if (ld(a)) return a.then(b, c, d), !0;if (ia(a)) try {
        var e = a.then;if (p(e)) return Cd(a, e, b, c, d), !0;
      } catch (f) {
        return c.call(d, f), !0;
      }return !1;
    },
        Cd = function Cd(a, b, c, d, e) {
      var f = !1,
          g = function g(a) {
        f || (f = !0, c.call(e, a));
      },
          l = function l(a) {
        f || (f = !0, d.call(e, a));
      };try {
        b.call(a, g, l);
      } catch (n) {
        l(n);
      }
    },
        Ad = function Ad(a) {
      a.dd || (a.dd = !0, Xc(a.Te, a));
    },
        yd = function yd(a) {
      var b = null;a.oa && (b = a.oa, a.oa = b.next, b.next = null);a.oa || (a.fb = null);null != b && v(null != b.Qa);return b;
    };A.prototype.Te = function () {
      for (var a; a = yd(this);) {
        zd(this, a, this.W, this.sa);
      }this.dd = !1;
    };
    var zd = function zd(a, b, c, d) {
      if (3 == c && b.lb && !b.yb) for (; a && a.pc; a = a.u) {
        a.pc = !1;
      }if (b.child) b.child.u = null, Dd(b, c, d);else try {
        b.yb ? b.Qa.call(b.context) : Dd(b, c, d);
      } catch (e) {
        Ed.call(null, e);
      }pd.put(b);
    },
        Dd = function Dd(a, b, c) {
      2 == b ? a.Qa.call(a.context, c) : a.lb && a.lb.call(a.context, c);
    },
        Bd = function Bd(a, b) {
      a.pc = !0;Xc(function () {
        a.pc && Ed.call(null, b);
      });
    },
        Ed = Nc,
        nd = function nd(a) {
      t.call(this, a);
    };r(nd, t);nd.prototype.name = "cancel";
    var Fd = function Fd(a, b) {
      this.Jc = [];this.le = a;this.Ud = b || null;this.Gb = this.hb = !1;this.sa = void 0;this.Fd = this.Ld = this.Zc = !1;this.Rc = 0;this.u = null;this.$c = 0;
    };Fd.prototype.cancel = function (a) {
      if (this.hb) this.sa instanceof Fd && this.sa.cancel();else {
        if (this.u) {
          var b = this.u;delete this.u;a ? b.cancel(a) : (b.$c--, 0 >= b.$c && b.cancel());
        }this.le ? this.le.call(this.Ud, this) : this.Fd = !0;this.hb || Gd(this, new Hd());
      }
    };Fd.prototype.Sd = function (a, b) {
      this.Zc = !1;Id(this, a, b);
    };
    var Id = function Id(a, b, c) {
      a.hb = !0;a.sa = c;a.Gb = !b;Jd(a);
    },
        Ld = function Ld(a) {
      if (a.hb) {
        if (!a.Fd) throw new Kd();a.Fd = !1;
      }
    };Fd.prototype.callback = function (a) {
      Ld(this);Md(a);Id(this, !0, a);
    };
    var Gd = function Gd(a, b) {
      Ld(a);Md(b);Id(a, !1, b);
    },
        Md = function Md(a) {
      v(!(a instanceof Fd), "An execution sequence may not be initiated with a blocking Deferred.");
    },
        Qd = function Qd(a) {
      var b = Nd("https://apis.google.com/js/client.js?onload=" + Od);Pd(b, null, a, void 0);
    },
        Pd = function Pd(a, b, c, d) {
      v(!a.Ld, "Blocking Deferreds can not be re-used");a.Jc.push([b, c, d]);a.hb && Jd(a);
    };Fd.prototype.then = function (a, b, c) {
      var d,
          e,
          f = new A(function (a, b) {
        d = a;e = b;
      });Pd(this, d, function (a) {
        a instanceof Hd ? f.cancel() : e(a);
      });return f.then(a, b, c);
    };
    kd(Fd);
    var Rd = function Rd(a) {
      return Ha(a.Jc, function (a) {
        return p(a[1]);
      });
    },
        Jd = function Jd(a) {
      if (a.Rc && a.hb && Rd(a)) {
        var b = a.Rc,
            c = Sd[b];c && (k.clearTimeout(c.Hb), delete Sd[b]);a.Rc = 0;
      }a.u && (a.u.$c--, delete a.u);for (var b = a.sa, d = c = !1; a.Jc.length && !a.Zc;) {
        var e = a.Jc.shift(),
            f = e[0],
            g = e[1],
            e = e[2];if (f = a.Gb ? g : f) try {
          var l = f.call(e || a.Ud, b);void 0 !== l && (a.Gb = a.Gb && (l == b || l instanceof Error), a.sa = b = l);if (ld(b) || "function" === typeof k.Promise && b instanceof k.Promise) d = !0, a.Zc = !0;
        } catch (n) {
          b = n, a.Gb = !0, Rd(a) || (c = !0);
        }
      }a.sa = b;d && (l = _q(a.Sd, a, !0), d = _q(a.Sd, a, !1), b instanceof Fd ? (Pd(b, l, d), b.Ld = !0) : b.then(l, d));c && (b = new Td(b), Sd[b.Hb] = b, a.Rc = b.Hb);
    },
        Kd = function Kd() {
      t.call(this);
    };r(Kd, t);Kd.prototype.message = "Deferred has already fired";Kd.prototype.name = "AlreadyCalledError";var Hd = function Hd() {
      t.call(this);
    };r(Hd, t);Hd.prototype.message = "Deferred was canceled";Hd.prototype.name = "CanceledError";var Td = function Td(a) {
      this.Hb = k.setTimeout(_q(this.Qf, this), 0);this.X = a;
    };
    Td.prototype.Qf = function () {
      v(Sd[this.Hb], "Cannot throw an error that is not scheduled.");delete Sd[this.Hb];throw this.X;
    };var Sd = {};var Nd = function Nd(a) {
      var b = new qc();b.Fc = a;return Ud(b);
    },
        Ud = function Ud(a) {
      var b = {},
          c = b.document || document,
          d = rc(a),
          e = document.createElement("SCRIPT"),
          f = { re: e, dc: void 0 },
          g = new Fd(Vd, f),
          l = null,
          n = null != b.timeout ? b.timeout : 5E3;0 < n && (l = window.setTimeout(function () {
        Wd(e, !0);Gd(g, new Xd(1, "Timeout reached for loading script " + d));
      }, n), f.dc = l);e.onload = e.onreadystatechange = function () {
        e.readyState && "loaded" != e.readyState && "complete" != e.readyState || (Wd(e, b.bg || !1, l), g.callback(null));
      };e.onerror = function () {
        Wd(e, !0, l);Gd(g, new Xd(0, "Error while loading script " + d));
      };f = b.attributes || {};ab(f, { type: "text/javascript", charset: "UTF-8" });gd(e, f);dd(e, a);Yd(c).appendChild(e);return g;
    },
        Yd = function Yd(a) {
      var b;return (b = (a || document).getElementsByTagName("HEAD")) && 0 != b.length ? b[0] : a.documentElement;
    },
        Vd = function Vd() {
      if (this && this.re) {
        var a = this.re;a && "SCRIPT" == a.tagName && Wd(a, !0, this.dc);
      }
    },
        Wd = function Wd(a, b, c) {
      null != c && k.clearTimeout(c);a.onload = da;a.onerror = da;a.onreadystatechange = da;b && window.setTimeout(function () {
        a && a.parentNode && a.parentNode.removeChild(a);
      }, 0);
    },
        Xd = function Xd(a, b) {
      var c = "Jsloader error (code #" + a + ")";b && (c += ": " + b);t.call(this, c);this.code = a;
    };r(Xd, t);var Zd = function Zd(a, b, c, d, e) {
      this.reset(a, b, c, d, e);
    };Zd.prototype.Wd = null;var $d = 0;Zd.prototype.reset = function (a, b, c, d, e) {
      "number" == typeof e || $d++;d || ma();this.Nb = a;this.sf = b;delete this.Wd;
    };Zd.prototype.te = function (a) {
      this.Nb = a;
    };var ae = function ae(a) {
      this.tf = a;this.ce = this.ad = this.Nb = this.u = null;
    },
        be = function be(a, b) {
      this.name = a;this.value = b;
    };be.prototype.toString = function () {
      return this.name;
    };var ce = new be("SEVERE", 1E3),
        de = new be("CONFIG", 700),
        ee = new be("FINE", 500);ae.prototype.getParent = function () {
      return this.u;
    };ae.prototype.te = function (a) {
      this.Nb = a;
    };var fe = function fe(a) {
      if (a.Nb) return a.Nb;if (a.u) return fe(a.u);Aa("Root logger has no level set.");return null;
    };
    ae.prototype.log = function (a, b, c) {
      if (a.value >= fe(this).value) for (p(b) && (b = b()), a = new Zd(a, String(b), this.tf), c && (a.Wd = c), c = "log:" + a.sf, k.console && (k.console.timeStamp ? k.console.timeStamp(c) : k.console.markTimeline && k.console.markTimeline(c)), k.msWriteProfilerMark && k.msWriteProfilerMark(c), c = this; c;) {
        var d = c,
            e = a;if (d.ce) for (var f = 0; b = d.ce[f]; f++) {
          b(e);
        }c = c.getParent();
      }
    };
    var ge = {},
        he = null,
        ie = function ie(a) {
      he || (he = new ae(""), ge[""] = he, he.te(de));var b;if (!(b = ge[a])) {
        b = new ae(a);var c = a.lastIndexOf("."),
            d = a.substr(c + 1),
            c = ie(a.substr(0, c));c.ad || (c.ad = {});c.ad[d] = b;b.u = c;ge[a] = b;
      }return b;
    };var je = function je() {
      Hb.call(this);this.ja = new Qb(this);this.Je = this;this.rd = null;
    };r(je, Hb);je.prototype[Mb] = !0;h = je.prototype;h.addEventListener = function (a, b, c, d) {
      Xb(this, a, b, c, d);
    };h.removeEventListener = function (a, b, c, d) {
      fc(this, a, b, c, d);
    };
    h.dispatchEvent = function (a) {
      ke(this);var b = this.rd;if (b) {
        var c = [];for (var d = 1; b; b = b.rd) {
          c.push(b), v(1E3 > ++d, "infinite loop");
        }
      }b = this.Je;d = a.type || a;if (m(a)) a = new Kb(a, b);else if (a instanceof Kb) a.target = a.target || b;else {
        var e = a;a = new Kb(d, b);ab(a, e);
      }var e = !0;if (c) for (var f = c.length - 1; !a.pb && 0 <= f; f--) {
        var g = a.currentTarget = c[f];e = le(g, d, !0, a) && e;
      }a.pb || (g = a.currentTarget = b, e = le(g, d, !0, a) && e, a.pb || (e = le(g, d, !1, a) && e));if (c) for (f = 0; !a.pb && f < c.length; f++) {
        g = a.currentTarget = c[f], e = le(g, d, !1, a) && e;
      }return e;
    };
    h.gb = function () {
      je.Id.gb.call(this);if (this.ja) {
        var a = this.ja,
            b = 0,
            c;for (c in a.J) {
          for (var d = a.J[c], e = 0; e < d.length; e++) {
            ++b, Pb(d[e]);
          }delete a.J[c];a.ec--;
        }
      }this.rd = null;
    };h.listen = function (a, b, c, d) {
      ke(this);return this.ja.add(String(a), b, !1, c, d);
    };
    var ec = function ec(a, b, c, d, e) {
      a.ja.add(String(b), c, !0, d, e);
    },
        le = function le(a, b, c, d) {
      b = a.ja.J[String(b)];if (!b) return !0;b = b.concat();for (var e = !0, f = 0; f < b.length; ++f) {
        var g = b[f];if (g && !g.tb && g.capture == c) {
          var l = g.listener,
              n = g.qc || g.src;g.jc && Sb(a.ja, g);e = !1 !== l.call(n, d) && e;
        }
      }return e && 0 != d.qe;
    };je.prototype.fd = function (a, b, c, d) {
      return this.ja.fd(String(a), b, c, d);
    };var ke = function ke(a) {
      v(a.ja, "Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?");
    };var me = "StopIteration" in k ? k.StopIteration : { message: "StopIteration", stack: "" },
        ne = function ne() {};ne.prototype.next = function () {
      throw me;
    };ne.prototype.Ie = function () {
      return this;
    };var E = function E(a, b) {
      a && a.log(ee, b, void 0);
    };var oe = function oe(a, b) {
      this.ea = {};this.A = [];this.ab = this.o = 0;var c = arguments.length;if (1 < c) {
        if (c % 2) throw Error("Uneven number of arguments");for (var d = 0; d < c; d += 2) {
          this.set(arguments[d], arguments[d + 1]);
        }
      } else a && this.addAll(a);
    };h = oe.prototype;h.da = function () {
      pe(this);for (var a = [], b = 0; b < this.A.length; b++) {
        a.push(this.ea[this.A[b]]);
      }return a;
    };h.pa = function () {
      pe(this);return this.A.concat();
    };h.Ab = function (a) {
      return qe(this.ea, a);
    };h.clear = function () {
      this.ea = {};this.ab = this.o = this.A.length = 0;
    };
    h.remove = function (a) {
      return qe(this.ea, a) ? (delete this.ea[a], this.o--, this.ab++, this.A.length > 2 * this.o && pe(this), !0) : !1;
    };var pe = function pe(a) {
      var b, c;if (a.o != a.A.length) {
        for (b = c = 0; c < a.A.length;) {
          var d = a.A[c];qe(a.ea, d) && (a.A[b++] = d);c++;
        }a.A.length = b;
      }if (a.o != a.A.length) {
        var e = {};for (b = c = 0; c < a.A.length;) {
          d = a.A[c], qe(e, d) || (a.A[b++] = d, e[d] = 1), c++;
        }a.A.length = b;
      }
    };h = oe.prototype;h.get = function (a, b) {
      return qe(this.ea, a) ? this.ea[a] : b;
    };
    h.set = function (a, b) {
      qe(this.ea, a) || (this.o++, this.A.push(a), this.ab++);this.ea[a] = b;
    };h.addAll = function (a) {
      if (a instanceof oe) {
        var b = a.pa();a = a.da();
      } else b = Wa(a), a = Va(a);for (var c = 0; c < b.length; c++) {
        this.set(b[c], a[c]);
      }
    };h.forEach = function (a, b) {
      for (var c = this.pa(), d = 0; d < c.length; d++) {
        var e = c[d],
            f = this.get(e);a.call(b, f, e, this);
      }
    };h.clone = function () {
      return new oe(this);
    };
    h.Ie = function (a) {
      pe(this);var b = 0,
          c = this.ab,
          d = this,
          e = new ne();e.next = function () {
        if (c != d.ab) throw Error("The map has changed since the iterator was created");if (b >= d.A.length) throw me;var e = d.A[b++];return a ? e : d.ea[e];
      };return e;
    };var qe = function qe(a, b) {
      return Object.prototype.hasOwnProperty.call(a, b);
    };var re = function re(a) {
      if (a.da && "function" == typeof a.da) return a.da();if (m(a)) return a.split("");if (ha(a)) {
        for (var b = [], c = a.length, d = 0; d < c; d++) {
          b.push(a[d]);
        }return b;
      }return Va(a);
    },
        se = function se(a) {
      if (a.pa && "function" == typeof a.pa) return a.pa();if (!a.da || "function" != typeof a.da) {
        if (ha(a) || m(a)) {
          var b = [];a = a.length;for (var c = 0; c < a; c++) {
            b.push(c);
          }return b;
        }return Wa(a);
      }
    },
        te = function te(a, b) {
      if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (ha(a) || m(a)) w(a, b, void 0);else for (var c = se(a), d = re(a), e = d.length, f = 0; f < e; f++) {
        b.call(void 0, d[f], c && c[f], a);
      }
    };var ue = function ue(a, b, c) {
      if (p(a)) c && (a = _q(a, c));else if (a && "function" == typeof a.handleEvent) a = _q(a.handleEvent, a);else throw Error("Invalid listener argument");return 2147483647 < Number(b) ? -1 : k.setTimeout(a, b || 0);
    },
        ve = function ve(a) {
      var b = null;return new A(function (c, d) {
        b = ue(function () {
          c(void 0);
        }, a);-1 == b && d(Error("Failed to schedule timer."));
      }).f(function (a) {
        k.clearTimeout(b);throw a;
      });
    };var we = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/,
        xe = function xe(a, b) {
      if (a) {
        a = a.split("&");for (var c = 0; c < a.length; c++) {
          var d = a[c].indexOf("="),
              e = null;if (0 <= d) {
            var f = a[c].substring(0, d);e = a[c].substring(d + 1);
          } else f = a[c];b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
        }
      }
    };var F = function F(a) {
      je.call(this);this.headers = new oe();this.Xc = a || null;this.wa = !1;this.Wc = this.c = null;this.Mb = this.je = this.yc = "";this.Ma = this.kd = this.uc = this.cd = !1;this.ub = 0;this.Oc = null;this.Ic = "";this.Sc = this.Af = this.De = !1;
    };r(F, je);var ye = F.prototype,
        ze = ie("goog.net.XhrIo");ye.K = ze;var Ae = /^https?$/i,
        Be = ["POST", "PUT"];
    F.prototype.send = function (a, b, c, d) {
      if (this.c) throw Error("[goog.net.XhrIo] Object is active with another request=" + this.yc + "; newUri=" + a);b = b ? b.toUpperCase() : "GET";this.yc = a;this.Mb = "";this.je = b;this.cd = !1;this.wa = !0;this.c = this.Xc ? this.Xc.lc() : Gc.lc();this.Wc = this.Xc ? Fc(this.Xc) : Fc(Gc);this.c.onreadystatechange = _q(this.ne, this);this.Af && "onprogress" in this.c && (this.c.onprogress = _q(function (a) {
        this.me(a, !0);
      }, this), this.c.upload && (this.c.upload.onprogress = _q(this.me, this)));try {
        E(this.K, Ce(this, "Opening Xhr")), this.kd = !0, this.c.open(b, String(a), !0), this.kd = !1;
      } catch (f) {
        E(this.K, Ce(this, "Error opening Xhr: " + f.message));this.X(5, f);return;
      }a = c || "";var e = this.headers.clone();d && te(d, function (a, b) {
        e.set(b, a);
      });d = Ja(e.pa());c = k.FormData && a instanceof k.FormData;!Ka(Be, b) || d || c || e.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");e.forEach(function (a, b) {
        this.c.setRequestHeader(b, a);
      }, this);this.Ic && (this.c.responseType = this.Ic);"withCredentials" in this.c && this.c.withCredentials !== this.De && (this.c.withCredentials = this.De);try {
        De(this), 0 < this.ub && (this.Sc = Ee(this.c), E(this.K, Ce(this, "Will abort after " + this.ub + "ms if incomplete, xhr2 " + this.Sc)), this.Sc ? (this.c.timeout = this.ub, this.c.ontimeout = _q(this.dc, this)) : this.Oc = ue(this.dc, this.ub, this)), E(this.K, Ce(this, "Sending request")), this.uc = !0, this.c.send(a), this.uc = !1;
      } catch (f) {
        E(this.K, Ce(this, "Send error: " + f.message)), this.X(5, f);
      }
    };var Ee = function Ee(a) {
      return y && z(9) && ca(a.timeout) && void 0 !== a.ontimeout;
    },
        Ia = function Ia(a) {
      return "content-type" == a.toLowerCase();
    };
    F.prototype.dc = function () {
      "undefined" != typeof aa && this.c && (this.Mb = "Timed out after " + this.ub + "ms, aborting", E(this.K, Ce(this, this.Mb)), this.dispatchEvent("timeout"), this.abort(8));
    };F.prototype.X = function (a, b) {
      this.wa = !1;this.c && (this.Ma = !0, this.c.abort(), this.Ma = !1);this.Mb = b;Fe(this);Ge(this);
    };var Fe = function Fe(a) {
      a.cd || (a.cd = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
    };
    F.prototype.abort = function () {
      this.c && this.wa && (E(this.K, Ce(this, "Aborting")), this.wa = !1, this.Ma = !0, this.c.abort(), this.Ma = !1, this.dispatchEvent("complete"), this.dispatchEvent("abort"), Ge(this));
    };F.prototype.gb = function () {
      this.c && (this.wa && (this.wa = !1, this.Ma = !0, this.c.abort(), this.Ma = !1), Ge(this, !0));F.Id.gb.call(this);
    };F.prototype.ne = function () {
      this.isDisposed() || (this.kd || this.uc || this.Ma ? He(this) : this.wf());
    };F.prototype.wf = function () {
      He(this);
    };
    var He = function He(a) {
      if (a.wa && "undefined" != typeof aa) if (a.Wc[1] && 4 == Ie(a) && 2 == Je(a)) E(a.K, Ce(a, "Local request error detected and ignored"));else if (a.uc && 4 == Ie(a)) ue(a.ne, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == Ie(a)) {
        E(a.K, Ce(a, "Request complete"));a.wa = !1;try {
          var b = Je(a);a: switch (b) {case 200:case 201:case 202:case 204:case 206:case 304:case 1223:
              var c = !0;break a;default:
              c = !1;}var d;if (!(d = c)) {
            var e;if (e = 0 === b) {
              var f = String(a.yc).match(we)[1] || null;if (!f && k.self && k.self.location) var g = k.self.location.protocol,
                  f = g.substr(0, g.length - 1);e = !Ae.test(f ? f.toLowerCase() : "");
            }d = e;
          }if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
            try {
              var l = 2 < Ie(a) ? a.c.statusText : "";
            } catch (n) {
              E(a.K, "Can not get status: " + n.message), l = "";
            }a.Mb = l + " [" + Je(a) + "]";Fe(a);
          }
        } finally {
          Ge(a);
        }
      }
    };F.prototype.me = function (a, b) {
      v("progress" === a.type, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");this.dispatchEvent(Ke(a, "progress"));this.dispatchEvent(Ke(a, b ? "downloadprogress" : "uploadprogress"));
    };
    var Ke = function Ke(a, b) {
      return { type: b, lengthComputable: a.lengthComputable, loaded: a.loaded, total: a.total };
    },
        Ge = function Ge(a, b) {
      if (a.c) {
        De(a);var c = a.c,
            d = a.Wc[0] ? da : null;a.c = null;a.Wc = null;b || a.dispatchEvent("ready");try {
          c.onreadystatechange = d;
        } catch (e) {
          (a = a.K) && a.log(ce, "Problem encountered resetting onreadystatechange: " + e.message, void 0);
        }
      }
    },
        De = function De(a) {
      a.c && a.Sc && (a.c.ontimeout = null);ca(a.Oc) && (k.clearTimeout(a.Oc), a.Oc = null);
    },
        Ie = function Ie(a) {
      return a.c ? a.c.readyState : 0;
    },
        Je = function Je(a) {
      try {
        return 2 < Ie(a) ? a.c.status : -1;
      } catch (b) {
        return -1;
      }
    },
        Le = function Le(a) {
      try {
        return a.c ? a.c.responseText : "";
      } catch (b) {
        return E(a.K, "Can not get responseText: " + b.message), "";
      }
    };
    F.prototype.getResponse = function () {
      try {
        if (!this.c) return null;if ("response" in this.c) return this.c.response;switch (this.Ic) {case "":case "text":
            return this.c.responseText;case "arraybuffer":
            if ("mozResponseArrayBuffer" in this.c) return this.c.mozResponseArrayBuffer;}var a = this.K;a && a.log(ce, "Response type " + this.Ic + " is not supported on this browser", void 0);return null;
      } catch (b) {
        return E(this.K, "Can not get response: " + b.message), null;
      }
    };var Ce = function Ce(a, b) {
      return b + " [" + a.je + " " + a.yc + " " + Je(a) + "]";
    };var G = function G(a, b) {
      this.ia = this.Za = this.ka = "";this.nb = null;this.La = this.za = "";this.Z = this.nf = !1;if (a instanceof G) {
        this.Z = void 0 !== b ? b : a.Z;Me(this, a.ka);var c = a.Za;H(this);this.Za = c;Ne(this, a.ia);Oe(this, a.nb);Pe(this, a.za);Qe(this, a.ba.clone());a = a.La;H(this);this.La = a;
      } else a && (c = String(a).match(we)) ? (this.Z = !!b, Me(this, c[1] || "", !0), a = c[2] || "", H(this), this.Za = Re(a), Ne(this, c[3] || "", !0), Oe(this, c[4]), Pe(this, c[5] || "", !0), Qe(this, c[6] || "", !0), a = c[7] || "", H(this), this.La = Re(a)) : (this.Z = !!b, this.ba = new I(null, 0, this.Z));
    };G.prototype.toString = function () {
      var a = [],
          b = this.ka;b && a.push(Se(b, Te, !0), ":");var c = this.ia;if (c || "file" == b) a.push("//"), (b = this.Za) && a.push(Se(b, Te, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.nb, null != c && a.push(":", String(c));if (c = this.za) this.ia && "/" != c.charAt(0) && a.push("/"), a.push(Se(c, "/" == c.charAt(0) ? Ue : Ve, !0));(c = this.ba.toString()) && a.push("?", c);(c = this.La) && a.push("#", Se(c, We));return a.join("");
    };
    G.prototype.resolve = function (a) {
      var b = this.clone(),
          c = !!a.ka;c ? Me(b, a.ka) : c = !!a.Za;if (c) {
        var d = a.Za;H(b);b.Za = d;
      } else c = !!a.ia;c ? Ne(b, a.ia) : c = null != a.nb;d = a.za;if (c) Oe(b, a.nb);else if (c = !!a.za) {
        if ("/" != d.charAt(0)) if (this.ia && !this.za) d = "/" + d;else {
          var e = b.za.lastIndexOf("/");-1 != e && (d = b.za.substr(0, e + 1) + d);
        }e = d;if (".." == e || "." == e) d = "";else if (u(e, "./") || u(e, "/.")) {
          for (var d = 0 == e.lastIndexOf("/", 0), e = e.split("/"), f = [], g = 0; g < e.length;) {
            var l = e[g++];"." == l ? d && g == e.length && f.push("") : ".." == l ? ((1 < f.length || 1 == f.length && "" != f[0]) && f.pop(), d && g == e.length && f.push("")) : (f.push(l), d = !0);
          }d = f.join("/");
        } else d = e;
      }c ? Pe(b, d) : c = "" !== a.ba.toString();c ? Qe(b, a.ba.clone()) : c = !!a.La;c && (a = a.La, H(b), b.La = a);return b;
    };G.prototype.clone = function () {
      return new G(this);
    };
    var Me = function Me(a, b, c) {
      H(a);a.ka = c ? Re(b, !0) : b;a.ka && (a.ka = a.ka.replace(/:$/, ""));
    },
        Ne = function Ne(a, b, c) {
      H(a);a.ia = c ? Re(b, !0) : b;
    },
        Oe = function Oe(a, b) {
      H(a);if (b) {
        b = Number(b);if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);a.nb = b;
      } else a.nb = null;
    },
        Pe = function Pe(a, b, c) {
      H(a);a.za = c ? Re(b, !0) : b;
    },
        Qe = function Qe(a, b, c) {
      H(a);b instanceof I ? (a.ba = b, a.ba.Dd(a.Z)) : (c || (b = Se(b, Xe)), a.ba = new I(b, 0, a.Z));
    },
        J = function J(a, b, c) {
      H(a);a.ba.set(b, c);
    },
        Ye = function Ye(a, b) {
      return a.ba.get(b);
    };
    G.prototype.removeParameter = function (a) {
      H(this);this.ba.remove(a);return this;
    };var H = function H(a) {
      if (a.nf) throw Error("Tried to modify a read-only Uri");
    };G.prototype.Dd = function (a) {
      this.Z = a;this.ba && this.ba.Dd(a);return this;
    };
    var Ze = function Ze(a) {
      return a instanceof G ? a.clone() : new G(a, void 0);
    },
        $e = function $e(a, b) {
      var c = new G(null, void 0);Me(c, "https");a && Ne(c, a);b && Pe(c, b);return c;
    },
        Re = function Re(a, b) {
      return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
    },
        Se = function Se(a, b, c) {
      return m(a) ? (a = encodeURI(a).replace(b, af), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
    },
        af = function af(a) {
      a = a.charCodeAt(0);return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
    },
        Te = /[#\/\?@]/g,
        Ve = /[\#\?:]/g,
        Ue = /[\#\?]/g,
        Xe = /[\#\?@]/g,
        We = /#/g,
        I = function I(a, b, c) {
      this.o = this.j = null;this.P = a || null;this.Z = !!c;
    },
        bf = function bf(a) {
      a.j || (a.j = new oe(), a.o = 0, a.P && xe(a.P, function (b, c) {
        a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
      }));
    },
        df = function df(a) {
      var b = se(a);if ("undefined" == typeof b) throw Error("Keys are undefined");var c = new I(null, 0, void 0);a = re(a);for (var d = 0; d < b.length; d++) {
        var e = b[d],
            f = a[d];ga(f) ? cf(c, e, f) : c.add(e, f);
      }return c;
    };h = I.prototype;
    h.add = function (a, b) {
      bf(this);this.P = null;a = this.Y(a);var c = this.j.get(a);c || this.j.set(a, c = []);c.push(b);this.o = Ba(this.o) + 1;return this;
    };h.remove = function (a) {
      bf(this);a = this.Y(a);return this.j.Ab(a) ? (this.P = null, this.o = Ba(this.o) - this.j.get(a).length, this.j.remove(a)) : !1;
    };h.clear = function () {
      this.j = this.P = null;this.o = 0;
    };h.Ab = function (a) {
      bf(this);a = this.Y(a);return this.j.Ab(a);
    };h.forEach = function (a, b) {
      bf(this);this.j.forEach(function (c, d) {
        w(c, function (c) {
          a.call(b, c, d, this);
        }, this);
      }, this);
    };
    h.pa = function () {
      bf(this);for (var a = this.j.da(), b = this.j.pa(), c = [], d = 0; d < b.length; d++) {
        for (var e = a[d], f = 0; f < e.length; f++) {
          c.push(b[d]);
        }
      }return c;
    };h.da = function (a) {
      bf(this);var b = [];if (m(a)) this.Ab(a) && (b = Oa(b, this.j.get(this.Y(a))));else {
        a = this.j.da();for (var c = 0; c < a.length; c++) {
          b = Oa(b, a[c]);
        }
      }return b;
    };h.set = function (a, b) {
      bf(this);this.P = null;a = this.Y(a);this.Ab(a) && (this.o = Ba(this.o) - this.j.get(a).length);this.j.set(a, [b]);this.o = Ba(this.o) + 1;return this;
    };
    h.get = function (a, b) {
      a = a ? this.da(a) : [];return 0 < a.length ? String(a[0]) : b;
    };var cf = function cf(a, b, c) {
      a.remove(b);0 < c.length && (a.P = null, a.j.set(a.Y(b), Pa(c)), a.o = Ba(a.o) + c.length);
    };I.prototype.toString = function () {
      if (this.P) return this.P;if (!this.j) return "";for (var a = [], b = this.j.pa(), c = 0; c < b.length; c++) {
        for (var d = b[c], e = encodeURIComponent(String(d)), d = this.da(d), f = 0; f < d.length; f++) {
          var g = e;"" !== d[f] && (g += "=" + encodeURIComponent(String(d[f])));a.push(g);
        }
      }return this.P = a.join("&");
    };
    I.prototype.clone = function () {
      var a = new I();a.P = this.P;this.j && (a.j = this.j.clone(), a.o = this.o);return a;
    };I.prototype.Y = function (a) {
      a = String(a);this.Z && (a = a.toLowerCase());return a;
    };I.prototype.Dd = function (a) {
      a && !this.Z && (bf(this), this.P = null, this.j.forEach(function (a, c) {
        var b = c.toLowerCase();c != b && (this.remove(c), cf(this, b, a));
      }, this));this.Z = a;
    };var ef = function ef() {
      var a = K();return y && !!qb && 11 == qb || /Edge\/\d+/.test(a);
    },
        ff = function ff() {
      return k.window && k.window.location.href || "";
    },
        gf = function gf(a, b) {
      b = b || k.window;var c = "about:blank";a && (c = uc(xc(a)));b.location.href = c;
    },
        hf = function hf(a, b) {
      var c = [],
          d;for (d in a) {
        d in b ? typeof a[d] != typeof b[d] ? c.push(d) : ga(a[d]) ? Ya(a[d], b[d]) || c.push(d) : "object" == typeof a[d] && null != a[d] && null != b[d] ? 0 < hf(a[d], b[d]).length && c.push(d) : a[d] !== b[d] && c.push(d) : c.push(d);
      }for (d in b) {
        d in a || c.push(d);
      }return c;
    },
        kf = function kf() {
      var a = K();a = "Chrome" != jf(a) ? null : (a = a.match(/\sChrome\/(\d+)/i)) && 2 == a.length ? parseInt(a[1], 10) : null;return a && 30 > a ? !1 : !y || !qb || 9 < qb;
    },
        lf = function lf(a) {
      a = (a || K()).toLowerCase();return a.match(/android/) || a.match(/webos/) || a.match(/iphone|ipad|ipod/) || a.match(/blackberry/) || a.match(/windows phone/) || a.match(/iemobile/) ? !0 : !1;
    },
        mf = function mf(a) {
      a = a || k.window;try {
        a.close();
      } catch (b) {}
    },
        nf = function nf(a, b, c) {
      var d = Math.floor(1E9 * Math.random()).toString();b = b || 500;c = c || 600;var e = (window.screen.availHeight - c) / 2,
          f = (window.screen.availWidth - b) / 2;b = { width: b, height: c, top: 0 < e ? e : 0, left: 0 < f ? f : 0, location: !0, resizable: !0, statusbar: !0, toolbar: !1 };c = K().toLowerCase();d && (b.target = d, u(c, "crios/") && (b.target = "_blank"));"Firefox" == jf(K()) && (a = a || "http://localhost", b.scrollbars = !0);c = a || "about:blank";(d = b) || (d = {});a = window;b = c instanceof tc ? c : xc("undefined" != typeof c.href ? c.href : String(c));c = d.target || c.target;e = [];for (g in d) {
        switch (g) {case "width":case "height":case "top":case "left":
            e.push(g + "=" + d[g]);break;case "target":case "noreferrer":
            break;
          default:
            e.push(g + "=" + (d[g] ? 1 : 0));}
      }var g = e.join(",");(x("iPhone") && !x("iPod") && !x("iPad") || x("iPad") || x("iPod")) && a.navigator && a.navigator.standalone && c && "_self" != c ? (g = a.document.createElement("A"), "undefined" != typeof HTMLAnchorElement && "undefined" != typeof Location && "undefined" != typeof Element && v(g && (g instanceof HTMLAnchorElement || !(g instanceof Location || g instanceof Element)), "Argument is not a HTMLAnchorElement (or a non-Element mock); got: %s", Zc(g)), b = b instanceof tc ? b : xc(b), g.href = uc(b), g.setAttribute("target", c), d.noreferrer && g.setAttribute("rel", "noreferrer"), d = document.createEvent("MouseEvent"), d.initMouseEvent("click", !0, !0, a, 1), g.dispatchEvent(d), g = {}) : d.noreferrer ? (g = a.open("", c, g), d = uc(b), g && (gb && u(d, ";") && (d = "'" + d.replace(/'/g, "%27") + "'"), g.opener = null, a = oc("b/12014412, meta tag with sanitized URL"), d = '<META HTTP-EQUIV="refresh" content="0; url=' + wa(d) + '">', Ca(nc(a), "must provide justification"), v(!/^[\s\xa0]*$/.test(nc(a)), "must provide non-empty justification"), g.document.write(cd(new bd().jf(d))), g.document.close())) : g = a.open(uc(b), c, g);if (g) try {
        g.focus();
      } catch (l) {}return g;
    },
        of = function of(a) {
      return new A(function (b) {
        var c = function c() {
          ve(2E3).then(function () {
            if (!a || a.closed) b();else return c();
          });
        };return c();
      });
    },
        pf = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
        qf = function qf() {
      var a = null;return new A(function (b) {
        "complete" == k.document.readyState ? b() : (a = function a() {
          b();
        }, dc(window, "load", a));
      }).f(function (b) {
        fc(window, "load", a);throw b;
      });
    },
        sf = function sf() {
      return rf(void 0) ? qf().then(function () {
        return new A(function (a, b) {
          var c = k.document,
              d = setTimeout(function () {
            b(Error("Cordova framework is not ready."));
          }, 1E3);c.addEventListener("deviceready", function () {
            clearTimeout(d);a();
          }, !1);
        });
      }) : D(Error("Cordova must run in an Android or iOS file scheme."));
    },
        rf = function rf(a) {
      a = a || K();return !("file:" !== tf() || !a.toLowerCase().match(/iphone|ipad|ipod|android/));
    },
        uf = function uf() {
      var a = k.window;try {
        return !(!a || a == a.top);
      } catch (b) {
        return !1;
      }
    },
        vf = function vf() {
      return firebase.INTERNAL.hasOwnProperty("reactNative") ? "ReactNative" : firebase.INTERNAL.hasOwnProperty("node") ? "Node" : "Browser";
    },
        wf = function wf() {
      var a = vf();return "ReactNative" === a || "Node" === a;
    },
        jf = function jf(a) {
      var b = a.toLowerCase();if (u(b, "opera/") || u(b, "opr/") || u(b, "opios/")) return "Opera";if (u(b, "iemobile")) return "IEMobile";if (u(b, "msie") || u(b, "trident/")) return "IE";if (u(b, "edge/")) return "Edge";if (u(b, "firefox/")) return "Firefox";if (u(b, "silk/")) return "Silk";if (u(b, "blackberry")) return "Blackberry";if (u(b, "webos")) return "Webos";if (!u(b, "safari/") || u(b, "chrome/") || u(b, "crios/") || u(b, "android")) {
        if (!u(b, "chrome/") && !u(b, "crios/") || u(b, "edge/")) {
          if (u(b, "android")) return "Android";if ((a = a.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/)) && 2 == a.length) return a[1];
        } else return "Chrome";
      } else return "Safari";return "Other";
    },
        xf = function xf(a) {
      var b = vf();return ("Browser" === b ? jf(K()) : b) + "/JsCore/" + a;
    },
        K = function K() {
      return k.navigator && k.navigator.userAgent || "";
    },
        L = function L(a, b) {
      a = a.split(".");b = b || k;for (var c = 0; c < a.length && "object" == typeof b && null != b; c++) {
        b = b[a[c]];
      }c != a.length && (b = void 0);return b;
    },
        Af = function Af() {
      var a;if (a = (yf() || "chrome-extension:" === tf() || rf()) && !wf()) a: {
        try {
          var b = k.localStorage,
              c = zf();if (b) {
            b.setItem(c, "1");b.removeItem(c);a = ef() ? !!k.indexedDB : !0;break a;
          }
        } catch (d) {}a = !1;
      }return a;
    },
        yf = function yf() {
      return "http:" === tf() || "https:" === tf();
    },
        tf = function tf() {
      return k.location && k.location.protocol || null;
    },
        Bf = function Bf(a) {
      a = a || K();return lf(a) || "Firefox" == jf(a) ? !1 : !0;
    },
        Cf = function Cf(a) {
      return "undefined" === typeof a ? null : Ac(a);
    },
        Df = function Df(a) {
      var b = {},
          c;for (c in a) {
        a.hasOwnProperty(c) && null !== a[c] && void 0 !== a[c] && (b[c] = a[c]);
      }return b;
    },
        Ef = function Ef(a) {
      if (null !== a) return JSON.parse(a);
    },
        zf = function zf(a) {
      return a ? a : "" + Math.floor(1E9 * Math.random()).toString();
    },
        Ff = function Ff(a) {
      a = a || K();return "Safari" == jf(a) || a.toLowerCase().match(/iphone|ipad|ipod/) ? !1 : !0;
    },
        Gf = function Gf() {
      var a = k.___jsl;if (a && a.H) for (var b in a.H) {
        if (a.H[b].r = a.H[b].r || [], a.H[b].L = a.H[b].L || [], a.H[b].r = a.H[b].L.concat(), a.CP) for (var c = 0; c < a.CP.length; c++) {
          a.CP[c] = null;
        }
      }
    },
        Hf = function Hf() {
      return k.navigator && "boolean" === typeof k.navigator.onLine ? k.navigator.onLine : !0;
    },
        If = function If(a, b, c, d) {
      if (a > b) throw Error("Short delay should be less than long delay!");
      this.Nf = a;this.rf = b;a = c || K();d = d || vf();this.mf = lf(a) || "ReactNative" === d;
    };If.prototype.get = function () {
      return this.mf ? this.rf : this.Nf;
    };
    var Jf = function Jf() {
      var a = k.document;return a && "undefined" !== typeof a.visibilityState ? "visible" == a.visibilityState : !0;
    },
        Kf = function Kf() {
      var a = k.document,
          _b = null;return Jf() || !a ? B() : new A(function (c) {
        _b = function b() {
          Jf() && (a.removeEventListener("visibilitychange", _b, !1), c());
        };a.addEventListener("visibilitychange", _b, !1);
      }).f(function (c) {
        a.removeEventListener("visibilitychange", _b, !1);throw c;
      });
    };var Lf = {};var Mf;try {
      var Nf = {};Object.defineProperty(Nf, "abcd", { configurable: !0, enumerable: !0, value: 1 });Object.defineProperty(Nf, "abcd", { configurable: !0, enumerable: !0, value: 2 });Mf = 2 == Nf.abcd;
    } catch (a) {
      Mf = !1;
    }
    var M = function M(a, b, c) {
      Mf ? Object.defineProperty(a, b, { configurable: !0, enumerable: !0, value: c }) : a[b] = c;
    },
        Of = function Of(a, b) {
      if (b) for (var c in b) {
        b.hasOwnProperty(c) && M(a, c, b[c]);
      }
    },
        Pf = function Pf(a) {
      var b = {};Of(b, a);return b;
    },
        Qf = function Qf(a) {
      var b = {},
          c;for (c in a) {
        a.hasOwnProperty(c) && (b[c] = a[c]);
      }return b;
    },
        Rf = function Rf(a, b) {
      if (!b || !b.length) return !0;if (!a) return !1;for (var c = 0; c < b.length; c++) {
        var d = a[b[c]];if (void 0 === d || null === d || "" === d) return !1;
      }return !0;
    },
        Sf = function Sf(a) {
      var b = a;if ("object" == typeof a && null != a) {
        var b = "length" in a ? [] : {},
            c;for (c in a) {
          M(b, c, Sf(a[c]));
        }
      }return b;
    };var Tf = "oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),
        Uf = ["client_id", "response_type", "scope", "redirect_uri", "state"],
        Vf = { Xf: { Rb: 500, Qb: 600, providerId: "facebook.com", zd: Uf }, Yf: { Rb: 500, Qb: 620, providerId: "github.com", zd: Uf }, Zf: { Rb: 515, Qb: 680, providerId: "google.com", zd: Uf }, $f: { Rb: 485, Qb: 705, providerId: "twitter.com", zd: Tf } },
        Wf = function Wf(a) {
      for (var b in Vf) {
        if (Vf[b].providerId == a) return Vf[b];
      }return null;
    };var N = function N(a, b) {
      this.code = "auth/" + a;this.message = b || Xf[a] || "";
    };r(N, Error);N.prototype.F = function () {
      return { code: this.code, message: this.message };
    };N.prototype.toJSON = function () {
      return this.F();
    };
    var Yf = function Yf(a) {
      var b = a && a.code;return b ? new N(b.substring(5), a.message) : null;
    },
        Xf = { "argument-error": "", "app-not-authorized": "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.", "app-not-installed": "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.", "captcha-check-failed": "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",
      "code-expired": "The SMS code has expired. Please re-send the verification code to try again.", "cordova-not-ready": "Cordova framework is not ready.", "cors-unsupported": "This browser is not supported.", "credential-already-in-use": "This credential is already associated with a different user account.", "custom-token-mismatch": "The custom token corresponds to a different audience.", "requires-recent-login": "This operation is sensitive and requires recent authentication. Log in again before retrying this request.",
      "dynamic-link-not-activated": "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.", "email-already-in-use": "The email address is already in use by another account.", "expired-action-code": "The action code has expired. ", "cancelled-popup-request": "This operation has been cancelled due to another conflicting popup being opened.", "internal-error": "An internal error has occurred.", "invalid-app-credential": "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",
      "invalid-app-id": "The mobile app identifier is not registed for the current project.", "invalid-user-token": "The user's credential is no longer valid. The user must sign in again.", "invalid-auth-event": "An internal error has occurred.", "invalid-verification-code": "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.", "invalid-cordova-configuration": "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
      "invalid-custom-token": "The custom token format is incorrect. Please check the documentation.", "invalid-email": "The email address is badly formatted.", "invalid-api-key": "Your API key is invalid, please check you have copied it correctly.", "invalid-credential": "The supplied auth credential is malformed or has expired.", "invalid-message-payload": "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.",
      "invalid-oauth-provider": "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.", "unauthorized-domain": "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.", "invalid-action-code": "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.", "wrong-password": "The password is invalid or the user does not have a password.",
      "invalid-phone-number": "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].", "invalid-recipient-email": "The email corresponding to this action failed to send as the provided recipient email address is invalid.", "invalid-sender": "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.",
      "invalid-verification-id": "The verification ID used to create the phone auth credential is invalid.", "missing-iframe-start": "An internal error has occurred.", "auth-domain-config-required": "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.", "missing-app-credential": "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.", "missing-verification-code": "The phone auth credential was created with an empty SMS verification code.",
      "missing-phone-number": "To send verification codes, provide a phone number for the recipient.", "missing-verification-id": "The phone auth credential was created with an empty verification ID.", "app-deleted": "This instance of FirebaseApp has been deleted.", "account-exists-with-different-credential": "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.", "network-request-failed": "A network error (such as timeout, interrupted connection or unreachable host) has occurred.",
      "no-auth-event": "An internal error has occurred.", "no-such-provider": "User was not linked to an account with the given provider.", "operation-not-allowed": "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.", "operation-not-supported-in-this-environment": 'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
      "popup-blocked": "Unable to establish a connection with the popup. It may have been blocked by the browser.", "popup-closed-by-user": "The popup has been closed by the user before finalizing the operation.", "provider-already-linked": "User can only be linked to one identity for the given provider.", "quota-exceeded": "The SMS quota for this project has been exceeded.", "redirect-cancelled-by-user": "The redirect operation has been cancelled by the user before finalizing.", "redirect-operation-pending": "A redirect sign-in operation is already pending.",
      timeout: "The operation has timed out.", "user-token-expired": "The user's credential is no longer valid. The user must sign in again.", "too-many-requests": "We have blocked all requests from this device due to unusual activity. Try again later.", "user-cancelled": "User did not grant your application the permissions it requested.", "user-not-found": "There is no user record corresponding to this identifier. The user may have been deleted.", "user-disabled": "The user account has been disabled by an administrator.",
      "user-mismatch": "The supplied credentials do not correspond to the previously signed in user.", "user-signed-out": "", "weak-password": "The password must be 6 characters long or more.", "web-storage-unsupported": "This browser is not supported or 3rd party cookies and data may be disabled." };var O = function O(a, b, c, d, e) {
      this.ha = a;this.R = b || null;this.vb = c || null;this.Cd = d || null;this.X = e || null;if (this.vb || this.X) {
        if (this.vb && this.X) throw new N("invalid-auth-event");if (this.vb && !this.Cd) throw new N("invalid-auth-event");
      } else throw new N("invalid-auth-event");
    };O.prototype.oc = function () {
      return this.Cd;
    };O.prototype.getError = function () {
      return this.X;
    };O.prototype.F = function () {
      return { type: this.ha, eventId: this.R, urlResponse: this.vb, sessionId: this.Cd, error: this.X && this.X.F() };
    };
    var Zf = function Zf(a) {
      a = a || {};return a.type ? new O(a.type, a.eventId, a.urlResponse, a.sessionId, a.error && Yf(a.error)) : null;
    };var $f = function $f(a) {
      var b = "unauthorized-domain",
          c = void 0,
          d = Ze(a);a = d.ia;d = d.ka;"chrome-extension" == d ? c = na("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : "http" == d || "https" == d ? c = na("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : b = "operation-not-supported-in-this-environment";N.call(this, b, c);
    };r($f, N);var ag = function ag(a) {
      this.qf = a.sub;ma();this.mc = a.email || null;
    };var bg = function bg(a, b) {
      return a.then(function (a) {
        if (a.idToken) {
          a: {
            var c = a.idToken.split(".");if (3 == c.length) {
              for (var c = c[1], e = (4 - c.length % 4) % 4, f = 0; f < e; f++) {
                c += ".";
              }try {
                var g = JSON.parse(vb(c));if (g.sub && g.iss && g.aud && g.exp) {
                  var l = new ag(g);break a;
                }
              } catch (n) {}
            }l = null;
          }if (!l || b != l.qf) throw new N("user-mismatch");return a;
        }throw new N("user-mismatch");
      }).f(function (a) {
        throw a && a.code && "auth/user-not-found" == a.code ? new N("user-mismatch") : a;
      });
    },
        cg = function cg(a, b) {
      if (b.idToken || b.accessToken) b.idToken && M(this, "idToken", b.idToken), b.accessToken && M(this, "accessToken", b.accessToken);else if (b.oauthToken && b.oauthTokenSecret) M(this, "accessToken", b.oauthToken), M(this, "secret", b.oauthTokenSecret);else throw new N("internal-error", "failed to construct a credential");M(this, "providerId", a);
    };cg.prototype.Eb = function (a) {
      return dg(a, eg(this));
    };cg.prototype.zc = function (a, b) {
      var c = eg(this);c.idToken = b;return fg(a, c);
    };cg.prototype.od = function (a, b) {
      var c = eg(this);return bg(gg(a, c), b);
    };
    var eg = function eg(a) {
      var b = {};a.idToken && (b.id_token = a.idToken);a.accessToken && (b.access_token = a.accessToken);a.secret && (b.oauth_token_secret = a.secret);b.providerId = a.providerId;return { postBody: df(b).toString(), requestUri: "http://localhost" };
    };cg.prototype.F = function () {
      var a = { providerId: this.providerId };this.idToken && (a.oauthIdToken = this.idToken);this.accessToken && (a.oauthAccessToken = this.accessToken);this.secret && (a.oauthTokenSecret = this.secret);return a;
    };
    var hg = function hg(a, b) {
      this.Df = b || [];Of(this, { providerId: a, isOAuthProvider: !0 });this.Td = {};
    };hg.prototype.setCustomParameters = function (a) {
      this.Td = Za(a);return this;
    };var P = function P(a) {
      hg.call(this, a, Uf);this.Ad = [];
    };r(P, hg);P.prototype.addScope = function (a) {
      Ka(this.Ad, a) || this.Ad.push(a);return this;
    };P.prototype.ae = function () {
      return Pa(this.Ad);
    };
    P.prototype.credential = function (a, b) {
      if (!a && !b) throw new N("argument-error", "credential failed: must provide the ID token and/or the access token.");return new cg(this.providerId, { idToken: a || null, accessToken: b || null });
    };var ig = function ig() {
      P.call(this, "facebook.com");
    };r(ig, P);M(ig, "PROVIDER_ID", "facebook.com");
    var jg = function jg(a) {
      if (!a) throw new N("argument-error", "credential failed: expected 1 argument (the OAuth access token).");var b = a;ia(a) && (b = a.accessToken);return new ig().credential(null, b);
    },
        kg = function kg() {
      P.call(this, "github.com");
    };r(kg, P);M(kg, "PROVIDER_ID", "github.com");
    var lg = function lg(a) {
      if (!a) throw new N("argument-error", "credential failed: expected 1 argument (the OAuth access token).");var b = a;ia(a) && (b = a.accessToken);return new kg().credential(null, b);
    },
        mg = function mg() {
      P.call(this, "google.com");this.addScope("profile");
    };r(mg, P);M(mg, "PROVIDER_ID", "google.com");var ng = function ng(a, b) {
      var c = a;ia(a) && (c = a.idToken, b = a.accessToken);return new mg().credential(c, b);
    },
        og = function og() {
      hg.call(this, "twitter.com", Tf);
    };r(og, hg);M(og, "PROVIDER_ID", "twitter.com");
    var pg = function pg(a, b) {
      var c = a;ia(c) || (c = { oauthToken: a, oauthTokenSecret: b });if (!c.oauthToken || !c.oauthTokenSecret) throw new N("argument-error", "credential failed: expected 2 arguments (the OAuth access token and secret).");return new cg("twitter.com", c);
    },
        qg = function qg(a, b) {
      this.mc = a;this.sd = b;M(this, "providerId", "password");
    };qg.prototype.Eb = function (a) {
      return Q(a, rg, { email: this.mc, password: this.sd });
    };qg.prototype.zc = function (a, b) {
      return Q(a, sg, { idToken: b, email: this.mc, password: this.sd });
    };
    qg.prototype.od = function (a, b) {
      return bg(this.Eb(a), b);
    };qg.prototype.F = function () {
      return { email: this.mc, password: this.sd };
    };var tg = function tg() {
      Of(this, { providerId: "password", isOAuthProvider: !1 });
    };Of(tg, { PROVIDER_ID: "password" });var ug = function ug(a) {
      if (!(a.verificationId && a.Tc || a.cc && a.phoneNumber)) throw new N("internal-error");this.M = a;M(this, "providerId", "phone");
    };ug.prototype.Eb = function (a) {
      return a.verifyPhoneNumber(vg(this));
    };ug.prototype.zc = function (a, b) {
      var c = vg(this);c.idToken = b;return Q(a, wg, c);
    };
    ug.prototype.od = function (a, b) {
      var c = vg(this);c.operation = "REAUTH";a = Q(a, xg, c);return bg(a, b);
    };ug.prototype.F = function () {
      var a = { providerId: "phone" };this.M.verificationId && (a.verificationId = this.M.verificationId);this.M.Tc && (a.verificationCode = this.M.Tc);this.M.cc && (a.temporaryProof = this.M.cc);this.M.phoneNumber && (a.phoneNumber = this.M.phoneNumber);return a;
    };
    var vg = function vg(a) {
      return a.M.cc && a.M.phoneNumber ? { temporaryProof: a.M.cc, phoneNumber: a.M.phoneNumber } : { sessionInfo: a.M.verificationId, code: a.M.Tc };
    },
        yg = function yg(a) {
      try {
        this.Me = a || firebase.auth();
      } catch (b) {
        throw new N("argument-error", "Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");
      }Of(this, { providerId: "phone", isOAuthProvider: !1 });
    };
    yg.prototype.verifyPhoneNumber = function (a, b) {
      var c = this.Me.g;return B(b.verify()).then(function (d) {
        if (!m(d)) throw new N("argument-error", "An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");switch (b.type) {case "recaptcha":
            return Q(c, zg, { phoneNumber: a, recaptchaToken: d });default:
            throw new N("argument-error", 'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');}
      });
    };
    var Ag = function Ag(a, b) {
      if (!a) throw new N("missing-verification-id");if (!b) throw new N("missing-verification-code");return new ug({ verificationId: a, Tc: b });
    };Of(yg, { PROVIDER_ID: "phone" });
    var Bg = function Bg(a) {
      if (a.temporaryProof && a.phoneNumber) return new ug({ cc: a.temporaryProof, phoneNumber: a.phoneNumber });var b = a && a.providerId;if (!b || "password" === b) return null;var c = a && a.oauthAccessToken,
          d = a && a.oauthTokenSecret;a = a && a.oauthIdToken;try {
        switch (b) {case "google.com":
            return ng(a, c);case "facebook.com":
            return jg(c);case "github.com":
            return lg(c);case "twitter.com":
            return pg(c, d);default:
            return new P(b).credential(a, c);}
      } catch (e) {
        return null;
      }
    },
        Cg = function Cg(a) {
      if (!a.isOAuthProvider) throw new N("invalid-oauth-provider");
    };var Dg = function Dg(a, b, c) {
      N.call(this, a, c);a = b || {};a.email && M(this, "email", a.email);a.phoneNumber && M(this, "phoneNumber", a.phoneNumber);a.credential && M(this, "credential", a.credential);
    };r(Dg, N);Dg.prototype.F = function () {
      var a = { code: this.code, message: this.message };this.email && (a.email = this.email);this.phoneNumber && (a.phoneNumber = this.phoneNumber);var b = this.credential && this.credential.F();b && ab(a, b);return a;
    };Dg.prototype.toJSON = function () {
      return this.F();
    };
    var Eg = function Eg(a) {
      if (a.code) {
        var b = a.code || "";0 == b.indexOf("auth/") && (b = b.substring(5));var c = { credential: Bg(a) };if (a.email) c.email = a.email;else if (a.phoneNumber) c.phoneNumber = a.phoneNumber;else return new N(b, a.message || void 0);return new Dg(b, c, a.message);
      }return null;
    };var Fg = function Fg(a) {
      this.Wf = a;
    };r(Fg, Ec);Fg.prototype.lc = function () {
      return new this.Wf();
    };Fg.prototype.md = function () {
      return {};
    };
    var R = function R(a, b, c) {
      var d = "Node" == vf();d = k.XMLHttpRequest || d && firebase.INTERNAL.node && firebase.INTERNAL.node.XMLHttpRequest;if (!d) throw new N("internal-error", "The XMLHttpRequest compatibility library was not found.");this.m = a;a = b || {};this.Jf = a.secureTokenEndpoint || "https://securetoken.googleapis.com/v1/token";this.Kf = a.secureTokenTimeout || Gg;this.se = Za(a.secureTokenHeaders || Hg);this.Ve = a.firebaseEndpoint || "https://www.googleapis.com/identitytoolkit/v3/relyingparty/";this.We = a.firebaseTimeout || Ig;this.Zd = Za(a.firebaseHeaders || Jg);c && (this.Zd["X-Client-Version"] = c, this.se["X-Client-Version"] = c);this.Ne = new Jc();this.Vf = new Fg(d);
    },
        Kg,
        Gg = new If(3E4, 6E4),
        Hg = { "Content-Type": "application/x-www-form-urlencoded" },
        Ig = new If(3E4, 6E4),
        Jg = { "Content-Type": "application/json" },
        Mg = function Mg(a, b, c, d, e, f, g) {
      Hf() ? (kf() ? a = _q(a.Mf, a) : (Kg || (Kg = new A(function (a, b) {
        Lg(a, b);
      })), a = _q(a.Lf, a)), a(b, c, d, e, f, g)) : c && c(null);
    };
    R.prototype.Mf = function (a, b, c, d, e, f) {
      var g = "Node" == vf(),
          l = wf() ? g ? new F(this.Vf) : new F() : new F(this.Ne);if (f) {
        l.ub = Math.max(0, f);var n = setTimeout(function () {
          l.dispatchEvent("timeout");
        }, f);
      }l.listen("complete", function () {
        n && clearTimeout(n);var a = null;try {
          a = JSON.parse(Le(this)) || null;
        } catch (lb) {
          a = null;
        }b && b(a);
      });ec(l, "ready", function () {
        n && clearTimeout(n);this.Ha || (this.Ha = !0, this.gb());
      });ec(l, "timeout", function () {
        n && clearTimeout(n);this.Ha || (this.Ha = !0, this.gb());b && b(null);
      });l.send(a, c, d, e);
    };
    var Od = "__fcb" + Math.floor(1E6 * Math.random()).toString(),
        Lg = function Lg(a, b) {
      ((window.gapi || {}).client || {}).request ? a() : (k[Od] = function () {
        ((window.gapi || {}).client || {}).request ? a() : b(Error("CORS_UNSUPPORTED"));
      }, Qd(function () {
        b(Error("CORS_UNSUPPORTED"));
      }));
    };
    R.prototype.Lf = function (a, b, c, d, e) {
      var f = this;Kg.then(function () {
        window.gapi.client.setApiKey(f.m);var g = window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({ path: a, method: c, body: d, headers: e, authType: "none", callback: function callback(a) {
            window.gapi.auth.setToken(g);b && b(a);
          } });
      }).f(function (a) {
        b && b({ error: { message: a && a.message || "CORS_UNSUPPORTED" } });
      });
    };
    var Og = function Og(a, b) {
      return new A(function (c, d) {
        "refresh_token" == b.grant_type && b.refresh_token || "authorization_code" == b.grant_type && b.code ? Mg(a, a.Jf + "?key=" + encodeURIComponent(a.m), function (a) {
          a ? a.error ? d(Ng(a)) : a.access_token && a.refresh_token ? c(a) : d(new N("internal-error")) : d(new N("network-request-failed"));
        }, "POST", df(b).toString(), a.se, a.Kf.get()) : d(new N("internal-error"));
      });
    },
        Pg = function Pg(a, b, c, d, e, f) {
      var g = Ze(a.Ve + b);J(g, "key", a.m);f && J(g, "cb", ma().toString());var l = "GET" == c;if (l) for (var n in d) {
        d.hasOwnProperty(n) && J(g, n, d[n]);
      }return new A(function (b, f) {
        Mg(a, g.toString(), function (a) {
          a ? a.error ? f(Ng(a, e || {})) : b(a) : f(new N("network-request-failed"));
        }, c, l ? void 0 : Ac(Df(d)), a.Zd, a.We.get());
      });
    },
        Qg = function Qg(a) {
      if (!kc.test(a.email)) throw new N("invalid-email");
    },
        Rg = function Rg(a) {
      "email" in a && Qg(a);
    },
        Tg = function Tg(a, b) {
      return Q(a, Sg, { identifier: b, continueUri: yf() ? ff() : "http://localhost" }).then(function (a) {
        return a.allProviders || [];
      });
    },
        Vg = function Vg(a) {
      return Q(a, Ug, {}).then(function (a) {
        return a.authorizedDomains || [];
      });
    },
        Wg = function Wg(a) {
      if (!a.idToken) throw new N("internal-error");
    },
        Xg = function Xg(a) {
      if (a.phoneNumber || a.temporaryProof) {
        if (!a.phoneNumber || !a.temporaryProof) throw new N("internal-error");
      } else {
        if (!a.sessionInfo) throw new N("missing-verification-id");if (!a.code) throw new N("missing-verification-code");
      }
    };R.prototype.signInAnonymously = function () {
      return Q(this, Yg, {});
    };R.prototype.updateEmail = function (a, b) {
      return Q(this, Zg, { idToken: a, email: b });
    };R.prototype.updatePassword = function (a, b) {
      return Q(this, sg, { idToken: a, password: b });
    };var $g = { displayName: "DISPLAY_NAME", photoUrl: "PHOTO_URL" };
    R.prototype.updateProfile = function (a, b) {
      var c = { idToken: a },
          d = [];Ua($g, function (a, f) {
        var e = b[f];null === e ? d.push(a) : f in b && (c[f] = e);
      });d.length && (c.deleteAttribute = d);return Q(this, Zg, c);
    };R.prototype.sendPasswordResetEmail = function (a) {
      return Q(this, ah, { requestType: "PASSWORD_RESET", email: a });
    };R.prototype.sendEmailVerification = function (a) {
      return Q(this, bh, { requestType: "VERIFY_EMAIL", idToken: a });
    };R.prototype.verifyPhoneNumber = function (a) {
      return Q(this, ch, a);
    };
    var eh = function eh(a, b, c) {
      return Q(a, dh, { idToken: b, deleteProvider: c });
    },
        fh = function fh(a) {
      if (!a.requestUri || !a.sessionId && !a.postBody) throw new N("internal-error");
    },
        gh = function gh(a) {
      var b = null;a.needConfirmation ? (a.code = "account-exists-with-different-credential", b = Eg(a)) : "FEDERATED_USER_ID_ALREADY_LINKED" == a.errorMessage ? (a.code = "credential-already-in-use", b = Eg(a)) : "EMAIL_EXISTS" == a.errorMessage && (a.code = "email-already-in-use", b = Eg(a));if (b) throw b;if (!a.idToken) throw new N("internal-error");
    },
        dg = function dg(a, b) {
      b.returnIdpCredential = !0;return Q(a, hh, b);
    },
        fg = function fg(a, b) {
      b.returnIdpCredential = !0;return Q(a, ih, b);
    },
        gg = function gg(a, b) {
      b.returnIdpCredential = !0;b.autoCreate = !1;return Q(a, jh, b);
    },
        kh = function kh(a) {
      if (!a.oobCode) throw new N("invalid-action-code");
    };R.prototype.confirmPasswordReset = function (a, b) {
      return Q(this, lh, { oobCode: a, newPassword: b });
    };R.prototype.checkActionCode = function (a) {
      return Q(this, mh, { oobCode: a });
    };R.prototype.applyActionCode = function (a) {
      return Q(this, nh, { oobCode: a });
    };
    var nh = { endpoint: "setAccountInfo", C: kh, Ya: "email" },
        mh = { endpoint: "resetPassword", C: kh, V: function V(a) {
        if (!a.email || !a.requestType) throw new N("internal-error");
      } },
        oh = { endpoint: "signupNewUser", C: function C(a) {
        Qg(a);if (!a.password) throw new N("weak-password");
      }, V: Wg, ta: !0 },
        Sg = { endpoint: "createAuthUri" },
        ph = { endpoint: "deleteAccount", Wa: ["idToken"] },
        dh = { endpoint: "setAccountInfo", Wa: ["idToken", "deleteProvider"], C: function C(a) {
        if (!ga(a.deleteProvider)) throw new N("internal-error");
      } },
        qh = { endpoint: "getAccountInfo" },
        bh = { endpoint: "getOobConfirmationCode", Wa: ["idToken", "requestType"], C: function C(a) {
        if ("VERIFY_EMAIL" != a.requestType) throw new N("internal-error");
      }, Ya: "email" },
        ah = { endpoint: "getOobConfirmationCode", Wa: ["requestType"], C: function C(a) {
        if ("PASSWORD_RESET" != a.requestType) throw new N("internal-error");Qg(a);
      }, Ya: "email" },
        Ug = { Md: !0, endpoint: "getProjectConfig", ee: "GET" },
        rh = { Md: !0, endpoint: "getRecaptchaParam", ee: "GET", V: function V(a) {
        if (!a.recaptchaSiteKey) throw new N("internal-error");
      } },
        lh = { endpoint: "resetPassword",
      C: kh, Ya: "email" },
        zg = { endpoint: "sendVerificationCode", Wa: ["phoneNumber", "recaptchaToken"], Ya: "sessionInfo" },
        Zg = { endpoint: "setAccountInfo", Wa: ["idToken"], C: Rg, ta: !0 },
        sg = { endpoint: "setAccountInfo", Wa: ["idToken"], C: function C(a) {
        Rg(a);if (!a.password) throw new N("weak-password");
      }, V: Wg, ta: !0 },
        Yg = { endpoint: "signupNewUser", V: Wg, ta: !0 },
        hh = { endpoint: "verifyAssertion", C: fh, V: gh, ta: !0 },
        jh = { endpoint: "verifyAssertion", C: fh, V: function V(a) {
        if (a.errorMessage && "USER_NOT_FOUND" == a.errorMessage) throw new N("user-not-found");
        if (!a.idToken) throw new N("internal-error");
      }, ta: !0 },
        ih = { endpoint: "verifyAssertion", C: function C(a) {
        fh(a);if (!a.idToken) throw new N("internal-error");
      }, V: gh, ta: !0 },
        sh = { endpoint: "verifyCustomToken", C: function C(a) {
        if (!a.token) throw new N("invalid-custom-token");
      }, V: Wg, ta: !0 },
        rg = { endpoint: "verifyPassword", C: function C(a) {
        Qg(a);if (!a.password) throw new N("wrong-password");
      }, V: Wg, ta: !0 },
        ch = { endpoint: "verifyPhoneNumber", C: Xg, V: Wg },
        wg = { endpoint: "verifyPhoneNumber", C: function C(a) {
        if (!a.idToken) throw new N("internal-error");
        Xg(a);
      }, V: function V(a) {
        if (a.temporaryProof) throw a.code = "credential-already-in-use", Eg(a);Wg(a);
      } },
        xg = { Qe: { USER_NOT_FOUND: "user-not-found" }, endpoint: "verifyPhoneNumber", C: Xg, V: Wg },
        Q = function Q(a, b, c) {
      if (!Rf(c, b.Wa)) return D(new N("internal-error"));var d = b.ee || "POST",
          e;return B(c).then(b.C).then(function () {
        b.ta && (c.returnSecureToken = !0);return Pg(a, b.endpoint, d, c, b.Qe, b.Md || !1);
      }).then(function (a) {
        return e = a;
      }).then(b.V).then(function () {
        if (!b.Ya) return e;if (!(b.Ya in e)) throw new N("internal-error");return e[b.Ya];
      });
    },
        Ng = function Ng(a, b) {
      var c = (a.error && a.error.errors && a.error.errors[0] || {}).reason || "";var d = { keyInvalid: "invalid-api-key", ipRefererBlocked: "app-not-authorized" };if (c = d[c] ? new N(d[c]) : null) return c;c = a.error && a.error.message || "";d = { INVALID_CUSTOM_TOKEN: "invalid-custom-token", CREDENTIAL_MISMATCH: "custom-token-mismatch", MISSING_CUSTOM_TOKEN: "internal-error", INVALID_IDENTIFIER: "invalid-email", MISSING_CONTINUE_URI: "internal-error", INVALID_EMAIL: "invalid-email", INVALID_PASSWORD: "wrong-password", USER_DISABLED: "user-disabled",
        MISSING_PASSWORD: "internal-error", EMAIL_EXISTS: "email-already-in-use", PASSWORD_LOGIN_DISABLED: "operation-not-allowed", INVALID_IDP_RESPONSE: "invalid-credential", FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use", INVALID_MESSAGE_PAYLOAD: "invalid-message-payload", INVALID_RECIPIENT_EMAIL: "invalid-recipient-email", INVALID_SENDER: "invalid-sender", EMAIL_NOT_FOUND: "user-not-found", EXPIRED_OOB_CODE: "expired-action-code", INVALID_OOB_CODE: "invalid-action-code", MISSING_OOB_CODE: "internal-error", CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
        INVALID_ID_TOKEN: "invalid-user-token", TOKEN_EXPIRED: "user-token-expired", USER_NOT_FOUND: "user-token-expired", CORS_UNSUPPORTED: "cors-unsupported", DYNAMIC_LINK_NOT_ACTIVATED: "dynamic-link-not-activated", INVALID_APP_ID: "invalid-app-id", TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests", WEAK_PASSWORD: "weak-password", OPERATION_NOT_ALLOWED: "operation-not-allowed", USER_CANCELLED: "user-cancelled", CAPTCHA_CHECK_FAILED: "captcha-check-failed", INVALID_APP_CREDENTIAL: "invalid-app-credential", INVALID_CODE: "invalid-verification-code",
        INVALID_PHONE_NUMBER: "invalid-phone-number", INVALID_SESSION_INFO: "invalid-verification-id", INVALID_TEMPORARY_PROOF: "invalid-credential", MISSING_APP_CREDENTIAL: "missing-app-credential", MISSING_CODE: "missing-verification-code", MISSING_PHONE_NUMBER: "missing-phone-number", MISSING_SESSION_INFO: "missing-verification-id", QUOTA_EXCEEDED: "quota-exceeded", SESSION_EXPIRED: "code-expired" };ab(d, b || {});b = (b = c.match(/^[^\s]+\s*:\s*(.*)$/)) && 1 < b.length ? b[1] : void 0;for (var e in d) {
        if (0 === c.indexOf(e)) return new N(d[e], b);
      }!b && a && (b = Cf(a));return new N("internal-error", b);
    };var th = function th(a) {
      this.aa = a;
    };th.prototype.value = function () {
      return this.aa;
    };th.prototype.ue = function (a) {
      this.aa.style = a;return this;
    };var uh = function uh(a) {
      this.aa = a || {};
    };uh.prototype.value = function () {
      return this.aa;
    };uh.prototype.ue = function (a) {
      this.aa.style = a;return this;
    };var wh = function wh(a) {
      this.Tf = a;this.tc = null;this.qd = vh(this);
    },
        xh = function xh(a) {
      var b = new uh();b.aa.where = document.body;b.aa.url = a.Tf;b.aa.messageHandlersFilter = L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER");b.aa.attributes = b.aa.attributes || {};new th(b.aa.attributes).ue({ position: "absolute", top: "-100px", width: "1px", height: "1px" });b.aa.dontclear = !0;return b;
    },
        vh = function vh(a) {
      return yh().then(function () {
        return new A(function (b, c) {
          L("gapi.iframes.getContext")().open(xh(a).value(), function (d) {
            a.tc = d;a.tc.restyle({ setHideOnLeave: !1 });
            var e = setTimeout(function () {
              c(Error("Network Error"));
            }, zh.get()),
                f = function f() {
              clearTimeout(e);b();
            };d.ping(f).then(f, function () {
              c(Error("Network Error"));
            });
          });
        });
      });
    };wh.prototype.sendMessage = function (a) {
      var b = this;return this.qd.then(function () {
        return new A(function (c) {
          b.tc.send(a.type, a, c, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
        });
      });
    };
    var Ah = function Ah(a, b) {
      a.qd.then(function () {
        a.tc.register("authEvent", b, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
      });
    },
        Bh = new If(3E4, 6E4),
        zh = new If(5E3, 15E3),
        Ch = null,
        yh = function yh() {
      return Ch ? Ch : Ch = new A(function (a, b) {
        if (Hf()) {
          var c = function c() {
            Gf();L("gapi.load")("gapi.iframes", { callback: a, ontimeout: function ontimeout() {
                Gf();b(Error("Network Error"));
              }, timeout: Bh.get() });
          };if (L("gapi.iframes.Iframe")) a();else if (L("gapi.load")) c();else {
            var d = "__iframefcb" + Math.floor(1E6 * Math.random()).toString();k[d] = function () {
              L("gapi.load") ? c() : b(Error("Network Error"));
            };B(Nd("https://apis.google.com/js/api.js?onload=" + d)).f(function () {
              b(Error("Network Error"));
            });
          }
        } else b(Error("Network Error"));
      }).f(function (a) {
        Ch = null;throw a;
      });
    };var Dh = function Dh(a, b, c) {
      this.B = a;this.m = b;this.w = c;this.$a = null;this.fc = $e(this.B, "/__/auth/iframe");J(this.fc, "apiKey", this.m);J(this.fc, "appName", this.w);
    };Dh.prototype.Ed = function (a) {
      this.$a = a;return this;
    };Dh.prototype.toString = function () {
      this.$a ? J(this.fc, "v", this.$a) : this.fc.removeParameter("v");return this.fc.toString();
    };var Eh = function Eh(a, b, c, d, e) {
      this.B = a;this.m = b;this.w = c;this.Le = d;this.$a = this.R = this.yd = null;this.Ub = e;
    };Eh.prototype.Ed = function (a) {
      this.$a = a;return this;
    };
    Eh.prototype.toString = function () {
      var a = $e(this.B, "/__/auth/handler");J(a, "apiKey", this.m);J(a, "appName", this.w);J(a, "authType", this.Le);if (this.Ub.isOAuthProvider) {
        J(a, "providerId", this.Ub.providerId);var b = this.Ub,
            c = Df(b.Td),
            d;for (d in c) {
          c[d] = c[d].toString();
        }b = b.Df;c = Za(c);for (d = 0; d < b.length; d++) {
          var e = b[d];e in c && delete c[e];
        }Xa(c) || J(a, "customParameters", Cf(c));
      }"function" === typeof this.Ub.ae && (b = this.Ub.ae(), b.length && J(a, "scopes", b.join(",")));this.yd ? J(a, "redirectUrl", this.yd) : a.removeParameter("redirectUrl");
      this.R ? J(a, "eventId", this.R) : a.removeParameter("eventId");this.$a ? J(a, "v", this.$a) : a.removeParameter("v");if (this.hc) for (var f in this.hc) {
        this.hc.hasOwnProperty(f) && !Ye(a, f) && J(a, f, this.hc[f]);
      }return a.toString();
    };
    var Fh = function Fh(a, b, c, d) {
      this.B = a;this.m = b;this.w = c;this.Ye = (this.Fa = d || null) ? xf(this.Fa) : null;d = this.Fa;this.ff = new Dh(a, b, c).Ed(d).toString();this.na = [];this.g = new R(b, null, this.Ye);this.vc = this.xa = null;
    },
        Gh = function Gh(a) {
      var b = ff();return Vg(a).then(function (a) {
        a: {
          for (var c = Ze(b), e = c.ka, c = c.ia, f = 0; f < a.length; f++) {
            var g = a[f];var l = c;var n = e;0 == g.indexOf("chrome-extension://") ? l = Ze(g).ia == l && "chrome-extension" == n : "http" != n && "https" != n ? l = !1 : pf.test(g) ? l = l == g : (g = g.split(".").join("\\."), l = new RegExp("^(.+\\." + g + "|" + g + ")$", "i").test(l));if (l) {
              a = !0;break a;
            }
          }a = !1;
        }if (!a) throw new $f(ff());
      });
    };h = Fh.prototype;h.Kb = function () {
      if (this.vc) return this.vc;var a = this;return this.vc = qf().then(function () {
        a.sc = new wh(a.ff);Hh(a);
      });
    };h.$b = function (a, b, c) {
      var d = new N("popup-closed-by-user"),
          e = new N("web-storage-unsupported"),
          f = this,
          g = !1;return this.Na().then(function () {
        Ih(f).then(function (c) {
          c || (a && mf(a), b(e), g = !0);
        });
      }).f(function () {}).then(function () {
        if (!g) return of(a);
      }).then(function () {
        if (!g) return ve(c).then(function () {
          b(d);
        });
      });
    };
    h.ve = function () {
      var a = K();return !Bf(a) && !Ff(a);
    };h.de = function () {
      return !1;
    };h.Sb = function (a, b, c, d, e, f, g) {
      if (!a) return D(new N("popup-blocked"));if (g && !Bf()) return this.Na().f(function (b) {
        mf(a);e(b);
      }), d(), B();this.xa || (this.xa = Gh(this.g));var l = this;return this.xa.then(function () {
        var b = l.Na().f(function (b) {
          mf(a);e(b);throw b;
        });d();return b;
      }).then(function () {
        Cg(c);if (!g) {
          var d = Jh(l.B, l.m, l.w, b, c, null, f, l.Fa);gf(d, a);
        }
      }).f(function (a) {
        "auth/network-request-failed" == a.code && (l.xa = null);throw a;
      });
    };
    h.Tb = function (a, b, c) {
      this.xa || (this.xa = Gh(this.g));var d = this;return this.xa.then(function () {
        Cg(b);var e = Jh(d.B, d.m, d.w, a, b, ff(), c, d.Fa);gf(e);
      });
    };h.Na = function () {
      var a = this;return this.Kb().then(function () {
        return a.sc.qd;
      }).f(function () {
        a.xa = null;throw new N("network-request-failed");
      });
    };h.ye = function () {
      return !0;
    };
    var Jh = function Jh(a, b, c, d, e, f, g, l, n) {
      a = new Eh(a, b, c, d, e);a.yd = f;a.R = g;f = a.Ed(l);f.hc = Za(n || null);return f.toString();
    },
        Hh = function Hh(a) {
      if (!a.sc) throw Error("IfcHandler must be initialized!");Ah(a.sc, function (b) {
        var c = {};if (b && b.authEvent) {
          var d = !1;b = Zf(b.authEvent);for (c = 0; c < a.na.length; c++) {
            d = a.na[c](b) || d;
          }c = {};c.status = d ? "ACK" : "ERROR";return B(c);
        }c.status = "ERROR";return B(c);
      });
    },
        Ih = function Ih(a) {
      var b = { type: "webStorageSupport" };return a.Kb().then(function () {
        return a.sc.sendMessage(b);
      }).then(function (a) {
        if (a && a.length && "undefined" !== typeof a[0].webStorageSupport) return a[0].webStorageSupport;throw Error();
      });
    };Fh.prototype.cb = function (a) {
      this.na.push(a);
    };Fh.prototype.Yb = function (a) {
      Na(this.na, function (b) {
        return b == a;
      });
    };var Kh = function Kh(a, b, c) {
      M(this, "type", "recaptcha");this.Uc = this.zb = null;this.Bb = !1;this.Rd = a;this.ya = b || { theme: "light", type: "image" };this.G = [];if (this.ya.sitekey) throw new N("argument-error", "sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");this.wc = "invisible" === this.ya.size;if (!ed(a) || !this.wc && ed(a).hasChildNodes()) throw new N("argument-error", "reCAPTCHA container is either not found or already contains inner elements!");try {
        this.h = c || firebase.app();
      } catch (g) {
        throw new N("argument-error", "No firebase.app.App instance is currently initialized.");
      }if (this.h.options && this.h.options.apiKey) a = firebase.SDK_VERSION ? xf(firebase.SDK_VERSION) : null, this.g = new R(this.h.options && this.h.options.apiKey, null, a);else throw new N("invalid-api-key");var d = this;this.Pc = [];var e = this.ya.callback;this.ya.callback = function (a) {
        d.Cb(a);if ("function" === typeof e) e(a);else if ("string" === typeof e) {
          var b = L(e, k);"function" === typeof b && b(a);
        }
      };var f = this.ya["expired-callback"];this.ya["expired-callback"] = function () {
        d.Cb(null);
        if ("function" === typeof f) f();else if ("string" === typeof f) {
          var a = L(f, k);"function" === typeof a && a();
        }
      };
    };Kh.prototype.Cb = function (a) {
      for (var b = 0; b < this.Pc.length; b++) {
        try {
          this.Pc[b](a);
        } catch (c) {}
      }
    };var Lh = function Lh(a, b) {
      Na(a.Pc, function (a) {
        return a == b;
      });
    };Kh.prototype.b = function (a) {
      var b = this;this.G.push(a);wd(a, function () {
        Ma(b.G, a);
      });return a;
    };
    Kh.prototype.Lb = function () {
      var a = this;return this.zb ? this.zb : this.zb = this.b(B().then(function () {
        if (yf()) return qf();throw new N("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");
      }).then(function () {
        return Nh();
      }).then(function () {
        return Q(a.g, rh, {});
      }).then(function (b) {
        a.ya.sitekey = b.recaptchaSiteKey;
      }).f(function (b) {
        a.zb = null;throw b;
      }));
    };
    Kh.prototype.render = function () {
      Oh(this);var a = this;return this.b(this.Lb().then(function () {
        if (null === a.Uc) {
          var b = a.Rd;if (!a.wc) {
            var c = ed(b),
                b = id("DIV");c.appendChild(b);
          }a.Uc = grecaptcha.render(b, a.ya);
        }return a.Uc;
      }));
    };Kh.prototype.verify = function () {
      Oh(this);var a = this;return this.b(this.render().then(function (b) {
        return new A(function (c) {
          var d = grecaptcha.getResponse(b);if (d) c(d);else {
            var e = function e(b) {
              b && (Lh(a, e), c(b));
            };a.Pc.push(e);a.wc && grecaptcha.execute(a.Uc);
          }
        });
      }));
    };
    var Oh = function Oh(a) {
      if (a.Bb) throw new N("internal-error", "RecaptchaVerifier instance has been destroyed.");
    };Kh.prototype.clear = function () {
      Oh(this);this.Bb = !0;for (var a = 0; a < this.G.length; a++) {
        this.G[a].cancel("RecaptchaVerifier instance has been destroyed.");
      }if (!this.wc) for (var a = ed(this.Rd), b; b = a.firstChild;) {
        a.removeChild(b);
      }
    };
    var Nh = function Nh() {
      return new A(function (a, b) {
        if (Hf()) {
          if (k.grecaptcha) a();else {
            var c = "__rcb" + Math.floor(1E6 * Math.random()).toString();k[c] = function () {
              k.grecaptcha ? a() : b(new N("internal-error"));delete k[c];
            };B(Nd("https://www.google.com/recaptcha/api.js?onload=" + c + "&render=explicit")).f(function () {
              b(new N("internal-error", "Unable to load external reCAPTCHA dependencies!"));
            });
          }
        } else b(new N("network-request-failed"));
      });
    };var Ph = function Ph(a) {
      this.D = a || firebase.INTERNAL.reactNative && firebase.INTERNAL.reactNative.AsyncStorage;if (!this.D) throw new N("internal-error", "The React Native compatibility library was not found.");
    };h = Ph.prototype;h.get = function (a) {
      return B(this.D.getItem(a)).then(function (a) {
        return a && Ef(a);
      });
    };h.set = function (a, b) {
      return B(this.D.setItem(a, Cf(b)));
    };h.remove = function (a) {
      return B(this.D.removeItem(a));
    };h.eb = function () {};h.Va = function () {};var Qh = function Qh() {
      this.D = {};
    };h = Qh.prototype;h.get = function (a) {
      return B(this.D[a]);
    };h.set = function (a, b) {
      this.D[a] = b;return B();
    };h.remove = function (a) {
      delete this.D[a];return B();
    };h.eb = function () {};h.Va = function () {};var Sh = function Sh() {
      if (!Rh()) {
        if ("Node" == vf()) throw new N("internal-error", "The LocalStorage compatibility library was not found.");throw new N("web-storage-unsupported");
      }this.D = k.localStorage || firebase.INTERNAL.node.localStorage;
    },
        Rh = function Rh() {
      var a = "Node" == vf(),
          a = k.localStorage || a && firebase.INTERNAL.node && firebase.INTERNAL.node.localStorage;if (!a) return !1;try {
        return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
      } catch (b) {
        return !1;
      }
    };h = Sh.prototype;
    h.get = function (a) {
      var b = this;return B().then(function () {
        var c = b.D.getItem(a);return Ef(c);
      });
    };h.set = function (a, b) {
      var c = this;return B().then(function () {
        var d = Cf(b);null === d ? c.remove(a) : c.D.setItem(a, d);
      });
    };h.remove = function (a) {
      var b = this;return B().then(function () {
        b.D.removeItem(a);
      });
    };h.eb = function (a) {
      k.window && Xb(k.window, "storage", a);
    };h.Va = function (a) {
      k.window && fc(k.window, "storage", a);
    };var Th = function Th() {
      this.D = {};
    };h = Th.prototype;h.get = function () {
      return B(null);
    };h.set = function () {
      return B();
    };h.remove = function () {
      return B();
    };h.eb = function () {};h.Va = function () {};var Vh = function Vh() {
      if (!Uh()) {
        if ("Node" == vf()) throw new N("internal-error", "The SessionStorage compatibility library was not found.");throw new N("web-storage-unsupported");
      }this.D = k.sessionStorage || firebase.INTERNAL.node.sessionStorage;
    },
        Uh = function Uh() {
      var a = "Node" == vf(),
          a = k.sessionStorage || a && firebase.INTERNAL.node && firebase.INTERNAL.node.sessionStorage;if (!a) return !1;try {
        return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
      } catch (b) {
        return !1;
      }
    };h = Vh.prototype;
    h.get = function (a) {
      var b = this;return B().then(function () {
        var c = b.D.getItem(a);return Ef(c);
      });
    };h.set = function (a, b) {
      var c = this;return B().then(function () {
        var d = Cf(b);null === d ? c.remove(a) : c.D.setItem(a, d);
      });
    };h.remove = function (a) {
      var b = this;return B().then(function () {
        b.D.removeItem(a);
      });
    };h.eb = function () {};h.Va = function () {};var Wh = function Wh(a, b, c, d, e, f) {
      if (!window.indexedDB) throw new N("web-storage-unsupported");this.Re = a;this.pd = b;this.bd = c;this.Ce = d;this.ab = e;this.$ = {};this.ac = [];this.Ob = 0;this.gf = f || k.indexedDB;
    },
        Xh,
        Yh = function Yh(a) {
      return new A(function (b, c) {
        var d = a.gf.open(a.Re, a.ab);d.onerror = function (a) {
          c(Error(a.target.errorCode));
        };d.onupgradeneeded = function (b) {
          b = b.target.result;try {
            b.createObjectStore(a.pd, { keyPath: a.bd });
          } catch (f) {
            c(f);
          }
        };d.onsuccess = function (a) {
          b(a.target.result);
        };
      });
    },
        Zh = function Zh(a) {
      a.he || (a.he = Yh(a));return a.he;
    },
        $h = function $h(a, b) {
      return b.objectStore(a.pd);
    },
        ai = function ai(a, b, c) {
      return b.transaction([a.pd], c ? "readwrite" : "readonly");
    },
        bi = function bi(a) {
      return new A(function (b, c) {
        a.onsuccess = function (a) {
          a && a.target ? b(a.target.result) : b();
        };a.onerror = function (a) {
          c(Error(a.target.errorCode));
        };
      });
    };h = Wh.prototype;
    h.set = function (a, b) {
      var c = !1,
          d,
          e = this;return wd(Zh(this).then(function (b) {
        d = b;b = $h(e, ai(e, d, !0));return bi(b.get(a));
      }).then(function (f) {
        var g = $h(e, ai(e, d, !0));if (f) return f.value = b, bi(g.put(f));e.Ob++;c = !0;f = {};f[e.bd] = a;f[e.Ce] = b;return bi(g.add(f));
      }).then(function () {
        e.$[a] = b;
      }), function () {
        c && e.Ob--;
      });
    };h.get = function (a) {
      var b = this;return Zh(this).then(function (c) {
        return bi($h(b, ai(b, c, !1)).get(a));
      }).then(function (a) {
        return a && a.value;
      });
    };
    h.remove = function (a) {
      var b = !1,
          c = this;return wd(Zh(this).then(function (d) {
        b = !0;c.Ob++;return bi($h(c, ai(c, d, !0))["delete"](a));
      }).then(function () {
        delete c.$[a];
      }), function () {
        b && c.Ob--;
      });
    };
    h.Pf = function () {
      var a = this;return Zh(this).then(function (b) {
        var c = $h(a, ai(a, b, !1));return c.getAll ? bi(c.getAll()) : new A(function (a, b) {
          var d = [],
              e = c.openCursor();e.onsuccess = function (b) {
            (b = b.target.result) ? (d.push(b.value), b["continue"]()) : a(d);
          };e.onerror = function (a) {
            b(Error(a.target.errorCode));
          };
        });
      }).then(function (b) {
        var c = {},
            d = [];if (0 == a.Ob) {
          for (d = 0; d < b.length; d++) {
            c[b[d][a.bd]] = b[d][a.Ce];
          }d = hf(a.$, c);a.$ = c;
        }return d;
      });
    };h.eb = function (a) {
      0 == this.ac.length && this.Gd();this.ac.push(a);
    };
    h.Va = function (a) {
      Na(this.ac, function (b) {
        return b == a;
      });0 == this.ac.length && this.Lc();
    };h.Gd = function () {
      var a = this;this.Lc();var b = function b() {
        a.td = ve(800).then(_q(a.Pf, a)).then(function (b) {
          0 < b.length && w(a.ac, function (a) {
            a(b);
          });
        }).then(b).f(function (a) {
          "STOP_EVENT" != a.message && b();
        });return a.td;
      };b();
    };h.Lc = function () {
      this.td && this.td.cancel("STOP_EVENT");
    };var fi = function fi() {
      this.Vd = { Browser: ci, Node: di, ReactNative: ei }[vf()];
    },
        gi,
        ci = { U: Sh, Jd: Vh },
        di = { U: Sh, Jd: Vh },
        ei = { U: Ph, Jd: Th };var hi = function hi(a, b) {
      this.Pe = b;M(this, "verificationId", a);
    };hi.prototype.confirm = function (a) {
      a = Ag(this.verificationId, a);return this.Pe(a);
    };var ii = function ii(a, b, c, d) {
      return new yg(a).verifyPhoneNumber(b, c).then(function (a) {
        return new hi(a, d);
      });
    };var ji = function ji(a) {
      var b = {},
          c = a.email,
          d = a.newEmail;a = a.requestType;if (!c || !a) throw Error("Invalid provider user info!");b.fromEmail = d || null;b.email = c;M(this, "operation", a);M(this, "data", Sf(b));
    };var ki = function ki(a, b, c, d, e, f) {
      this.yf = a;this.Ff = b;this.$e = c;this.Ac = d;this.Kd = e;this.Gf = !!f;this.mb = null;this.Oa = this.Ac;if (this.Kd < this.Ac) throw Error("Proactive refresh lower bound greater than upper bound!");
    };ki.prototype.start = function () {
      this.Oa = this.Ac;li(this, !0);
    };
    var mi = function mi(a, b) {
      if (b) return a.Oa = a.Ac, a.$e();b = a.Oa;a.Oa *= 2;a.Oa > a.Kd && (a.Oa = a.Kd);return b;
    },
        li = function li(a, b) {
      a.stop();a.mb = ve(mi(a, b)).then(function () {
        return a.Gf ? B() : Kf();
      }).then(function () {
        return a.yf();
      }).then(function () {
        li(a, !0);
      }).f(function (b) {
        a.Ff(b) && li(a, !1);
      });
    };ki.prototype.stop = function () {
      this.mb && (this.mb.cancel(), this.mb = null);
    };var si = function si(a) {
      var b = {};b["facebook.com"] = ni;b["google.com"] = oi;b["github.com"] = pi;b["twitter.com"] = qi;var c = a && a.providerId;return c ? b[c] ? new b[c](a) : new ri(a) : null;
    },
        ri = function ri(a) {
      var b = Ef(a.rawUserInfo || "{}");a = a.providerId;if (!a) throw Error("Invalid additional user info!");M(this, "profile", Sf(b || {}));M(this, "providerId", a);
    },
        ni = function ni(a) {
      ri.call(this, a);if ("facebook.com" != this.providerId) throw Error("Invalid provider id!");
    };r(ni, ri);
    var pi = function pi(a) {
      ri.call(this, a);if ("github.com" != this.providerId) throw Error("Invalid provider id!");M(this, "username", this.profile && this.profile.login || null);
    };r(pi, ri);var oi = function oi(a) {
      ri.call(this, a);if ("google.com" != this.providerId) throw Error("Invalid provider id!");
    };r(oi, ri);var qi = function qi(a) {
      ri.call(this, a);if ("twitter.com" != this.providerId) throw Error("Invalid provider id!");M(this, "username", a.screenName || null);
    };r(qi, ri);var ti = function ti(a, b, c, d) {
      this.ke = a;this.Bd = b;this.Hf = c;this.Zb = d;this.S = {};gi || (gi = new fi());a = gi;try {
        if (ef()) {
          Xh || (Xh = new Wh("firebaseLocalStorageDb", "firebaseLocalStorage", "fbase_key", "value", 1));var e = Xh;
        } else e = new a.Vd.U();this.Sa = e;
      } catch (f) {
        this.Sa = new Qh(), this.Zb = !0;
      }try {
        this.Nc = new a.Vd.Jd();
      } catch (f) {
        this.Nc = new Qh();
      }this.Hd = _q(this.we, this);this.$ = {};
    },
        ui,
        vi = function vi() {
      ui || (ui = new ti("firebase", ":", !Ff(K()) && uf() ? !0 : !1, Bf()));return ui;
    };h = ti.prototype;
    h.Y = function (a, b) {
      return this.ke + this.Bd + a.name + (b ? this.Bd + b : "");
    };h.get = function (a, b) {
      return (a.U ? this.Sa : this.Nc).get(this.Y(a, b));
    };h.remove = function (a, b) {
      b = this.Y(a, b);a.U && !this.Zb && (this.$[b] = null);return (a.U ? this.Sa : this.Nc).remove(b);
    };h.set = function (a, b, c) {
      var d = this.Y(a, c),
          e = this,
          f = a.U ? this.Sa : this.Nc;return f.set(d, b).then(function () {
        return f.get(d);
      }).then(function (b) {
        a.U && !this.Zb && (e.$[d] = b);
      });
    };
    h.addListener = function (a, b, c) {
      a = this.Y(a, b);this.Zb || (this.$[a] = k.localStorage.getItem(a));Xa(this.S) && this.Gd();this.S[a] || (this.S[a] = []);this.S[a].push(c);
    };h.removeListener = function (a, b, c) {
      a = this.Y(a, b);this.S[a] && (Na(this.S[a], function (a) {
        return a == c;
      }), 0 == this.S[a].length && delete this.S[a]);Xa(this.S) && this.Lc();
    };h.Gd = function () {
      this.Sa.eb(this.Hd);this.Zb || ef() || wi(this);
    };
    var wi = function wi(a) {
      xi(a);a.nd = setInterval(function () {
        for (var b in a.S) {
          var c = k.localStorage.getItem(b),
              d = a.$[b];c != d && (a.$[b] = c, c = new Lb({ type: "storage", key: b, target: window, oldValue: d, newValue: c, oe: !0 }), a.we(c));
        }
      }, 1E3);
    },
        xi = function xi(a) {
      a.nd && (clearInterval(a.nd), a.nd = null);
    };ti.prototype.Lc = function () {
      this.Sa.Va(this.Hd);xi(this);
    };
    ti.prototype.we = function (a) {
      if (a && a.Ze) {
        var b = a.Ia.key;if (0 == b.indexOf(this.ke + this.Bd) && this.S[b]) {
          "undefined" !== typeof a.Ia.oe ? this.Sa.Va(this.Hd) : xi(this);if (this.Hf) {
            var c = k.localStorage.getItem(b),
                d = a.Ia.newValue;if (d !== c) null !== d ? k.localStorage.setItem(b, d) : k.localStorage.removeItem(b);else if (this.$[b] === d && "undefined" === typeof a.Ia.oe) return;
          }this.$[b] = k.localStorage.getItem(b);this.Od(b);
        }
      } else w(a, _q(this.Od, this));
    };ti.prototype.Od = function (a) {
      this.S[a] && w(this.S[a], function (a) {
        a();
      });
    };var yi = function yi(a, b) {
      this.v = a;this.l = b || vi();
    },
        zi = { name: "authEvent", U: !0 },
        Ai = function Ai(a) {
      return a.l.get(zi, a.v).then(function (a) {
        return Zf(a);
      });
    };yi.prototype.cb = function (a) {
      this.l.addListener(zi, this.v, a);
    };yi.prototype.Yb = function (a) {
      this.l.removeListener(zi, this.v, a);
    };var Bi = function Bi(a) {
      this.l = a || vi();
    },
        Ci = { name: "sessionId", U: !1 };Bi.prototype.oc = function (a) {
      return this.l.get(Ci, a);
    };var Di = function Di(a, b, c, d, e, f) {
      this.B = a;this.m = b;this.w = c;this.Fa = d || null;this.xe = b + ":" + c;this.If = new Bi();this.$d = new yi(this.xe);this.ld = null;this.na = [];this.lf = e || 500;this.Bf = f || 2E3;this.Jb = this.Dc = null;
    },
        Ei = function Ei(a) {
      return new N("invalid-cordova-configuration", a);
    };
    Di.prototype.Na = function () {
      return this.Lb ? this.Lb : this.Lb = sf().then(function () {
        if ("function" !== typeof L("universalLinks.subscribe", k)) throw Ei("cordova-universal-links-plugin is not installed");if ("undefined" === typeof L("BuildInfo.packageName", k)) throw Ei("cordova-plugin-buildinfo is not installed");if ("function" !== typeof L("cordova.plugins.browsertab.openUrl", k)) throw Ei("cordova-plugin-browsertab is not installed");if ("function" !== typeof L("cordova.InAppBrowser.open", k)) throw Ei("cordova-plugin-inappbrowser is not installed");
      }, function () {
        throw new N("cordova-not-ready");
      });
    };var Fi = function Fi() {
      for (var a = 20, b = []; 0 < a;) {
        b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;
      }return b.join("");
    },
        Gi = function Gi(a) {
      var b = new Gb();b.update(a);return Qa(b.digest());
    };h = Di.prototype;h.$b = function (a, b) {
      b(new N("operation-not-supported-in-this-environment"));return B();
    };h.Sb = function () {
      return D(new N("operation-not-supported-in-this-environment"));
    };h.ye = function () {
      return !1;
    };h.ve = function () {
      return !0;
    };
    h.de = function () {
      return !0;
    };
    h.Tb = function (a, b, c) {
      if (this.Dc) return D(new N("redirect-operation-pending"));var d = this,
          e = k.document,
          f = null,
          g = null,
          l = null,
          n = null;return this.Dc = wd(B().then(function () {
        Cg(b);return Hi(d);
      }).then(function () {
        return Ii(d, a, b, c);
      }).then(function () {
        return new A(function (a, b) {
          g = function g() {
            var b = L("cordova.plugins.browsertab.close", k);a();"function" === typeof b && b();d.Jb && "function" === typeof d.Jb.close && (d.Jb.close(), d.Jb = null);return !1;
          };d.cb(g);l = function l() {
            f || (f = ve(d.Bf).then(function () {
              b(new N("redirect-cancelled-by-user"));
            }));
          };n = function n() {
            Jf() && l();
          };e.addEventListener("resume", l, !1);K().toLowerCase().match(/android/) || e.addEventListener("visibilitychange", n, !1);
        }).f(function (a) {
          return Ji(d).then(function () {
            throw a;
          });
        });
      }), function () {
        l && e.removeEventListener("resume", l, !1);n && e.removeEventListener("visibilitychange", n, !1);f && f.cancel();g && d.Yb(g);d.Dc = null;
      });
    };
    var Ii = function Ii(a, b, c, d) {
      var e = Fi(),
          f = new O(b, d, null, e, new N("no-auth-event")),
          g = L("BuildInfo.packageName", k);if ("string" !== typeof g) throw new N("invalid-cordova-configuration");var l = L("BuildInfo.displayName", k),
          n = {};if (K().toLowerCase().match(/iphone|ipad|ipod/)) n.ibi = g;else if (K().toLowerCase().match(/android/)) n.apn = g;else return D(new N("operation-not-supported-in-this-environment"));l && (n.appDisplayName = l);e = Gi(e);n.sessionId = e;var C = Jh(a.B, a.m, a.w, b, c, null, d, a.Fa, n);return a.Na().then(function () {
        var b = a.xe;return a.If.l.set(zi, f.F(), b);
      }).then(function () {
        var b = L("cordova.plugins.browsertab.isAvailable", k);if ("function" !== typeof b) throw new N("invalid-cordova-configuration");var c = null;b(function (b) {
          if (b) {
            c = L("cordova.plugins.browsertab.openUrl", k);if ("function" !== typeof c) throw new N("invalid-cordova-configuration");c(C);
          } else {
            c = L("cordova.InAppBrowser.open", k);if ("function" !== typeof c) throw new N("invalid-cordova-configuration");b = c;var d = K();d = !(!d.match(/(iPad|iPhone|iPod).*OS 7_\d/i) && !d.match(/(iPad|iPhone|iPod).*OS 8_\d/i));
            a.Jb = b(C, d ? "_blank" : "_system", "location=yes");
          }
        });
      });
    };Di.prototype.Cb = function (a) {
      for (var b = 0; b < this.na.length; b++) {
        try {
          this.na[b](a);
        } catch (c) {}
      }
    };
    var Hi = function Hi(a) {
      a.ld || (a.ld = a.Na().then(function () {
        return new A(function (b) {
          var c = function c(d) {
            b(d);a.Yb(c);return !1;
          };a.cb(c);Ki(a);
        });
      }));return a.ld;
    },
        Ji = function Ji(a) {
      var b = null;return Ai(a.$d).then(function (c) {
        b = c;c = a.$d;return c.l.remove(zi, c.v);
      }).then(function () {
        return b;
      });
    },
        Ki = function Ki(a) {
      var b = L("universalLinks.subscribe", k);if ("function" !== typeof b) throw new N("invalid-cordova-configuration");var c = new O("unknown", null, null, null, new N("no-auth-event")),
          d = !1,
          e = ve(a.lf).then(function () {
        return Ji(a).then(function () {
          d || a.Cb(c);
        });
      }),
          f = function f(b) {
        d = !0;e && e.cancel();Ji(a).then(function (d) {
          var e = c;if (d && b && b.url) {
            var e = null;var f = b.url;var g = Ze(f),
                l = Ye(g, "link"),
                n = Ye(Ze(l), "link"),
                g = Ye(g, "deep_link_id");f = Ye(Ze(g), "link") || g || n || l || f;-1 != f.indexOf("/__/auth/callback") && (e = Ze(f), e = Ef(Ye(e, "firebaseError") || null), e = (e = "object" === typeof e ? Yf(e) : null) ? new O(d.ha, d.R, null, null, e) : new O(d.ha, d.R, f, d.oc()));e = e || c;
          }a.Cb(e);
        });
      },
          g = k.handleOpenURL;k.handleOpenURL = function (a) {
        0 == a.indexOf(L("BuildInfo.packageName", k) + "://") && f({ url: a });
        if ("function" === typeof g) try {
          g(a);
        } catch (n) {
          console.error(n);
        }
      };b(null, f);
    };Di.prototype.cb = function (a) {
      this.na.push(a);Hi(this).f(function (b) {
        "auth/invalid-cordova-configuration" === b.code && (b = new O("unknown", null, null, null, new N("no-auth-event")), a(b));
      });
    };Di.prototype.Yb = function (a) {
      Na(this.na, function (b) {
        return b == a;
      });
    };var Li = function Li(a) {
      this.v = a;this.l = vi();
    },
        Mi = { name: "pendingRedirect", U: !1 },
        Ni = function Ni(a) {
      return a.l.set(Mi, "pending", a.v);
    },
        Oi = function Oi(a) {
      return a.l.remove(Mi, a.v);
    },
        Pi = function Pi(a) {
      return a.l.get(Mi, a.v).then(function (a) {
        return "pending" == a;
      });
    };var Ti = function Ti(a, b, c) {
      this.B = a;this.m = b;this.w = c;this.bc = [];this.kb = !1;this.Yc = _q(this.hd, this);this.Ta = new Qi(this);this.ud = new Ri(this);this.Pb = new Li(this.m + ":" + this.w);this.Ba = {};this.Ba.unknown = this.Ta;this.Ba.signInViaRedirect = this.Ta;this.Ba.linkViaRedirect = this.Ta;this.Ba.reauthViaRedirect = this.Ta;this.Ba.signInViaPopup = this.ud;this.Ba.linkViaPopup = this.ud;this.Ba.reauthViaPopup = this.ud;this.T = Si(this.B, this.m, this.w);
    },
        Si = function Si(a, b, c) {
      var d = firebase.SDK_VERSION || null;return rf() ? new Di(a, b, c, d) : new Fh(a, b, c, d);
    };Ti.prototype.reset = function () {
      this.kb = !1;this.T.Yb(this.Yc);this.T = Si(this.B, this.m, this.w);
    };Ti.prototype.Kb = function () {
      var a = this;this.kb || (this.kb = !0, this.T.cb(this.Yc));var b = this.T;return this.T.Na().f(function (c) {
        a.T == b && a.reset();throw c;
      });
    };var Wi = function Wi(a) {
      a.T.ve() && a.Kb().f(function (b) {
        var c = new O("unknown", null, null, null, new N("operation-not-supported-in-this-environment"));Ui(b) && a.hd(c);
      });a.T.de() || Vi(a.Ta);
    };
    Ti.prototype.subscribe = function (a) {
      Ka(this.bc, a) || this.bc.push(a);if (!this.kb) {
        var b = this;Pi(this.Pb).then(function (a) {
          a ? Oi(b.Pb).then(function () {
            b.Kb().f(function (a) {
              var c = new O("unknown", null, null, null, new N("operation-not-supported-in-this-environment"));Ui(a) && b.hd(c);
            });
          }) : Wi(b);
        }).f(function () {
          Wi(b);
        });
      }
    };Ti.prototype.unsubscribe = function (a) {
      Na(this.bc, function (b) {
        return b == a;
      });
    };
    Ti.prototype.hd = function (a) {
      if (!a) throw new N("invalid-auth-event");for (var b = !1, c = 0; c < this.bc.length; c++) {
        var d = this.bc[c];if (d.Pd(a.ha, a.R)) {
          (b = this.Ba[a.ha]) && b.pe(a, d);b = !0;break;
        }
      }Vi(this.Ta);return b;
    };var Xi = new If(2E3, 1E4),
        Yi = new If(3E4, 6E4);Ti.prototype.getRedirectResult = function () {
      return this.Ta.getRedirectResult();
    };Ti.prototype.Sb = function (a, b, c, d, e) {
      var f = this;return this.T.Sb(a, b, c, function () {
        f.kb || (f.kb = !0, f.T.cb(f.Yc));
      }, function () {
        f.reset();
      }, d, e);
    };
    var Ui = function Ui(a) {
      return a && "auth/cordova-not-ready" == a.code ? !0 : !1;
    };Ti.prototype.Tb = function (a, b, c) {
      var d = this,
          e;return Ni(this.Pb).then(function () {
        return d.T.Tb(a, b, c).f(function (a) {
          if (Ui(a)) throw new N("operation-not-supported-in-this-environment");e = a;return Oi(d.Pb).then(function () {
            throw e;
          });
        }).then(function () {
          return d.T.ye() ? new A(function () {}) : Oi(d.Pb).then(function () {
            return d.getRedirectResult();
          }).then(function () {}).f(function () {});
        });
      });
    };
    Ti.prototype.$b = function (a, b, c, d) {
      return this.T.$b(c, function (c) {
        a.Xa(b, null, c, d);
      }, Xi.get());
    };var Zi = {},
        $i = function $i(a, b, c) {
      var d = b + ":" + c;Zi[d] || (Zi[d] = new Ti(a, b, c));return Zi[d];
    },
        Qi = function Qi(a) {
      this.l = a;this.sb = null;this.Wb = [];this.Vb = [];this.qb = null;this.xd = !1;
    };Qi.prototype.reset = function () {
      this.sb = null;this.qb && (this.qb.cancel(), this.qb = null);
    };
    Qi.prototype.pe = function (a, b) {
      if (!a) return D(new N("invalid-auth-event"));this.reset();this.xd = !0;var c = a.ha,
          d = a.R,
          e = a.getError() && "auth/web-storage-unsupported" == a.getError().code,
          f = a.getError() && "auth/operation-not-supported-in-this-environment" == a.getError().code;"unknown" != c || e || f ? a = a.X ? this.vd(a, b) : b.Db(c, d) ? this.wd(a, b) : D(new N("invalid-auth-event")) : (aj(this, !1, null, null), a = B());return a;
    };var Vi = function Vi(a) {
      a.xd || (a.xd = !0, aj(a, !1, null, null));
    };
    Qi.prototype.vd = function (a) {
      aj(this, !0, null, a.getError());return B();
    };Qi.prototype.wd = function (a, b) {
      var c = this;b = b.Db(a.ha, a.R);var d = a.vb,
          e = a.oc(),
          f = !!a.ha.match(/Redirect$/);return b(d, e).then(function (a) {
        aj(c, f, a, null);
      }).f(function (a) {
        aj(c, f, null, a);
      });
    };
    var bj = function bj(a, b) {
      a.sb = function () {
        return D(b);
      };if (a.Vb.length) for (var c = 0; c < a.Vb.length; c++) {
        a.Vb[c](b);
      }
    },
        cj = function cj(a, b) {
      a.sb = function () {
        return B(b);
      };if (a.Wb.length) for (var c = 0; c < a.Wb.length; c++) {
        a.Wb[c](b);
      }
    },
        aj = function aj(a, b, c, d) {
      b ? d ? bj(a, d) : cj(a, c) : cj(a, { user: null });a.Wb = [];a.Vb = [];
    };Qi.prototype.getRedirectResult = function () {
      var a = this;return new A(function (b, c) {
        a.sb ? a.sb().then(b, c) : (a.Wb.push(b), a.Vb.push(c), dj(a));
      });
    };
    var dj = function dj(a) {
      var b = new N("timeout");a.qb && a.qb.cancel();a.qb = ve(Yi.get()).then(function () {
        a.sb || aj(a, !0, null, b);
      });
    },
        Ri = function Ri(a) {
      this.l = a;
    };Ri.prototype.pe = function (a, b) {
      if (!a) return D(new N("invalid-auth-event"));var c = a.ha,
          d = a.R;return a.X ? this.vd(a, b) : b.Db(c, d) ? this.wd(a, b) : D(new N("invalid-auth-event"));
    };Ri.prototype.vd = function (a, b) {
      b.Xa(a.ha, null, a.getError(), a.R);return B();
    };
    Ri.prototype.wd = function (a, b) {
      var c = a.R,
          d = a.ha,
          e = b.Db(d, c),
          f = a.vb;a = a.oc();return e(f, a).then(function (a) {
        b.Xa(d, a, null, c);
      }).f(function (a) {
        b.Xa(d, null, a, c);
      });
    };var ej = function ej(a) {
      this.g = a;this.Ca = this.ca = null;this.Ja = 0;
    };ej.prototype.F = function () {
      return { apiKey: this.g.m, refreshToken: this.ca, accessToken: this.Ca, expirationTime: this.Ja };
    };
    var gj = function gj(a, b) {
      var c = b.idToken,
          d = b.refreshToken;b = fj(b.expiresIn);a.Ca = c;a.Ja = b;a.ca = d;
    },
        fj = function fj(a) {
      return ma() + 1E3 * parseInt(a, 10);
    },
        hj = function hj(a, b) {
      return Og(a.g, b).then(function (b) {
        a.Ca = b.access_token;a.Ja = fj(b.expires_in);a.ca = b.refresh_token;return { accessToken: a.Ca, expirationTime: a.Ja, refreshToken: a.ca };
      }).f(function (b) {
        "auth/user-token-expired" == b.code && (a.ca = null);throw b;
      });
    };
    ej.prototype.getToken = function (a) {
      a = !!a;return this.Ca && !this.ca ? D(new N("user-token-expired")) : a || !this.Ca || ma() > this.Ja - 3E4 ? this.ca ? hj(this, { grant_type: "refresh_token", refresh_token: this.ca }) : B(null) : B({ accessToken: this.Ca, expirationTime: this.Ja, refreshToken: this.ca });
    };var ij = function ij(a, b, c, d, e) {
      Of(this, { uid: a, displayName: d || null, photoURL: e || null, email: c || null, providerId: b });
    },
        jj = function jj(a, b) {
      Kb.call(this, a);for (var c in b) {
        this[c] = b[c];
      }
    };r(jj, Kb);
    var S = function S(a, b, c) {
      this.G = [];this.m = a.apiKey;this.w = a.appName;this.B = a.authDomain || null;a = firebase.SDK_VERSION ? xf(firebase.SDK_VERSION) : null;this.g = new R(this.m, null, a);this.la = new ej(this.g);kj(this, b.idToken);gj(this.la, b);M(this, "refreshToken", this.la.ca);lj(this, c || {});je.call(this);this.Ec = !1;this.B && Af() && (this.s = $i(this.B, this.m, this.w));this.Kc = [];this.ma = null;this.ob = mj(this);this.xb = _q(this.jd, this);
    };r(S, je);S.prototype.jd = function () {
      this.ob.mb && (this.ob.stop(), this.ob.start());
    };
    var nj = function nj(a) {
      try {
        return firebase.app(a.w).auth();
      } catch (b) {
        throw new N("internal-error", "No firebase.auth.Auth instance is available for the Firebase App '" + a.w + "'!");
      }
    },
        mj = function mj(a) {
      return new ki(function () {
        return a.getIdToken(!0);
      }, function (a) {
        return a && "auth/network-request-failed" == a.code ? !0 : !1;
      }, function () {
        var b = a.la.Ja - ma() - 3E5;return 0 < b ? b : 0;
      }, 3E4, 96E4, !1);
    },
        oj = function oj(a) {
      a.Bb || a.ob.mb || (a.ob.start(), fc(a, "tokenChanged", a.xb), Xb(a, "tokenChanged", a.xb));
    },
        pj = function pj(a) {
      fc(a, "tokenChanged", a.xb);a.ob.stop();
    },
        kj = function kj(a, b) {
      a.ie = b;M(a, "_lat", b);
    },
        qj = function qj(a, b) {
      Na(a.Kc, function (a) {
        return a == b;
      });
    },
        rj = function rj(a) {
      for (var b = [], c = 0; c < a.Kc.length; c++) {
        b.push(a.Kc[c](a));
      }return td(b).then(function () {
        return a;
      });
    },
        sj = function sj(a) {
      a.s && !a.Ec && (a.Ec = !0, a.s.subscribe(a));
    },
        lj = function lj(a, b) {
      Of(a, { uid: b.uid, displayName: b.displayName || null, photoURL: b.photoURL || null, email: b.email || null, emailVerified: b.emailVerified || !1, phoneNumber: b.phoneNumber || null, isAnonymous: b.isAnonymous || !1, providerData: [] });
    };
    M(S.prototype, "providerId", "firebase");var tj = function tj() {},
        uj = function uj(a) {
      return B().then(function () {
        if (a.Bb) throw new N("app-deleted");
      });
    },
        vj = function vj(a) {
      return Ga(a.providerData, function (a) {
        return a.providerId;
      });
    },
        xj = function xj(a, b) {
      b && (wj(a, b.providerId), a.providerData.push(b));
    },
        wj = function wj(a, b) {
      Na(a.providerData, function (a) {
        return a.providerId == b;
      });
    },
        yj = function yj(a, b, c) {
      ("uid" != b || c) && a.hasOwnProperty(b) && M(a, b, c);
    };
    S.prototype.copy = function (a) {
      var b = this;b != a && (Of(this, { uid: a.uid, displayName: a.displayName, photoURL: a.photoURL, email: a.email, emailVerified: a.emailVerified, phoneNumber: a.phoneNumber, isAnonymous: a.isAnonymous, providerData: [] }), w(a.providerData, function (a) {
        xj(b, a);
      }), this.la = a.la, M(this, "refreshToken", this.la.ca));
    };S.prototype.reload = function () {
      var a = this;return this.b(uj(this).then(function () {
        return zj(a).then(function () {
          return rj(a);
        }).then(tj);
      }));
    };
    var zj = function zj(a) {
      return a.getIdToken().then(function (b) {
        var c = a.isAnonymous;return Aj(a, b).then(function () {
          c || yj(a, "isAnonymous", !1);return b;
        });
      });
    };S.prototype.getIdToken = function (a) {
      var b = this;return this.b(uj(this).then(function () {
        return b.la.getToken(a);
      }).then(function (a) {
        if (!a) throw new N("internal-error");a.accessToken != b.ie && (kj(b, a.accessToken), b.Pa());yj(b, "refreshToken", a.refreshToken);return a.accessToken;
      }));
    };
    S.prototype.getToken = function (a) {
      Lf["firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead."] || (Lf["firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead."] = !0, "undefined" !== typeof console && "function" === typeof console.warn && console.warn("firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead."));return this.getIdToken(a);
    };
    var Bj = function Bj(a, b) {
      b.idToken && a.ie != b.idToken && (gj(a.la, b), a.Pa(), kj(a, b.idToken), yj(a, "refreshToken", a.la.ca));
    };S.prototype.Pa = function () {
      this.dispatchEvent(new jj("tokenChanged"));
    };var Aj = function Aj(a, b) {
      return Q(a.g, qh, { idToken: b }).then(_q(a.zf, a));
    };
    S.prototype.zf = function (a) {
      a = a.users;if (!a || !a.length) throw new N("internal-error");a = a[0];lj(this, { uid: a.localId, displayName: a.displayName, photoURL: a.photoUrl, email: a.email, emailVerified: !!a.emailVerified, phoneNumber: a.phoneNumber });for (var b = Cj(a), c = 0; c < b.length; c++) {
        xj(this, b[c]);
      }yj(this, "isAnonymous", !(this.email && a.passwordHash) && !(this.providerData && this.providerData.length));
    };
    var Cj = function Cj(a) {
      return (a = a.providerUserInfo) && a.length ? Ga(a, function (a) {
        return new ij(a.rawId, a.providerId, a.email, a.displayName, a.photoUrl);
      }) : [];
    };S.prototype.reauthenticateAndRetrieveDataWithCredential = function (a) {
      var b = this,
          c = null;return this.b(a.od(this.g, this.uid).then(function (a) {
        Bj(b, a);c = Dj(b, a, "reauthenticate");b.ma = null;return b.reload();
      }).then(function () {
        return c;
      }), !0);
    };S.prototype.reauthenticateWithCredential = function (a) {
      return this.reauthenticateAndRetrieveDataWithCredential(a).then(function () {});
    };
    var Ej = function Ej(a, b) {
      return zj(a).then(function () {
        if (Ka(vj(a), b)) return rj(a).then(function () {
          throw new N("provider-already-linked");
        });
      });
    };S.prototype.linkAndRetrieveDataWithCredential = function (a) {
      var b = this,
          c = null;return this.b(Ej(this, a.providerId).then(function () {
        return b.getIdToken();
      }).then(function (c) {
        return a.zc(b.g, c);
      }).then(function (a) {
        c = Dj(b, a, "link");return Fj(b, a);
      }).then(function () {
        return c;
      }));
    };S.prototype.linkWithCredential = function (a) {
      return this.linkAndRetrieveDataWithCredential(a).then(function (a) {
        return a.user;
      });
    };
    S.prototype.linkWithPhoneNumber = function (a, b) {
      var c = this;return this.b(Ej(this, "phone").then(function () {
        return ii(nj(c), a, b, _q(c.linkAndRetrieveDataWithCredential, c));
      }));
    };S.prototype.reauthenticateWithPhoneNumber = function (a, b) {
      var c = this;return this.b(B().then(function () {
        return ii(nj(c), a, b, _q(c.reauthenticateAndRetrieveDataWithCredential, c));
      }), !0);
    };var Dj = function Dj(a, b, c) {
      var d = Bg(b);b = si(b);return Pf({ user: a, credential: d, additionalUserInfo: b, operationType: c });
    },
        Fj = function Fj(a, b) {
      Bj(a, b);return a.reload().then(function () {
        return a;
      });
    };
    h = S.prototype;h.updateEmail = function (a) {
      var b = this;return this.b(this.getIdToken().then(function (c) {
        return b.g.updateEmail(c, a);
      }).then(function (a) {
        Bj(b, a);return b.reload();
      }));
    };h.updatePhoneNumber = function (a) {
      var b = this;return this.b(this.getIdToken().then(function (c) {
        return a.zc(b.g, c);
      }).then(function (a) {
        Bj(b, a);return b.reload();
      }));
    };h.updatePassword = function (a) {
      var b = this;return this.b(this.getIdToken().then(function (c) {
        return b.g.updatePassword(c, a);
      }).then(function (a) {
        Bj(b, a);return b.reload();
      }));
    };
    h.updateProfile = function (a) {
      if (void 0 === a.displayName && void 0 === a.photoURL) return uj(this);var b = this;return this.b(this.getIdToken().then(function (c) {
        return b.g.updateProfile(c, { displayName: a.displayName, photoUrl: a.photoURL });
      }).then(function (a) {
        Bj(b, a);yj(b, "displayName", a.displayName || null);yj(b, "photoURL", a.photoUrl || null);w(b.providerData, function (a) {
          "password" === a.providerId && (M(a, "displayName", b.displayName), M(a, "photoURL", b.photoURL));
        });return rj(b);
      }).then(tj));
    };
    h.unlink = function (a) {
      var b = this;return this.b(zj(this).then(function (c) {
        return Ka(vj(b), a) ? eh(b.g, c, [a]).then(function (a) {
          var c = {};w(a.providerUserInfo || [], function (a) {
            c[a.providerId] = !0;
          });w(vj(b), function (a) {
            c[a] || wj(b, a);
          });c[yg.PROVIDER_ID] || M(b, "phoneNumber", null);return rj(b);
        }) : rj(b).then(function () {
          throw new N("no-such-provider");
        });
      }));
    };
    h["delete"] = function () {
      var a = this;return this.b(this.getIdToken().then(function (b) {
        return Q(a.g, ph, { idToken: b });
      }).then(function () {
        a.dispatchEvent(new jj("userDeleted"));
      })).then(function () {
        for (var b = 0; b < a.G.length; b++) {
          a.G[b].cancel("app-deleted");
        }a.G = [];a.Bb = !0;pj(a);M(a, "refreshToken", null);a.s && a.s.unsubscribe(a);
      });
    };
    h.Pd = function (a, b) {
      return "linkViaPopup" == a && (this.ga || null) == b && this.fa || "reauthViaPopup" == a && (this.ga || null) == b && this.fa || "linkViaRedirect" == a && (this.Aa || null) == b || "reauthViaRedirect" == a && (this.Aa || null) == b ? !0 : !1;
    };h.Xa = function (a, b, c, d) {
      "linkViaPopup" != a && "reauthViaPopup" != a || d != (this.ga || null) || (c && this.Ra ? this.Ra(c) : b && !c && this.fa && this.fa(b), this.I && (this.I.cancel(), this.I = null), delete this.fa, delete this.Ra);
    };
    h.Db = function (a, b) {
      return "linkViaPopup" == a && b == (this.ga || null) ? _q(this.Xd, this) : "reauthViaPopup" == a && b == (this.ga || null) ? _q(this.Yd, this) : "linkViaRedirect" == a && (this.Aa || null) == b ? _q(this.Xd, this) : "reauthViaRedirect" == a && (this.Aa || null) == b ? _q(this.Yd, this) : null;
    };h.nc = function () {
      return zf(this.uid + ":::");
    };h.linkWithPopup = function (a) {
      var b = this;return Gj(this, "linkViaPopup", a, function () {
        return Ej(b, a.providerId).then(function () {
          return rj(b);
        });
      }, !1);
    };
    h.reauthenticateWithPopup = function (a) {
      return Gj(this, "reauthViaPopup", a, function () {
        return B();
      }, !0);
    };
    var Gj = function Gj(a, b, c, d, e) {
      if (!Af()) return D(new N("operation-not-supported-in-this-environment"));if (a.ma && !e) return D(a.ma);var f = Wf(c.providerId),
          g = a.nc(),
          l = null;(!Bf() || uf()) && a.B && c.isOAuthProvider && (l = Jh(a.B, a.m, a.w, b, c, null, g, firebase.SDK_VERSION || null));var n = nf(l, f && f.Rb, f && f.Qb);d = d().then(function () {
        Hj(a);if (!e) return a.getIdToken().then(function () {});
      }).then(function () {
        return a.s.Sb(n, b, c, g, !!l);
      }).then(function () {
        return new A(function (c, d) {
          a.Xa(b, null, new N("cancelled-popup-request"), a.ga || null);a.fa = c;a.Ra = d;a.ga = g;a.I = a.s.$b(a, b, n, g);
        });
      }).then(function (a) {
        n && mf(n);return a ? Pf(a) : null;
      }).f(function (a) {
        n && mf(n);throw a;
      });return a.b(d, e);
    };S.prototype.linkWithRedirect = function (a) {
      var b = this;return Ij(this, "linkViaRedirect", a, function () {
        return Ej(b, a.providerId);
      }, !1);
    };S.prototype.reauthenticateWithRedirect = function (a) {
      return Ij(this, "reauthViaRedirect", a, function () {
        return B();
      }, !0);
    };
    var Ij = function Ij(a, b, c, d, e) {
      if (!Af()) return D(new N("operation-not-supported-in-this-environment"));if (a.ma && !e) return D(a.ma);var f = null,
          g = a.nc();d = d().then(function () {
        Hj(a);if (!e) return a.getIdToken().then(function () {});
      }).then(function () {
        a.Aa = g;return rj(a);
      }).then(function (b) {
        a.Ua && (b = a.Ua, b = b.l.set(Jj, a.F(), b.v));return b;
      }).then(function () {
        return a.s.Tb(b, c, g);
      }).f(function (b) {
        f = b;if (a.Ua) return Kj(a.Ua);throw f;
      }).then(function () {
        if (f) throw f;
      });return a.b(d, e);
    },
        Hj = function Hj(a) {
      if (!a.s || !a.Ec) {
        if (a.s && !a.Ec) throw new N("internal-error");throw new N("auth-domain-config-required");
      }
    };S.prototype.Xd = function (a, b) {
      var c = this;this.I && (this.I.cancel(), this.I = null);var d = null,
          e = this.getIdToken().then(function (d) {
        return fg(c.g, { requestUri: a, sessionId: b, idToken: d });
      }).then(function (a) {
        d = Dj(c, a, "link");return Fj(c, a);
      }).then(function () {
        return d;
      });return this.b(e);
    };
    S.prototype.Yd = function (a, b) {
      var c = this;this.I && (this.I.cancel(), this.I = null);var d = null,
          e = B().then(function () {
        return bg(gg(c.g, { requestUri: a, sessionId: b }), c.uid);
      }).then(function (a) {
        d = Dj(c, a, "reauthenticate");Bj(c, a);c.ma = null;return c.reload();
      }).then(function () {
        return d;
      });return this.b(e, !0);
    };S.prototype.sendEmailVerification = function () {
      var a = this;return this.b(this.getIdToken().then(function (b) {
        return a.g.sendEmailVerification(b);
      }).then(function (b) {
        if (a.email != b) return a.reload();
      }).then(function () {}));
    };
    S.prototype.b = function (a, b) {
      var c = this,
          d = Lj(this, a, b);this.G.push(d);wd(d, function () {
        Ma(c.G, d);
      });return d;
    };var Lj = function Lj(a, b, c) {
      return a.ma && !c ? (b.cancel(), D(a.ma)) : b.f(function (b) {
        !b || "auth/user-disabled" != b.code && "auth/user-token-expired" != b.code || (a.ma || a.dispatchEvent(new jj("userInvalidated")), a.ma = b);throw b;
      });
    };S.prototype.toJSON = function () {
      return this.F();
    };
    S.prototype.F = function () {
      var a = { uid: this.uid, displayName: this.displayName, photoURL: this.photoURL, email: this.email, emailVerified: this.emailVerified, phoneNumber: this.phoneNumber, isAnonymous: this.isAnonymous, providerData: [], apiKey: this.m, appName: this.w, authDomain: this.B, stsTokenManager: this.la.F(), redirectEventId: this.Aa || null };w(this.providerData, function (b) {
        a.providerData.push(Qf(b));
      });return a;
    };
    var Mj = function Mj(a) {
      if (!a.apiKey) return null;var b = { apiKey: a.apiKey, authDomain: a.authDomain, appName: a.appName },
          c = {};if (a.stsTokenManager && a.stsTokenManager.accessToken && a.stsTokenManager.expirationTime) c.idToken = a.stsTokenManager.accessToken, c.refreshToken = a.stsTokenManager.refreshToken || null, c.expiresIn = (a.stsTokenManager.expirationTime - ma()) / 1E3;else return null;var d = new S(b, c, a);a.providerData && w(a.providerData, function (a) {
        a && xj(d, Pf(a));
      });a.redirectEventId && (d.Aa = a.redirectEventId);return d;
    },
        Nj = function Nj(a, b, c) {
      var d = new S(a, b);c && (d.Ua = c);return d.reload().then(function () {
        return d;
      });
    };var Oj = function Oj(a) {
      this.v = a;this.l = vi();
    },
        Jj = { name: "redirectUser", U: !1 },
        Kj = function Kj(a) {
      return a.l.remove(Jj, a.v);
    },
        Pj = function Pj(a, b) {
      return a.l.get(Jj, a.v).then(function (a) {
        a && b && (a.authDomain = b);return Mj(a || {});
      });
    };var Qj = function Qj(a) {
      this.v = a;this.l = vi();
    },
        Rj = { name: "authUser", U: !0 },
        Sj = function Sj(a, b) {
      return a.l.set(Rj, b.F(), a.v);
    },
        Tj = function Tj(a) {
      return a.l.remove(Rj, a.v);
    },
        Uj = function Uj(a, b) {
      return a.l.get(Rj, a.v).then(function (a) {
        a && b && (a.authDomain = b);return Mj(a || {});
      });
    };var T = function T(a) {
      this.Ga = !1;M(this, "app", a);if (this.h().options && this.h().options.apiKey) a = firebase.SDK_VERSION ? xf(firebase.SDK_VERSION) : null, this.g = new R(this.h().options && this.h().options.apiKey, null, a);else throw new N("invalid-api-key");this.G = [];this.Da = [];this.wb = [];this.vf = firebase.INTERNAL.createSubscribe(_q(this.hf, this));this.gc = void 0;this.xf = firebase.INTERNAL.createSubscribe(_q(this.kf, this));Vj(this, null);a = this.h().options.apiKey;var b = this.h().name;this.ua = new Qj(a + ":" + b);a = this.h().options.apiKey;
      b = this.h().name;this.rb = new Oj(a + ":" + b);this.ic = this.b(Wj(this));this.ra = this.b(Xj(this));this.xc = !1;this.gd = _q(this.Of, this);this.Be = _q(this.ib, this);this.xb = _q(this.jd, this);this.ze = _q(this.df, this);this.Ae = _q(this.ef, this);Yj(this);this.INTERNAL = {};this.INTERNAL["delete"] = _q(this["delete"], this);this.Ka = 0;
    };T.prototype.toJSON = function () {
      return { apiKey: this.h().options.apiKey, authDomain: this.h().options.authDomain, appName: this.h().name, currentUser: U(this) && U(this).F() };
    };
    var Zj = function Zj(a) {
      return a.Se || D(new N("auth-domain-config-required"));
    },
        Yj = function Yj(a) {
      var b = a.h().options.authDomain,
          c = a.h().options.apiKey;b && Af() && (a.Se = a.ic.then(function () {
        if (!a.Ga) return a.s = $i(b, c, a.h().name), a.s.subscribe(a), U(a) && sj(U(a)), a.Xb && (sj(a.Xb), a.Xb = null), a.s;
      }));
    };h = T.prototype;h.Pd = function (a, b) {
      switch (a) {case "unknown":case "signInViaRedirect":
          return !0;case "signInViaPopup":
          return this.ga == b && !!this.fa;default:
          return !1;}
    };
    h.Xa = function (a, b, c, d) {
      "signInViaPopup" == a && this.ga == d && (c && this.Ra ? this.Ra(c) : b && !c && this.fa && this.fa(b), this.I && (this.I.cancel(), this.I = null), delete this.fa, delete this.Ra);
    };h.Db = function (a, b) {
      return "signInViaRedirect" == a || "signInViaPopup" == a && this.ga == b && this.fa ? _q(this.Ue, this) : null;
    };
    h.Ue = function (a, b) {
      var c = this;a = { requestUri: a, sessionId: b };this.I && (this.I.cancel(), this.I = null);var d = null,
          e = null,
          f = dg(c.g, a).then(function (a) {
        d = Bg(a);e = si(a);return a;
      });a = c.ic.then(function () {
        return f;
      }).then(function (a) {
        return ak(c, a);
      }).then(function () {
        return Pf({ user: U(c), credential: d, additionalUserInfo: e, operationType: "signIn" });
      });return this.b(a);
    };h.nc = function () {
      return zf();
    };
    h.signInWithPopup = function (a) {
      if (!Af()) return D(new N("operation-not-supported-in-this-environment"));var b = this,
          c = Wf(a.providerId),
          d = this.nc(),
          e = null;(!Bf() || uf()) && this.h().options.authDomain && a.isOAuthProvider && (e = Jh(this.h().options.authDomain, this.h().options.apiKey, this.h().name, "signInViaPopup", a, null, d, firebase.SDK_VERSION || null));var f = nf(e, c && c.Rb, c && c.Qb),
          c = Zj(this).then(function (b) {
        return b.Sb(f, "signInViaPopup", a, d, !!e);
      }).then(function () {
        return new A(function (a, c) {
          b.Xa("signInViaPopup", null, new N("cancelled-popup-request"), b.ga);b.fa = a;b.Ra = c;b.ga = d;b.I = b.s.$b(b, "signInViaPopup", f, d);
        });
      }).then(function (a) {
        f && mf(f);return a ? Pf(a) : null;
      }).f(function (a) {
        f && mf(f);throw a;
      });return this.b(c);
    };h.signInWithRedirect = function (a) {
      if (!Af()) return D(new N("operation-not-supported-in-this-environment"));var b = this,
          c = Zj(this).then(function () {
        return b.s.Tb("signInViaRedirect", a);
      });return this.b(c);
    };
    h.getRedirectResult = function () {
      if (!Af()) return D(new N("operation-not-supported-in-this-environment"));var a = this,
          b = Zj(this).then(function () {
        return a.s.getRedirectResult();
      }).then(function (a) {
        return a ? Pf(a) : null;
      });return this.b(b);
    };
    var ak = function ak(a, b) {
      var c = {};c.apiKey = a.h().options.apiKey;c.authDomain = a.h().options.authDomain;c.appName = a.h().name;return a.ic.then(function () {
        return Nj(c, b, a.rb);
      }).then(function (b) {
        if (U(a) && b.uid == U(a).uid) return U(a).copy(b), a.ib(b);Vj(a, b);sj(b);return a.ib(b);
      }).then(function () {
        a.Pa();
      });
    },
        Vj = function Vj(a, b) {
      U(a) && (qj(U(a), a.Be), fc(U(a), "tokenChanged", a.xb), fc(U(a), "userDeleted", a.ze), fc(U(a), "userInvalidated", a.Ae), pj(U(a)));b && (b.Kc.push(a.Be), Xb(b, "tokenChanged", a.xb), Xb(b, "userDeleted", a.ze), Xb(b, "userInvalidated", a.Ae), 0 < a.Ka && oj(b));M(a, "currentUser", b);
    };T.prototype.signOut = function () {
      var a = this,
          b = this.ra.then(function () {
        if (!U(a)) return B();Vj(a, null);return Tj(a.ua).then(function () {
          a.Pa();
        });
      });return this.b(b);
    };
    var bk = function bk(a) {
      var b = a.h().options.authDomain,
          b = Pj(a.rb, b).then(function (b) {
        if (a.Xb = b) b.Ua = a.rb;return Kj(a.rb);
      });return a.b(b);
    },
        Wj = function Wj(a) {
      var b = a.h().options.authDomain,
          c = bk(a).then(function () {
        return Uj(a.ua, b);
      }).then(function (b) {
        return b ? (b.Ua = a.rb, a.Xb && (a.Xb.Aa || null) == (b.Aa || null) ? b : b.reload().then(function () {
          return Sj(a.ua, b).then(function () {
            return b;
          });
        }).f(function (c) {
          return "auth/network-request-failed" == c.code ? b : Tj(a.ua);
        })) : null;
      }).then(function (b) {
        Vj(a, b || null);
      });return a.b(c);
    },
        Xj = function Xj(a) {
      return a.ic.then(function () {
        return a.getRedirectResult();
      }).f(function () {}).then(function () {
        if (!a.Ga) return a.gd();
      }).f(function () {}).then(function () {
        if (!a.Ga) {
          a.xc = !0;var b = a.ua;b.l.addListener(Rj, b.v, a.gd);
        }
      });
    };h = T.prototype;
    h.Of = function () {
      var a = this,
          b = this.h().options.authDomain;return Uj(this.ua, b).then(function (b) {
        if (!a.Ga) {
          var c;if (c = U(a) && b) {
            c = U(a).uid;var e = b.uid;c = void 0 === c || null === c || "" === c || void 0 === e || null === e || "" === e ? !1 : c == e;
          }if (c) return U(a).copy(b), U(a).getIdToken();if (U(a) || b) Vj(a, b), b && (sj(b), b.Ua = a.rb), a.s && a.s.subscribe(a), a.Pa();
        }
      });
    };h.ib = function (a) {
      return Sj(this.ua, a);
    };h.jd = function () {
      this.Pa();this.ib(U(this));
    };h.df = function () {
      this.signOut();
    };h.ef = function () {
      this.signOut();
    };
    var ck = function ck(a, b) {
      var c = null,
          d = null;return a.b(b.then(function (b) {
        c = Bg(b);d = si(b);return ak(a, b);
      }).then(function () {
        return Pf({ user: U(a), credential: c, additionalUserInfo: d, operationType: "signIn" });
      }));
    };h = T.prototype;h.hf = function (a) {
      var b = this;this.addAuthTokenListener(function () {
        a.next(U(b));
      });
    };h.kf = function (a) {
      var b = this;dk(this, function () {
        a.next(U(b));
      });
    };
    h.onIdTokenChanged = function (a, b, c) {
      var d = this;this.xc && firebase.Promise.resolve().then(function () {
        p(a) ? a(U(d)) : p(a.next) && a.next(U(d));
      });return this.vf(a, b, c);
    };h.onAuthStateChanged = function (a, b, c) {
      var d = this;this.xc && firebase.Promise.resolve().then(function () {
        d.gc = d.getUid();p(a) ? a(U(d)) : p(a.next) && a.next(U(d));
      });return this.xf(a, b, c);
    };h.getIdToken = function (a) {
      var b = this,
          c = this.ra.then(function () {
        return U(b) ? U(b).getIdToken(a).then(function (a) {
          return { accessToken: a };
        }) : null;
      });return this.b(c);
    };
    h.signInWithCustomToken = function (a) {
      var b = this;return this.ra.then(function () {
        return ck(b, Q(b.g, sh, { token: a }));
      }).then(function (a) {
        a = a.user;yj(a, "isAnonymous", !1);return b.ib(a);
      }).then(function () {
        return U(b);
      });
    };h.signInWithEmailAndPassword = function (a, b) {
      var c = this;return this.ra.then(function () {
        return ck(c, Q(c.g, rg, { email: a, password: b }));
      }).then(function (a) {
        return a.user;
      });
    };h.createUserWithEmailAndPassword = function (a, b) {
      var c = this;return this.ra.then(function () {
        return ck(c, Q(c.g, oh, { email: a, password: b }));
      }).then(function (a) {
        return a.user;
      });
    };
    h.signInWithCredential = function (a) {
      return this.signInAndRetrieveDataWithCredential(a).then(function (a) {
        return a.user;
      });
    };h.signInAndRetrieveDataWithCredential = function (a) {
      var b = this;return this.ra.then(function () {
        return ck(b, a.Eb(b.g));
      });
    };h.signInAnonymously = function () {
      var a = this;return this.ra.then(function () {
        var b = U(a);return b && b.isAnonymous ? b : ck(a, a.g.signInAnonymously()).then(function (b) {
          b = b.user;yj(b, "isAnonymous", !0);return a.ib(b);
        }).then(function () {
          return U(a);
        });
      });
    };h.h = function () {
      return this.app;
    };
    var U = function U(a) {
      return a.currentUser;
    };T.prototype.getUid = function () {
      return U(this) && U(this).uid || null;
    };var ek = function ek(a) {
      return U(a) && U(a)._lat || null;
    };h = T.prototype;h.Pa = function () {
      if (this.xc) {
        for (var a = 0; a < this.Da.length; a++) {
          if (this.Da[a]) this.Da[a](ek(this));
        }if (this.gc !== this.getUid() && this.wb.length) for (this.gc = this.getUid(), a = 0; a < this.wb.length; a++) {
          if (this.wb[a]) this.wb[a](ek(this));
        }
      }
    };h.Ke = function (a) {
      this.addAuthTokenListener(a);this.Ka++;0 < this.Ka && U(this) && oj(U(this));
    };
    h.Cf = function (a) {
      var b = this;w(this.Da, function (c) {
        c == a && b.Ka--;
      });0 > this.Ka && (this.Ka = 0);0 == this.Ka && U(this) && pj(U(this));this.removeAuthTokenListener(a);
    };h.addAuthTokenListener = function (a) {
      var b = this;this.Da.push(a);this.b(this.ra.then(function () {
        b.Ga || Ka(b.Da, a) && a(ek(b));
      }));
    };h.removeAuthTokenListener = function (a) {
      Na(this.Da, function (b) {
        return b == a;
      });
    };var dk = function dk(a, b) {
      a.wb.push(b);a.b(a.ra.then(function () {
        !a.Ga && Ka(a.wb, b) && a.gc !== a.getUid() && (a.gc = a.getUid(), b(ek(a)));
      }));
    };h = T.prototype;
    h["delete"] = function () {
      this.Ga = !0;for (var a = 0; a < this.G.length; a++) {
        this.G[a].cancel("app-deleted");
      }this.G = [];this.ua && (a = this.ua, a.l.removeListener(Rj, a.v, this.gd));this.s && this.s.unsubscribe(this);return firebase.Promise.resolve();
    };h.b = function (a) {
      var b = this;this.G.push(a);wd(a, function () {
        Ma(b.G, a);
      });return a;
    };h.fetchProvidersForEmail = function (a) {
      return this.b(Tg(this.g, a));
    };h.verifyPasswordResetCode = function (a) {
      return this.checkActionCode(a).then(function (a) {
        return a.data.email;
      });
    };
    h.confirmPasswordReset = function (a, b) {
      return this.b(this.g.confirmPasswordReset(a, b).then(function () {}));
    };h.checkActionCode = function (a) {
      return this.b(this.g.checkActionCode(a).then(function (a) {
        return new ji(a);
      }));
    };h.applyActionCode = function (a) {
      return this.b(this.g.applyActionCode(a).then(function () {}));
    };h.sendPasswordResetEmail = function (a) {
      return this.b(this.g.sendPasswordResetEmail(a).then(function () {}));
    };
    h.signInWithPhoneNumber = function (a, b) {
      return this.b(ii(this, a, b, _q(this.signInAndRetrieveDataWithCredential, this)));
    };var fk = "First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" "),
        V = function V(a, b) {
      return { name: a || "", N: "a valid string", optional: !!b, O: m };
    },
        gk = function gk() {
      return { name: "opt_forceRefresh", N: "a boolean", optional: !0, O: ba };
    },
        W = function W(a, b) {
      return { name: a || "", N: "a valid object", optional: !!b, O: ia };
    },
        hk = function hk(a, b) {
      return { name: a || "", N: "a function", optional: !!b, O: p };
    },
        ik = function ik() {
      return { name: "", N: "null", optional: !1, O: fa };
    },
        jk = function jk() {
      return { name: "", N: "an HTML element", optional: !1, O: function O(a) {
          return !!(a && a instanceof Element);
        } };
    },
        kk = function kk() {
      return { name: "auth", N: "an instance of Firebase Auth", optional: !0, O: function O(a) {
          return !!(a && a instanceof T);
        } };
    },
        lk = function lk() {
      return { name: "app", N: "an instance of Firebase App", optional: !0, O: function O(a) {
          return !!(a && a instanceof firebase.app.App);
        } };
    },
        mk = function mk(a) {
      return { name: a ? a + "Credential" : "credential", N: a ? "a valid " + a + " credential" : "a valid credential", optional: !1, O: function O(b) {
          if (!b) return !1;var c = !a || b.providerId === a;return !(!b.Eb || !c);
        } };
    },
        nk = function nk() {
      return { name: "authProvider",
        N: "a valid Auth provider", optional: !1, O: function O(a) {
          return !!(a && a.providerId && a.hasOwnProperty && a.hasOwnProperty("isOAuthProvider"));
        } };
    },
        ok = function ok() {
      return { name: "applicationVerifier", N: "an implementation of firebase.auth.ApplicationVerifier", optional: !1, O: function O(a) {
          return !!(a && m(a.type) && p(a.verify));
        } };
    },
        X = function X(a, b, c, d) {
      return { name: c || "", N: a.N + " or " + b.N, optional: !!d, O: function O(c) {
          return a.O(c) || b.O(c);
        } };
    };var Y = function Y(a, b) {
      for (var c in b) {
        var d = b[c].name;a[d] = pk(d, a[c], b[c].a);
      }
    },
        Z = function Z(a, b, c, d) {
      a[b] = pk(b, c, d);
    },
        pk = function pk(a, b, c) {
      if (!c) return b;var d = qk(a);a = function a() {
        var a = Array.prototype.slice.call(arguments);a: {
          var e = Array.prototype.slice.call(a);var l = 0;for (var n = !1, C = 0; C < c.length; C++) {
            if (c[C].optional) n = !0;else {
              if (n) throw new N("internal-error", "Argument validator encountered a required argument after an optional argument.");l++;
            }
          }n = c.length;if (e.length < l || n < e.length) e = "Expected " + (l == n ? 1 == l ? "1 argument" : l + " arguments" : l + "-" + n + " arguments") + " but got " + e.length + ".";else {
            for (l = 0; l < e.length; l++) {
              if (n = c[l].optional && void 0 === e[l], !c[l].O(e[l]) && !n) {
                e = c[l];if (0 > l || l >= fk.length) throw new N("internal-error", "Argument validator received an unsupported number of arguments.");e = fk[l] + " argument " + (e.name ? '"' + e.name + '" ' : "") + "must be " + e.N + ".";break a;
              }
            }e = null;
          }
        }if (e) throw new N("argument-error", d + " failed: " + e);return b.apply(this, a);
      };for (var e in b) {
        a[e] = b[e];
      }for (e in b.prototype) {
        a.prototype[e] = b.prototype[e];
      }return a;
    },
        qk = function qk(a) {
      a = a.split(".");return a[a.length - 1];
    };Y(T.prototype, { applyActionCode: { name: "applyActionCode", a: [V("code")] }, checkActionCode: { name: "checkActionCode", a: [V("code")] }, confirmPasswordReset: { name: "confirmPasswordReset", a: [V("code"), V("newPassword")] }, createUserWithEmailAndPassword: { name: "createUserWithEmailAndPassword", a: [V("email"), V("password")] }, fetchProvidersForEmail: { name: "fetchProvidersForEmail", a: [V("email")] }, getRedirectResult: { name: "getRedirectResult", a: [] }, onAuthStateChanged: { name: "onAuthStateChanged", a: [X(W(), hk(), "nextOrObserver"), hk("opt_error", !0), hk("opt_completed", !0)] }, onIdTokenChanged: { name: "onIdTokenChanged", a: [X(W(), hk(), "nextOrObserver"), hk("opt_error", !0), hk("opt_completed", !0)] }, sendPasswordResetEmail: { name: "sendPasswordResetEmail", a: [V("email")] }, signInAndRetrieveDataWithCredential: { name: "signInAndRetrieveDataWithCredential", a: [mk()] }, signInAnonymously: { name: "signInAnonymously", a: [] }, signInWithCredential: { name: "signInWithCredential", a: [mk()] }, signInWithCustomToken: { name: "signInWithCustomToken", a: [V("token")] }, signInWithEmailAndPassword: { name: "signInWithEmailAndPassword",
        a: [V("email"), V("password")] }, signInWithPhoneNumber: { name: "signInWithPhoneNumber", a: [V("phoneNumber"), ok()] }, signInWithPopup: { name: "signInWithPopup", a: [nk()] }, signInWithRedirect: { name: "signInWithRedirect", a: [nk()] }, signOut: { name: "signOut", a: [] }, toJSON: { name: "toJSON", a: [V(null, !0)] }, verifyPasswordResetCode: { name: "verifyPasswordResetCode", a: [V("code")] } });
    Y(S.prototype, { "delete": { name: "delete", a: [] }, getIdToken: { name: "getIdToken", a: [gk()] }, getToken: { name: "getToken", a: [gk()] }, linkAndRetrieveDataWithCredential: { name: "linkAndRetrieveDataWithCredential", a: [mk()] }, linkWithCredential: { name: "linkWithCredential", a: [mk()] }, linkWithPhoneNumber: { name: "linkWithPhoneNumber", a: [V("phoneNumber"), ok()] }, linkWithPopup: { name: "linkWithPopup", a: [nk()] }, linkWithRedirect: { name: "linkWithRedirect", a: [nk()] }, reauthenticateAndRetrieveDataWithCredential: { name: "reauthenticateAndRetrieveDataWithCredential",
        a: [mk()] }, reauthenticateWithCredential: { name: "reauthenticateWithCredential", a: [mk()] }, reauthenticateWithPhoneNumber: { name: "reauthenticateWithPhoneNumber", a: [V("phoneNumber"), ok()] }, reauthenticateWithPopup: { name: "reauthenticateWithPopup", a: [nk()] }, reauthenticateWithRedirect: { name: "reauthenticateWithRedirect", a: [nk()] }, reload: { name: "reload", a: [] }, sendEmailVerification: { name: "sendEmailVerification", a: [] }, toJSON: { name: "toJSON", a: [V(null, !0)] }, unlink: { name: "unlink", a: [V("provider")] }, updateEmail: { name: "updateEmail",
        a: [V("email")] }, updatePassword: { name: "updatePassword", a: [V("password")] }, updatePhoneNumber: { name: "updatePhoneNumber", a: [mk("phone")] }, updateProfile: { name: "updateProfile", a: [W("profile")] } });Y(A.prototype, { f: { name: "catch" }, then: { name: "then" } });Y(hi.prototype, { confirm: { name: "confirm", a: [V("verificationCode")] } });Z(tg, "credential", function (a, b) {
      return new qg(a, b);
    }, [V("email"), V("password")]);Y(ig.prototype, { addScope: { name: "addScope", a: [V("scope")] }, setCustomParameters: { name: "setCustomParameters", a: [W("customOAuthParameters")] } });
    Z(ig, "credential", jg, [X(V(), W(), "token")]);Y(kg.prototype, { addScope: { name: "addScope", a: [V("scope")] }, setCustomParameters: { name: "setCustomParameters", a: [W("customOAuthParameters")] } });Z(kg, "credential", lg, [X(V(), W(), "token")]);Y(mg.prototype, { addScope: { name: "addScope", a: [V("scope")] }, setCustomParameters: { name: "setCustomParameters", a: [W("customOAuthParameters")] } });Z(mg, "credential", ng, [X(V(), X(W(), ik()), "idToken"), X(V(), ik(), "accessToken", !0)]);
    Y(og.prototype, { setCustomParameters: { name: "setCustomParameters", a: [W("customOAuthParameters")] } });Z(og, "credential", pg, [X(V(), W(), "token"), V("secret", !0)]);Y(P.prototype, { addScope: { name: "addScope", a: [V("scope")] }, credential: { name: "credential", a: [X(V(), ik(), "idToken", !0), X(V(), ik(), "accessToken", !0)] }, setCustomParameters: { name: "setCustomParameters", a: [W("customOAuthParameters")] } });Z(yg, "credential", Ag, [V("verificationId"), V("verificationCode")]);
    Y(yg.prototype, { verifyPhoneNumber: { name: "verifyPhoneNumber", a: [V("phoneNumber"), ok()] } });Y(N.prototype, { toJSON: { name: "toJSON", a: [V(null, !0)] } });Y(Dg.prototype, { toJSON: { name: "toJSON", a: [V(null, !0)] } });Y($f.prototype, { toJSON: { name: "toJSON", a: [V(null, !0)] } });Y(Kh.prototype, { clear: { name: "clear", a: [] }, render: { name: "render", a: [] }, verify: { name: "verify", a: [] } });
    (function () {
      if ("undefined" !== typeof firebase && firebase.INTERNAL && firebase.INTERNAL.registerService) {
        var a = { Auth: T, Error: N };Z(a, "EmailAuthProvider", tg, []);Z(a, "FacebookAuthProvider", ig, []);Z(a, "GithubAuthProvider", kg, []);Z(a, "GoogleAuthProvider", mg, []);Z(a, "TwitterAuthProvider", og, []);Z(a, "OAuthProvider", P, [V("providerId")]);Z(a, "PhoneAuthProvider", yg, [kk()]);Z(a, "RecaptchaVerifier", Kh, [X(V(), jk(), "recaptchaContainer"), W("recaptchaParameters", !0), lk()]);firebase.INTERNAL.registerService("auth", function (a, c) {
          a = new T(a);c({ INTERNAL: { getUid: _q(a.getUid, a), getToken: _q(a.getIdToken, a), addAuthTokenListener: _q(a.Ke, a), removeAuthTokenListener: _q(a.Cf, a) } });return a;
        }, a, function (a, c) {
          if ("create" === a) try {
            c.auth();
          } catch (d) {}
        });firebase.INTERNAL.extendNamespace({ User: S });
      } else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");
    })();
  }).call(this);
}).call(typeof global !== undefined ? global : typeof self !== undefined ? self : typeof window !== undefined ? window : {});
}, 427, null, "firebase/auth.js");
__d(/* firebase/database.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/

---

typedarray.js
Copyright (c) 2010, Linden Research, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

(function () {
            var firebase = require(420    ); // 420 = ./app
            var g,
                aa = this;function n(a) {
                        return void 0 !== a;
            }function ba() {}function ca(a) {
                        a.Vb = function () {
                                    return a.Ye ? a.Ye : a.Ye = new a();
                        };
            }
            function da(a) {
                        var b = typeof a;if ("object" == b) {
                                    if (a) {
                                                if (a instanceof Array) return "array";if (a instanceof Object) return b;var c = Object.prototype.toString.call(a);if ("[object Window]" == c) return "object";if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
                                    } else return "null";
                        } else if ("function" == b && "undefined" == typeof a.call) return "object";return b;
            }function ea(a) {
                        return "array" == da(a);
            }function fa(a) {
                        var b = da(a);return "array" == b || "object" == b && "number" == typeof a.length;
            }function p(a) {
                        return "string" == typeof a;
            }function ga(a) {
                        return "number" == typeof a;
            }function ha(a) {
                        return "function" == da(a);
            }function ia(a) {
                        var b = typeof a;return "object" == b && null != a || "function" == b;
            }function ja(a, b, c) {
                        return a.call.apply(a.bind, arguments);
            }
            function ka(a, b, c) {
                        if (!a) throw Error();if (2 < arguments.length) {
                                    var d = Array.prototype.slice.call(arguments, 2);return function () {
                                                var c = Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c, d);return a.apply(b, c);
                                    };
                        }return function () {
                                    return a.apply(b, arguments);
                        };
            }function q(a, b, c) {
                        q = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? ja : ka;return q.apply(null, arguments);
            }
            function la(a, b) {
                        function c() {}c.prototype = b.prototype;a.wg = b.prototype;a.prototype = new c();a.prototype.constructor = a;a.sg = function (a, c, f) {
                                    for (var h = Array(arguments.length - 2), k = 2; k < arguments.length; k++) {
                                                h[k - 2] = arguments[k];
                                    }return b.prototype[c].apply(a, h);
                        };
            };function ma(a) {
                        a = String(a);if (/^\s*$/.test(a) ? 0 : /^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g, "@").replace(/"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, ""))) try {
                                    return eval("(" + a + ")");
                        } catch (b) {}throw Error("Invalid JSON string: " + a);
            }function na() {
                        this.Fd = void 0;
            }
            function oa(a, b, c) {
                        switch (typeof b) {case "string":
                                                pa(b, c);break;case "number":
                                                c.push(isFinite(b) && !isNaN(b) ? b : "null");break;case "boolean":
                                                c.push(b);break;case "undefined":
                                                c.push("null");break;case "object":
                                                if (null == b) {
                                                            c.push("null");break;
                                                }if (ea(b)) {
                                                            var d = b.length;c.push("[");for (var e = "", f = 0; f < d; f++) {
                                                                        c.push(e), e = b[f], oa(a, a.Fd ? a.Fd.call(b, String(f), e) : e, c), e = ",";
                                                            }c.push("]");break;
                                                }c.push("{");d = "";for (f in b) {
                                                            Object.prototype.hasOwnProperty.call(b, f) && (e = b[f], "function" != typeof e && (c.push(d), pa(f, c), c.push(":"), oa(a, a.Fd ? a.Fd.call(b, f, e) : e, c), d = ","));
                                                }c.push("}");break;case "function":
                                                break;default:
                                                throw Error("Unknown type: " + typeof b);}
            }var qa = { '"': '\\"', "\\": "\\\\", "/": "\\/", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "\t": "\\t", "\x0B": "\\u000b" },
                ra = /\uffff/.test("\uFFFF") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
            function pa(a, b) {
                        b.push('"', a.replace(ra, function (a) {
                                    if (a in qa) return qa[a];var b = a.charCodeAt(0),
                                        e = "\\u";16 > b ? e += "000" : 256 > b ? e += "00" : 4096 > b && (e += "0");return qa[a] = e + b.toString(16);
                        }), '"');
            };function sa() {
                        this.Wa = -1;
            };function ta() {
                        this.Wa = -1;this.Wa = 64;this.M = [];this.Wd = [];this.Af = [];this.zd = [];this.zd[0] = 128;for (var a = 1; a < this.Wa; ++a) {
                                    this.zd[a] = 0;
                        }this.Pd = this.$b = 0;this.reset();
            }la(ta, sa);ta.prototype.reset = function () {
                        this.M[0] = 1732584193;this.M[1] = 4023233417;this.M[2] = 2562383102;this.M[3] = 271733878;this.M[4] = 3285377520;this.Pd = this.$b = 0;
            };
            function ua(a, b, c) {
                        c || (c = 0);var d = a.Af;if (p(b)) for (var e = 0; 16 > e; e++) {
                                    d[e] = b.charCodeAt(c) << 24 | b.charCodeAt(c + 1) << 16 | b.charCodeAt(c + 2) << 8 | b.charCodeAt(c + 3), c += 4;
                        } else for (e = 0; 16 > e; e++) {
                                    d[e] = b[c] << 24 | b[c + 1] << 16 | b[c + 2] << 8 | b[c + 3], c += 4;
                        }for (e = 16; 80 > e; e++) {
                                    var f = d[e - 3] ^ d[e - 8] ^ d[e - 14] ^ d[e - 16];d[e] = (f << 1 | f >>> 31) & 4294967295;
                        }b = a.M[0];c = a.M[1];for (var h = a.M[2], k = a.M[3], m = a.M[4], l, e = 0; 80 > e; e++) {
                                    40 > e ? 20 > e ? (f = k ^ c & (h ^ k), l = 1518500249) : (f = c ^ h ^ k, l = 1859775393) : 60 > e ? (f = c & h | k & (c | h), l = 2400959708) : (f = c ^ h ^ k, l = 3395469782), f = (b << 5 | b >>> 27) + f + m + l + d[e] & 4294967295, m = k, k = h, h = (c << 30 | c >>> 2) & 4294967295, c = b, b = f;
                        }a.M[0] = a.M[0] + b & 4294967295;a.M[1] = a.M[1] + c & 4294967295;a.M[2] = a.M[2] + h & 4294967295;a.M[3] = a.M[3] + k & 4294967295;a.M[4] = a.M[4] + m & 4294967295;
            }
            ta.prototype.update = function (a, b) {
                        if (null != a) {
                                    n(b) || (b = a.length);for (var c = b - this.Wa, d = 0, e = this.Wd, f = this.$b; d < b;) {
                                                if (0 == f) for (; d <= c;) {
                                                            ua(this, a, d), d += this.Wa;
                                                }if (p(a)) for (; d < b;) {
                                                            if (e[f] = a.charCodeAt(d), ++f, ++d, f == this.Wa) {
                                                                        ua(this, e);f = 0;break;
                                                            }
                                                } else for (; d < b;) {
                                                            if (e[f] = a[d], ++f, ++d, f == this.Wa) {
                                                                        ua(this, e);f = 0;break;
                                                            }
                                                }
                                    }this.$b = f;this.Pd += b;
                        }
            };var r;a: {
                        var va = aa.navigator;if (va) {
                                    var wa = va.userAgent;if (wa) {
                                                r = wa;break a;
                                    }
                        }r = "";
            };var t = Array.prototype,
                xa = t.indexOf ? function (a, b, c) {
                        return t.indexOf.call(a, b, c);
            } : function (a, b, c) {
                        c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;if (p(a)) return p(b) && 1 == b.length ? a.indexOf(b, c) : -1;for (; c < a.length; c++) {
                                    if (c in a && a[c] === b) return c;
                        }return -1;
            },
                ya = t.forEach ? function (a, b, c) {
                        t.forEach.call(a, b, c);
            } : function (a, b, c) {
                        for (var d = a.length, e = p(a) ? a.split("") : a, f = 0; f < d; f++) {
                                    f in e && b.call(c, e[f], f, a);
                        }
            },
                za = t.filter ? function (a, b, c) {
                        return t.filter.call(a, b, c);
            } : function (a, b, c) {
                        for (var d = a.length, e = [], f = 0, h = p(a) ? a.split("") : a, k = 0; k < d; k++) {
                                    if (k in h) {
                                                var m = h[k];b.call(c, m, k, a) && (e[f++] = m);
                                    }
                        }return e;
            },
                Aa = t.map ? function (a, b, c) {
                        return t.map.call(a, b, c);
            } : function (a, b, c) {
                        for (var d = a.length, e = Array(d), f = p(a) ? a.split("") : a, h = 0; h < d; h++) {
                                    h in f && (e[h] = b.call(c, f[h], h, a));
                        }return e;
            },
                Ba = t.reduce ? function (a, b, c, d) {
                        for (var e = [], f = 1, h = arguments.length; f < h; f++) {
                                    e.push(arguments[f]);
                        }d && (e[0] = q(b, d));return t.reduce.apply(a, e);
            } : function (a, b, c, d) {
                        var e = c;ya(a, function (c, h) {
                                    e = b.call(d, e, c, h, a);
                        });return e;
            },
                Ca = t.every ? function (a, b, c) {
                        return t.every.call(a, b, c);
            } : function (a, b, c) {
                        for (var d = a.length, e = p(a) ? a.split("") : a, f = 0; f < d; f++) {
                                    if (f in e && !b.call(c, e[f], f, a)) return !1;
                        }return !0;
            };function Da(a, b) {
                        var c = Ea(a, b, void 0);return 0 > c ? null : p(a) ? a.charAt(c) : a[c];
            }function Ea(a, b, c) {
                        for (var d = a.length, e = p(a) ? a.split("") : a, f = 0; f < d; f++) {
                                    if (f in e && b.call(c, e[f], f, a)) return f;
                        }return -1;
            }function Fa(a, b) {
                        var c = xa(a, b);0 <= c && t.splice.call(a, c, 1);
            }function Ga(a, b, c) {
                        return 2 >= arguments.length ? t.slice.call(a, b) : t.slice.call(a, b, c);
            }
            function Ha(a, b) {
                        a.sort(b || Ia);
            }function Ia(a, b) {
                        return a > b ? 1 : a < b ? -1 : 0;
            };function v(a, b) {
                        for (var c in a) {
                                    b.call(void 0, a[c], c, a);
                        }
            }function Ja(a, b) {
                        var c = {},
                            d;for (d in a) {
                                    c[d] = b.call(void 0, a[d], d, a);
                        }return c;
            }function Ka(a, b) {
                        for (var c in a) {
                                    if (!b.call(void 0, a[c], c, a)) return !1;
                        }return !0;
            }function La(a) {
                        var b = 0,
                            c;for (c in a) {
                                    b++;
                        }return b;
            }function Ma(a) {
                        for (var b in a) {
                                    return b;
                        }
            }function Na(a) {
                        var b = [],
                            c = 0,
                            d;for (d in a) {
                                    b[c++] = a[d];
                        }return b;
            }function Oa(a) {
                        var b = [],
                            c = 0,
                            d;for (d in a) {
                                    b[c++] = d;
                        }return b;
            }function Pa(a, b) {
                        for (var c in a) {
                                    if (a[c] == b) return !0;
                        }return !1;
            }
            function Qa(a, b, c) {
                        for (var d in a) {
                                    if (b.call(c, a[d], d, a)) return d;
                        }
            }function Ra(a, b) {
                        var c = Qa(a, b, void 0);return c && a[c];
            }function Sa(a) {
                        for (var b in a) {
                                    return !1;
                        }return !0;
            }function Ta(a) {
                        var b = {},
                            c;for (c in a) {
                                    b[c] = a[c];
                        }return b;
            };var Ua = -1 != r.indexOf("Opera") || -1 != r.indexOf("OPR"),
                Va = -1 != r.indexOf("Trident") || -1 != r.indexOf("MSIE"),
                Wa = -1 != r.indexOf("Gecko") && -1 == r.toLowerCase().indexOf("webkit") && !(-1 != r.indexOf("Trident") || -1 != r.indexOf("MSIE")),
                Xa = -1 != r.toLowerCase().indexOf("webkit");
            (function () {
                        var a = "",
                            b;if (Ua && aa.opera) return a = aa.opera.version, ha(a) ? a() : a;Wa ? b = /rv\:([^\);]+)(\)|;)/ : Va ? b = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/ : Xa && (b = /WebKit\/(\S+)/);b && (a = (a = b.exec(r)) ? a[1] : "");return Va && (b = (b = aa.document) ? b.documentMode : void 0, b > parseFloat(a)) ? String(b) : a;
            })();var Ya = null,
                Za = null,
                $a = null;function ab(a, b) {
                        if (!fa(a)) throw Error("encodeByteArray takes an array as a parameter");bb();for (var c = b ? Za : Ya, d = [], e = 0; e < a.length; e += 3) {
                                    var f = a[e],
                                        h = e + 1 < a.length,
                                        k = h ? a[e + 1] : 0,
                                        m = e + 2 < a.length,
                                        l = m ? a[e + 2] : 0,
                                        u = f >> 2,
                                        f = (f & 3) << 4 | k >> 4,
                                        k = (k & 15) << 2 | l >> 6,
                                        l = l & 63;m || (l = 64, h || (k = 64));d.push(c[u], c[f], c[k], c[l]);
                        }return d.join("");
            }
            function bb() {
                        if (!Ya) {
                                    Ya = {};Za = {};$a = {};for (var a = 0; 65 > a; a++) {
                                                Ya[a] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a), Za[a] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(a), $a[Za[a]] = a, 62 <= a && ($a["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a)] = a);
                                    }
                        }
            };function cb(a, b) {
                        if (!a) throw db(b);
            }function db(a) {
                        return Error("Firebase Database (" + firebase.SDK_VERSION + ") INTERNAL ASSERT FAILED: " + a);
            };function eb(a, b) {
                        return Object.prototype.hasOwnProperty.call(a, b);
            }function w(a, b) {
                        if (Object.prototype.hasOwnProperty.call(a, b)) return a[b];
            }function fb(a, b) {
                        for (var c in a) {
                                    Object.prototype.hasOwnProperty.call(a, c) && b(c, a[c]);
                        }
            };function gb(a) {
                        var b = [];fb(a, function (a, d) {
                                    ea(d) ? ya(d, function (d) {
                                                b.push(encodeURIComponent(a) + "=" + encodeURIComponent(d));
                                    }) : b.push(encodeURIComponent(a) + "=" + encodeURIComponent(d));
                        });return b.length ? "&" + b.join("&") : "";
            };var hb = firebase.Promise;function ib() {
                        var a = this;this.reject = this.resolve = null;this.ra = new hb(function (b, c) {
                                    a.resolve = b;a.reject = c;
                        });
            }function jb(a, b) {
                        return function (c, d) {
                                    c ? a.reject(c) : a.resolve(d);ha(b) && (kb(a.ra), 1 === b.length ? b(c) : b(c, d));
                        };
            }function kb(a) {
                        a.then(void 0, ba);
            };function lb(a) {
                        return "undefined" !== typeof JSON && n(JSON.parse) ? JSON.parse(a) : ma(a);
            }function x(a) {
                        if ("undefined" !== typeof JSON && n(JSON.stringify)) a = JSON.stringify(a);else {
                                    var b = [];oa(new na(), a, b);a = b.join("");
                        }return a;
            };function mb(a) {
                        for (var b = [], c = 0, d = 0; d < a.length; d++) {
                                    var e = a.charCodeAt(d);55296 <= e && 56319 >= e && (e -= 55296, d++, cb(d < a.length, "Surrogate pair missing trail surrogate."), e = 65536 + (e << 10) + (a.charCodeAt(d) - 56320));128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (65536 > e ? b[c++] = e >> 12 | 224 : (b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128), b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);
                        }return b;
            }function nb(a) {
                        for (var b = 0, c = 0; c < a.length; c++) {
                                    var d = a.charCodeAt(c);128 > d ? b++ : 2048 > d ? b += 2 : 55296 <= d && 56319 >= d ? (b += 4, c++) : b += 3;
                        }return b;
            };function y(a, b, c, d) {
                        var e;d < b ? e = "at least " + b : d > c && (e = 0 === c ? "none" : "no more than " + c);if (e) throw Error(a + " failed: Was called with " + d + (1 === d ? " argument." : " arguments.") + " Expects " + e + ".");
            }function A(a, b, c) {
                        var d = "";switch (b) {case 1:
                                                d = c ? "first" : "First";break;case 2:
                                                d = c ? "second" : "Second";break;case 3:
                                                d = c ? "third" : "Third";break;case 4:
                                                d = c ? "fourth" : "Fourth";break;default:
                                                throw Error("errorPrefix called with argumentNumber > 4.  Need to update it?");}return a = a + " failed: " + (d + " argument ");
            }
            function B(a, b, c, d) {
                        if ((!d || n(c)) && !ha(c)) throw Error(A(a, b, d) + "must be a valid function.");
            }function ob(a, b, c) {
                        if (n(c) && (!ia(c) || null === c)) throw Error(A(a, b, !0) + "must be a valid context object.");
            };function pb() {
                        return "undefined" !== typeof window && !!(window.cordova || window.phonegap || window.PhoneGap) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test("undefined" !== typeof navigator && "string" === typeof navigator.userAgent ? navigator.userAgent : "");
            };function C(a, b) {
                        this.name = a;this.R = b;
            }function qb(a, b) {
                        return new C(a, b);
            };function rb(a, b) {
                        return sb(a.name, b.name);
            }function tb(a, b) {
                        return sb(a, b);
            };function ub(a) {
                        this.uc = a;this.Cd = "firebase:";
            }g = ub.prototype;g.set = function (a, b) {
                        null == b ? this.uc.removeItem(this.Cd + a) : this.uc.setItem(this.Cd + a, x(b));
            };g.get = function (a) {
                        a = this.uc.getItem(this.Cd + a);return null == a ? null : lb(a);
            };g.remove = function (a) {
                        this.uc.removeItem(this.Cd + a);
            };g.Ze = !1;g.toString = function () {
                        return this.uc.toString();
            };function vb() {
                        this.pc = {};
            }vb.prototype.set = function (a, b) {
                        null == b ? delete this.pc[a] : this.pc[a] = b;
            };vb.prototype.get = function (a) {
                        return eb(this.pc, a) ? this.pc[a] : null;
            };vb.prototype.remove = function (a) {
                        delete this.pc[a];
            };vb.prototype.Ze = !0;function wb(a) {
                        try {
                                    if ("undefined" !== typeof window && "undefined" !== typeof window[a]) {
                                                var b = window[a];b.setItem("firebase:sentinel", "cache");b.removeItem("firebase:sentinel");return new ub(b);
                                    }
                        } catch (c) {}return new vb();
            }var xb = wb("localStorage"),
                yb = wb("sessionStorage");function zb(a, b, c, d, e) {
                        this.host = a.toLowerCase();this.domain = this.host.substr(this.host.indexOf(".") + 1);this.Sc = b;this.pe = c;this.qg = d;this.gf = e || "";this.$a = xb.get("host:" + a) || this.host;
            }function Ab(a, b) {
                        b !== a.$a && (a.$a = b, "s-" === a.$a.substr(0, 2) && xb.set("host:" + a.host, a.$a));
            }
            function Bb(a, b, c) {
                        D("string" === typeof b, "typeof type must == string");D("object" === typeof c, "typeof params must == object");if (b === Cb) b = (a.Sc ? "wss://" : "ws://") + a.$a + "/.ws?";else if (b === Db) b = (a.Sc ? "https://" : "http://") + a.$a + "/.lp?";else throw Error("Unknown connection type: " + b);a.host !== a.$a && (c.ns = a.pe);var d = [];v(c, function (a, b) {
                                    d.push(b + "=" + a);
                        });return b + d.join("&");
            }zb.prototype.toString = function () {
                        var a = (this.Sc ? "https://" : "http://") + this.host;this.gf && (a += "<" + this.gf + ">");return a;
            };function Eb(a, b) {
                        return a && "object" === typeof a ? (D(".sv" in a, "Unexpected leaf node or priority contents"), b[a[".sv"]]) : a;
            }function Fb(a, b) {
                        var c = new Gb();Hb(a, new E(""), function (a, e) {
                                    Ib(c, a, Jb(e, b));
                        });return c;
            }function Jb(a, b) {
                        var c = a.C().H(),
                            c = Eb(c, b),
                            d;if (a.J()) {
                                    var e = Eb(a.Ca(), b);return e !== a.Ca() || c !== a.C().H() ? new Kb(e, G(c)) : a;
                        }d = a;c !== a.C().H() && (d = d.fa(new Kb(c)));a.O(H, function (a, c) {
                                    var e = Jb(c, b);e !== c && (d = d.T(a, e));
                        });return d;
            };var Lb = function () {
                        var a = 1;return function () {
                                    return a++;
                        };
            }(),
                D = cb,
                Mb = db;
            function Nb(a) {
                        try {
                                    var b;bb();for (var c = $a, d = [], e = 0; e < a.length;) {
                                                var f = c[a.charAt(e++)],
                                                    h = e < a.length ? c[a.charAt(e)] : 0;++e;var k = e < a.length ? c[a.charAt(e)] : 64;++e;var m = e < a.length ? c[a.charAt(e)] : 64;++e;if (null == f || null == h || null == k || null == m) throw Error();d.push(f << 2 | h >> 4);64 != k && (d.push(h << 4 & 240 | k >> 2), 64 != m && d.push(k << 6 & 192 | m));
                                    }if (8192 > d.length) b = String.fromCharCode.apply(null, d);else {
                                                a = "";for (c = 0; c < d.length; c += 8192) {
                                                            a += String.fromCharCode.apply(null, Ga(d, c, c + 8192));
                                                }b = a;
                                    }return b;
                        } catch (l) {
                                    I("base64Decode failed: ", l);
                        }return null;
            }function Ob(a) {
                        var b = mb(a);a = new ta();a.update(b);var b = [],
                            c = 8 * a.Pd;56 > a.$b ? a.update(a.zd, 56 - a.$b) : a.update(a.zd, a.Wa - (a.$b - 56));for (var d = a.Wa - 1; 56 <= d; d--) {
                                    a.Wd[d] = c & 255, c /= 256;
                        }ua(a, a.Wd);for (d = c = 0; 5 > d; d++) {
                                    for (var e = 24; 0 <= e; e -= 8) {
                                                b[c] = a.M[d] >> e & 255, ++c;
                                    }
                        }return ab(b);
            }function Pb(a) {
                        for (var b = "", c = 0; c < arguments.length; c++) {
                                    b = fa(arguments[c]) ? b + Pb.apply(null, arguments[c]) : "object" === typeof arguments[c] ? b + x(arguments[c]) : b + arguments[c], b += " ";
                        }return b;
            }var Qb = null,
                Rb = !0;
            function Sb(a, b) {
                        cb(!b || !0 === a || !1 === a, "Can't turn on custom loggers persistently.");!0 === a ? ("undefined" !== typeof console && ("function" === typeof console.log ? Qb = q(console.log, console) : "object" === typeof console.log && (Qb = function Qb(a) {
                                    console.log(a);
                        })), b && yb.set("logging_enabled", !0)) : ha(a) ? Qb = a : (Qb = null, yb.remove("logging_enabled"));
            }function I(a) {
                        !0 === Rb && (Rb = !1, null === Qb && !0 === yb.get("logging_enabled") && Sb(!0));if (Qb) {
                                    var b = Pb.apply(null, arguments);Qb(b);
                        }
            }
            function Tb(a) {
                        return function () {
                                    I(a, arguments);
                        };
            }function Ub(a) {
                        if ("undefined" !== typeof console) {
                                    var b = "FIREBASE INTERNAL ERROR: " + Pb.apply(null, arguments);"undefined" !== typeof console.error ? console.error(b) : console.log(b);
                        }
            }function Vb(a) {
                        var b = Pb.apply(null, arguments);throw Error("FIREBASE FATAL ERROR: " + b);
            }function J(a) {
                        if ("undefined" !== typeof console) {
                                    var b = "FIREBASE WARNING: " + Pb.apply(null, arguments);"undefined" !== typeof console.warn ? console.warn(b) : console.log(b);
                        }
            }
            function Wb(a) {
                        var b,
                            c,
                            d,
                            e,
                            f,
                            h = a;f = c = a = b = "";d = !0;e = "https";if (p(h)) {
                                    var k = h.indexOf("//");0 <= k && (e = h.substring(0, k - 1), h = h.substring(k + 2));k = h.indexOf("/");-1 === k && (k = h.length);b = h.substring(0, k);f = "";h = h.substring(k).split("/");for (k = 0; k < h.length; k++) {
                                                if (0 < h[k].length) {
                                                            var m = h[k];try {
                                                                        m = decodeURIComponent(m.replace(/\+/g, " "));
                                                            } catch (l) {}f += "/" + m;
                                                }
                                    }h = b.split(".");3 === h.length ? (a = h[1], c = h[0].toLowerCase()) : 2 === h.length && (a = h[0]);k = b.indexOf(":");0 <= k && (d = "https" === e || "wss" === e);
                        }"firebase" === a && Vb(b + " is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead");
                        c && "undefined" != c || Vb("Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com");d || "undefined" !== typeof window && window.location && window.location.protocol && -1 !== window.location.protocol.indexOf("https:") && J("Insecure Firebase access from a secure page. Please use https in calls to new Firebase().");return { jc: new zb(b, d, c, "ws" === e || "wss" === e), path: new E(f) };
            }function Xb(a) {
                        return ga(a) && (a != a || a == Number.POSITIVE_INFINITY || a == Number.NEGATIVE_INFINITY);
            }
            function Yb(a) {
                        if ("complete" === document.readyState) a();else {
                                    var b = !1,
                                        c = function c() {
                                                document.body ? b || (b = !0, a()) : setTimeout(c, Math.floor(10));
                                    };document.addEventListener ? (document.addEventListener("DOMContentLoaded", c, !1), window.addEventListener("load", c, !1)) : document.attachEvent && (document.attachEvent("onreadystatechange", function () {
                                                "complete" === document.readyState && c();
                                    }), window.attachEvent("onload", c));
                        }
            }
            function sb(a, b) {
                        if (a === b) return 0;if ("[MIN_NAME]" === a || "[MAX_NAME]" === b) return -1;if ("[MIN_NAME]" === b || "[MAX_NAME]" === a) return 1;var c = Zb(a),
                            d = Zb(b);return null !== c ? null !== d ? 0 == c - d ? a.length - b.length : c - d : -1 : null !== d ? 1 : a < b ? -1 : 1;
            }function $b(a, b) {
                        if (b && a in b) return b[a];throw Error("Missing required key (" + a + ") in object: " + x(b));
            }
            function ac(a) {
                        if ("object" !== typeof a || null === a) return x(a);var b = [],
                            c;for (c in a) {
                                    b.push(c);
                        }b.sort();c = "{";for (var d = 0; d < b.length; d++) {
                                    0 !== d && (c += ","), c += x(b[d]), c += ":", c += ac(a[b[d]]);
                        }return c + "}";
            }function bc(a, b) {
                        if (a.length <= b) return [a];for (var c = [], d = 0; d < a.length; d += b) {
                                    d + b > a ? c.push(a.substring(d, a.length)) : c.push(a.substring(d, d + b));
                        }return c;
            }function cc(a, b) {
                        if (ea(a)) for (var c = 0; c < a.length; ++c) {
                                    b(c, a[c]);
                        } else v(a, b);
            }
            function dc(a) {
                        D(!Xb(a), "Invalid JSON number");var b, c, d, e;0 === a ? (d = c = 0, b = -Infinity === 1 / a ? 1 : 0) : (b = 0 > a, a = Math.abs(a), a >= Math.pow(2, -1022) ? (d = Math.min(Math.floor(Math.log(a) / Math.LN2), 1023), c = d + 1023, d = Math.round(a * Math.pow(2, 52 - d) - Math.pow(2, 52))) : (c = 0, d = Math.round(a / Math.pow(2, -1074))));e = [];for (a = 52; a; --a) {
                                    e.push(d % 2 ? 1 : 0), d = Math.floor(d / 2);
                        }for (a = 11; a; --a) {
                                    e.push(c % 2 ? 1 : 0), c = Math.floor(c / 2);
                        }e.push(b ? 1 : 0);e.reverse();b = e.join("");c = "";for (a = 0; 64 > a; a += 8) {
                                    d = parseInt(b.substr(a, 8), 2).toString(16), 1 === d.length && (d = "0" + d), c += d;
                        }return c.toLowerCase();
            }var ec = /^-?\d{1,10}$/;function Zb(a) {
                        return ec.test(a) && (a = Number(a), -2147483648 <= a && 2147483647 >= a) ? a : null;
            }function fc(a) {
                        try {
                                    a();
                        } catch (b) {
                                    setTimeout(function () {
                                                J("Exception was thrown by user callback.", b.stack || "");throw b;
                                    }, Math.floor(0));
                        }
            }function gc(a, b, c) {
                        Object.defineProperty(a, b, { get: c });
            }function hc(a, b) {
                        var c = setTimeout(a, b);"object" === typeof c && c.unref && c.unref();return c;
            };function ic(a) {
                        var b = {},
                            c = {},
                            d = {},
                            e = "";try {
                                    var f = a.split("."),
                                        b = lb(Nb(f[0]) || ""),
                                        c = lb(Nb(f[1]) || ""),
                                        e = f[2],
                                        d = c.d || {};delete c.d;
                        } catch (h) {}return { tg: b, Je: c, data: d, mg: e };
            }function jc(a) {
                        a = ic(a);var b = a.Je;return !!a.mg && !!b && "object" === typeof b && b.hasOwnProperty("iat");
            }function kc(a) {
                        a = ic(a).Je;return "object" === typeof a && !0 === w(a, "admin");
            };function lc() {}var mc = {};function nc(a) {
                        return q(a.compare, a);
            }lc.prototype.nd = function (a, b) {
                        return 0 !== this.compare(new C("[MIN_NAME]", a), new C("[MIN_NAME]", b));
            };lc.prototype.Hc = function () {
                        return oc;
            };function pc(a) {
                        D(!a.e() && ".priority" !== K(a), "Can't create PathIndex with empty path or .priority key");this.bc = a;
            }la(pc, lc);g = pc.prototype;g.xc = function (a) {
                        return !a.P(this.bc).e();
            };g.compare = function (a, b) {
                        var c = a.R.P(this.bc),
                            d = b.R.P(this.bc),
                            c = c.sc(d);return 0 === c ? sb(a.name, b.name) : c;
            };
            g.Ec = function (a, b) {
                        var c = G(a),
                            c = L.F(this.bc, c);return new C(b, c);
            };g.Fc = function () {
                        var a = L.F(this.bc, qc);return new C("[MAX_NAME]", a);
            };g.toString = function () {
                        return this.bc.slice().join("/");
            };function rc() {}la(rc, lc);g = rc.prototype;g.compare = function (a, b) {
                        var c = a.R.C(),
                            d = b.R.C(),
                            c = c.sc(d);return 0 === c ? sb(a.name, b.name) : c;
            };g.xc = function (a) {
                        return !a.C().e();
            };g.nd = function (a, b) {
                        return !a.C().Z(b.C());
            };g.Hc = function () {
                        return oc;
            };g.Fc = function () {
                        return new C("[MAX_NAME]", new Kb("[PRIORITY-POST]", qc));
            };
            g.Ec = function (a, b) {
                        var c = G(a);return new C(b, new Kb("[PRIORITY-POST]", c));
            };g.toString = function () {
                        return ".priority";
            };var H = new rc();function sc() {}la(sc, lc);g = sc.prototype;g.compare = function (a, b) {
                        return sb(a.name, b.name);
            };g.xc = function () {
                        throw Mb("KeyIndex.isDefinedOn not expected to be called.");
            };g.nd = function () {
                        return !1;
            };g.Hc = function () {
                        return oc;
            };g.Fc = function () {
                        return new C("[MAX_NAME]", L);
            };g.Ec = function (a) {
                        D(p(a), "KeyIndex indexValue must always be a string.");return new C(a, L);
            };g.toString = function () {
                        return ".key";
            };
            var tc = new sc();function uc() {}la(uc, lc);g = uc.prototype;g.compare = function (a, b) {
                        var c = a.R.sc(b.R);return 0 === c ? sb(a.name, b.name) : c;
            };g.xc = function () {
                        return !0;
            };g.nd = function (a, b) {
                        return !a.Z(b);
            };g.Hc = function () {
                        return oc;
            };g.Fc = function () {
                        return vc;
            };g.Ec = function (a, b) {
                        var c = G(a);return new C(b, c);
            };g.toString = function () {
                        return ".value";
            };var wc = new uc();function xc(a, b) {
                        this.od = a;this.cc = b;
            }xc.prototype.get = function (a) {
                        var b = w(this.od, a);if (!b) throw Error("No index defined for " + a);return b === mc ? null : b;
            };function yc(a, b, c) {
                        var d = Ja(a.od, function (d, f) {
                                    var h = w(a.cc, f);D(h, "Missing index implementation for " + f);if (d === mc) {
                                                if (h.xc(b.R)) {
                                                            for (var k = [], m = c.Wb(qb), l = M(m); l;) {
                                                                        l.name != b.name && k.push(l), l = M(m);
                                                            }k.push(b);return zc(k, nc(h));
                                                }return mc;
                                    }h = c.get(b.name);k = d;h && (k = k.remove(new C(b.name, h)));return k.Oa(b, b.R);
                        });return new xc(d, a.cc);
            }
            function Ac(a, b, c) {
                        var d = Ja(a.od, function (a) {
                                    if (a === mc) return a;var d = c.get(b.name);return d ? a.remove(new C(b.name, d)) : a;
                        });return new xc(d, a.cc);
            }var Bc = new xc({ ".priority": mc }, { ".priority": H });function Kb(a, b) {
                        this.B = a;D(n(this.B) && null !== this.B, "LeafNode shouldn't be created with null/undefined value.");this.aa = b || L;Cc(this.aa);this.Db = null;
            }var Dc = ["object", "boolean", "number", "string"];g = Kb.prototype;g.J = function () {
                        return !0;
            };g.C = function () {
                        return this.aa;
            };g.fa = function (a) {
                        return new Kb(this.B, a);
            };g.Q = function (a) {
                        return ".priority" === a ? this.aa : L;
            };g.P = function (a) {
                        return a.e() ? this : ".priority" === K(a) ? this.aa : L;
            };g.Da = function () {
                        return !1;
            };g.Ve = function () {
                        return null;
            };
            g.T = function (a, b) {
                        return ".priority" === a ? this.fa(b) : b.e() && ".priority" !== a ? this : L.T(a, b).fa(this.aa);
            };g.F = function (a, b) {
                        var c = K(a);if (null === c) return b;if (b.e() && ".priority" !== c) return this;D(".priority" !== c || 1 === Ec(a), ".priority must be the last token in a path");return this.T(c, L.F(N(a), b));
            };g.e = function () {
                        return !1;
            };g.Eb = function () {
                        return 0;
            };g.O = function () {
                        return !1;
            };g.H = function (a) {
                        return a && !this.C().e() ? { ".value": this.Ca(), ".priority": this.C().H() } : this.Ca();
            };
            g.hash = function () {
                        if (null === this.Db) {
                                    var a = "";this.aa.e() || (a += "priority:" + Fc(this.aa.H()) + ":");var b = typeof this.B,
                                        a = a + (b + ":"),
                                        a = "number" === b ? a + dc(this.B) : a + this.B;this.Db = Ob(a);
                        }return this.Db;
            };g.Ca = function () {
                        return this.B;
            };g.sc = function (a) {
                        if (a === L) return 1;if (a instanceof O) return -1;D(a.J(), "Unknown node type");var b = typeof a.B,
                            c = typeof this.B,
                            d = xa(Dc, b),
                            e = xa(Dc, c);D(0 <= d, "Unknown leaf type: " + b);D(0 <= e, "Unknown leaf type: " + c);return d === e ? "object" === c ? 0 : this.B < a.B ? -1 : this.B === a.B ? 0 : 1 : e - d;
            };
            g.nb = function () {
                        return this;
            };g.yc = function () {
                        return !0;
            };g.Z = function (a) {
                        return a === this ? !0 : a.J() ? this.B === a.B && this.aa.Z(a.aa) : !1;
            };g.toString = function () {
                        return x(this.H(!0));
            };function Gc() {
                        this.set = {};
            }g = Gc.prototype;g.add = function (a, b) {
                        this.set[a] = null !== b ? b : !0;
            };g.contains = function (a) {
                        return eb(this.set, a);
            };g.get = function (a) {
                        return this.contains(a) ? this.set[a] : void 0;
            };g.remove = function (a) {
                        delete this.set[a];
            };g.clear = function () {
                        this.set = {};
            };g.e = function () {
                        return Sa(this.set);
            };g.count = function () {
                        return La(this.set);
            };function Hc(a, b) {
                        v(a.set, function (a, d) {
                                    b(d, a);
                        });
            }g.keys = function () {
                        var a = [];v(this.set, function (b, c) {
                                    a.push(c);
                        });return a;
            };function Ic(a) {
                        D(ea(a) && 0 < a.length, "Requires a non-empty array");this.Bf = a;this.Dc = {};
            }Ic.prototype.Ge = function (a, b) {
                        var c;c = this.Dc[a] || [];var d = c.length;if (0 < d) {
                                    for (var e = Array(d), f = 0; f < d; f++) {
                                                e[f] = c[f];
                                    }c = e;
                        } else c = [];for (d = 0; d < c.length; d++) {
                                    c[d].Ie.apply(c[d].Ma, Array.prototype.slice.call(arguments, 1));
                        }
            };Ic.prototype.gc = function (a, b, c) {
                        Jc(this, a);this.Dc[a] = this.Dc[a] || [];this.Dc[a].push({ Ie: b, Ma: c });(a = this.Ue(a)) && b.apply(c, a);
            };
            Ic.prototype.Ic = function (a, b, c) {
                        Jc(this, a);a = this.Dc[a] || [];for (var d = 0; d < a.length; d++) {
                                    if (a[d].Ie === b && (!c || c === a[d].Ma)) {
                                                a.splice(d, 1);break;
                                    }
                        }
            };function Jc(a, b) {
                        D(Da(a.Bf, function (a) {
                                    return a === b;
                        }), "Unknown event: " + b);
            };var Kc = function () {
                        var a = 0,
                            b = [];return function (c) {
                                    var d = c === a;a = c;for (var e = Array(8), f = 7; 0 <= f; f--) {
                                                e[f] = "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(c % 64), c = Math.floor(c / 64);
                                    }D(0 === c, "Cannot push at time == 0");c = e.join("");if (d) {
                                                for (f = 11; 0 <= f && 63 === b[f]; f--) {
                                                            b[f] = 0;
                                                }b[f]++;
                                    } else for (f = 0; 12 > f; f++) {
                                                b[f] = Math.floor(64 * Math.random());
                                    }for (f = 0; 12 > f; f++) {
                                                c += "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(b[f]);
                                    }D(20 === c.length, "nextPushId: Length should be 20.");
                                    return c;
                        };
            }();function Lc() {
                        Ic.call(this, ["online"]);this.hc = !0;if ("undefined" !== typeof window && "undefined" !== typeof window.addEventListener && !pb()) {
                                    var a = this;window.addEventListener("online", function () {
                                                a.hc || (a.hc = !0, a.Ge("online", !0));
                                    }, !1);window.addEventListener("offline", function () {
                                                a.hc && (a.hc = !1, a.Ge("online", !1));
                                    }, !1);
                        }
            }la(Lc, Ic);Lc.prototype.Ue = function (a) {
                        D("online" === a, "Unknown event type: " + a);return [this.hc];
            };ca(Lc);function Mc() {
                        Ic.call(this, ["visible"]);var a, b;"undefined" !== typeof document && "undefined" !== typeof document.addEventListener && ("undefined" !== typeof document.hidden ? (b = "visibilitychange", a = "hidden") : "undefined" !== typeof document.mozHidden ? (b = "mozvisibilitychange", a = "mozHidden") : "undefined" !== typeof document.msHidden ? (b = "msvisibilitychange", a = "msHidden") : "undefined" !== typeof document.webkitHidden && (b = "webkitvisibilitychange", a = "webkitHidden"));this.Mb = !0;if (b) {
                                    var c = this;document.addEventListener(b, function () {
                                                var b = !document[a];b !== c.Mb && (c.Mb = b, c.Ge("visible", b));
                                    }, !1);
                        }
            }la(Mc, Ic);Mc.prototype.Ue = function (a) {
                        D("visible" === a, "Unknown event type: " + a);return [this.Mb];
            };ca(Mc);function E(a, b) {
                        if (1 == arguments.length) {
                                    this.o = a.split("/");for (var c = 0, d = 0; d < this.o.length; d++) {
                                                0 < this.o[d].length && (this.o[c] = this.o[d], c++);
                                    }this.o.length = c;this.Y = 0;
                        } else this.o = a, this.Y = b;
            }function P(a, b) {
                        var c = K(a);if (null === c) return b;if (c === K(b)) return P(N(a), N(b));throw Error("INTERNAL ERROR: innerPath (" + b + ") is not within outerPath (" + a + ")");
            }
            function Nc(a, b) {
                        for (var c = a.slice(), d = b.slice(), e = 0; e < c.length && e < d.length; e++) {
                                    var f = sb(c[e], d[e]);if (0 !== f) return f;
                        }return c.length === d.length ? 0 : c.length < d.length ? -1 : 1;
            }function K(a) {
                        return a.Y >= a.o.length ? null : a.o[a.Y];
            }function Ec(a) {
                        return a.o.length - a.Y;
            }function N(a) {
                        var b = a.Y;b < a.o.length && b++;return new E(a.o, b);
            }function Oc(a) {
                        return a.Y < a.o.length ? a.o[a.o.length - 1] : null;
            }g = E.prototype;
            g.toString = function () {
                        for (var a = "", b = this.Y; b < this.o.length; b++) {
                                    "" !== this.o[b] && (a += "/" + this.o[b]);
                        }return a || "/";
            };g.slice = function (a) {
                        return this.o.slice(this.Y + (a || 0));
            };g.parent = function () {
                        if (this.Y >= this.o.length) return null;for (var a = [], b = this.Y; b < this.o.length - 1; b++) {
                                    a.push(this.o[b]);
                        }return new E(a, 0);
            };
            g.n = function (a) {
                        for (var b = [], c = this.Y; c < this.o.length; c++) {
                                    b.push(this.o[c]);
                        }if (a instanceof E) for (c = a.Y; c < a.o.length; c++) {
                                    b.push(a.o[c]);
                        } else for (a = a.split("/"), c = 0; c < a.length; c++) {
                                    0 < a[c].length && b.push(a[c]);
                        }return new E(b, 0);
            };g.e = function () {
                        return this.Y >= this.o.length;
            };g.Z = function (a) {
                        if (Ec(this) !== Ec(a)) return !1;for (var b = this.Y, c = a.Y; b <= this.o.length; b++, c++) {
                                    if (this.o[b] !== a.o[c]) return !1;
                        }return !0;
            };
            g.contains = function (a) {
                        var b = this.Y,
                            c = a.Y;if (Ec(this) > Ec(a)) return !1;for (; b < this.o.length;) {
                                    if (this.o[b] !== a.o[c]) return !1;++b;++c;
                        }return !0;
            };var Q = new E("");function Pc(a, b) {
                        this.Qa = a.slice();this.Ha = Math.max(1, this.Qa.length);this.Qe = b;for (var c = 0; c < this.Qa.length; c++) {
                                    this.Ha += nb(this.Qa[c]);
                        }Qc(this);
            }Pc.prototype.push = function (a) {
                        0 < this.Qa.length && (this.Ha += 1);this.Qa.push(a);this.Ha += nb(a);Qc(this);
            };Pc.prototype.pop = function () {
                        var a = this.Qa.pop();this.Ha -= nb(a);0 < this.Qa.length && --this.Ha;
            };
            function Qc(a) {
                        if (768 < a.Ha) throw Error(a.Qe + "has a key path longer than 768 bytes (" + a.Ha + ").");if (32 < a.Qa.length) throw Error(a.Qe + "path specified exceeds the maximum depth that can be written (32) or object contains a cycle " + Rc(a));
            }function Rc(a) {
                        return 0 == a.Qa.length ? "" : "in property '" + a.Qa.join(".") + "'";
            };function Sc() {
                        this.children = {};this.bd = 0;this.value = null;
            }function Tc(a, b, c) {
                        this.ud = a ? a : "";this.Pc = b ? b : null;this.A = c ? c : new Sc();
            }function Uc(a, b) {
                        for (var c = b instanceof E ? b : new E(b), d = a, e; null !== (e = K(c));) {
                                    d = new Tc(e, d, w(d.A.children, e) || new Sc()), c = N(c);
                        }return d;
            }g = Tc.prototype;g.Ca = function () {
                        return this.A.value;
            };function Vc(a, b) {
                        D("undefined" !== typeof b, "Cannot set value to undefined");a.A.value = b;Wc(a);
            }g.clear = function () {
                        this.A.value = null;this.A.children = {};this.A.bd = 0;Wc(this);
            };
            g.kd = function () {
                        return 0 < this.A.bd;
            };g.e = function () {
                        return null === this.Ca() && !this.kd();
            };g.O = function (a) {
                        var b = this;v(this.A.children, function (c, d) {
                                    a(new Tc(d, b, c));
                        });
            };function Xc(a, b, c, d) {
                        c && !d && b(a);a.O(function (a) {
                                    Xc(a, b, !0, d);
                        });c && d && b(a);
            }function Yc(a, b) {
                        for (var c = a.parent(); null !== c && !b(c);) {
                                    c = c.parent();
                        }
            }g.path = function () {
                        return new E(null === this.Pc ? this.ud : this.Pc.path() + "/" + this.ud);
            };g.name = function () {
                        return this.ud;
            };g.parent = function () {
                        return this.Pc;
            };
            function Wc(a) {
                        if (null !== a.Pc) {
                                    var b = a.Pc,
                                        c = a.ud,
                                        d = a.e(),
                                        e = eb(b.A.children, c);d && e ? (delete b.A.children[c], b.A.bd--, Wc(b)) : d || e || (b.A.children[c] = a.A, b.A.bd++, Wc(b));
                        }
            };function Zc(a, b) {
                        this.La = a;this.ba = b ? b : $c;
            }g = Zc.prototype;g.Oa = function (a, b) {
                        return new Zc(this.La, this.ba.Oa(a, b, this.La).X(null, null, !1, null, null));
            };g.remove = function (a) {
                        return new Zc(this.La, this.ba.remove(a, this.La).X(null, null, !1, null, null));
            };g.get = function (a) {
                        for (var b, c = this.ba; !c.e();) {
                                    b = this.La(a, c.key);if (0 === b) return c.value;0 > b ? c = c.left : 0 < b && (c = c.right);
                        }return null;
            };
            function ad(a, b) {
                        for (var c, d = a.ba, e = null; !d.e();) {
                                    c = a.La(b, d.key);if (0 === c) {
                                                if (d.left.e()) return e ? e.key : null;for (d = d.left; !d.right.e();) {
                                                            d = d.right;
                                                }return d.key;
                                    }0 > c ? d = d.left : 0 < c && (e = d, d = d.right);
                        }throw Error("Attempted to find predecessor key for a nonexistent key.  What gives?");
            }g.e = function () {
                        return this.ba.e();
            };g.count = function () {
                        return this.ba.count();
            };g.Gc = function () {
                        return this.ba.Gc();
            };g.ec = function () {
                        return this.ba.ec();
            };g.ha = function (a) {
                        return this.ba.ha(a);
            };
            g.Wb = function (a) {
                        return new bd(this.ba, null, this.La, !1, a);
            };g.Xb = function (a, b) {
                        return new bd(this.ba, a, this.La, !1, b);
            };g.Zb = function (a, b) {
                        return new bd(this.ba, a, this.La, !0, b);
            };g.We = function (a) {
                        return new bd(this.ba, null, this.La, !0, a);
            };function bd(a, b, c, d, e) {
                        this.Hd = e || null;this.le = d;this.Pa = [];for (e = 1; !a.e();) {
                                    if (e = b ? c(a.key, b) : 1, d && (e *= -1), 0 > e) a = this.le ? a.left : a.right;else if (0 === e) {
                                                this.Pa.push(a);break;
                                    } else this.Pa.push(a), a = this.le ? a.right : a.left;
                        }
            }
            function M(a) {
                        if (0 === a.Pa.length) return null;var b = a.Pa.pop(),
                            c;c = a.Hd ? a.Hd(b.key, b.value) : { key: b.key, value: b.value };if (a.le) for (b = b.left; !b.e();) {
                                    a.Pa.push(b), b = b.right;
                        } else for (b = b.right; !b.e();) {
                                    a.Pa.push(b), b = b.left;
                        }return c;
            }function cd(a) {
                        if (0 === a.Pa.length) return null;var b;b = a.Pa;b = b[b.length - 1];return a.Hd ? a.Hd(b.key, b.value) : { key: b.key, value: b.value };
            }function dd(a, b, c, d, e) {
                        this.key = a;this.value = b;this.color = null != c ? c : !0;this.left = null != d ? d : $c;this.right = null != e ? e : $c;
            }g = dd.prototype;
            g.X = function (a, b, c, d, e) {
                        return new dd(null != a ? a : this.key, null != b ? b : this.value, null != c ? c : this.color, null != d ? d : this.left, null != e ? e : this.right);
            };g.count = function () {
                        return this.left.count() + 1 + this.right.count();
            };g.e = function () {
                        return !1;
            };g.ha = function (a) {
                        return this.left.ha(a) || a(this.key, this.value) || this.right.ha(a);
            };function ed(a) {
                        return a.left.e() ? a : ed(a.left);
            }g.Gc = function () {
                        return ed(this).key;
            };g.ec = function () {
                        return this.right.e() ? this.key : this.right.ec();
            };
            g.Oa = function (a, b, c) {
                        var d, e;e = this;d = c(a, e.key);e = 0 > d ? e.X(null, null, null, e.left.Oa(a, b, c), null) : 0 === d ? e.X(null, b, null, null, null) : e.X(null, null, null, null, e.right.Oa(a, b, c));return gd(e);
            };function hd(a) {
                        if (a.left.e()) return $c;a.left.ea() || a.left.left.ea() || (a = id(a));a = a.X(null, null, null, hd(a.left), null);return gd(a);
            }
            g.remove = function (a, b) {
                        var c, d;c = this;if (0 > b(a, c.key)) c.left.e() || c.left.ea() || c.left.left.ea() || (c = id(c)), c = c.X(null, null, null, c.left.remove(a, b), null);else {
                                    c.left.ea() && (c = jd(c));c.right.e() || c.right.ea() || c.right.left.ea() || (c = kd(c), c.left.left.ea() && (c = jd(c), c = kd(c)));if (0 === b(a, c.key)) {
                                                if (c.right.e()) return $c;d = ed(c.right);c = c.X(d.key, d.value, null, null, hd(c.right));
                                    }c = c.X(null, null, null, null, c.right.remove(a, b));
                        }return gd(c);
            };g.ea = function () {
                        return this.color;
            };
            function gd(a) {
                        a.right.ea() && !a.left.ea() && (a = ld(a));a.left.ea() && a.left.left.ea() && (a = jd(a));a.left.ea() && a.right.ea() && (a = kd(a));return a;
            }function id(a) {
                        a = kd(a);a.right.left.ea() && (a = a.X(null, null, null, null, jd(a.right)), a = ld(a), a = kd(a));return a;
            }function ld(a) {
                        return a.right.X(null, null, a.color, a.X(null, null, !0, null, a.right.left), null);
            }function jd(a) {
                        return a.left.X(null, null, a.color, null, a.X(null, null, !0, a.left.right, null));
            }
            function kd(a) {
                        return a.X(null, null, !a.color, a.left.X(null, null, !a.left.color, null, null), a.right.X(null, null, !a.right.color, null, null));
            }function md() {}g = md.prototype;g.X = function () {
                        return this;
            };g.Oa = function (a, b) {
                        return new dd(a, b, null);
            };g.remove = function () {
                        return this;
            };g.count = function () {
                        return 0;
            };g.e = function () {
                        return !0;
            };g.ha = function () {
                        return !1;
            };g.Gc = function () {
                        return null;
            };g.ec = function () {
                        return null;
            };g.ea = function () {
                        return !1;
            };var $c = new md();function O(a, b, c) {
                        this.k = a;(this.aa = b) && Cc(this.aa);a.e() && D(!this.aa || this.aa.e(), "An empty node cannot have a priority");this.yb = c;this.Db = null;
            }g = O.prototype;g.J = function () {
                        return !1;
            };g.C = function () {
                        return this.aa || L;
            };g.fa = function (a) {
                        return this.k.e() ? this : new O(this.k, a, this.yb);
            };g.Q = function (a) {
                        if (".priority" === a) return this.C();a = this.k.get(a);return null === a ? L : a;
            };g.P = function (a) {
                        var b = K(a);return null === b ? this : this.Q(b).P(N(a));
            };g.Da = function (a) {
                        return null !== this.k.get(a);
            };
            g.T = function (a, b) {
                        D(b, "We should always be passing snapshot nodes");if (".priority" === a) return this.fa(b);var c = new C(a, b),
                            d,
                            e;b.e() ? (d = this.k.remove(a), c = Ac(this.yb, c, this.k)) : (d = this.k.Oa(a, b), c = yc(this.yb, c, this.k));e = d.e() ? L : this.aa;return new O(d, e, c);
            };g.F = function (a, b) {
                        var c = K(a);if (null === c) return b;D(".priority" !== K(a) || 1 === Ec(a), ".priority must be the last token in a path");var d = this.Q(c).F(N(a), b);return this.T(c, d);
            };g.e = function () {
                        return this.k.e();
            };g.Eb = function () {
                        return this.k.count();
            };
            var nd = /^(0|[1-9]\d*)$/;g = O.prototype;g.H = function (a) {
                        if (this.e()) return null;var b = {},
                            c = 0,
                            d = 0,
                            e = !0;this.O(H, function (f, h) {
                                    b[f] = h.H(a);c++;e && nd.test(f) ? d = Math.max(d, Number(f)) : e = !1;
                        });if (!a && e && d < 2 * c) {
                                    var f = [],
                                        h;for (h in b) {
                                                f[h] = b[h];
                                    }return f;
                        }a && !this.C().e() && (b[".priority"] = this.C().H());return b;
            };g.hash = function () {
                        if (null === this.Db) {
                                    var a = "";this.C().e() || (a += "priority:" + Fc(this.C().H()) + ":");this.O(H, function (b, c) {
                                                var d = c.hash();"" !== d && (a += ":" + b + ":" + d);
                                    });this.Db = "" === a ? "" : Ob(a);
                        }return this.Db;
            };
            g.Ve = function (a, b, c) {
                        return (c = od(this, c)) ? (a = ad(c, new C(a, b))) ? a.name : null : ad(this.k, a);
            };function pd(a, b) {
                        var c;c = (c = od(a, b)) ? (c = c.Gc()) && c.name : a.k.Gc();return c ? new C(c, a.k.get(c)) : null;
            }function qd(a, b) {
                        var c;c = (c = od(a, b)) ? (c = c.ec()) && c.name : a.k.ec();return c ? new C(c, a.k.get(c)) : null;
            }g.O = function (a, b) {
                        var c = od(this, a);return c ? c.ha(function (a) {
                                    return b(a.name, a.R);
                        }) : this.k.ha(b);
            };g.Wb = function (a) {
                        return this.Xb(a.Hc(), a);
            };
            g.Xb = function (a, b) {
                        var c = od(this, b);if (c) return c.Xb(a, function (a) {
                                    return a;
                        });for (var c = this.k.Xb(a.name, qb), d = cd(c); null != d && 0 > b.compare(d, a);) {
                                    M(c), d = cd(c);
                        }return c;
            };g.We = function (a) {
                        return this.Zb(a.Fc(), a);
            };g.Zb = function (a, b) {
                        var c = od(this, b);if (c) return c.Zb(a, function (a) {
                                    return a;
                        });for (var c = this.k.Zb(a.name, qb), d = cd(c); null != d && 0 < b.compare(d, a);) {
                                    M(c), d = cd(c);
                        }return c;
            };g.sc = function (a) {
                        return this.e() ? a.e() ? 0 : -1 : a.J() || a.e() ? 1 : a === qc ? -1 : 0;
            };
            g.nb = function (a) {
                        if (a === tc || Pa(this.yb.cc, a.toString())) return this;var b = this.yb,
                            c = this.k;D(a !== tc, "KeyIndex always exists and isn't meant to be added to the IndexMap.");for (var d = [], e = !1, c = c.Wb(qb), f = M(c); f;) {
                                    e = e || a.xc(f.R), d.push(f), f = M(c);
                        }d = e ? zc(d, nc(a)) : mc;e = a.toString();c = Ta(b.cc);c[e] = a;a = Ta(b.od);a[e] = d;return new O(this.k, this.aa, new xc(a, c));
            };g.yc = function (a) {
                        return a === tc || Pa(this.yb.cc, a.toString());
            };
            g.Z = function (a) {
                        if (a === this) return !0;if (a.J()) return !1;if (this.C().Z(a.C()) && this.k.count() === a.k.count()) {
                                    var b = this.Wb(H);a = a.Wb(H);for (var c = M(b), d = M(a); c && d;) {
                                                if (c.name !== d.name || !c.R.Z(d.R)) return !1;c = M(b);d = M(a);
                                    }return null === c && null === d;
                        }return !1;
            };function od(a, b) {
                        return b === tc ? null : a.yb.get(b.toString());
            }g.toString = function () {
                        return x(this.H(!0));
            };function G(a, b) {
                        if (null === a) return L;var c = null;"object" === typeof a && ".priority" in a ? c = a[".priority"] : "undefined" !== typeof b && (c = b);D(null === c || "string" === typeof c || "number" === typeof c || "object" === typeof c && ".sv" in c, "Invalid priority type found: " + typeof c);"object" === typeof a && ".value" in a && null !== a[".value"] && (a = a[".value"]);if ("object" !== typeof a || ".sv" in a) return new Kb(a, G(c));if (a instanceof Array) {
                                    var d = L,
                                        e = a;v(e, function (a, b) {
                                                if (eb(e, b) && "." !== b.substring(0, 1)) {
                                                            var c = G(a);if (c.J() || !c.e()) d = d.T(b, c);
                                                }
                                    });return d.fa(G(c));
                        }var f = [],
                            h = !1,
                            k = a;fb(k, function (a) {
                                    if ("string" !== typeof a || "." !== a.substring(0, 1)) {
                                                var b = G(k[a]);b.e() || (h = h || !b.C().e(), f.push(new C(a, b)));
                                    }
                        });if (0 == f.length) return L;var m = zc(f, rb, function (a) {
                                    return a.name;
                        }, tb);if (h) {
                                    var l = zc(f, nc(H));return new O(m, G(c), new xc({ ".priority": l }, { ".priority": H }));
                        }return new O(m, G(c), Bc);
            }var rd = Math.log(2);
            function sd(a) {
                        this.count = parseInt(Math.log(a + 1) / rd, 10);this.Oe = this.count - 1;this.Cf = a + 1 & parseInt(Array(this.count + 1).join("1"), 2);
            }function td(a) {
                        var b = !(a.Cf & 1 << a.Oe);a.Oe--;return b;
            }
            function zc(a, b, c, d) {
                        function e(b, d) {
                                    var f = d - b;if (0 == f) return null;if (1 == f) {
                                                var l = a[b],
                                                    u = c ? c(l) : l;return new dd(u, l.R, !1, null, null);
                                    }var l = parseInt(f / 2, 10) + b,
                                        f = e(b, l),
                                        z = e(l + 1, d),
                                        l = a[l],
                                        u = c ? c(l) : l;return new dd(u, l.R, !1, f, z);
                        }a.sort(b);var f = function (b) {
                                    function d(b, h) {
                                                var k = u - b,
                                                    z = u;u -= b;var z = e(k + 1, z),
                                                    k = a[k],
                                                    F = c ? c(k) : k,
                                                    z = new dd(F, k.R, h, null, z);f ? f.left = z : l = z;f = z;
                                    }for (var f = null, l = null, u = a.length, z = 0; z < b.count; ++z) {
                                                var F = td(b),
                                                    fd = Math.pow(2, b.count - (z + 1));F ? d(fd, !1) : (d(fd, !1), d(fd, !0));
                                    }return l;
                        }(new sd(a.length));
                        return null !== f ? new Zc(d || b, f) : new Zc(d || b);
            }function Fc(a) {
                        return "number" === typeof a ? "number:" + dc(a) : "string:" + a;
            }function Cc(a) {
                        if (a.J()) {
                                    var b = a.H();D("string" === typeof b || "number" === typeof b || "object" === typeof b && eb(b, ".sv"), "Priority must be a string or number.");
                        } else D(a === qc || a.e(), "priority of unexpected type.");D(a === qc || a.C().e(), "Priority nodes can't have a priority of their own.");
            }var L = new O(new Zc(tb), null, Bc);function ud() {
                        O.call(this, new Zc(tb), L, Bc);
            }la(ud, O);g = ud.prototype;
            g.sc = function (a) {
                        return a === this ? 0 : 1;
            };g.Z = function (a) {
                        return a === this;
            };g.C = function () {
                        return this;
            };g.Q = function () {
                        return L;
            };g.e = function () {
                        return !1;
            };var qc = new ud(),
                oc = new C("[MIN_NAME]", L),
                vc = new C("[MAX_NAME]", qc);function vd(a, b) {
                        this.value = a;this.children = b || wd;
            }var wd = new Zc(function (a, b) {
                        return a === b ? 0 : a < b ? -1 : 1;
            });function xd(a) {
                        var b = R;v(a, function (a, d) {
                                    b = b.set(new E(d), a);
                        });return b;
            }g = vd.prototype;g.e = function () {
                        return null === this.value && this.children.e();
            };function yd(a, b, c) {
                        if (null != a.value && c(a.value)) return { path: Q, value: a.value };if (b.e()) return null;var d = K(b);a = a.children.get(d);return null !== a ? (b = yd(a, N(b), c), null != b ? { path: new E(d).n(b.path), value: b.value } : null) : null;
            }
            function zd(a, b) {
                        return yd(a, b, function () {
                                    return !0;
                        });
            }g.subtree = function (a) {
                        if (a.e()) return this;var b = this.children.get(K(a));return null !== b ? b.subtree(N(a)) : R;
            };g.set = function (a, b) {
                        if (a.e()) return new vd(b, this.children);var c = K(a),
                            d = (this.children.get(c) || R).set(N(a), b),
                            c = this.children.Oa(c, d);return new vd(this.value, c);
            };
            g.remove = function (a) {
                        if (a.e()) return this.children.e() ? R : new vd(null, this.children);var b = K(a),
                            c = this.children.get(b);return c ? (a = c.remove(N(a)), b = a.e() ? this.children.remove(b) : this.children.Oa(b, a), null === this.value && b.e() ? R : new vd(this.value, b)) : this;
            };g.get = function (a) {
                        if (a.e()) return this.value;var b = this.children.get(K(a));return b ? b.get(N(a)) : null;
            };
            function Ad(a, b, c) {
                        if (b.e()) return c;var d = K(b);b = Ad(a.children.get(d) || R, N(b), c);d = b.e() ? a.children.remove(d) : a.children.Oa(d, b);return new vd(a.value, d);
            }function Bd(a, b) {
                        return Cd(a, Q, b);
            }function Cd(a, b, c) {
                        var d = {};a.children.ha(function (a, f) {
                                    d[a] = Cd(f, b.n(a), c);
                        });return c(b, a.value, d);
            }function Dd(a, b, c) {
                        return Ed(a, b, Q, c);
            }function Ed(a, b, c, d) {
                        var e = a.value ? d(c, a.value) : !1;if (e) return e;if (b.e()) return null;e = K(b);return (a = a.children.get(e)) ? Ed(a, N(b), c.n(e), d) : null;
            }
            function Fd(a, b, c) {
                        Gd(a, b, Q, c);
            }function Gd(a, b, c, d) {
                        if (b.e()) return a;a.value && d(c, a.value);var e = K(b);return (a = a.children.get(e)) ? Gd(a, N(b), c.n(e), d) : R;
            }function Hd(a, b) {
                        Id(a, Q, b);
            }function Id(a, b, c) {
                        a.children.ha(function (a, e) {
                                    Id(e, b.n(a), c);
                        });a.value && c(b, a.value);
            }function Jd(a, b) {
                        a.children.ha(function (a, d) {
                                    d.value && b(a, d.value);
                        });
            }var R = new vd(null);vd.prototype.toString = function () {
                        var a = {};Hd(this, function (b, c) {
                                    a[b.toString()] = c.toString();
                        });return x(a);
            };var Kd = /[\[\].#$\/\u0000-\u001F\u007F]/,
                Ld = /[\[\].#$\u0000-\u001F\u007F]/;function Md(a) {
                        return p(a) && 0 !== a.length && !Kd.test(a);
            }function Nd(a) {
                        return null === a || p(a) || ga(a) && !Xb(a) || ia(a) && eb(a, ".sv");
            }function Od(a, b, c, d) {
                        d && !n(b) || Pd(A(a, 1, d), b, c);
            }
            function Pd(a, b, c) {
                        c instanceof E && (c = new Pc(c, a));if (!n(b)) throw Error(a + "contains undefined " + Rc(c));if (ha(b)) throw Error(a + "contains a function " + Rc(c) + " with contents: " + b.toString());if (Xb(b)) throw Error(a + "contains " + b.toString() + " " + Rc(c));if (p(b) && b.length > 10485760 / 3 && 10485760 < nb(b)) throw Error(a + "contains a string greater than 10485760 utf8 bytes " + Rc(c) + " ('" + b.substring(0, 50) + "...')");if (ia(b)) {
                                    var d = !1,
                                        e = !1;fb(b, function (b, h) {
                                                if (".value" === b) d = !0;else if (".priority" !== b && ".sv" !== b && (e = !0, !Md(b))) throw Error(a + " contains an invalid key (" + b + ") " + Rc(c) + '.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');c.push(b);Pd(a, h, c);c.pop();
                                    });if (d && e) throw Error(a + ' contains ".value" child ' + Rc(c) + " in addition to actual children.");
                        }
            }
            function Qd(a, b) {
                        var c, d;for (c = 0; c < b.length; c++) {
                                    d = b[c];for (var e = d.slice(), f = 0; f < e.length; f++) {
                                                if ((".priority" !== e[f] || f !== e.length - 1) && !Md(e[f])) throw Error(a + "contains an invalid key (" + e[f] + ") in path " + d.toString() + '. Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');
                                    }
                        }b.sort(Nc);e = null;for (c = 0; c < b.length; c++) {
                                    d = b[c];if (null !== e && e.contains(d)) throw Error(a + "contains a path " + e.toString() + " that is ancestor of another path " + d.toString());e = d;
                        }
            }
            function Rd(a, b, c) {
                        var d = A(a, 1, !1);if (!ia(b) || ea(b)) throw Error(d + " must be an object containing the children to replace.");var e = [];fb(b, function (a, b) {
                                    var k = new E(a);Pd(d, b, c.n(k));if (".priority" === Oc(k) && !Nd(b)) throw Error(d + "contains an invalid value for '" + k.toString() + "', which must be a valid Firebase priority (a string, finite number, server value, or null).");e.push(k);
                        });Qd(d, e);
            }
            function Sd(a, b, c) {
                        if (Xb(c)) throw Error(A(a, b, !1) + "is " + c.toString() + ", but must be a valid Firebase priority (a string, finite number, server value, or null).");if (!Nd(c)) throw Error(A(a, b, !1) + "must be a valid Firebase priority (a string, finite number, server value, or null).");
            }
            function Td(a, b, c) {
                        if (!c || n(b)) switch (b) {case "value":case "child_added":case "child_removed":case "child_changed":case "child_moved":
                                                break;default:
                                                throw Error(A(a, 1, c) + 'must be a valid event type: "value", "child_added", "child_removed", "child_changed", or "child_moved".');}
            }function Ud(a, b) {
                        if (n(b) && !Md(b)) throw Error(A(a, 2, !0) + 'was an invalid key: "' + b + '".  Firebase keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").');
            }
            function Vd(a, b) {
                        if (!p(b) || 0 === b.length || Ld.test(b)) throw Error(A(a, 1, !1) + 'was an invalid path: "' + b + '". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"');
            }function Wd(a, b) {
                        if (".info" === K(b)) throw Error(a + " failed: Can't modify data under /.info/");
            }
            function Xd(a, b) {
                        var c = b.path.toString(),
                            d;!(d = !p(b.jc.host) || 0 === b.jc.host.length || !Md(b.jc.pe)) && (d = 0 !== c.length) && (c && (c = c.replace(/^\/*\.info(\/|$)/, "/")), d = !(p(c) && 0 !== c.length && !Ld.test(c)));if (d) throw Error(A(a, 1, !1) + 'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".');
            };function Gb() {
                        this.k = this.B = null;
            }Gb.prototype.find = function (a) {
                        if (null != this.B) return this.B.P(a);if (a.e() || null == this.k) return null;var b = K(a);a = N(a);return this.k.contains(b) ? this.k.get(b).find(a) : null;
            };function Ib(a, b, c) {
                        if (b.e()) a.B = c, a.k = null;else if (null !== a.B) a.B = a.B.F(b, c);else {
                                    null == a.k && (a.k = new Gc());var d = K(b);a.k.contains(d) || a.k.add(d, new Gb());a = a.k.get(d);b = N(b);Ib(a, b, c);
                        }
            }
            function Yd(a, b) {
                        if (b.e()) return a.B = null, a.k = null, !0;if (null !== a.B) {
                                    if (a.B.J()) return !1;var c = a.B;a.B = null;c.O(H, function (b, c) {
                                                Ib(a, new E(b), c);
                                    });return Yd(a, b);
                        }return null !== a.k ? (c = K(b), b = N(b), a.k.contains(c) && Yd(a.k.get(c), b) && a.k.remove(c), a.k.e() ? (a.k = null, !0) : !1) : !0;
            }function Hb(a, b, c) {
                        null !== a.B ? c(b, a.B) : a.O(function (a, e) {
                                    var f = new E(b.toString() + "/" + a);Hb(e, f, c);
                        });
            }Gb.prototype.O = function (a) {
                        null !== this.k && Hc(this.k, function (b, c) {
                                    a(b, c);
                        });
            };function Zd(a, b) {
                        this.type = $d;this.source = a;this.path = b;
            }Zd.prototype.Mc = function () {
                        return this.path.e() ? new Zd(this.source, Q) : new Zd(this.source, N(this.path));
            };Zd.prototype.toString = function () {
                        return "Operation(" + this.path + ": " + this.source.toString() + " listen_complete)";
            };function ae(a, b, c) {
                        this.type = be;this.source = a;this.path = b;this.children = c;
            }ae.prototype.Mc = function (a) {
                        if (this.path.e()) return a = this.children.subtree(new E(a)), a.e() ? null : a.value ? new ce(this.source, Q, a.value) : new ae(this.source, Q, a);D(K(this.path) === a, "Can't get a merge for a child not on the path of the operation");return new ae(this.source, N(this.path), this.children);
            };ae.prototype.toString = function () {
                        return "Operation(" + this.path + ": " + this.source.toString() + " merge: " + this.children.toString() + ")";
            };function de(a, b, c) {
                        this.type = ee;this.source = fe;this.path = a;this.Ob = b;this.Id = c;
            }de.prototype.Mc = function (a) {
                        if (this.path.e()) {
                                    if (null != this.Ob.value) return D(this.Ob.children.e(), "affectedTree should not have overlapping affected paths."), this;a = this.Ob.subtree(new E(a));return new de(Q, a, this.Id);
                        }D(K(this.path) === a, "operationForChild called for unrelated child.");return new de(N(this.path), this.Ob, this.Id);
            };
            de.prototype.toString = function () {
                        return "Operation(" + this.path + ": " + this.source.toString() + " ack write revert=" + this.Id + " affectedTree=" + this.Ob + ")";
            };function ce(a, b, c) {
                        this.type = ge;this.source = a;this.path = b;this.Ga = c;
            }ce.prototype.Mc = function (a) {
                        return this.path.e() ? new ce(this.source, Q, this.Ga.Q(a)) : new ce(this.source, N(this.path), this.Ga);
            };ce.prototype.toString = function () {
                        return "Operation(" + this.path + ": " + this.source.toString() + " overwrite: " + this.Ga.toString() + ")";
            };var ge = 0,
                be = 1,
                ee = 2,
                $d = 3;function he(a, b, c, d) {
                        this.ee = a;this.Se = b;this.Hb = c;this.Ee = d;D(!d || b, "Tagged queries must be from server.");
            }var fe = new he(!0, !1, null, !1),
                ie = new he(!1, !0, null, !1);he.prototype.toString = function () {
                        return this.ee ? "user" : this.Ee ? "server(queryID=" + this.Hb + ")" : "server";
            };function je(a, b, c) {
                        this.A = a;this.da = b;this.Sb = c;
            }function ke(a) {
                        return a.da;
            }function le(a) {
                        return a.Sb;
            }function me(a, b) {
                        return b.e() ? a.da && !a.Sb : ne(a, K(b));
            }function ne(a, b) {
                        return a.da && !a.Sb || a.A.Da(b);
            }je.prototype.j = function () {
                        return this.A;
            };function oe(a, b) {
                        this.N = a;this.Ld = b;
            }function pe(a, b, c, d) {
                        return new oe(new je(b, c, d), a.Ld);
            }function qe(a) {
                        return a.N.da ? a.N.j() : null;
            }oe.prototype.w = function () {
                        return this.Ld;
            };function re(a) {
                        return a.Ld.da ? a.Ld.j() : null;
            };function se() {}se.prototype.Te = function () {
                        return null;
            };se.prototype.fe = function () {
                        return null;
            };var te = new se();function ue(a, b, c) {
                        this.xf = a;this.Ka = b;this.yd = c;
            }ue.prototype.Te = function (a) {
                        var b = this.Ka.N;if (ne(b, a)) return b.j().Q(a);b = null != this.yd ? new je(this.yd, !0, !1) : this.Ka.w();return this.xf.qc(a, b);
            };ue.prototype.fe = function (a, b, c) {
                        var d = null != this.yd ? this.yd : re(this.Ka);a = this.xf.Xd(d, b, 1, c, a);return 0 === a.length ? null : a[0];
            };function ve(a, b) {
                        this.Sd = a;this.Df = b;
            }function we(a) {
                        this.U = a;
            }
            we.prototype.eb = function (a, b, c, d) {
                        var e = new xe(),
                            f;if (b.type === ge) b.source.ee ? c = ye(this, a, b.path, b.Ga, c, d, e) : (D(b.source.Se, "Unknown source."), f = b.source.Ee || le(a.w()) && !b.path.e(), c = ze(this, a, b.path, b.Ga, c, d, f, e));else if (b.type === be) b.source.ee ? c = Ae(this, a, b.path, b.children, c, d, e) : (D(b.source.Se, "Unknown source."), f = b.source.Ee || le(a.w()), c = Be(this, a, b.path, b.children, c, d, f, e));else if (b.type === ee) {
                                    if (b.Id) {
                                                if (b = b.path, null != c.lc(b)) c = a;else {
                                                            f = new ue(c, a, d);d = a.N.j();if (b.e() || ".priority" === K(b)) ke(a.w()) ? b = c.Aa(re(a)) : (b = a.w().j(), D(b instanceof O, "serverChildren would be complete if leaf node"), b = c.rc(b)), b = this.U.ya(d, b, e);else {
                                                                        var h = K(b),
                                                                            k = c.qc(h, a.w());null == k && ne(a.w(), h) && (k = d.Q(h));b = null != k ? this.U.F(d, h, k, N(b), f, e) : a.N.j().Da(h) ? this.U.F(d, h, L, N(b), f, e) : d;b.e() && ke(a.w()) && (d = c.Aa(re(a)), d.J() && (b = this.U.ya(b, d, e)));
                                                            }d = ke(a.w()) || null != c.lc(Q);c = pe(a, b, d, this.U.Na());
                                                }
                                    } else c = Ce(this, a, b.path, b.Ob, c, d, e);
                        } else if (b.type === $d) d = b.path, b = a.w(), f = b.j(), h = b.da || d.e(), c = De(this, new oe(a.N, new je(f, h, b.Sb)), d, c, te, e);else throw Mb("Unknown operation type: " + b.type);e = Na(e.fb);d = c;b = d.N;b.da && (f = b.j().J() || b.j().e(), h = qe(a), (0 < e.length || !a.N.da || f && !b.j().Z(h) || !b.j().C().Z(h.C())) && e.push(Ee(qe(d))));return new ve(c, e);
            };
            function De(a, b, c, d, e, f) {
                        var h = b.N;if (null != d.lc(c)) return b;var k;if (c.e()) D(ke(b.w()), "If change path is empty, we must have complete server data"), le(b.w()) ? (e = re(b), d = d.rc(e instanceof O ? e : L)) : d = d.Aa(re(b)), f = a.U.ya(b.N.j(), d, f);else {
                                    var m = K(c);if (".priority" == m) D(1 == Ec(c), "Can't have a priority with additional path components"), f = h.j(), k = b.w().j(), d = d.ad(c, f, k), f = null != d ? a.U.fa(f, d) : h.j();else {
                                                var l = N(c);ne(h, m) ? (k = b.w().j(), d = d.ad(c, h.j(), k), d = null != d ? h.j().Q(m).F(l, d) : h.j().Q(m)) : d = d.qc(m, b.w());f = null != d ? a.U.F(h.j(), m, d, l, e, f) : h.j();
                                    }
                        }return pe(b, f, h.da || c.e(), a.U.Na());
            }function ze(a, b, c, d, e, f, h, k) {
                        var m = b.w();h = h ? a.U : a.U.Ub();if (c.e()) d = h.ya(m.j(), d, null);else if (h.Na() && !m.Sb) d = m.j().F(c, d), d = h.ya(m.j(), d, null);else {
                                    var l = K(c);if (!me(m, c) && 1 < Ec(c)) return b;var u = N(c);d = m.j().Q(l).F(u, d);d = ".priority" == l ? h.fa(m.j(), d) : h.F(m.j(), l, d, u, te, null);
                        }m = m.da || c.e();b = new oe(b.N, new je(d, m, h.Na()));return De(a, b, c, e, new ue(e, b, f), k);
            }
            function ye(a, b, c, d, e, f, h) {
                        var k = b.N;e = new ue(e, b, f);if (c.e()) h = a.U.ya(b.N.j(), d, h), a = pe(b, h, !0, a.U.Na());else if (f = K(c), ".priority" === f) h = a.U.fa(b.N.j(), d), a = pe(b, h, k.da, k.Sb);else {
                                    c = N(c);var m = k.j().Q(f);if (!c.e()) {
                                                var l = e.Te(f);d = null != l ? ".priority" === Oc(c) && l.P(c.parent()).e() ? l : l.F(c, d) : L;
                                    }m.Z(d) ? a = b : (h = a.U.F(k.j(), f, d, c, e, h), a = pe(b, h, k.da, a.U.Na()));
                        }return a;
            }
            function Ae(a, b, c, d, e, f, h) {
                        var k = b;Hd(d, function (d, l) {
                                    var u = c.n(d);ne(b.N, K(u)) && (k = ye(a, k, u, l, e, f, h));
                        });Hd(d, function (d, l) {
                                    var u = c.n(d);ne(b.N, K(u)) || (k = ye(a, k, u, l, e, f, h));
                        });return k;
            }function Fe(a, b) {
                        Hd(b, function (b, d) {
                                    a = a.F(b, d);
                        });return a;
            }
            function Be(a, b, c, d, e, f, h, k) {
                        if (b.w().j().e() && !ke(b.w())) return b;var m = b;c = c.e() ? d : Ad(R, c, d);var l = b.w().j();c.children.ha(function (c, d) {
                                    if (l.Da(c)) {
                                                var F = b.w().j().Q(c),
                                                    F = Fe(F, d);m = ze(a, m, new E(c), F, e, f, h, k);
                                    }
                        });c.children.ha(function (c, d) {
                                    var F = !ne(b.w(), c) && null == d.value;l.Da(c) || F || (F = b.w().j().Q(c), F = Fe(F, d), m = ze(a, m, new E(c), F, e, f, h, k));
                        });return m;
            }
            function Ce(a, b, c, d, e, f, h) {
                        if (null != e.lc(c)) return b;var k = le(b.w()),
                            m = b.w();if (null != d.value) {
                                    if (c.e() && m.da || me(m, c)) return ze(a, b, c, m.j().P(c), e, f, k, h);if (c.e()) {
                                                var l = R;m.j().O(tc, function (a, b) {
                                                            l = l.set(new E(a), b);
                                                });return Be(a, b, c, l, e, f, k, h);
                                    }return b;
                        }l = R;Hd(d, function (a) {
                                    var b = c.n(a);me(m, b) && (l = l.set(a, m.j().P(b)));
                        });return Be(a, b, c, l, e, f, k, h);
            };function Ge(a) {
                        this.V = a;this.g = a.m.g;
            }function He(a, b, c, d) {
                        var e = [],
                            f = [];ya(b, function (b) {
                                    b.type === Ie && a.g.nd(b.qe, b.Ja) && f.push(new S(Je, b.Ja, b.Xa));
                        });Ke(a, e, Le, b, d, c);Ke(a, e, Me, b, d, c);Ke(a, e, Je, f, d, c);Ke(a, e, Ie, b, d, c);Ke(a, e, Ne, b, d, c);return e;
            }function Ke(a, b, c, d, e, f) {
                        d = za(d, function (a) {
                                    return a.type === c;
                        });Ha(d, q(a.Ff, a));ya(d, function (c) {
                                    var d = Oe(a, c, f);ya(e, function (e) {
                                                e.nf(c.type) && b.push(e.createEvent(d, a.V));
                                    });
                        });
            }
            function Oe(a, b, c) {
                        "value" !== b.type && "child_removed" !== b.type && (b.Dd = c.Ve(b.Xa, b.Ja, a.g));return b;
            }Ge.prototype.Ff = function (a, b) {
                        if (null == a.Xa || null == b.Xa) throw Mb("Should only compare child_ events.");return this.g.compare(new C(a.Xa, a.Ja), new C(b.Xa, b.Ja));
            };function Pe(a, b) {
                        this.V = a;var c = a.m,
                            d = new Qe(c.g),
                            c = T(c) ? new Qe(c.g) : c.xa ? new Re(c) : new Se(c);this.hf = new we(c);var e = b.w(),
                            f = b.N,
                            h = d.ya(L, e.j(), null),
                            k = c.ya(L, f.j(), null);this.Ka = new oe(new je(k, f.da, c.Na()), new je(h, e.da, d.Na()));this.Za = [];this.Jf = new Ge(a);
            }function Te(a) {
                        return a.V;
            }g = Pe.prototype;g.w = function () {
                        return this.Ka.w().j();
            };g.hb = function (a) {
                        var b = re(this.Ka);return b && (T(this.V.m) || !a.e() && !b.Q(K(a)).e()) ? b.P(a) : null;
            };g.e = function () {
                        return 0 === this.Za.length;
            };g.Nb = function (a) {
                        this.Za.push(a);
            };
            g.kb = function (a, b) {
                        var c = [];if (b) {
                                    D(null == a, "A cancel should cancel all event registrations.");var d = this.V.path;ya(this.Za, function (a) {
                                                (a = a.Me(b, d)) && c.push(a);
                                    });
                        }if (a) {
                                    for (var e = [], f = 0; f < this.Za.length; ++f) {
                                                var h = this.Za[f];if (!h.matches(a)) e.push(h);else if (a.Xe()) {
                                                            e = e.concat(this.Za.slice(f + 1));break;
                                                }
                                    }this.Za = e;
                        } else this.Za = [];return c;
            };
            g.eb = function (a, b, c) {
                        a.type === be && null !== a.source.Hb && (D(re(this.Ka), "We should always have a full cache before handling merges"), D(qe(this.Ka), "Missing event cache, even though we have a server cache"));var d = this.Ka;a = this.hf.eb(d, a, b, c);b = this.hf;c = a.Sd;D(c.N.j().yc(b.U.g), "Event snap not indexed");D(c.w().j().yc(b.U.g), "Server snap not indexed");D(ke(a.Sd.w()) || !ke(d.w()), "Once a server snap is complete, it should never go back");this.Ka = a.Sd;return Ue(this, a.Df, a.Sd.N.j(), null);
            };
            function Ve(a, b) {
                        var c = a.Ka.N,
                            d = [];c.j().J() || c.j().O(H, function (a, b) {
                                    d.push(new S(Me, b, a));
                        });c.da && d.push(Ee(c.j()));return Ue(a, d, c.j(), b);
            }function Ue(a, b, c, d) {
                        return He(a.Jf, b, c, d ? [d] : a.Za);
            };function We(a, b, c, d) {
                        this.ae = b;this.Md = c;this.Dd = d;this.hd = a;
            }We.prototype.Yb = function () {
                        var a = this.Md.wb();return "value" === this.hd ? a.path : a.getParent().path;
            };We.prototype.ge = function () {
                        return this.hd;
            };We.prototype.Tb = function () {
                        return this.ae.Tb(this);
            };We.prototype.toString = function () {
                        return this.Yb().toString() + ":" + this.hd + ":" + x(this.Md.be());
            };function Xe(a, b, c) {
                        this.ae = a;this.error = b;this.path = c;
            }Xe.prototype.Yb = function () {
                        return this.path;
            };Xe.prototype.ge = function () {
                        return "cancel";
            };
            Xe.prototype.Tb = function () {
                        return this.ae.Tb(this);
            };Xe.prototype.toString = function () {
                        return this.path.toString() + ":cancel";
            };function Ye() {
                        this.vb = [];
            }function Ze(a, b) {
                        for (var c = null, d = 0; d < b.length; d++) {
                                    var e = b[d],
                                        f = e.Yb();null === c || f.Z(c.Yb()) || (a.vb.push(c), c = null);null === c && (c = new $e(f));c.add(e);
                        }c && a.vb.push(c);
            }function af(a, b, c) {
                        Ze(a, c);bf(a, function (a) {
                                    return a.Z(b);
                        });
            }function cf(a, b, c) {
                        Ze(a, c);bf(a, function (a) {
                                    return a.contains(b) || b.contains(a);
                        });
            }
            function bf(a, b) {
                        for (var c = !0, d = 0; d < a.vb.length; d++) {
                                    var e = a.vb[d];if (e) if (e = e.Yb(), b(e)) {
                                                for (var e = a.vb[d], f = 0; f < e.jd.length; f++) {
                                                            var h = e.jd[f];if (null !== h) {
                                                                        e.jd[f] = null;var k = h.Tb();Qb && I("event: " + h.toString());fc(k);
                                                            }
                                                }a.vb[d] = null;
                                    } else c = !1;
                        }c && (a.vb = []);
            }function $e(a) {
                        this.qa = a;this.jd = [];
            }$e.prototype.add = function (a) {
                        this.jd.push(a);
            };$e.prototype.Yb = function () {
                        return this.qa;
            };function Qe(a) {
                        this.g = a;
            }g = Qe.prototype;g.F = function (a, b, c, d, e, f) {
                        D(a.yc(this.g), "A node must be indexed if only a child is updated");e = a.Q(b);if (e.P(d).Z(c.P(d)) && e.e() == c.e()) return a;null != f && (c.e() ? a.Da(b) ? df(f, new S(Le, e, b)) : D(a.J(), "A child remove without an old child only makes sense on a leaf node") : e.e() ? df(f, new S(Me, c, b)) : df(f, new S(Ie, c, b, e)));return a.J() && c.e() ? a : a.T(b, c).nb(this.g);
            };
            g.ya = function (a, b, c) {
                        null != c && (a.J() || a.O(H, function (a, e) {
                                    b.Da(a) || df(c, new S(Le, e, a));
                        }), b.J() || b.O(H, function (b, e) {
                                    if (a.Da(b)) {
                                                var f = a.Q(b);f.Z(e) || df(c, new S(Ie, e, b, f));
                                    } else df(c, new S(Me, e, b));
                        }));return b.nb(this.g);
            };g.fa = function (a, b) {
                        return a.e() ? L : a.fa(b);
            };g.Na = function () {
                        return !1;
            };g.Ub = function () {
                        return this;
            };function Se(a) {
                        this.he = new Qe(a.g);this.g = a.g;var b;a.ka ? (b = ef(a), b = a.g.Ec(ff(a), b)) : b = a.g.Hc();this.Uc = b;a.na ? (b = gf(a), a = a.g.Ec(hf(a), b)) : a = a.g.Fc();this.vc = a;
            }g = Se.prototype;g.matches = function (a) {
                        return 0 >= this.g.compare(this.Uc, a) && 0 >= this.g.compare(a, this.vc);
            };g.F = function (a, b, c, d, e, f) {
                        this.matches(new C(b, c)) || (c = L);return this.he.F(a, b, c, d, e, f);
            };
            g.ya = function (a, b, c) {
                        b.J() && (b = L);var d = b.nb(this.g),
                            d = d.fa(L),
                            e = this;b.O(H, function (a, b) {
                                    e.matches(new C(a, b)) || (d = d.T(a, L));
                        });return this.he.ya(a, d, c);
            };g.fa = function (a) {
                        return a;
            };g.Na = function () {
                        return !0;
            };g.Ub = function () {
                        return this.he;
            };function Re(a) {
                        this.sa = new Se(a);this.g = a.g;D(a.xa, "Only valid if limit has been set");this.oa = a.oa;this.Ib = !jf(a);
            }g = Re.prototype;g.F = function (a, b, c, d, e, f) {
                        this.sa.matches(new C(b, c)) || (c = L);return a.Q(b).Z(c) ? a : a.Eb() < this.oa ? this.sa.Ub().F(a, b, c, d, e, f) : kf(this, a, b, c, e, f);
            };
            g.ya = function (a, b, c) {
                        var d;if (b.J() || b.e()) d = L.nb(this.g);else if (2 * this.oa < b.Eb() && b.yc(this.g)) {
                                    d = L.nb(this.g);b = this.Ib ? b.Zb(this.sa.vc, this.g) : b.Xb(this.sa.Uc, this.g);for (var e = 0; 0 < b.Pa.length && e < this.oa;) {
                                                var f = M(b),
                                                    h;if (h = this.Ib ? 0 >= this.g.compare(this.sa.Uc, f) : 0 >= this.g.compare(f, this.sa.vc)) d = d.T(f.name, f.R), e++;else break;
                                    }
                        } else {
                                    d = b.nb(this.g);d = d.fa(L);var k, m, l;if (this.Ib) {
                                                b = d.We(this.g);k = this.sa.vc;m = this.sa.Uc;var u = nc(this.g);l = function l(a, b) {
                                                            return u(b, a);
                                                };
                                    } else b = d.Wb(this.g), k = this.sa.Uc, m = this.sa.vc, l = nc(this.g);for (var e = 0, z = !1; 0 < b.Pa.length;) {
                                                f = M(b), !z && 0 >= l(k, f) && (z = !0), (h = z && e < this.oa && 0 >= l(f, m)) ? e++ : d = d.T(f.name, L);
                                    }
                        }return this.sa.Ub().ya(a, d, c);
            };g.fa = function (a) {
                        return a;
            };g.Na = function () {
                        return !0;
            };g.Ub = function () {
                        return this.sa.Ub();
            };
            function kf(a, b, c, d, e, f) {
                        var h;if (a.Ib) {
                                    var k = nc(a.g);h = function h(a, b) {
                                                return k(b, a);
                                    };
                        } else h = nc(a.g);D(b.Eb() == a.oa, "");var m = new C(c, d),
                            l = a.Ib ? pd(b, a.g) : qd(b, a.g),
                            u = a.sa.matches(m);if (b.Da(c)) {
                                    for (var z = b.Q(c), l = e.fe(a.g, l, a.Ib); null != l && (l.name == c || b.Da(l.name));) {
                                                l = e.fe(a.g, l, a.Ib);
                                    }e = null == l ? 1 : h(l, m);if (u && !d.e() && 0 <= e) return null != f && df(f, new S(Ie, d, c, z)), b.T(c, d);null != f && df(f, new S(Le, z, c));b = b.T(c, L);return null != l && a.sa.matches(l) ? (null != f && df(f, new S(Me, l.R, l.name)), b.T(l.name, l.R)) : b;
                        }return d.e() ? b : u && 0 <= h(l, m) ? (null != f && (df(f, new S(Le, l.R, l.name)), df(f, new S(Me, d, c))), b.T(c, d).T(l.name, L)) : b;
            };function S(a, b, c, d) {
                        this.type = a;this.Ja = b;this.Xa = c;this.qe = d;this.Dd = void 0;
            }function Ee(a) {
                        return new S(Ne, a);
            }var Me = "child_added",
                Le = "child_removed",
                Ie = "child_changed",
                Je = "child_moved",
                Ne = "value";function xe() {
                        this.fb = {};
            }
            function df(a, b) {
                        var c = b.type,
                            d = b.Xa;D(c == Me || c == Ie || c == Le, "Only child changes supported for tracking");D(".priority" !== d, "Only non-priority child changes can be tracked.");var e = w(a.fb, d);if (e) {
                                    var f = e.type;if (c == Me && f == Le) a.fb[d] = new S(Ie, b.Ja, d, e.Ja);else if (c == Le && f == Me) delete a.fb[d];else if (c == Le && f == Ie) a.fb[d] = new S(Le, e.qe, d);else if (c == Ie && f == Me) a.fb[d] = new S(Me, b.Ja, d);else if (c == Ie && f == Ie) a.fb[d] = new S(Ie, b.Ja, d, e.qe);else throw Mb("Illegal combination of changes: " + b + " occurred after " + e);
                        } else a.fb[d] = b;
            };function lf() {
                        this.Rb = this.na = this.Kb = this.ka = this.xa = !1;this.oa = 0;this.mb = "";this.dc = null;this.zb = "";this.ac = null;this.xb = "";this.g = H;
            }var mf = new lf();function jf(a) {
                        return "" === a.mb ? a.ka : "l" === a.mb;
            }function ff(a) {
                        D(a.ka, "Only valid if start has been set");return a.dc;
            }function ef(a) {
                        D(a.ka, "Only valid if start has been set");return a.Kb ? a.zb : "[MIN_NAME]";
            }function hf(a) {
                        D(a.na, "Only valid if end has been set");return a.ac;
            }
            function gf(a) {
                        D(a.na, "Only valid if end has been set");return a.Rb ? a.xb : "[MAX_NAME]";
            }function nf(a) {
                        var b = new lf();b.xa = a.xa;b.oa = a.oa;b.ka = a.ka;b.dc = a.dc;b.Kb = a.Kb;b.zb = a.zb;b.na = a.na;b.ac = a.ac;b.Rb = a.Rb;b.xb = a.xb;b.g = a.g;b.mb = a.mb;return b;
            }g = lf.prototype;g.ne = function (a) {
                        var b = nf(this);b.xa = !0;b.oa = a;b.mb = "l";return b;
            };g.oe = function (a) {
                        var b = nf(this);b.xa = !0;b.oa = a;b.mb = "r";return b;
            };g.Nd = function (a, b) {
                        var c = nf(this);c.ka = !0;n(a) || (a = null);c.dc = a;null != b ? (c.Kb = !0, c.zb = b) : (c.Kb = !1, c.zb = "");return c;
            };
            g.gd = function (a, b) {
                        var c = nf(this);c.na = !0;n(a) || (a = null);c.ac = a;n(b) ? (c.Rb = !0, c.xb = b) : (c.vg = !1, c.xb = "");return c;
            };function of(a, b) {
                        var c = nf(a);c.g = b;return c;
            }function pf(a) {
                        var b = {};a.ka && (b.sp = a.dc, a.Kb && (b.sn = a.zb));a.na && (b.ep = a.ac, a.Rb && (b.en = a.xb));if (a.xa) {
                                    b.l = a.oa;var c = a.mb;"" === c && (c = jf(a) ? "l" : "r");b.vf = c;
                        }a.g !== H && (b.i = a.g.toString());return b;
            }function T(a) {
                        return !(a.ka || a.na || a.xa);
            }function qf(a) {
                        return T(a) && a.g == H;
            }
            function rf(a) {
                        var b = {};if (qf(a)) return b;var c;a.g === H ? c = "$priority" : a.g === wc ? c = "$value" : a.g === tc ? c = "$key" : (D(a.g instanceof pc, "Unrecognized index type!"), c = a.g.toString());b.orderBy = x(c);a.ka && (b.startAt = x(a.dc), a.Kb && (b.startAt += "," + x(a.zb)));a.na && (b.endAt = x(a.ac), a.Rb && (b.endAt += "," + x(a.xb)));a.xa && (jf(a) ? b.limitToFirst = a.oa : b.limitToLast = a.oa);return b;
            }g.toString = function () {
                        return x(pf(this));
            };function sf(a) {
                        this.W = a;
            }var tf = new sf(new vd(null));function uf(a, b, c) {
                        if (b.e()) return new sf(new vd(c));var d = zd(a.W, b);if (null != d) {
                                    var e = d.path,
                                        d = d.value;b = P(e, b);d = d.F(b, c);return new sf(a.W.set(e, d));
                        }a = Ad(a.W, b, new vd(c));return new sf(a);
            }function vf(a, b, c) {
                        var d = a;fb(c, function (a, c) {
                                    d = uf(d, b.n(a), c);
                        });return d;
            }sf.prototype.Ed = function (a) {
                        if (a.e()) return tf;a = Ad(this.W, a, R);return new sf(a);
            };function wf(a, b) {
                        var c = zd(a.W, b);return null != c ? a.W.get(c.path).P(P(c.path, b)) : null;
            }
            function xf(a) {
                        var b = [],
                            c = a.W.value;null != c ? c.J() || c.O(H, function (a, c) {
                                    b.push(new C(a, c));
                        }) : a.W.children.ha(function (a, c) {
                                    null != c.value && b.push(new C(a, c.value));
                        });return b;
            }function yf(a, b) {
                        if (b.e()) return a;var c = wf(a, b);return null != c ? new sf(new vd(c)) : new sf(a.W.subtree(b));
            }sf.prototype.e = function () {
                        return this.W.e();
            };sf.prototype.apply = function (a) {
                        return zf(Q, this.W, a);
            };
            function zf(a, b, c) {
                        if (null != b.value) return c.F(a, b.value);var d = null;b.children.ha(function (b, f) {
                                    ".priority" === b ? (D(null !== f.value, "Priority writes must always be leaf nodes"), d = f.value) : c = zf(a.n(b), f, c);
                        });c.P(a).e() || null === d || (c = c.F(a.n(".priority"), d));return c;
            };function Af() {
                        this.Jd = L;
            }Af.prototype.j = function (a) {
                        return this.Jd.P(a);
            };Af.prototype.toString = function () {
                        return this.Jd.toString();
            };function Bf(a) {
                        this.oc = a;
            }Bf.prototype.getToken = function (a) {
                        return this.oc.INTERNAL.getToken(a).then(null, function (a) {
                                    return a && "auth/token-not-initialized" === a.code ? (I("Got auth/token-not-initialized error.  Treating as null token."), null) : Promise.reject(a);
                        });
            };function Cf(a, b) {
                        a.oc.INTERNAL.addAuthTokenListener(b);
            };function Df() {
                        this.S = tf;this.la = [];this.Bc = -1;
            }function Ef(a, b) {
                        for (var c = 0; c < a.la.length; c++) {
                                    var d = a.la[c];if (d.Zc === b) return d;
                        }return null;
            }g = Df.prototype;
            g.Ed = function (a) {
                        var b = Ea(this.la, function (b) {
                                    return b.Zc === a;
                        });D(0 <= b, "removeWrite called with nonexistent writeId.");var c = this.la[b];this.la.splice(b, 1);for (var d = c.visible, e = !1, f = this.la.length - 1; d && 0 <= f;) {
                                    var h = this.la[f];h.visible && (f >= b && Ff(h, c.path) ? d = !1 : c.path.contains(h.path) && (e = !0));f--;
                        }if (d) {
                                    if (e) this.S = Gf(this.la, Hf, Q), this.Bc = 0 < this.la.length ? this.la[this.la.length - 1].Zc : -1;else if (c.Ga) this.S = this.S.Ed(c.path);else {
                                                var k = this;v(c.children, function (a, b) {
                                                            k.S = k.S.Ed(c.path.n(b));
                                                });
                                    }return !0;
                        }return !1;
            };
            g.Aa = function (a, b, c, d) {
                        if (c || d) {
                                    var e = yf(this.S, a);return !d && e.e() ? b : d || null != b || null != wf(e, Q) ? (e = Gf(this.la, function (b) {
                                                return (b.visible || d) && (!c || !(0 <= xa(c, b.Zc))) && (b.path.contains(a) || a.contains(b.path));
                                    }, a), b = b || L, e.apply(b)) : null;
                        }e = wf(this.S, a);if (null != e) return e;e = yf(this.S, a);return e.e() ? b : null != b || null != wf(e, Q) ? (b = b || L, e.apply(b)) : null;
            };
            g.rc = function (a, b) {
                        var c = L,
                            d = wf(this.S, a);if (d) d.J() || d.O(H, function (a, b) {
                                    c = c.T(a, b);
                        });else if (b) {
                                    var e = yf(this.S, a);b.O(H, function (a, b) {
                                                var d = yf(e, new E(a)).apply(b);c = c.T(a, d);
                                    });ya(xf(e), function (a) {
                                                c = c.T(a.name, a.R);
                                    });
                        } else e = yf(this.S, a), ya(xf(e), function (a) {
                                    c = c.T(a.name, a.R);
                        });return c;
            };g.ad = function (a, b, c, d) {
                        D(c || d, "Either existingEventSnap or existingServerSnap must exist");a = a.n(b);if (null != wf(this.S, a)) return null;a = yf(this.S, a);return a.e() ? d.P(b) : a.apply(d.P(b));
            };
            g.qc = function (a, b, c) {
                        a = a.n(b);var d = wf(this.S, a);return null != d ? d : ne(c, b) ? yf(this.S, a).apply(c.j().Q(b)) : null;
            };g.lc = function (a) {
                        return wf(this.S, a);
            };g.Xd = function (a, b, c, d, e, f) {
                        var h;a = yf(this.S, a);h = wf(a, Q);if (null == h) if (null != b) h = a.apply(b);else return [];h = h.nb(f);if (h.e() || h.J()) return [];b = [];a = nc(f);e = e ? h.Zb(c, f) : h.Xb(c, f);for (f = M(e); f && b.length < d;) {
                                    0 !== a(f, c) && b.push(f), f = M(e);
                        }return b;
            };
            function Ff(a, b) {
                        return a.Ga ? a.path.contains(b) : !!Qa(a.children, function (c, d) {
                                    return a.path.n(d).contains(b);
                        });
            }function Hf(a) {
                        return a.visible;
            }
            function Gf(a, b, c) {
                        for (var d = tf, e = 0; e < a.length; ++e) {
                                    var f = a[e];if (b(f)) {
                                                var h = f.path;if (f.Ga) c.contains(h) ? (h = P(c, h), d = uf(d, h, f.Ga)) : h.contains(c) && (h = P(h, c), d = uf(d, Q, f.Ga.P(h)));else if (f.children) {
                                                            if (c.contains(h)) h = P(c, h), d = vf(d, h, f.children);else {
                                                                        if (h.contains(c)) if (h = P(h, c), h.e()) d = vf(d, Q, f.children);else if (f = w(f.children, K(h))) f = f.P(N(h)), d = uf(d, Q, f);
                                                            }
                                                } else throw Mb("WriteRecord should have .snap or .children");
                                    }
                        }return d;
            }function If(a, b) {
                        this.Lb = a;this.W = b;
            }g = If.prototype;
            g.Aa = function (a, b, c) {
                        return this.W.Aa(this.Lb, a, b, c);
            };g.rc = function (a) {
                        return this.W.rc(this.Lb, a);
            };g.ad = function (a, b, c) {
                        return this.W.ad(this.Lb, a, b, c);
            };g.lc = function (a) {
                        return this.W.lc(this.Lb.n(a));
            };g.Xd = function (a, b, c, d, e) {
                        return this.W.Xd(this.Lb, a, b, c, d, e);
            };g.qc = function (a, b) {
                        return this.W.qc(this.Lb, a, b);
            };g.n = function (a) {
                        return new If(this.Lb.n(a), this.W);
            };function Jf(a, b) {
                        this.rf = {};this.Vc = new Kf(a);this.va = b;var c = 1E4 + 2E4 * Math.random();hc(q(this.lf, this), Math.floor(c));
            }Jf.prototype.lf = function () {
                        var a = this.Vc.get(),
                            b = {},
                            c = !1,
                            d;for (d in a) {
                                    0 < a[d] && eb(this.rf, d) && (b[d] = a[d], c = !0);
                        }c && this.va.ye(b);hc(q(this.lf, this), Math.floor(6E5 * Math.random()));
            };function Lf() {
                        this.tc = {};
            }function Mf(a, b, c) {
                        n(c) || (c = 1);eb(a.tc, b) || (a.tc[b] = 0);a.tc[b] += c;
            }Lf.prototype.get = function () {
                        return Ta(this.tc);
            };function Kf(a) {
                        this.Ef = a;this.rd = null;
            }Kf.prototype.get = function () {
                        var a = this.Ef.get(),
                            b = Ta(a);if (this.rd) for (var c in this.rd) {
                                    b[c] -= this.rd[c];
                        }this.rd = a;return b;
            };var Nf = {},
                Of = {};function Pf(a) {
                        a = a.toString();Nf[a] || (Nf[a] = new Lf());return Nf[a];
            }function Qf(a, b) {
                        var c = a.toString();Of[c] || (Of[c] = b());return Of[c];
            };function Rf(a, b, c) {
                        this.f = Tb("p:rest:");this.L = a;this.Gb = b;this.$c = c;this.$ = {};
            }function Sf(a, b) {
                        if (n(b)) return "tag$" + b;D(qf(a.m), "should have a tag if it's not a default query.");return a.path.toString();
            }g = Rf.prototype;
            g.$e = function (a, b, c, d) {
                        var e = a.path.toString();this.f("Listen called for " + e + " " + a.ja());var f = Sf(a, c),
                            h = {};this.$[f] = h;a = rf(a.m);var k = this;Tf(this, e + ".json", a, function (a, b) {
                                    var u = b;404 === a && (a = u = null);null === a && k.Gb(e, u, !1, c);w(k.$, f) === h && d(a ? 401 == a ? "permission_denied" : "rest_error:" + a : "ok", null);
                        });
            };g.uf = function (a, b) {
                        var c = Sf(a, b);delete this.$[c];
            };g.kf = function () {};g.re = function () {};g.cf = function () {};g.xd = function () {};g.put = function () {};g.af = function () {};g.ye = function () {};
            function Tf(a, b, c, d) {
                        c = c || {};c.format = "export";a.$c.getToken(!1).then(function (e) {
                                    (e = e && e.accessToken) && (c.auth = e);var f = (a.L.Sc ? "https://" : "http://") + a.L.host + b + "?" + gb(c);a.f("Sending REST request for " + f);var h = new XMLHttpRequest();h.onreadystatechange = function () {
                                                if (d && 4 === h.readyState) {
                                                            a.f("REST Response for " + f + " received. status:", h.status, "response:", h.responseText);var b = null;if (200 <= h.status && 300 > h.status) {
                                                                        try {
                                                                                    b = lb(h.responseText);
                                                                        } catch (c) {
                                                                                    J("Failed to parse JSON response for " + f + ": " + h.responseText);
                                                                        }d(null, b);
                                                            } else 401 !== h.status && 404 !== h.status && J("Got unsuccessful REST response for " + f + " Status: " + h.status), d(h.status);d = null;
                                                }
                                    };h.open("GET", f, !0);h.send();
                        });
            };function Uf(a) {
                        this.te = a;this.Bd = [];this.Qb = 0;this.Yd = -1;this.Fb = null;
            }function Vf(a, b, c) {
                        a.Yd = b;a.Fb = c;a.Yd < a.Qb && (a.Fb(), a.Fb = null);
            }function Wf(a, b, c) {
                        for (a.Bd[b] = c; a.Bd[a.Qb];) {
                                    var d = a.Bd[a.Qb];delete a.Bd[a.Qb];for (var e = 0; e < d.length; ++e) {
                                                if (d[e]) {
                                                            var f = a;fc(function () {
                                                                        f.te(d[e]);
                                                            });
                                                }
                                    }if (a.Qb === a.Yd) {
                                                a.Fb && (clearTimeout(a.Fb), a.Fb(), a.Fb = null);break;
                                    }a.Qb++;
                        }
            };var Cb = "websocket",
                Db = "long_polling";var Xf = null;"undefined" !== typeof MozWebSocket ? Xf = MozWebSocket : "undefined" !== typeof WebSocket && (Xf = WebSocket);function Yf(a, b, c, d) {
                        this.Zd = a;this.f = Tb(this.Zd);this.frames = this.zc = null;this.pb = this.qb = this.Fe = 0;this.Va = Pf(b);a = { v: "5" };"undefined" !== typeof location && location.href && -1 !== location.href.indexOf("firebaseio.com") && (a.r = "f");c && (a.s = c);d && (a.ls = d);this.Ke = Bb(b, Cb, a);
            }var Zf;
            Yf.prototype.open = function (a, b) {
                        this.ib = b;this.Xf = a;this.f("Websocket connecting to " + this.Ke);this.wc = !1;xb.set("previous_websocket_failure", !0);try {
                                    this.Ia = new Xf(this.Ke);
                        } catch (c) {
                                    this.f("Error instantiating WebSocket.");var d = c.message || c.data;d && this.f(d);this.bb();return;
                        }var e = this;this.Ia.onopen = function () {
                                    e.f("Websocket connected.");e.wc = !0;
                        };this.Ia.onclose = function () {
                                    e.f("Websocket connection was disconnected.");e.Ia = null;e.bb();
                        };this.Ia.onmessage = function (a) {
                                    if (null !== e.Ia) if (a = a.data, e.pb += a.length, Mf(e.Va, "bytes_received", a.length), $f(e), null !== e.frames) ag(e, a);else {
                                                a: {
                                                            D(null === e.frames, "We already have a frame buffer");if (6 >= a.length) {
                                                                        var b = Number(a);if (!isNaN(b)) {
                                                                                    e.Fe = b;e.frames = [];a = null;break a;
                                                                        }
                                                            }e.Fe = 1;e.frames = [];
                                                }null !== a && ag(e, a);
                                    }
                        };this.Ia.onerror = function (a) {
                                    e.f("WebSocket error.  Closing connection.");(a = a.message || a.data) && e.f(a);e.bb();
                        };
            };Yf.prototype.start = function () {};
            Yf.isAvailable = function () {
                        var a = !1;if ("undefined" !== typeof navigator && navigator.userAgent) {
                                    var b = navigator.userAgent.match(/Android ([0-9]{0,}\.[0-9]{0,})/);b && 1 < b.length && 4.4 > parseFloat(b[1]) && (a = !0);
                        }return !a && null !== Xf && !Zf;
            };Yf.responsesRequiredToBeHealthy = 2;Yf.healthyTimeout = 3E4;g = Yf.prototype;g.sd = function () {
                        xb.remove("previous_websocket_failure");
            };function ag(a, b) {
                        a.frames.push(b);if (a.frames.length == a.Fe) {
                                    var c = a.frames.join("");a.frames = null;c = lb(c);a.Xf(c);
                        }
            }
            g.send = function (a) {
                        $f(this);a = x(a);this.qb += a.length;Mf(this.Va, "bytes_sent", a.length);a = bc(a, 16384);1 < a.length && bg(this, String(a.length));for (var b = 0; b < a.length; b++) {
                                    bg(this, a[b]);
                        }
            };g.Tc = function () {
                        this.Ab = !0;this.zc && (clearInterval(this.zc), this.zc = null);this.Ia && (this.Ia.close(), this.Ia = null);
            };g.bb = function () {
                        this.Ab || (this.f("WebSocket is closing itself"), this.Tc(), this.ib && (this.ib(this.wc), this.ib = null));
            };g.close = function () {
                        this.Ab || (this.f("WebSocket is being closed"), this.Tc());
            };
            function $f(a) {
                        clearInterval(a.zc);a.zc = setInterval(function () {
                                    a.Ia && bg(a, "0");$f(a);
                        }, Math.floor(45E3));
            }function bg(a, b) {
                        try {
                                    a.Ia.send(b);
                        } catch (c) {
                                    a.f("Exception thrown from WebSocket.send():", c.message || c.data, "Closing connection."), setTimeout(q(a.bb, a), 0);
                        }
            };function cg(a, b, c, d) {
                        this.Zd = a;this.f = Tb(a);this.jc = b;this.pb = this.qb = 0;this.Va = Pf(b);this.tf = c;this.wc = !1;this.Cb = d;this.Yc = function (a) {
                                    return Bb(b, Db, a);
                        };
            }var dg, eg;
            cg.prototype.open = function (a, b) {
                        this.Ne = 0;this.ia = b;this.bf = new Uf(a);this.Ab = !1;var c = this;this.sb = setTimeout(function () {
                                    c.f("Timed out trying to connect.");c.bb();c.sb = null;
                        }, Math.floor(3E4));Yb(function () {
                                    if (!c.Ab) {
                                                c.Ta = new fg(function (a, b, d, k, m) {
                                                            gg(c, arguments);if (c.Ta) if (c.sb && (clearTimeout(c.sb), c.sb = null), c.wc = !0, "start" == a) c.id = b, c.ff = d;else if ("close" === a) b ? (c.Ta.Kd = !1, Vf(c.bf, b, function () {
                                                                        c.bb();
                                                            })) : c.bb();else throw Error("Unrecognized command received: " + a);
                                                }, function (a, b) {
                                                            gg(c, arguments);
                                                            Wf(c.bf, a, b);
                                                }, function () {
                                                            c.bb();
                                                }, c.Yc);var a = { start: "t" };a.ser = Math.floor(1E8 * Math.random());c.Ta.Qd && (a.cb = c.Ta.Qd);a.v = "5";c.tf && (a.s = c.tf);c.Cb && (a.ls = c.Cb);"undefined" !== typeof location && location.href && -1 !== location.href.indexOf("firebaseio.com") && (a.r = "f");a = c.Yc(a);c.f("Connecting via long-poll to " + a);hg(c.Ta, a, function () {});
                                    }
                        });
            };
            cg.prototype.start = function () {
                        var a = this.Ta,
                            b = this.ff;a.Vf = this.id;a.Wf = b;for (a.Ud = !0; ig(a);) {}a = this.id;b = this.ff;this.fc = document.createElement("iframe");var c = { dframe: "t" };c.id = a;c.pw = b;this.fc.src = this.Yc(c);this.fc.style.display = "none";document.body.appendChild(this.fc);
            };
            cg.isAvailable = function () {
                        return dg || !eg && "undefined" !== typeof document && null != document.createElement && !("object" === typeof window && window.chrome && window.chrome.extension && !/^chrome/.test(window.location.href)) && !("object" === typeof Windows && "object" === typeof Windows.rg) && !0;
            };g = cg.prototype;g.sd = function () {};g.Tc = function () {
                        this.Ab = !0;this.Ta && (this.Ta.close(), this.Ta = null);this.fc && (document.body.removeChild(this.fc), this.fc = null);this.sb && (clearTimeout(this.sb), this.sb = null);
            };
            g.bb = function () {
                        this.Ab || (this.f("Longpoll is closing itself"), this.Tc(), this.ia && (this.ia(this.wc), this.ia = null));
            };g.close = function () {
                        this.Ab || (this.f("Longpoll is being closed."), this.Tc());
            };g.send = function (a) {
                        a = x(a);this.qb += a.length;Mf(this.Va, "bytes_sent", a.length);a = mb(a);a = ab(a, !0);a = bc(a, 1840);for (var b = 0; b < a.length; b++) {
                                    var c = this.Ta;c.Qc.push({ jg: this.Ne, pg: a.length, Pe: a[b] });c.Ud && ig(c);this.Ne++;
                        }
            };function gg(a, b) {
                        var c = x(b).length;a.pb += c;Mf(a.Va, "bytes_received", c);
            }
            function fg(a, b, c, d) {
                        this.Yc = d;this.ib = c;this.ve = new Gc();this.Qc = [];this.$d = Math.floor(1E8 * Math.random());this.Kd = !0;this.Qd = Lb();window["pLPCommand" + this.Qd] = a;window["pRTLPCB" + this.Qd] = b;a = document.createElement("iframe");a.style.display = "none";if (document.body) {
                                    document.body.appendChild(a);try {
                                                a.contentWindow.document || I("No IE domain setting required");
                                    } catch (e) {
                                                a.src = "javascript:void((function(){document.open();document.domain='" + document.domain + "';document.close();})())";
                                    }
                        } else throw "Document body has not initialized. Wait to initialize Firebase until after the document is ready.";
                        a.contentDocument ? a.gb = a.contentDocument : a.contentWindow ? a.gb = a.contentWindow.document : a.document && (a.gb = a.document);this.Ea = a;a = "";this.Ea.src && "javascript:" === this.Ea.src.substr(0, 11) && (a = '<script>document.domain="' + document.domain + '";\x3c/script>');a = "<html><body>" + a + "</body></html>";try {
                                    this.Ea.gb.open(), this.Ea.gb.write(a), this.Ea.gb.close();
                        } catch (f) {
                                    I("frame writing exception"), f.stack && I(f.stack), I(f);
                        }
            }
            fg.prototype.close = function () {
                        this.Ud = !1;if (this.Ea) {
                                    this.Ea.gb.body.innerHTML = "";var a = this;setTimeout(function () {
                                                null !== a.Ea && (document.body.removeChild(a.Ea), a.Ea = null);
                                    }, Math.floor(0));
                        }var b = this.ib;b && (this.ib = null, b());
            };
            function ig(a) {
                        if (a.Ud && a.Kd && a.ve.count() < (0 < a.Qc.length ? 2 : 1)) {
                                    a.$d++;var b = {};b.id = a.Vf;b.pw = a.Wf;b.ser = a.$d;for (var b = a.Yc(b), c = "", d = 0; 0 < a.Qc.length;) {
                                                if (1870 >= a.Qc[0].Pe.length + 30 + c.length) {
                                                            var e = a.Qc.shift(),
                                                                c = c + "&seg" + d + "=" + e.jg + "&ts" + d + "=" + e.pg + "&d" + d + "=" + e.Pe;d++;
                                                } else break;
                                    }jg(a, b + c, a.$d);return !0;
                        }return !1;
            }function jg(a, b, c) {
                        function d() {
                                    a.ve.remove(c);ig(a);
                        }a.ve.add(c, 1);var e = setTimeout(d, Math.floor(25E3));hg(a, b, function () {
                                    clearTimeout(e);d();
                        });
            }
            function hg(a, b, c) {
                        setTimeout(function () {
                                    try {
                                                if (a.Kd) {
                                                            var d = a.Ea.gb.createElement("script");d.type = "text/javascript";d.async = !0;d.src = b;d.onload = d.onreadystatechange = function () {
                                                                        var a = d.readyState;a && "loaded" !== a && "complete" !== a || (d.onload = d.onreadystatechange = null, d.parentNode && d.parentNode.removeChild(d), c());
                                                            };d.onerror = function () {
                                                                        I("Long-poll script failed to load: " + b);a.Kd = !1;a.close();
                                                            };a.Ea.gb.body.appendChild(d);
                                                }
                                    } catch (e) {}
                        }, Math.floor(1));
            };function kg(a) {
                        lg(this, a);
            }var mg = [cg, Yf];function lg(a, b) {
                        var c = Yf && Yf.isAvailable(),
                            d = c && !(xb.Ze || !0 === xb.get("previous_websocket_failure"));b.qg && (c || J("wss:// URL used, but browser isn't known to support websockets.  Trying anyway."), d = !0);if (d) a.Wc = [Yf];else {
                                    var e = a.Wc = [];cc(mg, function (a, b) {
                                                b && b.isAvailable() && e.push(b);
                                    });
                        }
            }function ng(a) {
                        if (0 < a.Wc.length) return a.Wc[0];throw Error("No transports available");
            };function og(a, b, c, d, e, f, h) {
                        this.id = a;this.f = Tb("c:" + this.id + ":");this.te = c;this.Lc = d;this.ia = e;this.se = f;this.L = b;this.Ad = [];this.Le = 0;this.sf = new kg(b);this.Ua = 0;this.Cb = h;this.f("Connection created");pg(this);
            }
            function pg(a) {
                        var b = ng(a.sf);a.I = new b("c:" + a.id + ":" + a.Le++, a.L, void 0, a.Cb);a.xe = b.responsesRequiredToBeHealthy || 0;var c = qg(a, a.I),
                            d = rg(a, a.I);a.Xc = a.I;a.Rc = a.I;a.D = null;a.Bb = !1;setTimeout(function () {
                                    a.I && a.I.open(c, d);
                        }, Math.floor(0));b = b.healthyTimeout || 0;0 < b && (a.md = hc(function () {
                                    a.md = null;a.Bb || (a.I && 102400 < a.I.pb ? (a.f("Connection exceeded healthy timeout but has received " + a.I.pb + " bytes.  Marking connection healthy."), a.Bb = !0, a.I.sd()) : a.I && 10240 < a.I.qb ? a.f("Connection exceeded healthy timeout but has sent " + a.I.qb + " bytes.  Leaving connection alive.") : (a.f("Closing unhealthy connection after timeout."), a.close()));
                        }, Math.floor(b)));
            }function rg(a, b) {
                        return function (c) {
                                    b === a.I ? (a.I = null, c || 0 !== a.Ua ? 1 === a.Ua && a.f("Realtime connection lost.") : (a.f("Realtime connection failed."), "s-" === a.L.$a.substr(0, 2) && (xb.remove("host:" + a.L.host), a.L.$a = a.L.host)), a.close()) : b === a.D ? (a.f("Secondary connection lost."), c = a.D, a.D = null, a.Xc !== c && a.Rc !== c || a.close()) : a.f("closing an old connection");
                        };
            }
            function qg(a, b) {
                        return function (c) {
                                    if (2 != a.Ua) if (b === a.Rc) {
                                                var d = $b("t", c);c = $b("d", c);if ("c" == d) {
                                                            if (d = $b("t", c), "d" in c) if (c = c.d, "h" === d) {
                                                                        var d = c.ts,
                                                                            e = c.v,
                                                                            f = c.h;a.qf = c.s;Ab(a.L, f);0 == a.Ua && (a.I.start(), sg(a, a.I, d), "5" !== e && J("Protocol version mismatch detected"), c = a.sf, (c = 1 < c.Wc.length ? c.Wc[1] : null) && tg(a, c));
                                                            } else if ("n" === d) {
                                                                        a.f("recvd end transmission on primary");a.Rc = a.D;for (c = 0; c < a.Ad.length; ++c) {
                                                                                    a.wd(a.Ad[c]);
                                                                        }a.Ad = [];ug(a);
                                                            } else "s" === d ? (a.f("Connection shutdown command received. Shutting down..."), a.se && (a.se(c), a.se = null), a.ia = null, a.close()) : "r" === d ? (a.f("Reset packet received.  New host: " + c), Ab(a.L, c), 1 === a.Ua ? a.close() : (vg(a), pg(a))) : "e" === d ? Ub("Server Error: " + c) : "o" === d ? (a.f("got pong on primary."), wg(a), xg(a)) : Ub("Unknown control packet command: " + d);
                                                } else "d" == d && a.wd(c);
                                    } else if (b === a.D) {
                                                if (d = $b("t", c), c = $b("d", c), "c" == d) "t" in c && (c = c.t, "a" === c ? yg(a) : "r" === c ? (a.f("Got a reset on secondary, closing it"), a.D.close(), a.Xc !== a.D && a.Rc !== a.D || a.close()) : "o" === c && (a.f("got pong on secondary."), a.pf--, yg(a)));else if ("d" == d) a.Ad.push(c);else throw Error("Unknown protocol layer: " + d);
                                    } else a.f("message on old connection");
                        };
            }og.prototype.ua = function (a) {
                        zg(this, { t: "d", d: a });
            };function ug(a) {
                        a.Xc === a.D && a.Rc === a.D && (a.f("cleaning up and promoting a connection: " + a.D.Zd), a.I = a.D, a.D = null);
            }
            function yg(a) {
                        0 >= a.pf ? (a.f("Secondary connection is healthy."), a.Bb = !0, a.D.sd(), a.D.start(), a.f("sending client ack on secondary"), a.D.send({ t: "c", d: { t: "a", d: {} } }), a.f("Ending transmission on primary"), a.I.send({ t: "c", d: { t: "n", d: {} } }), a.Xc = a.D, ug(a)) : (a.f("sending ping on secondary."), a.D.send({ t: "c", d: { t: "p", d: {} } }));
            }og.prototype.wd = function (a) {
                        wg(this);this.te(a);
            };function wg(a) {
                        a.Bb || (a.xe--, 0 >= a.xe && (a.f("Primary connection is healthy."), a.Bb = !0, a.I.sd()));
            }
            function tg(a, b) {
                        a.D = new b("c:" + a.id + ":" + a.Le++, a.L, a.qf);a.pf = b.responsesRequiredToBeHealthy || 0;a.D.open(qg(a, a.D), rg(a, a.D));hc(function () {
                                    a.D && (a.f("Timed out trying to upgrade."), a.D.close());
                        }, Math.floor(6E4));
            }function sg(a, b, c) {
                        a.f("Realtime connection established.");a.I = b;a.Ua = 1;a.Lc && (a.Lc(c, a.qf), a.Lc = null);0 === a.xe ? (a.f("Primary connection is healthy."), a.Bb = !0) : hc(function () {
                                    xg(a);
                        }, Math.floor(5E3));
            }
            function xg(a) {
                        a.Bb || 1 !== a.Ua || (a.f("sending ping on primary."), zg(a, { t: "c", d: { t: "p", d: {} } }));
            }function zg(a, b) {
                        if (1 !== a.Ua) throw "Connection is not connected";a.Xc.send(b);
            }og.prototype.close = function () {
                        2 !== this.Ua && (this.f("Closing realtime connection."), this.Ua = 2, vg(this), this.ia && (this.ia(), this.ia = null));
            };function vg(a) {
                        a.f("Shutting down all connections");a.I && (a.I.close(), a.I = null);a.D && (a.D.close(), a.D = null);a.md && (clearTimeout(a.md), a.md = null);
            };function Ag(a, b, c, d, e, f) {
                        this.id = Bg++;this.f = Tb("p:" + this.id + ":");this.qd = {};this.$ = {};this.pa = [];this.Oc = 0;this.Kc = [];this.ma = !1;this.Sa = 1E3;this.td = 3E5;this.Gb = b;this.Jc = c;this.ue = d;this.L = a;this.ob = this.Fa = this.Cb = this.ze = null;this.$c = e;this.de = !1;this.ke = 0;if (f) throw Error("Auth override specified in options, but not supported on non Node.js platforms");this.Vd = f;this.ub = null;this.Mb = !1;this.Gd = {};this.ig = 0;this.Re = !0;this.Ac = this.me = null;Cg(this, 0);Mc.Vb().gc("visible", this.Zf, this);-1 === a.host.indexOf("fblocal") && Lc.Vb().gc("online", this.Yf, this);
            }var Bg = 0,
                Dg = 0;g = Ag.prototype;g.ua = function (a, b, c) {
                        var d = ++this.ig;a = { r: d, a: a, b: b };this.f(x(a));D(this.ma, "sendRequest call when we're not connected not allowed.");this.Fa.ua(a);c && (this.Gd[d] = c);
            };
            g.$e = function (a, b, c, d) {
                        var e = a.ja(),
                            f = a.path.toString();this.f("Listen called for " + f + " " + e);this.$[f] = this.$[f] || {};D(qf(a.m) || !T(a.m), "listen() called for non-default but complete query");D(!this.$[f][e], "listen() called twice for same path/queryId.");a = { G: d, ld: b, eg: a, tag: c };this.$[f][e] = a;this.ma && Eg(this, a);
            };
            function Eg(a, b) {
                        var c = b.eg,
                            d = c.path.toString(),
                            e = c.ja();a.f("Listen on " + d + " for " + e);var f = { p: d };b.tag && (f.q = pf(c.m), f.t = b.tag);f.h = b.ld();a.ua("q", f, function (f) {
                                    var k = f.d,
                                        m = f.s;if (k && "object" === typeof k && eb(k, "w")) {
                                                var l = w(k, "w");ea(l) && 0 <= xa(l, "no_index") && J("Using an unspecified index. Consider adding " + ('".indexOn": "' + c.m.g.toString() + '"') + " at " + c.path.toString() + " to your security rules for better performance");
                                    }(a.$[d] && a.$[d][e]) === b && (a.f("listen response", f), "ok" !== m && Fg(a, d, e), b.G && b.G(m, k));
                        });
            }g.kf = function (a) {
                        this.ob = a;this.f("Auth token refreshed");this.ob ? Gg(this) : this.ma && this.ua("unauth", {}, function () {});if (a && 40 === a.length || kc(a)) this.f("Admin auth credential detected.  Reducing max reconnect time."), this.td = 3E4;
            };function Gg(a) {
                        if (a.ma && a.ob) {
                                    var b = a.ob,
                                        c = jc(b) ? "auth" : "gauth",
                                        d = { cred: b };null === a.Vd ? d.noauth = !0 : "object" === typeof a.Vd && (d.authvar = a.Vd);a.ua(c, d, function (c) {
                                                var d = c.s;c = c.d || "error";a.ob === b && ("ok" === d ? a.ke = 0 : Hg(a, d, c));
                                    });
                        }
            }
            g.uf = function (a, b) {
                        var c = a.path.toString(),
                            d = a.ja();this.f("Unlisten called for " + c + " " + d);D(qf(a.m) || !T(a.m), "unlisten() called for non-default but complete query");if (Fg(this, c, d) && this.ma) {
                                    var e = pf(a.m);this.f("Unlisten on " + c + " for " + d);c = { p: c };b && (c.q = e, c.t = b);this.ua("n", c);
                        }
            };g.re = function (a, b, c) {
                        this.ma ? Ig(this, "o", a, b, c) : this.Kc.push({ we: a, action: "o", data: b, G: c });
            };g.cf = function (a, b, c) {
                        this.ma ? Ig(this, "om", a, b, c) : this.Kc.push({ we: a, action: "om", data: b, G: c });
            };
            g.xd = function (a, b) {
                        this.ma ? Ig(this, "oc", a, null, b) : this.Kc.push({ we: a, action: "oc", data: null, G: b });
            };function Ig(a, b, c, d, e) {
                        c = { p: c, d: d };a.f("onDisconnect " + b, c);a.ua(b, c, function (a) {
                                    e && setTimeout(function () {
                                                e(a.s, a.d);
                                    }, Math.floor(0));
                        });
            }g.put = function (a, b, c, d) {
                        Jg(this, "p", a, b, c, d);
            };g.af = function (a, b, c, d) {
                        Jg(this, "m", a, b, c, d);
            };function Jg(a, b, c, d, e, f) {
                        d = { p: c, d: d };n(f) && (d.h = f);a.pa.push({ action: b, mf: d, G: e });a.Oc++;b = a.pa.length - 1;a.ma ? Kg(a, b) : a.f("Buffering put: " + c);
            }
            function Kg(a, b) {
                        var c = a.pa[b].action,
                            d = a.pa[b].mf,
                            e = a.pa[b].G;a.pa[b].fg = a.ma;a.ua(c, d, function (d) {
                                    a.f(c + " response", d);delete a.pa[b];a.Oc--;0 === a.Oc && (a.pa = []);e && e(d.s, d.d);
                        });
            }g.ye = function (a) {
                        this.ma && (a = { c: a }, this.f("reportStats", a), this.ua("s", a, function (a) {
                                    "ok" !== a.s && this.f("reportStats", "Error sending stats: " + a.d);
                        }));
            };
            g.wd = function (a) {
                        if ("r" in a) {
                                    this.f("from server: " + x(a));var b = a.r,
                                        c = this.Gd[b];c && (delete this.Gd[b], c(a.b));
                        } else {
                                    if ("error" in a) throw "A server-side error has occurred: " + a.error;"a" in a && (b = a.a, a = a.b, this.f("handleServerMessage", b, a), "d" === b ? this.Gb(a.p, a.d, !1, a.t) : "m" === b ? this.Gb(a.p, a.d, !0, a.t) : "c" === b ? Lg(this, a.p, a.q) : "ac" === b ? Hg(this, a.s, a.d) : "sd" === b ? this.ze ? this.ze(a) : "msg" in a && "undefined" !== typeof console && console.log("FIREBASE: " + a.msg.replace("\n", "\nFIREBASE: ")) : Ub("Unrecognized action received from server: " + x(b) + "\nAre you using the latest client?"));
                        }
            };g.Lc = function (a, b) {
                        this.f("connection ready");this.ma = !0;this.Ac = new Date().getTime();this.ue({ serverTimeOffset: a - new Date().getTime() });this.Cb = b;if (this.Re) {
                                    var c = {};c["sdk.js." + firebase.SDK_VERSION.replace(/\./g, "-")] = 1;pb() ? c["framework.cordova"] = 1 : "object" === typeof navigator && "ReactNative" === navigator.product && (c["framework.reactnative"] = 1);this.ye(c);
                        }Mg(this);this.Re = !1;this.Jc(!0);
            };
            function Cg(a, b) {
                        D(!a.Fa, "Scheduling a connect when we're already connected/ing?");a.ub && clearTimeout(a.ub);a.ub = setTimeout(function () {
                                    a.ub = null;Ng(a);
                        }, Math.floor(b));
            }g.Zf = function (a) {
                        a && !this.Mb && this.Sa === this.td && (this.f("Window became visible.  Reducing delay."), this.Sa = 1E3, this.Fa || Cg(this, 0));this.Mb = a;
            };g.Yf = function (a) {
                        a ? (this.f("Browser went online."), this.Sa = 1E3, this.Fa || Cg(this, 0)) : (this.f("Browser went offline.  Killing connection."), this.Fa && this.Fa.close());
            };
            g.df = function () {
                        this.f("data client disconnected");this.ma = !1;this.Fa = null;for (var a = 0; a < this.pa.length; a++) {
                                    var b = this.pa[a];b && "h" in b.mf && b.fg && (b.G && b.G("disconnect"), delete this.pa[a], this.Oc--);
                        }0 === this.Oc && (this.pa = []);this.Gd = {};Og(this) && (this.Mb ? this.Ac && (3E4 < new Date().getTime() - this.Ac && (this.Sa = 1E3), this.Ac = null) : (this.f("Window isn't visible.  Delaying reconnect."), this.Sa = this.td, this.me = new Date().getTime()), a = Math.max(0, this.Sa - (new Date().getTime() - this.me)), a *= Math.random(), this.f("Trying to reconnect in " + a + "ms"), Cg(this, a), this.Sa = Math.min(this.td, 1.3 * this.Sa));this.Jc(!1);
            };
            function Ng(a) {
                        if (Og(a)) {
                                    a.f("Making a connection attempt");a.me = new Date().getTime();a.Ac = null;var b = q(a.wd, a),
                                        c = q(a.Lc, a),
                                        d = q(a.df, a),
                                        e = a.id + ":" + Dg++,
                                        f = a.Cb,
                                        h = !1,
                                        k = null,
                                        m = function m() {
                                                k ? k.close() : (h = !0, d());
                                    };a.Fa = { close: m, ua: function ua(a) {
                                                            D(k, "sendRequest call when we're not connected not allowed.");k.ua(a);
                                                } };var l = a.de;a.de = !1;a.$c.getToken(l).then(function (l) {
                                                h ? I("getToken() completed but was canceled") : (I("getToken() completed. Creating connection."), a.ob = l && l.accessToken, k = new og(e, a.L, b, c, d, function (b) {
                                                            J(b + " (" + a.L.toString() + ")");a.ab("server_kill");
                                                }, f));
                                    }).then(null, function (b) {
                                                a.f("Failed to get token: " + b);h || m();
                                    });
                        }
            }g.ab = function (a) {
                        I("Interrupting connection for reason: " + a);this.qd[a] = !0;this.Fa ? this.Fa.close() : (this.ub && (clearTimeout(this.ub), this.ub = null), this.ma && this.df());
            };g.kc = function (a) {
                        I("Resuming connection for reason: " + a);delete this.qd[a];Sa(this.qd) && (this.Sa = 1E3, this.Fa || Cg(this, 0));
            };
            function Lg(a, b, c) {
                        c = c ? Aa(c, function (a) {
                                    return ac(a);
                        }).join("$") : "default";(a = Fg(a, b, c)) && a.G && a.G("permission_denied");
            }function Fg(a, b, c) {
                        b = new E(b).toString();var d;n(a.$[b]) ? (d = a.$[b][c], delete a.$[b][c], 0 === La(a.$[b]) && delete a.$[b]) : d = void 0;return d;
            }
            function Hg(a, b, c) {
                        I("Auth token revoked: " + b + "/" + c);a.ob = null;a.de = !0;a.Fa.close();if ("invalid_token" === b || "permission_denied" === b) a.ke++, 3 <= a.ke && (a.Sa = 3E4, a = a.$c, b = 'Provided authentication credentials for the app named "' + a.oc.name + '" are invalid. This usually indicates your app was not initialized correctly. ', b = "credential" in a.oc.options ? b + 'Make sure the "credential" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.' : "serviceAccount" in a.oc.options ? b + 'Make sure the "serviceAccount" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.' : b + 'Make sure the "apiKey" and "databaseURL" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.', J(b));
            }
            function Mg(a) {
                        Gg(a);v(a.$, function (b) {
                                    v(b, function (b) {
                                                Eg(a, b);
                                    });
                        });for (var b = 0; b < a.pa.length; b++) {
                                    a.pa[b] && Kg(a, b);
                        }for (; a.Kc.length;) {
                                    b = a.Kc.shift(), Ig(a, b.action, b.we, b.data, b.G);
                        }
            }function Og(a) {
                        var b;b = Lc.Vb().hc;return Sa(a.qd) && b;
            };function Pg(a) {
                        a instanceof Qg || Vb("Don't call new Database() directly - please use firebase.database().");this.ta = a;this.ba = new U(a, Q);this.INTERNAL = new Rg(this);
            }var Sg = { TIMESTAMP: { ".sv": "timestamp" } };g = Pg.prototype;g.app = null;g.jf = function (a) {
                        Tg(this, "ref");y("database.ref", 0, 1, arguments.length);return n(a) ? this.ba.n(a) : this.ba;
            };
            g.gg = function (a) {
                        Tg(this, "database.refFromURL");y("database.refFromURL", 1, 1, arguments.length);var b = Wb(a);Xd("database.refFromURL", b);var c = b.jc;c.host !== this.ta.L.host && Vb("database.refFromURL: Host name does not match the current database: (found " + c.host + " but expected " + this.ta.L.host + ")");return this.jf(b.path.toString());
            };function Tg(a, b) {
                        null === a.ta && Vb("Cannot call " + b + " on a deleted database.");
            }g.Pf = function () {
                        y("database.goOffline", 0, 0, arguments.length);Tg(this, "goOffline");this.ta.ab();
            };
            g.Qf = function () {
                        y("database.goOnline", 0, 0, arguments.length);Tg(this, "goOnline");this.ta.kc();
            };Object.defineProperty(Pg.prototype, "app", { get: function get() {
                                    return this.ta.app;
                        } });function Rg(a) {
                        this.Ya = a;
            }Rg.prototype.delete = function () {
                        Tg(this.Ya, "delete");var a = Ug.Vb(),
                            b = this.Ya.ta;w(a.lb, b.app.name) !== b && Vb("Database " + b.app.name + " has already been deleted.");b.ab();delete a.lb[b.app.name];this.Ya.ta = null;this.Ya.ba = null;this.Ya = this.Ya.INTERNAL = null;return firebase.Promise.resolve();
            };
            Pg.prototype.ref = Pg.prototype.jf;Pg.prototype.refFromURL = Pg.prototype.gg;Pg.prototype.goOnline = Pg.prototype.Qf;Pg.prototype.goOffline = Pg.prototype.Pf;Rg.prototype["delete"] = Rg.prototype.delete;function V(a, b, c) {
                        this.A = a;this.V = b;this.g = c;
            }V.prototype.H = function () {
                        y("Firebase.DataSnapshot.val", 0, 0, arguments.length);return this.A.H();
            };V.prototype.val = V.prototype.H;V.prototype.be = function () {
                        y("Firebase.DataSnapshot.exportVal", 0, 0, arguments.length);return this.A.H(!0);
            };V.prototype.exportVal = V.prototype.be;V.prototype.toJSON = function () {
                        y("Firebase.DataSnapshot.toJSON", 0, 1, arguments.length);return this.be();
            };V.prototype.toJSON = V.prototype.toJSON;
            V.prototype.Lf = function () {
                        y("Firebase.DataSnapshot.exists", 0, 0, arguments.length);return !this.A.e();
            };V.prototype.exists = V.prototype.Lf;V.prototype.n = function (a) {
                        y("Firebase.DataSnapshot.child", 0, 1, arguments.length);ga(a) && (a = String(a));Vd("Firebase.DataSnapshot.child", a);var b = new E(a),
                            c = this.V.n(b);return new V(this.A.P(b), c, H);
            };V.prototype.child = V.prototype.n;
            V.prototype.Da = function (a) {
                        y("Firebase.DataSnapshot.hasChild", 1, 1, arguments.length);Vd("Firebase.DataSnapshot.hasChild", a);var b = new E(a);return !this.A.P(b).e();
            };V.prototype.hasChild = V.prototype.Da;V.prototype.C = function () {
                        y("Firebase.DataSnapshot.getPriority", 0, 0, arguments.length);return this.A.C().H();
            };V.prototype.getPriority = V.prototype.C;
            V.prototype.forEach = function (a) {
                        y("Firebase.DataSnapshot.forEach", 1, 1, arguments.length);B("Firebase.DataSnapshot.forEach", 1, a, !1);if (this.A.J()) return !1;var b = this;return !!this.A.O(this.g, function (c, d) {
                                    return a(new V(d, b.V.n(c), H));
                        });
            };V.prototype.forEach = V.prototype.forEach;V.prototype.kd = function () {
                        y("Firebase.DataSnapshot.hasChildren", 0, 0, arguments.length);return this.A.J() ? !1 : !this.A.e();
            };V.prototype.hasChildren = V.prototype.kd;
            V.prototype.getKey = function () {
                        y("Firebase.DataSnapshot.key", 0, 0, arguments.length);return this.V.getKey();
            };gc(V.prototype, "key", V.prototype.getKey);V.prototype.Eb = function () {
                        y("Firebase.DataSnapshot.numChildren", 0, 0, arguments.length);return this.A.Eb();
            };V.prototype.numChildren = V.prototype.Eb;V.prototype.wb = function () {
                        y("Firebase.DataSnapshot.ref", 0, 0, arguments.length);return this.V;
            };gc(V.prototype, "ref", V.prototype.wb);function Vg(a, b, c) {
                        this.Pb = a;this.rb = b;this.tb = c || null;
            }g = Vg.prototype;g.nf = function (a) {
                        return "value" === a;
            };g.createEvent = function (a, b) {
                        var c = b.m.g;return new We("value", this, new V(a.Ja, b.wb(), c));
            };g.Tb = function (a) {
                        var b = this.tb;if ("cancel" === a.ge()) {
                                    D(this.rb, "Raising a cancel event on a listener with no cancel callback");var c = this.rb;return function () {
                                                c.call(b, a.error);
                                    };
                        }var d = this.Pb;return function () {
                                    d.call(b, a.Md);
                        };
            };g.Me = function (a, b) {
                        return this.rb ? new Xe(this, a, b) : null;
            };
            g.matches = function (a) {
                        return a instanceof Vg ? a.Pb && this.Pb ? a.Pb === this.Pb && a.tb === this.tb : !0 : !1;
            };g.Xe = function () {
                        return null !== this.Pb;
            };function Wg(a, b, c) {
                        this.ga = a;this.rb = b;this.tb = c;
            }g = Wg.prototype;g.nf = function (a) {
                        a = "children_added" === a ? "child_added" : a;return ("children_removed" === a ? "child_removed" : a) in this.ga;
            };g.Me = function (a, b) {
                        return this.rb ? new Xe(this, a, b) : null;
            };
            g.createEvent = function (a, b) {
                        D(null != a.Xa, "Child events should have a childName.");var c = b.wb().n(a.Xa);return new We(a.type, this, new V(a.Ja, c, b.m.g), a.Dd);
            };g.Tb = function (a) {
                        var b = this.tb;if ("cancel" === a.ge()) {
                                    D(this.rb, "Raising a cancel event on a listener with no cancel callback");var c = this.rb;return function () {
                                                c.call(b, a.error);
                                    };
                        }var d = this.ga[a.hd];return function () {
                                    d.call(b, a.Md, a.Dd);
                        };
            };
            g.matches = function (a) {
                        if (a instanceof Wg) {
                                    if (!this.ga || !a.ga) return !0;if (this.tb === a.tb) {
                                                var b = La(a.ga);if (b === La(this.ga)) {
                                                            if (1 === b) {
                                                                        var b = Ma(a.ga),
                                                                            c = Ma(this.ga);return c === b && (!a.ga[b] || !this.ga[c] || a.ga[b] === this.ga[c]);
                                                            }return Ka(this.ga, function (b, c) {
                                                                        return a.ga[c] === b;
                                                            });
                                                }
                                    }
                        }return !1;
            };g.Xe = function () {
                        return null !== this.ga;
            };function Xg() {
                        this.za = {};
            }g = Xg.prototype;g.e = function () {
                        return Sa(this.za);
            };g.eb = function (a, b, c) {
                        var d = a.source.Hb;if (null !== d) return d = w(this.za, d), D(null != d, "SyncTree gave us an op for an invalid query."), d.eb(a, b, c);var e = [];v(this.za, function (d) {
                                    e = e.concat(d.eb(a, b, c));
                        });return e;
            };g.Nb = function (a, b, c, d, e) {
                        var f = a.ja(),
                            h = w(this.za, f);if (!h) {
                                    var h = c.Aa(e ? d : null),
                                        k = !1;h ? k = !0 : (h = d instanceof O ? c.rc(d) : L, k = !1);h = new Pe(a, new oe(new je(h, k, !1), new je(d, e, !1)));this.za[f] = h;
                        }h.Nb(b);return Ve(h, b);
            };
            g.kb = function (a, b, c) {
                        var d = a.ja(),
                            e = [],
                            f = [],
                            h = null != Yg(this);if ("default" === d) {
                                    var k = this;v(this.za, function (a, d) {
                                                f = f.concat(a.kb(b, c));a.e() && (delete k.za[d], T(a.V.m) || e.push(a.V));
                                    });
                        } else {
                                    var m = w(this.za, d);m && (f = f.concat(m.kb(b, c)), m.e() && (delete this.za[d], T(m.V.m) || e.push(m.V)));
                        }h && null == Yg(this) && e.push(new U(a.u, a.path));return { hg: e, Kf: f };
            };function Zg(a) {
                        return za(Na(a.za), function (a) {
                                    return !T(a.V.m);
                        });
            }g.hb = function (a) {
                        var b = null;v(this.za, function (c) {
                                    b = b || c.hb(a);
                        });return b;
            };
            function $g(a, b) {
                        if (T(b.m)) return Yg(a);var c = b.ja();return w(a.za, c);
            }function Yg(a) {
                        return Ra(a.za, function (a) {
                                    return T(a.V.m);
                        }) || null;
            };function ah(a) {
                        this.wa = R;this.jb = new Df();this.De = {};this.ic = {};this.Cc = a;
            }function bh(a, b, c, d, e) {
                        var f = a.jb,
                            h = e;D(d > f.Bc, "Stacking an older write on top of newer ones");n(h) || (h = !0);f.la.push({ path: b, Ga: c, Zc: d, visible: h });h && (f.S = uf(f.S, b, c));f.Bc = d;return e ? ch(a, new ce(fe, b, c)) : [];
            }function dh(a, b, c, d) {
                        var e = a.jb;D(d > e.Bc, "Stacking an older merge on top of newer ones");e.la.push({ path: b, children: c, Zc: d, visible: !0 });e.S = vf(e.S, b, c);e.Bc = d;c = xd(c);return ch(a, new ae(fe, b, c));
            }
            function eh(a, b, c) {
                        c = c || !1;var d = Ef(a.jb, b);if (a.jb.Ed(b)) {
                                    var e = R;null != d.Ga ? e = e.set(Q, !0) : fb(d.children, function (a, b) {
                                                e = e.set(new E(a), b);
                                    });return ch(a, new de(d.path, e, c));
                        }return [];
            }function fh(a, b, c) {
                        c = xd(c);return ch(a, new ae(ie, b, c));
            }function gh(a, b, c, d) {
                        d = hh(a, d);if (null != d) {
                                    var e = ih(d);d = e.path;e = e.Hb;b = P(d, b);c = new ce(new he(!1, !0, e, !0), b, c);return jh(a, d, c);
                        }return [];
            }
            function kh(a, b, c, d) {
                        if (d = hh(a, d)) {
                                    var e = ih(d);d = e.path;e = e.Hb;b = P(d, b);c = xd(c);c = new ae(new he(!1, !0, e, !0), b, c);return jh(a, d, c);
                        }return [];
            }
            ah.prototype.Nb = function (a, b) {
                        var c = a.path,
                            d = null,
                            e = !1;Fd(this.wa, c, function (a, b) {
                                    var f = P(a, c);d = d || b.hb(f);e = e || null != Yg(b);
                        });var f = this.wa.get(c);f ? (e = e || null != Yg(f), d = d || f.hb(Q)) : (f = new Xg(), this.wa = this.wa.set(c, f));var h;null != d ? h = !0 : (h = !1, d = L, Jd(this.wa.subtree(c), function (a, b) {
                                    var c = b.hb(Q);c && (d = d.T(a, c));
                        }));var k = null != $g(f, a);if (!k && !T(a.m)) {
                                    var m = lh(a);D(!(m in this.ic), "View does not exist, but we have a tag");var l = mh++;this.ic[m] = l;this.De["_" + l] = m;
                        }h = f.Nb(a, b, new If(c, this.jb), d, h);k || e || (f = $g(f, a), h = h.concat(nh(this, a, f)));return h;
            };
            ah.prototype.kb = function (a, b, c) {
                        var d = a.path,
                            e = this.wa.get(d),
                            f = [];if (e && ("default" === a.ja() || null != $g(e, a))) {
                                    f = e.kb(a, b, c);e.e() && (this.wa = this.wa.remove(d));e = f.hg;f = f.Kf;b = -1 !== Ea(e, function (a) {
                                                return T(a.m);
                                    });var h = Dd(this.wa, d, function (a, b) {
                                                return null != Yg(b);
                                    });if (b && !h && (d = this.wa.subtree(d), !d.e())) for (var d = oh(d), k = 0; k < d.length; ++k) {
                                                var m = d[k],
                                                    l = m.V,
                                                    m = ph(this, m);this.Cc.Ae(qh(l), rh(this, l), m.ld, m.G);
                                    }if (!h && 0 < e.length && !c) if (b) this.Cc.Od(qh(a), null);else {
                                                var u = this;ya(e, function (a) {
                                                            a.ja();
                                                            var b = u.ic[lh(a)];u.Cc.Od(qh(a), b);
                                                });
                                    }sh(this, e);
                        }return f;
            };ah.prototype.Aa = function (a, b) {
                        var c = this.jb,
                            d = Dd(this.wa, a, function (b, c) {
                                    var d = P(b, a);if (d = c.hb(d)) return d;
                        });return c.Aa(a, d, b, !0);
            };function oh(a) {
                        return Bd(a, function (a, c, d) {
                                    if (c && null != Yg(c)) return [Yg(c)];var e = [];c && (e = Zg(c));v(d, function (a) {
                                                e = e.concat(a);
                                    });return e;
                        });
            }function sh(a, b) {
                        for (var c = 0; c < b.length; ++c) {
                                    var d = b[c];if (!T(d.m)) {
                                                var d = lh(d),
                                                    e = a.ic[d];delete a.ic[d];delete a.De["_" + e];
                                    }
                        }
            }
            function qh(a) {
                        return T(a.m) && !qf(a.m) ? a.wb() : a;
            }function nh(a, b, c) {
                        var d = b.path,
                            e = rh(a, b);c = ph(a, c);b = a.Cc.Ae(qh(b), e, c.ld, c.G);d = a.wa.subtree(d);if (e) D(null == Yg(d.value), "If we're adding a query, it shouldn't be shadowed");else for (e = Bd(d, function (a, b, c) {
                                    if (!a.e() && b && null != Yg(b)) return [Te(Yg(b))];var d = [];b && (d = d.concat(Aa(Zg(b), function (a) {
                                                return a.V;
                                    })));v(c, function (a) {
                                                d = d.concat(a);
                                    });return d;
                        }), d = 0; d < e.length; ++d) {
                                    c = e[d], a.Cc.Od(qh(c), rh(a, c));
                        }return b;
            }
            function ph(a, b) {
                        var c = b.V,
                            d = rh(a, c);return { ld: function ld() {
                                                return (b.w() || L).hash();
                                    }, G: function G(b) {
                                                if ("ok" === b) {
                                                            if (d) {
                                                                        var f = c.path;if (b = hh(a, d)) {
                                                                                    var h = ih(b);b = h.path;h = h.Hb;f = P(b, f);f = new Zd(new he(!1, !0, h, !0), f);b = jh(a, b, f);
                                                                        } else b = [];
                                                            } else b = ch(a, new Zd(ie, c.path));return b;
                                                }f = "Unknown Error";"too_big" === b ? f = "The data requested exceeds the maximum size that can be accessed with a single request." : "permission_denied" == b ? f = "Client doesn't have permission to access the desired data." : "unavailable" == b && (f = "The service is unavailable");f = Error(b + " at " + c.path.toString() + ": " + f);f.code = b.toUpperCase();return a.kb(c, null, f);
                                    } };
            }function lh(a) {
                        return a.path.toString() + "$" + a.ja();
            }function ih(a) {
                        var b = a.indexOf("$");D(-1 !== b && b < a.length - 1, "Bad queryKey.");return { Hb: a.substr(b + 1), path: new E(a.substr(0, b)) };
            }function hh(a, b) {
                        var c = a.De,
                            d = "_" + b;return d in c ? c[d] : void 0;
            }function rh(a, b) {
                        var c = lh(b);return w(a.ic, c);
            }var mh = 1;
            function jh(a, b, c) {
                        var d = a.wa.get(b);D(d, "Missing sync point for query tag that we're tracking");return d.eb(c, new If(b, a.jb), null);
            }function ch(a, b) {
                        return th(a, b, a.wa, null, new If(Q, a.jb));
            }function th(a, b, c, d, e) {
                        if (b.path.e()) return uh(a, b, c, d, e);var f = c.get(Q);null == d && null != f && (d = f.hb(Q));var h = [],
                            k = K(b.path),
                            m = b.Mc(k);if ((c = c.children.get(k)) && m) var l = d ? d.Q(k) : null,
                            k = e.n(k),
                            h = h.concat(th(a, m, c, l, k));f && (h = h.concat(f.eb(b, e, d)));return h;
            }
            function uh(a, b, c, d, e) {
                        var f = c.get(Q);null == d && null != f && (d = f.hb(Q));var h = [];c.children.ha(function (c, f) {
                                    var l = d ? d.Q(c) : null,
                                        u = e.n(c),
                                        z = b.Mc(c);z && (h = h.concat(uh(a, z, f, l, u)));
                        });f && (h = h.concat(f.eb(b, e, d)));return h;
            };function Qg(a, b, c) {
                        this.app = c;var d = new Bf(c);this.L = a;this.Va = Pf(a);this.Vc = null;this.ca = new Ye();this.vd = 1;this.Ra = null;if (b || 0 <= ("object" === typeof window && window.navigator && window.navigator.userAgent || "").search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)) this.va = new Rf(this.L, q(this.Gb, this), d), setTimeout(q(this.Jc, this, !0), 0);else {
                                    b = c.options.databaseAuthVariableOverride;if ("undefined" !== da(b) && null !== b) {
                                                if ("object" !== da(b)) throw Error("Only objects are supported for option databaseAuthVariableOverride");
                                                try {
                                                            x(b);
                                                } catch (e) {
                                                            throw Error("Invalid authOverride provided: " + e);
                                                }
                                    }this.va = this.Ra = new Ag(this.L, q(this.Gb, this), q(this.Jc, this), q(this.ue, this), d, b);
                        }var f = this;Cf(d, function (a) {
                                    f.va.kf(a);
                        });this.og = Qf(a, q(function () {
                                    return new Jf(this.Va, this.va);
                        }, this));this.mc = new Tc();this.ie = new Af();this.pd = new ah({ Ae: function Ae(a, b, c, d) {
                                                b = [];c = f.ie.j(a.path);c.e() || (b = ch(f.pd, new ce(ie, a.path, c)), setTimeout(function () {
                                                            d("ok");
                                                }, 0));return b;
                                    }, Od: ba });vh(this, "connected", !1);this.ia = new Gb();this.Ya = new Pg(this);this.fd = 0;this.je = null;this.K = new ah({ Ae: function Ae(a, b, c, d) {
                                                f.va.$e(a, c, b, function (b, c) {
                                                            var e = d(b, c);cf(f.ca, a.path, e);
                                                });return [];
                                    }, Od: function Od(a, b) {
                                                f.va.uf(a, b);
                                    } });
            }g = Qg.prototype;g.toString = function () {
                        return (this.L.Sc ? "https://" : "http://") + this.L.host;
            };g.name = function () {
                        return this.L.pe;
            };function wh(a) {
                        a = a.ie.j(new E(".info/serverTimeOffset")).H() || 0;return new Date().getTime() + a;
            }function xh(a) {
                        a = a = { timestamp: wh(a) };a.timestamp = a.timestamp || new Date().getTime();return a;
            }
            g.Gb = function (a, b, c, d) {
                        this.fd++;var e = new E(a);b = this.je ? this.je(a, b) : b;a = [];d ? c ? (b = Ja(b, function (a) {
                                    return G(a);
                        }), a = kh(this.K, e, b, d)) : (b = G(b), a = gh(this.K, e, b, d)) : c ? (d = Ja(b, function (a) {
                                    return G(a);
                        }), a = fh(this.K, e, d)) : (d = G(b), a = ch(this.K, new ce(ie, e, d)));d = e;0 < a.length && (d = yh(this, e));cf(this.ca, d, a);
            };g.Jc = function (a) {
                        vh(this, "connected", a);!1 === a && zh(this);
            };g.ue = function (a) {
                        var b = this;cc(a, function (a, d) {
                                    vh(b, d, a);
                        });
            };
            function vh(a, b, c) {
                        b = new E("/.info/" + b);c = G(c);var d = a.ie;d.Jd = d.Jd.F(b, c);c = ch(a.pd, new ce(ie, b, c));cf(a.ca, b, c);
            }g.Jb = function (a, b, c, d) {
                        this.f("set", { path: a.toString(), value: b, ug: c });var e = xh(this);b = G(b, c);var e = Jb(b, e),
                            f = this.vd++,
                            e = bh(this.K, a, e, f, !0);Ze(this.ca, e);var h = this;this.va.put(a.toString(), b.H(!0), function (b, c) {
                                    var e = "ok" === b;e || J("set at " + a + " failed: " + b);e = eh(h.K, f, !e);cf(h.ca, a, e);Ah(d, b, c);
                        });e = Bh(this, a);yh(this, e);cf(this.ca, e, []);
            };
            g.update = function (a, b, c) {
                        this.f("update", { path: a.toString(), value: b });var d = !0,
                            e = xh(this),
                            f = {};v(b, function (a, b) {
                                    d = !1;var c = G(a);f[b] = Jb(c, e);
                        });if (d) I("update() called with empty data.  Don't do anything."), Ah(c, "ok");else {
                                    var h = this.vd++,
                                        k = dh(this.K, a, f, h);Ze(this.ca, k);var m = this;this.va.af(a.toString(), b, function (b, d) {
                                                var e = "ok" === b;e || J("update at " + a + " failed: " + b);var e = eh(m.K, h, !e),
                                                    f = a;0 < e.length && (f = yh(m, a));cf(m.ca, f, e);Ah(c, b, d);
                                    });v(b, function (b, c) {
                                                var d = Bh(m, a.n(c));yh(m, d);
                                    });cf(this.ca, a, []);
                        }
            };function zh(a) {
                        a.f("onDisconnectEvents");var b = xh(a),
                            c = [];Hb(Fb(a.ia, b), Q, function (b, e) {
                                    c = c.concat(ch(a.K, new ce(ie, b, e)));var f = Bh(a, b);yh(a, f);
                        });a.ia = new Gb();cf(a.ca, Q, c);
            }g.xd = function (a, b) {
                        var c = this;this.va.xd(a.toString(), function (d, e) {
                                    "ok" === d && Yd(c.ia, a);Ah(b, d, e);
                        });
            };function Ch(a, b, c, d) {
                        var e = G(c);a.va.re(b.toString(), e.H(!0), function (c, h) {
                                    "ok" === c && Ib(a.ia, b, e);Ah(d, c, h);
                        });
            }
            function Dh(a, b, c, d, e) {
                        var f = G(c, d);a.va.re(b.toString(), f.H(!0), function (c, d) {
                                    "ok" === c && Ib(a.ia, b, f);Ah(e, c, d);
                        });
            }function Eh(a, b, c, d) {
                        var e = !0,
                            f;for (f in c) {
                                    e = !1;
                        }e ? (I("onDisconnect().update() called with empty data.  Don't do anything."), Ah(d, "ok")) : a.va.cf(b.toString(), c, function (e, f) {
                                    if ("ok" === e) for (var m in c) {
                                                var l = G(c[m]);Ib(a.ia, b.n(m), l);
                                    }Ah(d, e, f);
                        });
            }function Fh(a, b, c) {
                        c = ".info" === K(b.path) ? a.pd.Nb(b, c) : a.K.Nb(b, c);af(a.ca, b.path, c);
            }g.ab = function () {
                        this.Ra && this.Ra.ab("repo_interrupt");
            };
            g.kc = function () {
                        this.Ra && this.Ra.kc("repo_interrupt");
            };g.Be = function (a) {
                        if ("undefined" !== typeof console) {
                                    a ? (this.Vc || (this.Vc = new Kf(this.Va)), a = this.Vc.get()) : a = this.Va.get();var b = Ba(Oa(a), function (a, b) {
                                                return Math.max(b.length, a);
                                    }, 0),
                                        c;for (c in a) {
                                                for (var d = a[c], e = c.length; e < b + 2; e++) {
                                                            c += " ";
                                                }console.log(c + d);
                                    }
                        }
            };g.Ce = function (a) {
                        Mf(this.Va, a);this.og.rf[a] = !0;
            };g.f = function (a) {
                        var b = "";this.Ra && (b = this.Ra.id + ":");I(b, arguments);
            };
            function Ah(a, b, c) {
                        a && fc(function () {
                                    if ("ok" == b) a(null);else {
                                                var d = (b || "error").toUpperCase(),
                                                    e = d;c && (e += ": " + c);e = Error(e);e.code = d;a(e);
                                    }
                        });
            };function Gh(a, b, c, d, e) {
                        function f() {}a.f("transaction on " + b);var h = new U(a, b);h.gc("value", f);c = { path: b, update: c, G: d, status: null, ef: Lb(), He: e, of: 0, Rd: function Rd() {
                                                h.Ic("value", f);
                                    }, Td: null, Ba: null, cd: null, dd: null, ed: null };d = a.K.Aa(b, void 0) || L;c.cd = d;d = c.update(d.H());if (n(d)) {
                                    Pd("transaction failed: Data returned ", d, c.path);c.status = 1;e = Uc(a.mc, b);var k = e.Ca() || [];k.push(c);Vc(e, k);"object" === typeof d && null !== d && eb(d, ".priority") ? (k = w(d, ".priority"), D(Nd(k), "Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.")) : k = (a.K.Aa(b) || L).C().H();e = xh(a);d = G(d, k);e = Jb(d, e);c.dd = d;c.ed = e;c.Ba = a.vd++;c = bh(a.K, b, e, c.Ba, c.He);cf(a.ca, b, c);Hh(a);
                        } else c.Rd(), c.dd = null, c.ed = null, c.G && (a = new V(c.cd, new U(a, c.path), H), c.G(null, !1, a));
            }function Hh(a, b) {
                        var c = b || a.mc;b || Ih(a, c);if (null !== c.Ca()) {
                                    var d = Jh(a, c);D(0 < d.length, "Sending zero length transaction queue");Ca(d, function (a) {
                                                return 1 === a.status;
                                    }) && Kh(a, c.path(), d);
                        } else c.kd() && c.O(function (b) {
                                    Hh(a, b);
                        });
            }
            function Kh(a, b, c) {
                        for (var d = Aa(c, function (a) {
                                    return a.Ba;
                        }), e = a.K.Aa(b, d) || L, d = e, e = e.hash(), f = 0; f < c.length; f++) {
                                    var h = c[f];D(1 === h.status, "tryToSendTransactionQueue_: items in queue should all be run.");h.status = 2;h.of++;var k = P(b, h.path),
                                        d = d.F(k, h.dd);
                        }d = d.H(!0);a.va.put(b.toString(), d, function (d) {
                                    a.f("transaction put response", { path: b.toString(), status: d });var e = [];if ("ok" === d) {
                                                d = [];for (f = 0; f < c.length; f++) {
                                                            c[f].status = 3;e = e.concat(eh(a.K, c[f].Ba));if (c[f].G) {
                                                                        var h = c[f].ed,
                                                                            k = new U(a, c[f].path);d.push(q(c[f].G, null, null, !0, new V(h, k, H)));
                                                            }c[f].Rd();
                                                }Ih(a, Uc(a.mc, b));Hh(a);cf(a.ca, b, e);for (f = 0; f < d.length; f++) {
                                                            fc(d[f]);
                                                }
                                    } else {
                                                if ("datastale" === d) for (f = 0; f < c.length; f++) {
                                                            c[f].status = 4 === c[f].status ? 5 : 1;
                                                } else for (J("transaction at " + b.toString() + " failed: " + d), f = 0; f < c.length; f++) {
                                                            c[f].status = 5, c[f].Td = d;
                                                }yh(a, b);
                                    }
                        }, e);
            }function yh(a, b) {
                        var c = Lh(a, b),
                            d = c.path(),
                            c = Jh(a, c);Mh(a, c, d);return d;
            }
            function Mh(a, b, c) {
                        if (0 !== b.length) {
                                    for (var d = [], e = [], f = za(b, function (a) {
                                                return 1 === a.status;
                                    }), f = Aa(f, function (a) {
                                                return a.Ba;
                                    }), h = 0; h < b.length; h++) {
                                                var k = b[h],
                                                    m = P(c, k.path),
                                                    l = !1,
                                                    u;D(null !== m, "rerunTransactionsUnderNode_: relativePath should not be null.");if (5 === k.status) l = !0, u = k.Td, e = e.concat(eh(a.K, k.Ba, !0));else if (1 === k.status) if (25 <= k.of) l = !0, u = "maxretry", e = e.concat(eh(a.K, k.Ba, !0));else {
                                                            var z = a.K.Aa(k.path, f) || L;k.cd = z;var F = b[h].update(z.H());n(F) ? (Pd("transaction failed: Data returned ", F, k.path), m = G(F), "object" === typeof F && null != F && eb(F, ".priority") || (m = m.fa(z.C())), z = k.Ba, F = xh(a), F = Jb(m, F), k.dd = m, k.ed = F, k.Ba = a.vd++, Fa(f, z), e = e.concat(bh(a.K, k.path, F, k.Ba, k.He)), e = e.concat(eh(a.K, z, !0))) : (l = !0, u = "nodata", e = e.concat(eh(a.K, k.Ba, !0)));
                                                }cf(a.ca, c, e);e = [];l && (b[h].status = 3, setTimeout(b[h].Rd, Math.floor(0)), b[h].G && ("nodata" === u ? (k = new U(a, b[h].path), d.push(q(b[h].G, null, null, !1, new V(b[h].cd, k, H)))) : d.push(q(b[h].G, null, Error(u), !1, null))));
                                    }Ih(a, a.mc);for (h = 0; h < d.length; h++) {
                                                fc(d[h]);
                                    }Hh(a);
                        }
            }
            function Lh(a, b) {
                        for (var c, d = a.mc; null !== (c = K(b)) && null === d.Ca();) {
                                    d = Uc(d, c), b = N(b);
                        }return d;
            }function Jh(a, b) {
                        var c = [];Nh(a, b, c);c.sort(function (a, b) {
                                    return a.ef - b.ef;
                        });return c;
            }function Nh(a, b, c) {
                        var d = b.Ca();if (null !== d) for (var e = 0; e < d.length; e++) {
                                    c.push(d[e]);
                        }b.O(function (b) {
                                    Nh(a, b, c);
                        });
            }function Ih(a, b) {
                        var c = b.Ca();if (c) {
                                    for (var d = 0, e = 0; e < c.length; e++) {
                                                3 !== c[e].status && (c[d] = c[e], d++);
                                    }c.length = d;Vc(b, 0 < c.length ? c : null);
                        }b.O(function (b) {
                                    Ih(a, b);
                        });
            }
            function Bh(a, b) {
                        var c = Lh(a, b).path(),
                            d = Uc(a.mc, b);Yc(d, function (b) {
                                    Oh(a, b);
                        });Oh(a, d);Xc(d, function (b) {
                                    Oh(a, b);
                        });return c;
            }
            function Oh(a, b) {
                        var c = b.Ca();if (null !== c) {
                                    for (var d = [], e = [], f = -1, h = 0; h < c.length; h++) {
                                                4 !== c[h].status && (2 === c[h].status ? (D(f === h - 1, "All SENT items should be at beginning of queue."), f = h, c[h].status = 4, c[h].Td = "set") : (D(1 === c[h].status, "Unexpected transaction status in abort"), c[h].Rd(), e = e.concat(eh(a.K, c[h].Ba, !0)), c[h].G && d.push(q(c[h].G, null, Error("set"), !1, null))));
                                    }-1 === f ? Vc(b, null) : c.length = f + 1;cf(a.ca, b.path(), e);for (h = 0; h < d.length; h++) {
                                                fc(d[h]);
                                    }
                        }
            };function Ug() {
                        this.lb = {};this.wf = !1;
            }Ug.prototype.ab = function () {
                        for (var a in this.lb) {
                                    this.lb[a].ab();
                        }
            };Ug.prototype.kc = function () {
                        for (var a in this.lb) {
                                    this.lb[a].kc();
                        }
            };Ug.prototype.ce = function (a) {
                        this.wf = a;
            };ca(Ug);Ug.prototype.interrupt = Ug.prototype.ab;Ug.prototype.resume = Ug.prototype.kc;var W = {};W.nc = Ag;W.DataConnection = W.nc;Ag.prototype.ng = function (a, b) {
                        this.ua("q", { p: a }, b);
            };W.nc.prototype.simpleListen = W.nc.prototype.ng;Ag.prototype.Hf = function (a, b) {
                        this.ua("echo", { d: a }, b);
            };W.nc.prototype.echo = W.nc.prototype.Hf;Ag.prototype.interrupt = Ag.prototype.ab;W.zf = og;W.RealTimeConnection = W.zf;og.prototype.sendRequest = og.prototype.ua;og.prototype.close = og.prototype.close;
            W.Rf = function (a) {
                        var b = Ag.prototype.put;Ag.prototype.put = function (c, d, e, f) {
                                    n(f) && (f = a());b.call(this, c, d, e, f);
                        };return function () {
                                    Ag.prototype.put = b;
                        };
            };W.hijackHash = W.Rf;W.yf = zb;W.ConnectionTarget = W.yf;W.ja = function (a) {
                        return a.ja();
            };W.queryIdentifier = W.ja;W.Uf = function (a) {
                        return a.u.Ra.$;
            };W.listens = W.Uf;W.ce = function (a) {
                        Ug.Vb().ce(a);
            };W.forceRestClient = W.ce;W.Context = Ug;function Ph(a, b) {
                        this.committed = a;this.snapshot = b;
            };function X(a, b, c, d) {
                        this.u = a;this.path = b;this.m = c;this.Nc = d;
            }
            function Qh(a) {
                        var b = null,
                            c = null;a.ka && (b = ff(a));a.na && (c = hf(a));if (a.g === tc) {
                                    if (a.ka) {
                                                if ("[MIN_NAME]" != ef(a)) throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if ("string" !== typeof b) throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");
                                    }if (a.na) {
                                                if ("[MAX_NAME]" != gf(a)) throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if ("string" !== typeof c) throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");
                                    }
                        } else if (a.g === H) {
                                    if (null != b && !Nd(b) || null != c && !Nd(c)) throw Error("Query: When ordering by priority, the first argument passed to startAt(), endAt(), or equalTo() must be a valid priority value (null, a number, or a string).");
                        } else if (D(a.g instanceof pc || a.g === wc, "unknown index type."), null != b && "object" === typeof b || null != c && "object" === typeof c) throw Error("Query: First argument passed to startAt(), endAt(), or equalTo() cannot be an object.");
            }function Rh(a) {
                        if (a.ka && a.na && a.xa && (!a.xa || "" === a.mb)) throw Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.");
            }function Sh(a, b) {
                        if (!0 === a.Nc) throw Error(b + ": You can't combine multiple orderBy calls.");
            }g = X.prototype;g.wb = function () {
                        y("Query.ref", 0, 0, arguments.length);return new U(this.u, this.path);
            };
            g.gc = function (a, b, c, d) {
                        y("Query.on", 2, 4, arguments.length);Td("Query.on", a, !1);B("Query.on", 2, b, !1);var e = Th("Query.on", c, d);if ("value" === a) Fh(this.u, this, new Vg(b, e.cancel || null, e.Ma || null));else {
                                    var f = {};f[a] = b;Fh(this.u, this, new Wg(f, e.cancel, e.Ma));
                        }return b;
            };
            g.Ic = function (a, b, c) {
                        y("Query.off", 0, 3, arguments.length);Td("Query.off", a, !0);B("Query.off", 2, b, !0);ob("Query.off", 3, c);var d = null,
                            e = null;"value" === a ? d = new Vg(b || null, null, c || null) : a && (b && (e = {}, e[a] = b), d = new Wg(e, null, c || null));e = this.u;d = ".info" === K(this.path) ? e.pd.kb(this, d) : e.K.kb(this, d);af(e.ca, this.path, d);
            };
            g.$f = function (a, b) {
                        function c(k) {
                                    f && (f = !1, e.Ic(a, c), b && b.call(d.Ma, k), h.resolve(k));
                        }y("Query.once", 1, 4, arguments.length);Td("Query.once", a, !1);B("Query.once", 2, b, !0);var d = Th("Query.once", arguments[2], arguments[3]),
                            e = this,
                            f = !0,
                            h = new ib();kb(h.ra);this.gc(a, c, function (b) {
                                    e.Ic(a, c);d.cancel && d.cancel.call(d.Ma, b);h.reject(b);
                        });return h.ra;
            };
            g.ne = function (a) {
                        y("Query.limitToFirst", 1, 1, arguments.length);if (!ga(a) || Math.floor(a) !== a || 0 >= a) throw Error("Query.limitToFirst: First argument must be a positive integer.");if (this.m.xa) throw Error("Query.limitToFirst: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new X(this.u, this.path, this.m.ne(a), this.Nc);
            };
            g.oe = function (a) {
                        y("Query.limitToLast", 1, 1, arguments.length);if (!ga(a) || Math.floor(a) !== a || 0 >= a) throw Error("Query.limitToLast: First argument must be a positive integer.");if (this.m.xa) throw Error("Query.limitToLast: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new X(this.u, this.path, this.m.oe(a), this.Nc);
            };
            g.ag = function (a) {
                        y("Query.orderByChild", 1, 1, arguments.length);if ("$key" === a) throw Error('Query.orderByChild: "$key" is invalid.  Use Query.orderByKey() instead.');if ("$priority" === a) throw Error('Query.orderByChild: "$priority" is invalid.  Use Query.orderByPriority() instead.');if ("$value" === a) throw Error('Query.orderByChild: "$value" is invalid.  Use Query.orderByValue() instead.');Vd("Query.orderByChild", a);Sh(this, "Query.orderByChild");var b = new E(a);if (b.e()) throw Error("Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.");
                        b = new pc(b);b = of(this.m, b);Qh(b);return new X(this.u, this.path, b, !0);
            };g.bg = function () {
                        y("Query.orderByKey", 0, 0, arguments.length);Sh(this, "Query.orderByKey");var a = of(this.m, tc);Qh(a);return new X(this.u, this.path, a, !0);
            };g.cg = function () {
                        y("Query.orderByPriority", 0, 0, arguments.length);Sh(this, "Query.orderByPriority");var a = of(this.m, H);Qh(a);return new X(this.u, this.path, a, !0);
            };
            g.dg = function () {
                        y("Query.orderByValue", 0, 0, arguments.length);Sh(this, "Query.orderByValue");var a = of(this.m, wc);Qh(a);return new X(this.u, this.path, a, !0);
            };g.Nd = function (a, b) {
                        y("Query.startAt", 0, 2, arguments.length);Od("Query.startAt", a, this.path, !0);Ud("Query.startAt", b);var c = this.m.Nd(a, b);Rh(c);Qh(c);if (this.m.ka) throw Error("Query.startAt: Starting point was already set (by another call to startAt or equalTo).");n(a) || (b = a = null);return new X(this.u, this.path, c, this.Nc);
            };
            g.gd = function (a, b) {
                        y("Query.endAt", 0, 2, arguments.length);Od("Query.endAt", a, this.path, !0);Ud("Query.endAt", b);var c = this.m.gd(a, b);Rh(c);Qh(c);if (this.m.na) throw Error("Query.endAt: Ending point was already set (by another call to endAt or equalTo).");return new X(this.u, this.path, c, this.Nc);
            };
            g.If = function (a, b) {
                        y("Query.equalTo", 1, 2, arguments.length);Od("Query.equalTo", a, this.path, !1);Ud("Query.equalTo", b);if (this.m.ka) throw Error("Query.equalTo: Starting point was already set (by another call to startAt or equalTo).");if (this.m.na) throw Error("Query.equalTo: Ending point was already set (by another call to endAt or equalTo).");return this.Nd(a, b).gd(a, b);
            };
            g.toString = function () {
                        y("Query.toString", 0, 0, arguments.length);for (var a = this.path, b = "", c = a.Y; c < a.o.length; c++) {
                                    "" !== a.o[c] && (b += "/" + encodeURIComponent(String(a.o[c])));
                        }return this.u.toString() + (b || "/");
            };g.toJSON = function () {
                        y("Query.toJSON", 0, 1, arguments.length);return this.toString();
            };g.ja = function () {
                        var a = ac(pf(this.m));return "{}" === a ? "default" : a;
            };
            g.isEqual = function (a) {
                        y("Query.isEqual", 1, 1, arguments.length);if (!(a instanceof X)) throw Error("Query.isEqual failed: First argument must be an instance of firebase.database.Query.");var b = this.u === a.u,
                            c = this.path.Z(a.path),
                            d = this.ja() === a.ja();return b && c && d;
            };
            function Th(a, b, c) {
                        var d = { cancel: null, Ma: null };if (b && c) d.cancel = b, B(a, 3, d.cancel, !0), d.Ma = c, ob(a, 4, d.Ma);else if (b) if ("object" === typeof b && null !== b) d.Ma = b;else if ("function" === typeof b) d.cancel = b;else throw Error(A(a, 3, !0) + " must either be a cancel callback or a context object.");return d;
            }X.prototype.on = X.prototype.gc;X.prototype.off = X.prototype.Ic;X.prototype.once = X.prototype.$f;X.prototype.limitToFirst = X.prototype.ne;X.prototype.limitToLast = X.prototype.oe;X.prototype.orderByChild = X.prototype.ag;
            X.prototype.orderByKey = X.prototype.bg;X.prototype.orderByPriority = X.prototype.cg;X.prototype.orderByValue = X.prototype.dg;X.prototype.startAt = X.prototype.Nd;X.prototype.endAt = X.prototype.gd;X.prototype.equalTo = X.prototype.If;X.prototype.toString = X.prototype.toString;X.prototype.isEqual = X.prototype.isEqual;gc(X.prototype, "ref", X.prototype.wb);function Y(a, b) {
                        this.ta = a;this.qa = b;
            }Y.prototype.cancel = function (a) {
                        y("Firebase.onDisconnect().cancel", 0, 1, arguments.length);B("Firebase.onDisconnect().cancel", 1, a, !0);var b = new ib();this.ta.xd(this.qa, jb(b, a));return b.ra;
            };Y.prototype.cancel = Y.prototype.cancel;Y.prototype.remove = function (a) {
                        y("Firebase.onDisconnect().remove", 0, 1, arguments.length);Wd("Firebase.onDisconnect().remove", this.qa);B("Firebase.onDisconnect().remove", 1, a, !0);var b = new ib();Ch(this.ta, this.qa, null, jb(b, a));return b.ra;
            };
            Y.prototype.remove = Y.prototype.remove;Y.prototype.set = function (a, b) {
                        y("Firebase.onDisconnect().set", 1, 2, arguments.length);Wd("Firebase.onDisconnect().set", this.qa);Od("Firebase.onDisconnect().set", a, this.qa, !1);B("Firebase.onDisconnect().set", 2, b, !0);var c = new ib();Ch(this.ta, this.qa, a, jb(c, b));return c.ra;
            };Y.prototype.set = Y.prototype.set;
            Y.prototype.Jb = function (a, b, c) {
                        y("Firebase.onDisconnect().setWithPriority", 2, 3, arguments.length);Wd("Firebase.onDisconnect().setWithPriority", this.qa);Od("Firebase.onDisconnect().setWithPriority", a, this.qa, !1);Sd("Firebase.onDisconnect().setWithPriority", 2, b);B("Firebase.onDisconnect().setWithPriority", 3, c, !0);var d = new ib();Dh(this.ta, this.qa, a, b, jb(d, c));return d.ra;
            };Y.prototype.setWithPriority = Y.prototype.Jb;
            Y.prototype.update = function (a, b) {
                        y("Firebase.onDisconnect().update", 1, 2, arguments.length);Wd("Firebase.onDisconnect().update", this.qa);if (ea(a)) {
                                    for (var c = {}, d = 0; d < a.length; ++d) {
                                                c["" + d] = a[d];
                                    }a = c;J("Passing an Array to Firebase.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.");
                        }Rd("Firebase.onDisconnect().update", a, this.qa);B("Firebase.onDisconnect().update", 2, b, !0);
                        c = new ib();Eh(this.ta, this.qa, a, jb(c, b));return c.ra;
            };Y.prototype.update = Y.prototype.update;var Z = { Mf: function Mf() {
                                    dg = Zf = !0;
                        } };Z.forceLongPolling = Z.Mf;Z.Nf = function () {
                        eg = !0;
            };Z.forceWebSockets = Z.Nf;Z.Tf = function () {
                        return Yf.isAvailable();
            };Z.isWebSocketsAvailable = Z.Tf;Z.lg = function (a, b) {
                        a.u.Ra.ze = b;
            };Z.setSecurityDebugCallback = Z.lg;Z.Be = function (a, b) {
                        a.u.Be(b);
            };Z.stats = Z.Be;Z.Ce = function (a, b) {
                        a.u.Ce(b);
            };Z.statsIncrementCounter = Z.Ce;Z.fd = function (a) {
                        return a.u.fd;
            };Z.dataUpdateCount = Z.fd;Z.Sf = function (a, b) {
                        a.u.je = b;
            };Z.interceptServerData = Z.Sf;function U(a, b) {
                        if (!(a instanceof Qg)) throw Error("new Firebase() no longer supported - use app.database().");X.call(this, a, b, mf, !1);this.then = void 0;this["catch"] = void 0;
            }la(U, X);g = U.prototype;g.getKey = function () {
                        y("Firebase.key", 0, 0, arguments.length);return this.path.e() ? null : Oc(this.path);
            };
            g.n = function (a) {
                        y("Firebase.child", 1, 1, arguments.length);if (ga(a)) a = String(a);else if (!(a instanceof E)) if (null === K(this.path)) {
                                    var b = a;b && (b = b.replace(/^\/*\.info(\/|$)/, "/"));Vd("Firebase.child", b);
                        } else Vd("Firebase.child", a);return new U(this.u, this.path.n(a));
            };g.getParent = function () {
                        y("Firebase.parent", 0, 0, arguments.length);var a = this.path.parent();return null === a ? null : new U(this.u, a);
            };
            g.Of = function () {
                        y("Firebase.ref", 0, 0, arguments.length);for (var a = this; null !== a.getParent();) {
                                    a = a.getParent();
                        }return a;
            };g.Gf = function () {
                        return this.u.Ya;
            };g.set = function (a, b) {
                        y("Firebase.set", 1, 2, arguments.length);Wd("Firebase.set", this.path);Od("Firebase.set", a, this.path, !1);B("Firebase.set", 2, b, !0);var c = new ib();this.u.Jb(this.path, a, null, jb(c, b));return c.ra;
            };
            g.update = function (a, b) {
                        y("Firebase.update", 1, 2, arguments.length);Wd("Firebase.update", this.path);if (ea(a)) {
                                    for (var c = {}, d = 0; d < a.length; ++d) {
                                                c["" + d] = a[d];
                                    }a = c;J("Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.");
                        }Rd("Firebase.update", a, this.path);B("Firebase.update", 2, b, !0);c = new ib();this.u.update(this.path, a, jb(c, b));return c.ra;
            };
            g.Jb = function (a, b, c) {
                        y("Firebase.setWithPriority", 2, 3, arguments.length);Wd("Firebase.setWithPriority", this.path);Od("Firebase.setWithPriority", a, this.path, !1);Sd("Firebase.setWithPriority", 2, b);B("Firebase.setWithPriority", 3, c, !0);if (".length" === this.getKey() || ".keys" === this.getKey()) throw "Firebase.setWithPriority failed: " + this.getKey() + " is a read-only object.";var d = new ib();this.u.Jb(this.path, a, b, jb(d, c));return d.ra;
            };
            g.remove = function (a) {
                        y("Firebase.remove", 0, 1, arguments.length);Wd("Firebase.remove", this.path);B("Firebase.remove", 1, a, !0);return this.set(null, a);
            };
            g.transaction = function (a, b, c) {
                        y("Firebase.transaction", 1, 3, arguments.length);Wd("Firebase.transaction", this.path);B("Firebase.transaction", 1, a, !1);B("Firebase.transaction", 2, b, !0);if (n(c) && "boolean" != typeof c) throw Error(A("Firebase.transaction", 3, !0) + "must be a boolean.");if (".length" === this.getKey() || ".keys" === this.getKey()) throw "Firebase.transaction failed: " + this.getKey() + " is a read-only object.";"undefined" === typeof c && (c = !0);var d = new ib();ha(b) && kb(d.ra);Gh(this.u, this.path, a, function (a, c, h) {
                                    a ? d.reject(a) : d.resolve(new Ph(c, h));ha(b) && b(a, c, h);
                        }, c);return d.ra;
            };g.kg = function (a, b) {
                        y("Firebase.setPriority", 1, 2, arguments.length);Wd("Firebase.setPriority", this.path);Sd("Firebase.setPriority", 1, a);B("Firebase.setPriority", 2, b, !0);var c = new ib();this.u.Jb(this.path.n(".priority"), a, null, jb(c, b));return c.ra;
            };
            g.push = function (a, b) {
                        y("Firebase.push", 0, 2, arguments.length);Wd("Firebase.push", this.path);Od("Firebase.push", a, this.path, !0);B("Firebase.push", 2, b, !0);var c = wh(this.u),
                            d = Kc(c),
                            c = this.n(d),
                            e = this.n(d),
                            d = null != a ? c.set(a, b).then(function () {
                                    return e;
                        }) : hb.resolve(e);c.then = q(d.then, d);c["catch"] = q(d.then, d, void 0);ha(b) && kb(d);return c;
            };g.ib = function () {
                        Wd("Firebase.onDisconnect", this.path);return new Y(this.u, this.path);
            };U.prototype.child = U.prototype.n;U.prototype.set = U.prototype.set;
            U.prototype.update = U.prototype.update;U.prototype.setWithPriority = U.prototype.Jb;U.prototype.remove = U.prototype.remove;U.prototype.transaction = U.prototype.transaction;U.prototype.setPriority = U.prototype.kg;U.prototype.push = U.prototype.push;U.prototype.onDisconnect = U.prototype.ib;gc(U.prototype, "database", U.prototype.Gf);gc(U.prototype, "key", U.prototype.getKey);gc(U.prototype, "parent", U.prototype.getParent);gc(U.prototype, "root", U.prototype.Of);if ("undefined" === typeof firebase) throw Error("Cannot install Firebase Database - be sure to load firebase-app.js first.");
            try {
                        firebase.INTERNAL.registerService("database", function (a) {
                                    var b = Ug.Vb(),
                                        c = a.options.databaseURL;n(c) || Vb("Can't determine Firebase Database URL.  Be sure to include databaseURL option when calling firebase.intializeApp().");var d = Wb(c),
                                        c = d.jc;Xd("Invalid Firebase Database URL", d);d.path.e() || Vb("Database URL must point to the root of a Firebase Database (not including a child path).");(d = w(b.lb, a.name)) && Vb("FIREBASE INTERNAL ERROR: Database initialized multiple times.");d = new Qg(c, b.wf, a);b.lb[a.name] = d;return d.Ya;
                        }, { Reference: U, Query: X, Database: Pg, enableLogging: Sb, INTERNAL: Z, TEST_ACCESS: W, ServerValue: Sg });
            } catch (Uh) {
                        Vb("Failed to register the Firebase Database Service (" + Uh + ")");
            };
            module.exports = firebase.database;
})();
}, 428, null, "firebase/database.js");
__d(/* firebase/storage.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.registerStorage = registerStorage;

var _string = require(430                              ); // 430 = ./storage/implementation/string

var _taskenums = require(433                                 ); // 433 = ./storage/implementation/taskenums

var _xhriopool = require(434                                 ); // 434 = ./storage/implementation/xhriopool

var _reference = require(440                  ); // 440 = ./storage/reference

var _service = require(456                ); // 456 = ./storage/service

var _app = require(420    ); // 420 = ./app

var _app2 = _interopRequireDefault(_app);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var STORAGE_TYPE = 'storage';

function factory(app, unused, opt_url) {
    return new _service.Service(app, new _xhriopool.XhrIoPool(), opt_url);
}
function registerStorage(instance) {
    instance.INTERNAL.registerService(STORAGE_TYPE, factory, {
        'TaskState': _taskenums.TaskState,
        'TaskEvent': _taskenums.TaskEvent,
        'StringFormat': _string.StringFormat,
        'Storage': _service.Service,
        'Reference': _reference.Reference
    }, undefined, true);
}
registerStorage(_app2.default);
}, 429, null, "firebase/storage.js");
__d(/* firebase/storage/implementation/string.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StringData = exports.StringFormat = undefined;
exports.formatValidator = formatValidator;
exports.dataFromString = dataFromString;
exports.utf8Bytes_ = utf8Bytes_;
exports.percentEncodedBytes_ = percentEncodedBytes_;
exports.base64Bytes_ = base64Bytes_;
exports.dataURLBytes_ = dataURLBytes_;
exports.dataURLContentType_ = dataURLContentType_;

var _error = require(431      ); // 431 = ./error

var errorsExports = _interopRequireWildcard(_error);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var StringFormat = exports.StringFormat = {
    RAW: 'raw',
    BASE64: 'base64',
    BASE64URL: 'base64url',
    DATA_URL: 'data_url'
};
function formatValidator(stringFormat) {
    switch (stringFormat) {
        case StringFormat.RAW:
        case StringFormat.BASE64:
        case StringFormat.BASE64URL:
        case StringFormat.DATA_URL:
            return;
        default:
            throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';
    }
}


var StringData = exports.StringData = function StringData(data, opt_contentType) {
    _classCallCheck(this, StringData);

    this.data = data;
    this.contentType = opt_contentType || null;
};

function dataFromString(format, string) {
    switch (format) {
        case StringFormat.RAW:
            return new StringData(utf8Bytes_(string));
        case StringFormat.BASE64:
        case StringFormat.BASE64URL:
            return new StringData(base64Bytes_(format, string));
        case StringFormat.DATA_URL:
            return new StringData(dataURLBytes_(string), dataURLContentType_(string));
    }

    throw errorsExports.unknown();
}
function utf8Bytes_(string) {
    var b = [];
    for (var i = 0; i < string.length; i++) {
        var c = string.charCodeAt(i);
        if (c <= 127) {
            b.push(c);
        } else {
            if (c <= 2047) {
                b.push(192 | c >> 6, 128 | c & 63);
            } else {
                if ((c & 64512) == 55296) {
                    var valid = i < string.length - 1 && (string.charCodeAt(i + 1) & 64512) == 56320;
                    if (!valid) {
                        b.push(239, 191, 189);
                    } else {
                        var hi = c;
                        var lo = string.charCodeAt(++i);
                        c = 65536 | (hi & 1023) << 10 | lo & 1023;
                        b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);
                    }
                } else {
                    if ((c & 64512) == 56320) {
                        b.push(239, 191, 189);
                    } else {
                        b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);
                    }
                }
            }
        }
    }
    return new Uint8Array(b);
}
function percentEncodedBytes_(string) {
    var decoded = void 0;
    try {
        decoded = decodeURIComponent(string);
    } catch (e) {
        throw errorsExports.invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');
    }
    return utf8Bytes_(decoded);
}
function base64Bytes_(format, string) {
    switch (format) {
        case StringFormat.BASE64:
            {
                var hasMinus = string.indexOf('-') !== -1;
                var hasUnder = string.indexOf('_') !== -1;
                if (hasMinus || hasUnder) {
                    var invalidChar = hasMinus ? '-' : '_';
                    throw errorsExports.invalidFormat(format, 'Invalid character \'' + invalidChar + '\' found: is it base64url encoded?');
                }
                break;
            }
        case StringFormat.BASE64URL:
            {
                var hasPlus = string.indexOf('+') !== -1;
                var hasSlash = string.indexOf('/') !== -1;
                if (hasPlus || hasSlash) {
                    var _invalidChar = hasPlus ? '+' : '/';
                    throw errorsExports.invalidFormat(format, 'Invalid character \'' + _invalidChar + '\' found: is it base64 encoded?');
                }
                string = string.replace(/-/g, '+').replace(/_/g, '/');
                break;
            }
    }
    var bytes = void 0;
    try {
        bytes = atob(string);
    } catch (e) {
        throw errorsExports.invalidFormat(format, 'Invalid character found');
    }
    var array = new Uint8Array(bytes.length);
    for (var i = 0; i < bytes.length; i++) {
        array[i] = bytes.charCodeAt(i);
    }
    return array;
}


var DataURLParts = function DataURLParts(dataURL) {
    _classCallCheck(this, DataURLParts);

    this.base64 = false;
    this.contentType = null;
    var matches = dataURL.match(/^data:([^,]+)?,/);
    if (matches === null) {
        throw errorsExports.invalidFormat(StringFormat.DATA_URL, 'Must be formatted \'data:[<mediatype>][;base64],<data>');
    }
    var middle = matches[1] || null;
    if (middle != null) {
        this.base64 = endsWith(middle, ';base64');
        this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;
    }
    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);
};

function dataURLBytes_(string) {
    var parts = new DataURLParts(string);
    if (parts.base64) {
        return base64Bytes_(StringFormat.BASE64, parts.rest);
    } else {
        return percentEncodedBytes_(parts.rest);
    }
}
function dataURLContentType_(string) {
    var parts = new DataURLParts(string);
    return parts.contentType;
}
function endsWith(s, end) {
    var longEnough = s.length >= end.length;
    if (!longEnough) {
        return false;
    }
    return s.substring(s.length - end.length) === end;
}
}, 430, null, "firebase/storage/implementation/string.js");
__d(/* firebase/storage/implementation/error.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Code = exports.errors = exports.FirebaseStorageError = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

exports.prependCode = prependCode;
exports.unknown = unknown;
exports.objectNotFound = objectNotFound;
exports.bucketNotFound = bucketNotFound;
exports.projectNotFound = projectNotFound;
exports.quotaExceeded = quotaExceeded;
exports.unauthenticated = unauthenticated;
exports.unauthorized = unauthorized;
exports.retryLimitExceeded = retryLimitExceeded;
exports.invalidChecksum = invalidChecksum;
exports.canceled = canceled;
exports.invalidEventName = invalidEventName;
exports.invalidUrl = invalidUrl;
exports.invalidDefaultBucket = invalidDefaultBucket;
exports.noDefaultBucket = noDefaultBucket;
exports.cannotSliceBlob = cannotSliceBlob;
exports.serverFileWrongSize = serverFileWrongSize;
exports.noDownloadURL = noDownloadURL;
exports.invalidArgument = invalidArgument;
exports.invalidArgumentCount = invalidArgumentCount;
exports.appDeleted = appDeleted;
exports.invalidRootOperation = invalidRootOperation;
exports.invalidFormat = invalidFormat;
exports.internalError = internalError;

var _constants = require(432          ); // 432 = ./constants

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var FirebaseStorageError = exports.FirebaseStorageError = function () {
    function FirebaseStorageError(code, message) {
        _classCallCheck(this, FirebaseStorageError);

        this.code_ = prependCode(code);
        this.message_ = 'Firebase Storage: ' + message;
        this.serverResponse_ = null;
        this.name_ = 'FirebaseError';
    }

    _createClass(FirebaseStorageError, [{
        key: 'codeProp',
        value: function codeProp() {
            return this.code;
        }
    }, {
        key: 'codeEquals',
        value: function codeEquals(code) {
            return prependCode(code) === this.codeProp();
        }
    }, {
        key: 'serverResponseProp',
        value: function serverResponseProp() {
            return this.serverResponse_;
        }
    }, {
        key: 'setServerResponseProp',
        value: function setServerResponseProp(serverResponse) {
            this.serverResponse_ = serverResponse;
        }
    }, {
        key: 'name',
        get: function get() {
            return this.name_;
        }
    }, {
        key: 'code',
        get: function get() {
            return this.code_;
        }
    }, {
        key: 'message',
        get: function get() {
            return this.message_;
        }
    }, {
        key: 'serverResponse',
        get: function get() {
            return this.serverResponse_;
        }
    }]);

    return FirebaseStorageError;
}();

var errors = exports.errors = {};
var Code = exports.Code = {
    UNKNOWN: 'unknown',
    OBJECT_NOT_FOUND: 'object-not-found',
    BUCKET_NOT_FOUND: 'bucket-not-found',
    PROJECT_NOT_FOUND: 'project-not-found',
    QUOTA_EXCEEDED: 'quota-exceeded',
    UNAUTHENTICATED: 'unauthenticated',
    UNAUTHORIZED: 'unauthorized',
    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',
    INVALID_CHECKSUM: 'invalid-checksum',
    CANCELED: 'canceled',

    INVALID_EVENT_NAME: 'invalid-event-name',
    INVALID_URL: 'invalid-url',
    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',
    NO_DEFAULT_BUCKET: 'no-default-bucket',
    CANNOT_SLICE_BLOB: 'cannot-slice-blob',
    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',
    NO_DOWNLOAD_URL: 'no-download-url',
    INVALID_ARGUMENT: 'invalid-argument',
    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',
    APP_DELETED: 'app-deleted',
    INVALID_ROOT_OPERATION: 'invalid-root-operation',
    INVALID_FORMAT: 'invalid-format',
    INTERNAL_ERROR: 'internal-error'
};
function prependCode(code) {
    return 'storage/' + code;
}
function unknown() {
    return new FirebaseStorageError(Code.UNKNOWN, 'An unknown error occurred, please check the error payload for ' + 'server response.');
}
function objectNotFound(path) {
    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, 'Object \'' + path + '\' does not exist.');
}
function bucketNotFound(bucket) {
    return new FirebaseStorageError(Code.BUCKET_NOT_FOUND, 'Bucket \'' + bucket + '\' does not exist.');
}
function projectNotFound(project) {
    return new FirebaseStorageError(Code.PROJECT_NOT_FOUND, 'Project \'' + project + '\' does not exist.');
}
function quotaExceeded(bucket) {
    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, 'Quota for bucket \'' + bucket + '\' exceeded, please view quota on ' + 'https://firebase.google.com/pricing/.');
}
function unauthenticated() {
    return new FirebaseStorageError(Code.UNAUTHENTICATED, 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.');
}
function unauthorized(path) {
    return new FirebaseStorageError(Code.UNAUTHORIZED, 'User does not have permission to access \'' + path + '\'.');
}
function retryLimitExceeded() {
    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');
}
function invalidChecksum(path, checksum, calculated) {
    return new FirebaseStorageError(Code.INVALID_CHECKSUM, 'Uploaded/downloaded object \'' + path + '\' has checksum \'' + checksum + '\' which does not match \'' + calculated + '\'. Please retry the upload/download.');
}
function canceled() {
    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');
}
function invalidEventName(name) {
    return new FirebaseStorageError(Code.INVALID_EVENT_NAME, 'Invalid event name \'' + name + '\'.');
}
function invalidUrl(url) {
    return new FirebaseStorageError(Code.INVALID_URL, 'Invalid URL \'' + url + '\'.');
}
function invalidDefaultBucket(bucket) {
    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, 'Invalid default bucket \'' + bucket + '\'.');
}
function noDefaultBucket() {
    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + 'found. Did you set the \'' + _constants.configOption + '\' property when initializing the app?');
}
function cannotSliceBlob() {
    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');
}
function serverFileWrongSize() {
    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');
}
function noDownloadURL() {
    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');
}
function invalidArgument(index, fnName, message) {
    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);
}
function invalidArgumentCount(argMin, argMax, fnName, real) {
    var countPart = void 0;
    var plural = void 0;
    if (argMin === argMax) {
        countPart = argMin;
        plural = argMin === 1 ? 'argument' : 'arguments';
    } else {
        countPart = 'between ' + argMin + ' and ' + argMax;
        plural = 'arguments';
    }
    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');
}
function appDeleted() {
    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');
}

function invalidRootOperation(name) {
    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, 'The operation \'' + name + '\' cannot be performed on a root reference, create a non-root ' + 'reference using child, such as .child(\'file.png\').');
}

function invalidFormat(format, message) {
    return new FirebaseStorageError(Code.INVALID_FORMAT, 'String does not match format \'' + format + '\': ' + message);
}

function internalError(message) {
    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);
}
}, 431, null, "firebase/storage/implementation/error.js");
__d(/* firebase/storage/implementation/constants.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setDomainBase = setDomainBase;
var domainBase = exports.domainBase = 'https://firebasestorage.googleapis.com';

var downloadBase = exports.downloadBase = 'https://firebasestorage.googleapis.com';

var apiBaseUrl = exports.apiBaseUrl = '/v0';

var apiUploadBaseUrl = exports.apiUploadBaseUrl = '/v0';
function setDomainBase(domainBase) {
  domainBase = domainBase;
}
var configOption = exports.configOption = 'storageBucket';

var shortMaxOperationRetryTime = exports.shortMaxOperationRetryTime = 1 * 60 * 1000;

var defaultMaxOperationRetryTime = exports.defaultMaxOperationRetryTime = 2 * 60 * 1000;

var defaultMaxUploadRetryTime = exports.defaultMaxUploadRetryTime = 10 * 60 * 100;

var minSafeInteger = exports.minSafeInteger = -9007199254740991;
}, 432, null, "firebase/storage/implementation/constants.js");
__d(/* firebase/storage/implementation/taskenums.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.taskStateFromInternalTaskState = taskStateFromInternalTaskState;

var TaskEvent = exports.TaskEvent = {
    STATE_CHANGED: 'state_changed'
};
var InternalTaskState = exports.InternalTaskState = {
    RUNNING: 'running',
    PAUSING: 'pausing',
    PAUSED: 'paused',
    SUCCESS: 'success',
    CANCELING: 'canceling',
    CANCELED: 'canceled',
    ERROR: 'error'
};
var TaskState = exports.TaskState = {
    RUNNING: 'running',

    PAUSED: 'paused',

    SUCCESS: 'success',

    CANCELED: 'canceled',

    ERROR: 'error'
};
function taskStateFromInternalTaskState(state) {
    switch (state) {
        case InternalTaskState.RUNNING:
        case InternalTaskState.PAUSING:
        case InternalTaskState.CANCELING:
            return TaskState.RUNNING;
        case InternalTaskState.PAUSED:
            return TaskState.PAUSED;
        case InternalTaskState.SUCCESS:
            return TaskState.SUCCESS;
        case InternalTaskState.CANCELED:
            return TaskState.CANCELED;
        case InternalTaskState.ERROR:
            return TaskState.ERROR;
        default:
            return TaskState.ERROR;
    }
}
}, 433, null, "firebase/storage/implementation/taskenums.js");
__d(/* firebase/storage/implementation/xhriopool.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.XhrIoPool = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _xhrio_network = require(435              ); // 435 = ./xhrio_network

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var XhrIoPool = exports.XhrIoPool = function () {
    function XhrIoPool() {
        _classCallCheck(this, XhrIoPool);
    }

    _createClass(XhrIoPool, [{
        key: 'createXhrIo',
        value: function createXhrIo() {
            return new _xhrio_network.NetworkXhrIo();
        }
    }]);

    return XhrIoPool;
}();
}, 434, null, "firebase/storage/implementation/xhriopool.js");
__d(/* firebase/storage/implementation/xhrio_network.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NetworkXhrIo = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _error = require(431      ); // 431 = ./error

var errorsExports = _interopRequireWildcard(_error);

var _object = require(436       ); // 436 = ./object

var object = _interopRequireWildcard(_object);

var _promise_external = require(437                 ); // 437 = ./promise_external

var promiseimpl = _interopRequireWildcard(_promise_external);

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

var _xhrio = require(439      ); // 439 = ./xhrio

var XhrIoExports = _interopRequireWildcard(_xhrio);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var NetworkXhrIo = exports.NetworkXhrIo = function () {
    function NetworkXhrIo() {
        var _this = this;

        _classCallCheck(this, NetworkXhrIo);

        this.sent_ = false;
        this.xhr_ = new XMLHttpRequest();
        this.errorCode_ = XhrIoExports.ErrorCode.NO_ERROR;
        this.sendPromise_ = promiseimpl.make(function (resolve) {
            _this.xhr_.addEventListener('abort', function () {
                _this.errorCode_ = XhrIoExports.ErrorCode.ABORT;
                resolve(_this);
            });
            _this.xhr_.addEventListener('error', function () {
                _this.errorCode_ = XhrIoExports.ErrorCode.NETWORK_ERROR;
                resolve(_this);
            });
            _this.xhr_.addEventListener('load', function () {
                resolve(_this);
            });
        });
    }


    _createClass(NetworkXhrIo, [{
        key: 'send',
        value: function send(url, method, opt_body, opt_headers) {
            var _this2 = this;

            if (this.sent_) {
                throw errorsExports.internalError('cannot .send() more than once');
            }
            this.sent_ = true;
            this.xhr_.open(method, url, true);
            if (type.isDef(opt_headers)) {
                object.forEach(opt_headers, function (key, val) {
                    _this2.xhr_.setRequestHeader(key, val.toString());
                });
            }
            if (type.isDef(opt_body)) {
                this.xhr_.send(opt_body);
            } else {
                this.xhr_.send();
            }
            return this.sendPromise_;
        }
    }, {
        key: 'getErrorCode',
        value: function getErrorCode() {
            if (!this.sent_) {
                throw errorsExports.internalError('cannot .getErrorCode() before sending');
            }
            return this.errorCode_;
        }
    }, {
        key: 'getStatus',
        value: function getStatus() {
            if (!this.sent_) {
                throw errorsExports.internalError('cannot .getStatus() before sending');
            }
            try {
                return this.xhr_.status;
            } catch (e) {
                return -1;
            }
        }
    }, {
        key: 'getResponseText',
        value: function getResponseText() {
            if (!this.sent_) {
                throw errorsExports.internalError('cannot .getResponseText() before sending');
            }
            return this.xhr_.responseText;
        }
    }, {
        key: 'abort',
        value: function abort() {
            this.xhr_.abort();
        }
    }, {
        key: 'getResponseHeader',
        value: function getResponseHeader(header) {
            return this.xhr_.getResponseHeader(header);
        }
    }, {
        key: 'addUploadProgressListener',
        value: function addUploadProgressListener(listener) {
            if (type.isDef(this.xhr_.upload)) {
                this.xhr_.upload.addEventListener('progress', listener);
            }
        }
    }, {
        key: 'removeUploadProgressListener',
        value: function removeUploadProgressListener(listener) {
            if (type.isDef(this.xhr_.upload)) {
                this.xhr_.upload.removeEventListener('progress', listener);
            }
        }
    }]);

    return NetworkXhrIo;
}();
}, 435, null, "firebase/storage/implementation/xhrio_network.js");
__d(/* firebase/storage/implementation/object.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.contains = contains;
exports.forEach = forEach;
exports.clone = clone;
function contains(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
}
function forEach(obj, f) {
    for (var key in obj) {
        if (contains(obj, key)) {
            f(key, obj[key]);
        }
    }
}
function clone(obj) {
    if (obj == null) {
        return {};
    }
    var c = {};
    forEach(obj, function (key, val) {
        c[key] = val;
    });
    return c;
}
}, 436, null, "firebase/storage/implementation/object.js");
__d(/* firebase/storage/implementation/promise_external.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.make = make;
exports.resolve = resolve;
exports.reject = reject;

var _shared_promise = require(423                       ); // 423 = ../../app/shared_promise

function make(resolver) {
  return new _shared_promise.local.Promise(resolver);
}

function resolve(value) {
  return _shared_promise.local.Promise.resolve(value);
}
function reject(error) {
  return _shared_promise.local.Promise.reject(error);
}
}, 437, null, "firebase/storage/implementation/promise_external.js");
__d(/* firebase/storage/implementation/type.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
    return typeof obj;
} : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.isDef = isDef;
exports.isJustDef = isJustDef;
exports.isFunction = isFunction;
exports.isObject = isObject;
exports.isNonNullObject = isNonNullObject;
exports.isNonArrayObject = isNonArrayObject;
exports.isString = isString;
exports.isNumber = isNumber;
exports.isNativeBlob = isNativeBlob;
exports.isNativeBlobDefined = isNativeBlobDefined;
function isDef(p) {
    return p != null;
}
function isJustDef(p) {
    return p !== void 0;
}
function isFunction(p) {
    return typeof p === 'function';
}
function isObject(p) {
    return (typeof p === 'undefined' ? 'undefined' : _typeof(p)) === 'object';
}
function isNonNullObject(p) {
    return isObject(p) && p !== null;
}
function isNonArrayObject(p) {
    return isObject(p) && !Array.isArray(p);
}
function isString(p) {
    return typeof p === 'string' || p instanceof String;
}
function isNumber(p) {
    return typeof p === 'number' || p instanceof Number;
}
function isNativeBlob(p) {
    return isNativeBlobDefined() && p instanceof Blob;
}
function isNativeBlobDefined() {
    return typeof Blob !== 'undefined';
}
}, 438, null, "firebase/storage/implementation/type.js");
__d(/* firebase/storage/implementation/xhrio.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var ErrorCode = exports.ErrorCode = undefined;
(function (ErrorCode) {
    ErrorCode[ErrorCode["NO_ERROR"] = 0] = "NO_ERROR";
    ErrorCode[ErrorCode["NETWORK_ERROR"] = 1] = "NETWORK_ERROR";
    ErrorCode[ErrorCode["ABORT"] = 2] = "ABORT";
})(ErrorCode || (exports.ErrorCode = ErrorCode = {}));
}, 439, null, "firebase/storage/implementation/xhrio.js");
__d(/* firebase/storage/reference.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Reference = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _args = require(441                    ); // 441 = ./implementation/args

var args = _interopRequireWildcard(_args);

var _blob = require(447                    ); // 447 = ./implementation/blob

var _error = require(431                     ); // 431 = ./implementation/error

var errorsExports = _interopRequireWildcard(_error);

var _location = require(444                        ); // 444 = ./implementation/location

var _metadata = require(442                        ); // 442 = ./implementation/metadata

var metadata = _interopRequireWildcard(_metadata);

var _object = require(436                      ); // 436 = ./implementation/object

var object = _interopRequireWildcard(_object);

var _path = require(445                    ); // 445 = ./implementation/path

var path = _interopRequireWildcard(_path);

var _requests = require(449                        ); // 449 = ./implementation/requests

var requests = _interopRequireWildcard(_requests);

var _string = require(430                      ); // 430 = ./implementation/string

var fbsString = _interopRequireWildcard(_string);

var _type = require(438                    ); // 438 = ./implementation/type

var type = _interopRequireWildcard(_type);

var _task = require(452     ); // 452 = ./task

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var Reference = exports.Reference = function () {
    function Reference(authWrapper, location) {
        _classCallCheck(this, Reference);

        this.authWrapper = authWrapper;
        if (location instanceof _location.Location) {
            this.location = location;
        } else {
            this.location = _location.Location.makeFromUrl(location);
        }
    }


    _createClass(Reference, [{
        key: 'toString',
        value: function toString() {
            args.validate('toString', [], arguments);
            return 'gs://' + this.location.bucket + '/' + this.location.path;
        }
    }, {
        key: 'newRef',
        value: function newRef(authWrapper, location) {
            return new Reference(authWrapper, location);
        }
    }, {
        key: 'mappings',
        value: function mappings() {
            return metadata.getMappings();
        }
    }, {
        key: 'child',
        value: function child(childPath) {
            args.validate('child', [args.stringSpec()], arguments);
            var newPath = path.child(this.location.path, childPath);
            var location = new _location.Location(this.location.bucket, newPath);
            return this.newRef(this.authWrapper, location);
        }
    }, {
        key: 'put',

        value: function put(data) {
            var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            args.validate('put', [args.uploadDataSpec(), args.metadataSpec(true)], arguments);
            this.throwIfRoot_('put');
            return new _task.UploadTask(this, this.authWrapper, this.location, this.mappings(), new _blob.FbsBlob(data), metadata);
        }
    }, {
        key: 'putString',
        value: function putString(string) {
            var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _string.StringFormat.RAW;
            var opt_metadata = arguments[2];

            args.validate('putString', [args.stringSpec(), args.stringSpec(fbsString.formatValidator, true), args.metadataSpec(true)], arguments);
            this.throwIfRoot_('putString');
            var data = fbsString.dataFromString(format, string);
            var metadata = object.clone(opt_metadata);
            if (!type.isDef(metadata['contentType']) && type.isDef(data.contentType)) {
                metadata['contentType'] = data.contentType;
            }
            return new _task.UploadTask(this, this.authWrapper, this.location, this.mappings(), new _blob.FbsBlob(data.data, true), metadata);
        }
    }, {
        key: 'delete',
        value: function _delete() {
            args.validate('delete', [], arguments);
            this.throwIfRoot_('delete');
            var self = this;
            return this.authWrapper.getAuthToken().then(function (authToken) {
                var requestInfo = requests.deleteObject(self.authWrapper, self.location);
                return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
            });
        }
    }, {
        key: 'getMetadata',
        value: function getMetadata() {
            args.validate('getMetadata', [], arguments);
            this.throwIfRoot_('getMetadata');
            var self = this;
            return this.authWrapper.getAuthToken().then(function (authToken) {
                var requestInfo = requests.getMetadata(self.authWrapper, self.location, self.mappings());
                return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
            });
        }
    }, {
        key: 'updateMetadata',
        value: function updateMetadata(metadata) {
            args.validate('updateMetadata', [args.metadataSpec()], arguments);
            this.throwIfRoot_('updateMetadata');
            var self = this;
            return this.authWrapper.getAuthToken().then(function (authToken) {
                var requestInfo = requests.updateMetadata(self.authWrapper, self.location, metadata, self.mappings());
                return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
            });
        }
    }, {
        key: 'getDownloadURL',
        value: function getDownloadURL() {
            args.validate('getDownloadURL', [], arguments);
            this.throwIfRoot_('getDownloadURL');
            return this.getMetadata().then(function (metadata) {
                var url = metadata['downloadURLs'][0];
                if (type.isDef(url)) {
                    return url;
                } else {
                    throw errorsExports.noDownloadURL();
                }
            });
        }
    }, {
        key: 'throwIfRoot_',
        value: function throwIfRoot_(name) {
            if (this.location.path === '') {
                throw errorsExports.invalidRootOperation(name);
            }
        }
    }, {
        key: 'parent',
        get: function get() {
            var newPath = path.parent(this.location.path);
            if (newPath === null) {
                return null;
            }
            var location = new _location.Location(this.location.bucket, newPath);
            return this.newRef(this.authWrapper, location);
        }
    }, {
        key: 'root',
        get: function get() {
            var location = new _location.Location(this.location.bucket, '');
            return this.newRef(this.authWrapper, location);
        }
    }, {
        key: 'bucket',
        get: function get() {
            return this.location.bucket;
        }
    }, {
        key: 'fullPath',
        get: function get() {
            return this.location.path;
        }
    }, {
        key: 'name',
        get: function get() {
            return path.lastComponent(this.location.path);
        }
    }, {
        key: 'storage',
        get: function get() {
            return this.authWrapper.service();
        }
    }]);

    return Reference;
}();
}, 440, null, "firebase/storage/reference.js");
__d(/* firebase/storage/implementation/args.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ArgSpec = undefined;
exports.validate = validate;
exports.and_ = and_;
exports.stringSpec = stringSpec;
exports.uploadDataSpec = uploadDataSpec;
exports.metadataSpec = metadataSpec;
exports.nonNegativeNumberSpec = nonNegativeNumberSpec;
exports.looseObjectSpec = looseObjectSpec;
exports.nullFunctionSpec = nullFunctionSpec;

var _error = require(431      ); // 431 = ./error

var errorsExports = _interopRequireWildcard(_error);

var _metadata = require(442         ); // 442 = ./metadata

var MetadataUtils = _interopRequireWildcard(_metadata);

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function validate(name, specs, passed) {
    var minArgs = specs.length;
    var maxArgs = specs.length;
    for (var i = 0; i < specs.length; i++) {
        if (specs[i].optional) {
            minArgs = i;
            break;
        }
    }
    var validLength = minArgs <= passed.length && passed.length <= maxArgs;
    if (!validLength) {
        throw errorsExports.invalidArgumentCount(minArgs, maxArgs, name, passed.length);
    }
    for (var _i = 0; _i < passed.length; _i++) {
        try {
            specs[_i].validator(passed[_i]);
        } catch (e) {
            if (e instanceof Error) {
                throw errorsExports.invalidArgument(_i, name, e.message);
            } else {
                throw errorsExports.invalidArgument(_i, name, e);
            }
        }
    }
}


var ArgSpec = exports.ArgSpec = function ArgSpec(validator, opt_optional) {
    _classCallCheck(this, ArgSpec);

    var self = this;
    this.validator = function (p) {
        if (self.optional && !type.isJustDef(p)) {
            return;
        }
        validator(p);
    };
    this.optional = !!opt_optional;
};

function and_(v1, v2) {
    return function (p) {
        v1(p);
        v2(p);
    };
}
function stringSpec(opt_validator, opt_optional) {
    function stringValidator(p) {
        if (!type.isString(p)) {
            throw 'Expected string.';
        }
    }
    var validator = void 0;
    if (opt_validator) {
        validator = and_(stringValidator, opt_validator);
    } else {
        validator = stringValidator;
    }
    return new ArgSpec(validator, opt_optional);
}
function uploadDataSpec() {
    return new ArgSpec(function (p) {
        var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || type.isNativeBlobDefined() && p instanceof Blob;
        if (!valid) {
            throw 'Expected Blob or File.';
        }
    });
}
function metadataSpec(opt_optional) {
    return new ArgSpec(MetadataUtils.metadataValidator, opt_optional);
}
function nonNegativeNumberSpec() {
    return new ArgSpec(function (p) {
        var valid = type.isNumber(p) && p >= 0;
        if (!valid) {
            throw 'Expected a number 0 or greater.';
        }
    });
}
function looseObjectSpec(opt_validator, opt_optional) {
    return new ArgSpec(function (p) {
        var isLooseObject = p === null || type.isDef(p) && p instanceof Object;
        if (!isLooseObject) {
            throw 'Expected an Object.';
        }
        if (opt_validator !== undefined && opt_validator !== null) {
            opt_validator(p);
        }
    }, opt_optional);
}
function nullFunctionSpec(opt_optional) {
    return new ArgSpec(function (p) {
        var valid = p === null || type.isFunction(p);
        if (!valid) {
            throw 'Expected a Function.';
        }
    }, opt_optional);
}
}, 441, null, "firebase/storage/implementation/args.js");
__d(/* firebase/storage/implementation/metadata.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Mapping = undefined;
exports.noXform_ = noXform_;
exports.xformPath = xformPath;
exports.getMappings = getMappings;
exports.addRef = addRef;
exports.fromResource = fromResource;
exports.fromResourceString = fromResourceString;
exports.toResourceString = toResourceString;
exports.metadataValidator = metadataValidator;

var _json = require(443     ); // 443 = ./json

var json = _interopRequireWildcard(_json);

var _location = require(444         ); // 444 = ./location

var _path = require(445     ); // 445 = ./path

var path = _interopRequireWildcard(_path);

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

var _url = require(446    ); // 446 = ./url

var UrlUtils = _interopRequireWildcard(_url);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function noXform_(metadata, value) {
    return value;
}


var Mapping = exports.Mapping = function Mapping(server, opt_local, opt_writable, opt_xform) {
    _classCallCheck(this, Mapping);

    this.server = server;
    this.local = opt_local || server;
    this.writable = !!opt_writable;
    this.xform = opt_xform || noXform_;
};

var mappings_ = null;
function xformPath(fullPath) {
    var valid = type.isString(fullPath);
    if (!valid || fullPath.length < 2) {
        return fullPath;
    } else {
        fullPath = fullPath;
        return path.lastComponent(fullPath);
    }
}
function getMappings() {
    if (mappings_) {
        return mappings_;
    }
    var mappings = [];
    mappings.push(new Mapping('bucket'));
    mappings.push(new Mapping('generation'));
    mappings.push(new Mapping('metageneration'));
    mappings.push(new Mapping('name', 'fullPath', true));

    var nameMapping = new Mapping('name');
    nameMapping.xform = function (metadata, fullPath) {
        return xformPath(fullPath);
    };
    mappings.push(nameMapping);


    var sizeMapping = new Mapping('size');
    sizeMapping.xform = function (metadata, size) {
        if (type.isDef(size)) {
            return +size;
        } else {
            return size;
        }
    };
    mappings.push(sizeMapping);
    mappings.push(new Mapping('timeCreated'));
    mappings.push(new Mapping('updated'));
    mappings.push(new Mapping('md5Hash', null, true));
    mappings.push(new Mapping('cacheControl', null, true));
    mappings.push(new Mapping('contentDisposition', null, true));
    mappings.push(new Mapping('contentEncoding', null, true));
    mappings.push(new Mapping('contentLanguage', null, true));
    mappings.push(new Mapping('contentType', null, true));
    mappings.push(new Mapping('metadata', 'customMetadata', true));


    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, function (metadata, tokens) {
        var valid = type.isString(tokens) && tokens.length > 0;
        if (!valid) {
            return [];
        }
        var encode = encodeURIComponent;
        var tokensList = tokens.split(',');
        var urls = tokensList.map(function (token) {
            var bucket = metadata['bucket'];
            var path = metadata['fullPath'];
            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);
            var base = UrlUtils.makeDownloadUrl(urlPart);
            var queryString = UrlUtils.makeQueryString({ 'alt': 'media', 'token': token });
            return base + queryString;
        });
        return urls;
    }));
    mappings_ = mappings;
    return mappings_;
}
function addRef(metadata, authWrapper) {
    Object.defineProperty(metadata, 'ref', { get: function get() {
            var bucket = metadata['bucket'];
            var path = metadata['fullPath'];
            var loc = new _location.Location(bucket, path);
            return authWrapper.makeStorageReference(loc);
        } });
}
function fromResource(authWrapper, resource, mappings) {
    var metadata = {};
    metadata['type'] = 'file';
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);
    }
    addRef(metadata, authWrapper);
    return metadata;
}
function fromResourceString(authWrapper, resourceString, mappings) {
    var obj = json.jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }

    return fromResource(authWrapper, obj, mappings);
}
function toResourceString(metadata, mappings) {
    var resource = {};
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        if (mapping.writable) {
            resource[mapping.server] = metadata[mapping.local];
        }
    }
    return JSON.stringify(resource);
}
function metadataValidator(p) {
    var validType = p && type.isObject(p);
    if (!validType) {
        throw 'Expected Metadata object.';
    }
    for (var key in p) {
        var val = p[key];
        if (key === 'customMetadata') {
            if (!type.isObject(val)) {
                throw 'Expected object for \'customMetadata\' mapping.';
            }
        } else {
            if (type.isNonNullObject(val)) {
                throw 'Mapping for \'' + key + '\' cannot be an object.';
            }
        }
    }
}
}, 442, null, "firebase/storage/implementation/metadata.js");
__d(/* firebase/storage/implementation/json.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.jsonObjectOrNull = jsonObjectOrNull;

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function jsonObjectOrNull(s) {
    var obj = void 0;
    try {
        obj = JSON.parse(s);
    } catch (e) {
        return null;
    }
    if (type.isNonArrayObject(obj)) {
        return obj;
    } else {
        return null;
    }
}
}, 443, null, "firebase/storage/implementation/json.js");
__d(/* firebase/storage/implementation/location.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Location = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _error = require(431      ); // 431 = ./error

var errorsExports = _interopRequireWildcard(_error);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var Location = exports.Location = function () {
    function Location(bucket, path) {
        _classCallCheck(this, Location);

        this.bucket = bucket;
        this.path_ = path;
    }

    _createClass(Location, [{
        key: 'fullServerUrl',
        value: function fullServerUrl() {
            var encode = encodeURIComponent;
            return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);
        }
    }, {
        key: 'bucketOnlyServerUrl',
        value: function bucketOnlyServerUrl() {
            var encode = encodeURIComponent;
            return '/b/' + encode(this.bucket) + '/o';
        }
    }, {
        key: 'path',
        get: function get() {
            return this.path_;
        }
    }], [{
        key: 'makeFromBucketSpec',
        value: function makeFromBucketSpec(bucketString) {
            var bucketLocation = void 0;
            try {
                bucketLocation = Location.makeFromUrl(bucketString);
            } catch (e) {
                return new Location(bucketString, '');
            }
            if (bucketLocation.path === '') {
                return bucketLocation;
            } else {
                throw errorsExports.invalidDefaultBucket(bucketString);
            }
        }
    }, {
        key: 'makeFromUrl',
        value: function makeFromUrl(url) {
            var location = null;
            var bucketDomain = '([A-Za-z0-9.\\-]+)';

            var gsRegex = new RegExp('^gs://' + bucketDomain + '(/(.*))?$', 'i');

            var httpRegex = new RegExp('^https?://firebasestorage\\.googleapis\\.com/' + 'v[A-Za-z0-9_]+' + '/b/' + bucketDomain + '/o' + '(/([^?#]*).*)?$', 'i');

            var groups = [{ regex: gsRegex, indices: { bucket: 1, path: 3 }, postModify: function postModify(loc) {
                    if (loc.path.charAt(loc.path.length - 1) === '/') {
                        loc.path_ = loc.path_.slice(0, -1);
                    }
                } }, { regex: httpRegex, indices: { bucket: 1, path: 3 }, postModify: function postModify(loc) {
                    loc.path_ = decodeURIComponent(loc.path);
                } }];
            for (var i = 0; i < groups.length; i++) {
                var group = groups[i];
                var captures = group.regex.exec(url);
                if (captures) {
                    var bucketValue = captures[group.indices.bucket];
                    var pathValue = captures[group.indices.path];
                    if (!pathValue) {
                        pathValue = '';
                    }
                    location = new Location(bucketValue, pathValue);
                    group.postModify(location);
                    break;
                }
            }
            if (location == null) {
                throw errorsExports.invalidUrl(url);
            }
            return location;
        }
    }]);

    return Location;
}();
}, 444, null, "firebase/storage/implementation/location.js");
__d(/* firebase/storage/implementation/path.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parent = parent;
exports.child = child;
exports.lastComponent = lastComponent;
function parent(path) {
    if (path.length == 0) {
        return null;
    }
    var index = path.lastIndexOf('/');
    if (index === -1) {
        return '';
    }
    var newPath = path.slice(0, index);
    return newPath;
}
function child(path, childPath) {
    var canonicalChildPath = childPath.split('/').filter(function (component) {
        return component.length > 0;
    }).join('/');
    if (path.length === 0) {
        return canonicalChildPath;
    } else {
        return path + '/' + canonicalChildPath;
    }
}

function lastComponent(path) {
    var index = path.lastIndexOf('/', path.length - 2);
    if (index === -1) {
        return path;
    } else {
        return path.slice(index + 1);
    }
}
}, 445, null, "firebase/storage/implementation/path.js");
__d(/* firebase/storage/implementation/url.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.makeNormalUrl = makeNormalUrl;
exports.makeDownloadUrl = makeDownloadUrl;
exports.makeUploadUrl = makeUploadUrl;
exports.makeQueryString = makeQueryString;

var _constants = require(432          ); // 432 = ./constants

var constants = _interopRequireWildcard(_constants);

var _object = require(436       ); // 436 = ./object

var object = _interopRequireWildcard(_object);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function makeNormalUrl(urlPart) {
    return constants.domainBase + constants.apiBaseUrl + urlPart;
}
function makeDownloadUrl(urlPart) {
    return constants.downloadBase + constants.apiBaseUrl + urlPart;
}
function makeUploadUrl(urlPart) {
    return constants.domainBase + constants.apiUploadBaseUrl + urlPart;
}
function makeQueryString(params) {
    var encode = encodeURIComponent;
    var queryPart = '?';
    object.forEach(params, function (key, val) {
        var nextPart = encode(key) + '=' + encode(val);
        queryPart = queryPart + nextPart + '&';
    });

    queryPart = queryPart.slice(0, -1);
    return queryPart;
}
}, 446, null, "firebase/storage/implementation/url.js");
__d(/* firebase/storage/implementation/blob.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FbsBlob = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _fs = require(448   ); // 448 = ./fs

var fs = _interopRequireWildcard(_fs);

var _string = require(430       ); // 430 = ./string

var string = _interopRequireWildcard(_string);

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var FbsBlob = exports.FbsBlob = function () {
    function FbsBlob(data, opt_elideCopy) {
        _classCallCheck(this, FbsBlob);

        var size = 0;
        var blobType = '';
        if (type.isNativeBlob(data)) {
            this.data_ = data;
            size = data.size;
            blobType = data.type;
        } else if (data instanceof ArrayBuffer) {
            if (opt_elideCopy) {
                this.data_ = new Uint8Array(data);
            } else {
                this.data_ = new Uint8Array(data.byteLength);
                this.data_.set(new Uint8Array(data));
            }
            size = this.data_.length;
        } else if (data instanceof Uint8Array) {
            if (opt_elideCopy) {
                this.data_ = data;
            } else {
                this.data_ = new Uint8Array(data.length);
                this.data_.set(data);
            }
            size = data.length;
        }
        this.size_ = size;
        this.type_ = blobType;
    }

    _createClass(FbsBlob, [{
        key: 'size',
        value: function size() {
            return this.size_;
        }
    }, {
        key: 'type',
        value: function value() {
            return this.type_;
        }
    }, {
        key: 'slice',
        value: function slice(startByte, endByte) {
            if (type.isNativeBlob(this.data_)) {
                var realBlob = this.data_;
                var sliced = fs.sliceBlob(realBlob, startByte, endByte);
                if (sliced === null) {
                    return null;
                }
                return new FbsBlob(sliced);
            } else {
                var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);
                return new FbsBlob(slice, true);
            }
        }
    }, {
        key: 'uploadData',
        value: function uploadData() {
            return this.data_;
        }
    }], [{
        key: 'getBlob',
        value: function getBlob() {
            for (var _len = arguments.length, var_args = Array(_len), _key = 0; _key < _len; _key++) {
                var_args[_key] = arguments[_key];
            }

            if (type.isNativeBlobDefined()) {
                var blobby = var_args.map(function (val) {
                    if (val instanceof FbsBlob) {
                        return val.data_;
                    } else {
                        return val;
                    }
                });
                return new FbsBlob(fs.getBlob.apply(null, blobby));
            } else {
                var uint8Arrays = var_args.map(function (val) {
                    if (type.isString(val)) {
                        return string.dataFromString(_string.StringFormat.RAW, val).data;
                    } else {
                        return val.data_;
                    }
                });
                var finalLength = 0;
                uint8Arrays.forEach(function (array) {
                    finalLength += array.byteLength;
                });
                var merged = new Uint8Array(finalLength);
                var index = 0;
                uint8Arrays.forEach(function (array) {
                    for (var i = 0; i < array.length; i++) {
                        merged[index++] = array[i];
                    }
                });
                return new FbsBlob(merged, true);
            }
        }
    }]);

    return FbsBlob;
}();
}, 447, null, "firebase/storage/implementation/blob.js");
__d(/* firebase/storage/implementation/fs.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getBlob = getBlob;
exports.sliceBlob = sliceBlob;

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function getBlobBuilder() {
    if (typeof BlobBuilder !== 'undefined') {
        return BlobBuilder;
    } else if (typeof WebKitBlobBuilder !== 'undefined') {
        return WebKitBlobBuilder;
    } else {
        return undefined;
    }
}

function getBlob() {
    var BlobBuilder = getBlobBuilder();

    for (var _len = arguments.length, var_args = Array(_len), _key = 0; _key < _len; _key++) {
        var_args[_key] = arguments[_key];
    }

    if (BlobBuilder !== undefined) {
        var bb = new BlobBuilder();
        for (var i = 0; i < var_args.length; i++) {
            bb.append(var_args[i]);
        }
        return bb.getBlob();
    } else {
        if (type.isNativeBlobDefined()) {
            return new Blob(var_args);
        } else {
            throw Error('This browser doesn\'t seem to support creating Blobs');
        }
    }
}

function sliceBlob(blob, start, end) {
    if (blob.webkitSlice) {
        return blob.webkitSlice(start, end);
    } else if (blob.mozSlice) {
        return blob.mozSlice(start, end);
    } else if (blob.slice) {
        return blob.slice(start, end);
    }
    return null;
}
}, 448, null, "firebase/storage/implementation/fs.js");
__d(/* firebase/storage/implementation/requests.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.resumableUploadChunkSize = exports.ResumableUploadStatus = undefined;
exports.handlerCheck = handlerCheck;
exports.metadataHandler = metadataHandler;
exports.sharedErrorHandler = sharedErrorHandler;
exports.objectErrorHandler = objectErrorHandler;
exports.getMetadata = getMetadata;
exports.updateMetadata = updateMetadata;
exports.deleteObject = deleteObject;
exports.determineContentType_ = determineContentType_;
exports.metadataForUpload_ = metadataForUpload_;
exports.multipartUpload = multipartUpload;
exports.checkResumeHeader_ = checkResumeHeader_;
exports.createResumableUpload = createResumableUpload;
exports.getResumableUploadStatus = getResumableUploadStatus;
exports.continueResumableUpload = continueResumableUpload;

var _array = require(450      ); // 450 = ./array

var array = _interopRequireWildcard(_array);

var _blob = require(447     ); // 447 = ./blob

var _error = require(431      ); // 431 = ./error

var errorsExports = _interopRequireWildcard(_error);

var _metadata = require(442         ); // 442 = ./metadata

var MetadataUtils = _interopRequireWildcard(_metadata);

var _object = require(436       ); // 436 = ./object

var object = _interopRequireWildcard(_object);

var _requestinfo = require(451            ); // 451 = ./requestinfo

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

var _url = require(446    ); // 446 = ./url

var UrlUtils = _interopRequireWildcard(_url);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function handlerCheck(cndn) {
    if (!cndn) {
        throw errorsExports.unknown();
    }
}
function metadataHandler(authWrapper, mappings) {
    return function (xhr, text) {
        var metadata = MetadataUtils.fromResourceString(authWrapper, text, mappings);
        handlerCheck(metadata !== null);
        return metadata;
    };
}
function sharedErrorHandler(location) {
    return function (xhr, err) {
        var newErr = void 0;
        if (xhr.getStatus() === 401) {
            newErr = errorsExports.unauthenticated();
        } else {
            if (xhr.getStatus() === 402) {
                newErr = errorsExports.quotaExceeded(location.bucket);
            } else {
                if (xhr.getStatus() === 403) {
                    newErr = errorsExports.unauthorized(location.path);
                } else {
                    newErr = err;
                }
            }
        }
        newErr.setServerResponseProp(err.serverResponseProp());
        return newErr;
    };
}
function objectErrorHandler(location) {
    var shared = sharedErrorHandler(location);

    return function (xhr, err) {
        var newErr = shared(xhr, err);
        if (xhr.getStatus() === 404) {
            newErr = errorsExports.objectNotFound(location.path);
        }
        newErr.setServerResponseProp(err.serverResponseProp());
        return newErr;
    };
}
function getMetadata(authWrapper, location, mappings) {
    var urlPart = location.fullServerUrl();
    var url = UrlUtils.makeNormalUrl(urlPart);

    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new _requestinfo.RequestInfo(url, 'GET', metadataHandler(authWrapper, mappings), timeout);
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function updateMetadata(authWrapper, location, metadata, mappings) {
    var urlPart = location.fullServerUrl();
    var url = UrlUtils.makeNormalUrl(urlPart);

    var body = MetadataUtils.toResourceString(metadata, mappings);

    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new _requestinfo.RequestInfo(url, 'PATCH', metadataHandler(authWrapper, mappings), timeout);
    requestInfo.headers = { 'Content-Type': 'application/json; charset=utf-8' };
    requestInfo.body = body;
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function deleteObject(authWrapper, location) {
    var urlPart = location.fullServerUrl();
    var url = UrlUtils.makeNormalUrl(urlPart);

    var timeout = authWrapper.maxOperationRetryTime();

    var requestInfo = new _requestinfo.RequestInfo(url, 'DELETE', function () {}, timeout);
    requestInfo.successCodes = [200, 204];
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function determineContentType_(metadata, blob) {
    return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';
}
function metadataForUpload_(location, blob, opt_metadata) {
    var metadata = object.clone(opt_metadata);
    metadata['fullPath'] = location.path;
    metadata['size'] = blob.size();
    if (!metadata['contentType']) {
        metadata['contentType'] = determineContentType_(null, blob);
    }
    return metadata;
}
function multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var headers = { 'X-Goog-Upload-Protocol': 'multipart' };

    var boundary = function () {
        var str = '';
        for (var i = 0; i < 2; i++) {
            str = str + Math.random().toString().slice(2);
        }
        return str;
    }();
    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;
    var metadata = metadataForUpload_(location, blob, opt_metadata);
    var metadataString = MetadataUtils.toResourceString(metadata, mappings);
    var preBlobPart = '--' + boundary + '\r\n' + 'Content-Type: application/json; charset=utf-8\r\n\r\n' + metadataString + '\r\n--' + boundary + '\r\n' + 'Content-Type: ' + metadata['contentType'] + '\r\n\r\n';

    var body = _blob.FbsBlob.getBlob(preBlobPart, blob, '\r\n--' + boundary + '--');
    if (body === null) {
        throw errorsExports.cannotSliceBlob();
    }
    var urlParams = { 'name': metadata['fullPath'] };
    var url = UrlUtils.makeUploadUrl(urlPart);

    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new _requestinfo.RequestInfo(url, 'POST', metadataHandler(authWrapper, mappings), timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}


var ResumableUploadStatus = exports.ResumableUploadStatus = function ResumableUploadStatus(current, total, finalized, metadata) {
    _classCallCheck(this, ResumableUploadStatus);

    this.current = current;
    this.total = total;
    this.finalized = !!finalized;
    this.metadata = metadata || null;
};

function checkResumeHeader_(xhr, opt_allowed) {
    var status = void 0;
    try {
        status = xhr.getResponseHeader('X-Goog-Upload-Status');
    } catch (e) {
        handlerCheck(false);
    }

    handlerCheck(array.contains(opt_allowed || ['active'], status));
    return status;
}
function createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var metadata = metadataForUpload_(location, blob, opt_metadata);
    var urlParams = { 'name': metadata['fullPath'] };
    var url = UrlUtils.makeUploadUrl(urlPart);

    var headers = {
        'X-Goog-Upload-Protocol': 'resumable',
        'X-Goog-Upload-Command': 'start',
        'X-Goog-Upload-Header-Content-Length': blob.size(),
        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],
        'Content-Type': 'application/json; charset=utf-8'
    };
    var body = MetadataUtils.toResourceString(metadata, mappings);
    var timeout = authWrapper.maxUploadRetryTime();

    var requestInfo = new _requestinfo.RequestInfo(url, 'POST', function (xhr) {
        checkResumeHeader_(xhr);
        var url = void 0;
        try {
            url = xhr.getResponseHeader('X-Goog-Upload-URL');
        } catch (e) {
            handlerCheck(false);
        }
        handlerCheck(type.isString(url));
        return url;
    }, timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}

function getResumableUploadStatus(authWrapper, location, url, blob) {
    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new _requestinfo.RequestInfo(url, 'POST', function (xhr) {
        var status = checkResumeHeader_(xhr, ['active', 'final']);
        var sizeString = void 0;
        try {
            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');
        } catch (e) {
            handlerCheck(false);
        }
        var size = parseInt(sizeString, 10);
        handlerCheck(!isNaN(size));
        return new ResumableUploadStatus(size, blob.size(), status === 'final');
    }, timeout);
    requestInfo.headers = { 'X-Goog-Upload-Command': 'query' };
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}

var resumableUploadChunkSize = exports.resumableUploadChunkSize = 256 * 1024;

function continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {
    var status = new ResumableUploadStatus(0, 0);
    if (opt_status) {
        status.current = opt_status.current;
        status.total = opt_status.total;
    } else {
        status.current = 0;
        status.total = blob.size();
    }
    if (blob.size() !== status.total) {
        throw errorsExports.serverFileWrongSize();
    }
    var bytesLeft = status.total - status.current;
    var bytesToUpload = bytesLeft;
    if (chunkSize > 0) {
        bytesToUpload = Math.min(bytesToUpload, chunkSize);
    }
    var startByte = status.current;
    var endByte = startByte + bytesToUpload;
    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';
    var headers = {
        'X-Goog-Upload-Command': uploadCommand,
        'X-Goog-Upload-Offset': status.current
    };
    var body = blob.slice(startByte, endByte);
    if (body === null) {
        throw errorsExports.cannotSliceBlob();
    }

    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new _requestinfo.RequestInfo(url, 'POST', function (xhr, text) {
        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);
        var newCurrent = status.current + bytesToUpload;
        var size = blob.size();
        var metadata = void 0;
        if (uploadStatus === 'final') {
            metadata = metadataHandler(authWrapper, mappings)(xhr, text);
        } else {
            metadata = null;
        }
        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);
    }, timeout);
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.progressCallback = opt_progressCallback || null;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
}, 449, null, "firebase/storage/implementation/requests.js");
__d(/* firebase/storage/implementation/array.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.contains = contains;
exports.clone = clone;
exports.remove = remove;
function contains(array, elem) {
    return array.indexOf(elem) !== -1;
}

function clone(arraylike) {
    return Array.prototype.slice.call(arraylike);
}

function remove(array, elem) {
    var i = array.indexOf(elem);
    if (i !== -1) {
        array.splice(i, 1);
    }
}
}, 450, null, "firebase/storage/implementation/array.js");
__d(/* firebase/storage/implementation/requestinfo.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var RequestInfo = exports.RequestInfo = function RequestInfo(url, method, handler, timeout) {
  _classCallCheck(this, RequestInfo);

  this.url = url;
  this.method = method;
  this.handler = handler;
  this.timeout = timeout;
  this.urlParams = {};
  this.headers = {};
  this.body = null;
  this.errorHandler = null;

  this.progressCallback = null;
  this.successCodes = [200];
  this.additionalRetryCodes = [];
};
}, 451, null, "firebase/storage/implementation/requestinfo.js");
__d(/* firebase/storage/task.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UploadTask = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _taskenums = require(433                         ); // 433 = ./implementation/taskenums

var fbsTaskEnums = _interopRequireWildcard(_taskenums);

var _observer = require(453                        ); // 453 = ./implementation/observer

var _tasksnapshot = require(454             ); // 454 = ./tasksnapshot

var _args = require(441                    ); // 441 = ./implementation/args

var fbsArgs = _interopRequireWildcard(_args);

var _array = require(450                     ); // 450 = ./implementation/array

var fbsArray = _interopRequireWildcard(_array);

var _async = require(455                     ); // 455 = ./implementation/async

var _error = require(431                     ); // 431 = ./implementation/error

var errors = _interopRequireWildcard(_error);

var _promise_external = require(437                                ); // 437 = ./implementation/promise_external

var fbsPromiseimpl = _interopRequireWildcard(_promise_external);

var _requests = require(449                        ); // 449 = ./implementation/requests

var fbsRequests = _interopRequireWildcard(_requests);

var _type = require(438                    ); // 438 = ./implementation/type

var typeUtils = _interopRequireWildcard(_type);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var UploadTask = exports.UploadTask = function () {
    function UploadTask(ref, authWrapper, location, mappings, blob) {
        var _this = this;

        var metadata = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;

        _classCallCheck(this, UploadTask);

        this.transferred_ = 0;
        this.needToFetchStatus_ = false;
        this.needToFetchMetadata_ = false;
        this.observers_ = [];
        this.error_ = null;
        this.uploadUrl_ = null;
        this.request_ = null;
        this.chunkMultiplier_ = 1;
        this.resolve_ = null;
        this.reject_ = null;
        this.ref_ = ref;
        this.authWrapper_ = authWrapper;
        this.location_ = location;
        this.blob_ = blob;
        this.metadata_ = metadata;
        this.mappings_ = mappings;
        this.resumable_ = this.shouldDoResumable_(this.blob_);
        this.state_ = _taskenums.InternalTaskState.RUNNING;
        this.errorHandler_ = function (error) {
            _this.request_ = null;
            _this.chunkMultiplier_ = 1;
            if (error.codeEquals(errors.Code.CANCELED)) {
                _this.needToFetchStatus_ = true;
                _this.completeTransitions_();
            } else {
                _this.error_ = error;
                _this.transition_(_taskenums.InternalTaskState.ERROR);
            }
        };
        this.metadataErrorHandler_ = function (error) {
            _this.request_ = null;
            if (error.codeEquals(errors.Code.CANCELED)) {
                _this.completeTransitions_();
            } else {
                _this.error_ = error;
                _this.transition_(_taskenums.InternalTaskState.ERROR);
            }
        };
        this.promise_ = fbsPromiseimpl.make(function (resolve, reject) {
            _this.resolve_ = resolve;
            _this.reject_ = reject;
            _this.start_();
        });

        this.promise_.then(null, function () {});
    }

    _createClass(UploadTask, [{
        key: 'makeProgressCallback_',
        value: function makeProgressCallback_() {
            var _this2 = this;

            var sizeBefore = this.transferred_;
            return function (loaded) {
                _this2.updateProgress_(sizeBefore + loaded);
            };
        }
    }, {
        key: 'shouldDoResumable_',
        value: function shouldDoResumable_(blob) {
            return blob.size() > 256 * 1024;
        }
    }, {
        key: 'start_',
        value: function start_() {
            if (this.state_ !== _taskenums.InternalTaskState.RUNNING) {
                return;
            }
            if (this.request_ !== null) {
                return;
            }
            if (this.resumable_) {
                if (this.uploadUrl_ === null) {
                    this.createResumable_();
                } else {
                    if (this.needToFetchStatus_) {
                        this.fetchStatus_();
                    } else {
                        if (this.needToFetchMetadata_) {
                            this.fetchMetadata_();
                        } else {
                            this.continueUpload_();
                        }
                    }
                }
            } else {
                this.oneShotUpload_();
            }
        }
    }, {
        key: 'resolveToken_',
        value: function resolveToken_(callback) {
            var _this3 = this;

            this.authWrapper_.getAuthToken().then(function (authToken) {
                switch (_this3.state_) {
                    case _taskenums.InternalTaskState.RUNNING:
                        callback(authToken);
                        break;
                    case _taskenums.InternalTaskState.CANCELING:
                        _this3.transition_(_taskenums.InternalTaskState.CANCELED);
                        break;
                    case _taskenums.InternalTaskState.PAUSING:
                        _this3.transition_(_taskenums.InternalTaskState.PAUSED);
                        break;
                    default:
                }
            });
        }
    }, {
        key: 'createResumable_',
        value: function createResumable_() {
            var _this4 = this;

            this.resolveToken_(function (authToken) {
                var requestInfo = fbsRequests.createResumableUpload(_this4.authWrapper_, _this4.location_, _this4.mappings_, _this4.blob_, _this4.metadata_);
                var createRequest = _this4.authWrapper_.makeRequest(requestInfo, authToken);
                _this4.request_ = createRequest;
                createRequest.getPromise().then(function (url) {
                    _this4.request_ = null;
                    _this4.uploadUrl_ = url;
                    _this4.needToFetchStatus_ = false;
                    _this4.completeTransitions_();
                }, _this4.errorHandler_);
            });
        }
    }, {
        key: 'fetchStatus_',
        value: function fetchStatus_() {
            var _this5 = this;

            var url = this.uploadUrl_;
            this.resolveToken_(function (authToken) {
                var requestInfo = fbsRequests.getResumableUploadStatus(_this5.authWrapper_, _this5.location_, url, _this5.blob_);
                var statusRequest = _this5.authWrapper_.makeRequest(requestInfo, authToken);
                _this5.request_ = statusRequest;
                statusRequest.getPromise().then(function (status) {
                    status = status;
                    _this5.request_ = null;
                    _this5.updateProgress_(status.current);
                    _this5.needToFetchStatus_ = false;
                    if (status.finalized) {
                        _this5.needToFetchMetadata_ = true;
                    }
                    _this5.completeTransitions_();
                }, _this5.errorHandler_);
            });
        }
    }, {
        key: 'continueUpload_',
        value: function continueUpload_() {
            var _this6 = this;

            var chunkSize = fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;
            var status = new fbsRequests.ResumableUploadStatus(this.transferred_, this.blob_.size());

            var url = this.uploadUrl_;
            this.resolveToken_(function (authToken) {
                var requestInfo = void 0;
                try {
                    requestInfo = fbsRequests.continueResumableUpload(_this6.location_, _this6.authWrapper_, url, _this6.blob_, chunkSize, _this6.mappings_, status, _this6.makeProgressCallback_());
                } catch (e) {
                    _this6.error_ = e;
                    _this6.transition_(_taskenums.InternalTaskState.ERROR);
                    return;
                }
                var uploadRequest = _this6.authWrapper_.makeRequest(requestInfo, authToken);
                _this6.request_ = uploadRequest;
                uploadRequest.getPromise().then(function (newStatus) {
                    _this6.increaseMultiplier_();
                    _this6.request_ = null;
                    _this6.updateProgress_(newStatus.current);
                    if (newStatus.finalized) {
                        _this6.metadata_ = newStatus.metadata;
                        _this6.transition_(_taskenums.InternalTaskState.SUCCESS);
                    } else {
                        _this6.completeTransitions_();
                    }
                }, _this6.errorHandler_);
            });
        }
    }, {
        key: 'increaseMultiplier_',
        value: function increaseMultiplier_() {
            var currentSize = fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;

            if (currentSize < 32 * 1024 * 1024) {
                this.chunkMultiplier_ *= 2;
            }
        }
    }, {
        key: 'fetchMetadata_',
        value: function fetchMetadata_() {
            var _this7 = this;

            this.resolveToken_(function (authToken) {
                var requestInfo = fbsRequests.getMetadata(_this7.authWrapper_, _this7.location_, _this7.mappings_);
                var metadataRequest = _this7.authWrapper_.makeRequest(requestInfo, authToken);
                _this7.request_ = metadataRequest;
                metadataRequest.getPromise().then(function (metadata) {
                    _this7.request_ = null;
                    _this7.metadata_ = metadata;
                    _this7.transition_(_taskenums.InternalTaskState.SUCCESS);
                }, _this7.metadataErrorHandler_);
            });
        }
    }, {
        key: 'oneShotUpload_',
        value: function oneShotUpload_() {
            var _this8 = this;

            this.resolveToken_(function (authToken) {
                var requestInfo = fbsRequests.multipartUpload(_this8.authWrapper_, _this8.location_, _this8.mappings_, _this8.blob_, _this8.metadata_);
                var multipartRequest = _this8.authWrapper_.makeRequest(requestInfo, authToken);
                _this8.request_ = multipartRequest;
                multipartRequest.getPromise().then(function (metadata) {
                    _this8.request_ = null;
                    _this8.metadata_ = metadata;
                    _this8.updateProgress_(_this8.blob_.size());
                    _this8.transition_(_taskenums.InternalTaskState.SUCCESS);
                }, _this8.errorHandler_);
            });
        }
    }, {
        key: 'updateProgress_',
        value: function updateProgress_(transferred) {
            var old = this.transferred_;
            this.transferred_ = transferred;

            if (this.transferred_ !== old) {
                this.notifyObservers_();
            }
        }
    }, {
        key: 'transition_',
        value: function transition_(state) {
            if (this.state_ === state) {
                return;
            }
            switch (state) {
                case _taskenums.InternalTaskState.CANCELING:
                    this.state_ = state;
                    if (this.request_ !== null) {
                        this.request_.cancel();
                    }
                    break;
                case _taskenums.InternalTaskState.PAUSING:
                    this.state_ = state;
                    if (this.request_ !== null) {
                        this.request_.cancel();
                    }
                    break;
                case _taskenums.InternalTaskState.RUNNING:
                    var wasPaused = this.state_ === _taskenums.InternalTaskState.PAUSED;
                    this.state_ = state;
                    if (wasPaused) {
                        this.notifyObservers_();
                        this.start_();
                    }
                    break;
                case _taskenums.InternalTaskState.PAUSED:
                    this.state_ = state;
                    this.notifyObservers_();
                    break;
                case _taskenums.InternalTaskState.CANCELED:
                    this.error_ = errors.canceled();
                    this.state_ = state;
                    this.notifyObservers_();
                    break;
                case _taskenums.InternalTaskState.ERROR:
                    this.state_ = state;
                    this.notifyObservers_();
                    break;
                case _taskenums.InternalTaskState.SUCCESS:
                    this.state_ = state;
                    this.notifyObservers_();
                    break;
            }
        }
    }, {
        key: 'completeTransitions_',
        value: function completeTransitions_() {
            switch (this.state_) {
                case _taskenums.InternalTaskState.PAUSING:
                    this.transition_(_taskenums.InternalTaskState.PAUSED);
                    break;
                case _taskenums.InternalTaskState.CANCELING:
                    this.transition_(_taskenums.InternalTaskState.CANCELED);
                    break;
                case _taskenums.InternalTaskState.RUNNING:
                    this.start_();
                    break;
                default:
                    break;
            }
        }
    }, {
        key: 'on',

        value: function on(type) {
            var nextOrObserver = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
            var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
            var completed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;

            var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';
            var nextValidator = fbsArgs.nullFunctionSpec(true).validator;
            var observerValidator = fbsArgs.looseObjectSpec(null, true).validator;
            function nextOrObserverValidator(p) {
                try {
                    nextValidator(p);
                    return;
                } catch (e) {}
                try {
                    observerValidator(p);
                    var anyDefined = typeUtils.isJustDef(p['next']) || typeUtils.isJustDef(p['error']) || typeUtils.isJustDef(p['complete']);
                    if (!anyDefined) {
                        throw '';
                    }
                } catch (e) {
                    throw nextOrObserverMessage;
                }
            }
            var specs = [fbsArgs.stringSpec(function () {
                if (type !== _taskenums.TaskEvent.STATE_CHANGED) {
                    throw 'Expected one of the event types: [' + _taskenums.TaskEvent.STATE_CHANGED + '].';
                }
            }), fbsArgs.looseObjectSpec(nextOrObserverValidator, true), fbsArgs.nullFunctionSpec(true), fbsArgs.nullFunctionSpec(true)];
            fbsArgs.validate('on', specs, arguments);
            var self = this;
            function makeBinder(specs) {
                return function (nextOrObserver, error) {
                    if (specs !== null) {
                        fbsArgs.validate('on', specs, arguments);
                    }
                    var observer = new _observer.Observer(nextOrObserver, error, completed);
                    self.addObserver_(observer);
                    return function () {
                        self.removeObserver_(observer);
                    };
                };
            }

            var binderSpecs = [fbsArgs.looseObjectSpec(function (p) {
                if (p === null) {
                    throw nextOrObserverMessage;
                }
                nextOrObserverValidator(p);
            }), fbsArgs.nullFunctionSpec(true), fbsArgs.nullFunctionSpec(true)];
            var typeOnly = !(typeUtils.isJustDef(nextOrObserver) || typeUtils.isJustDef(error) || typeUtils.isJustDef(completed));
            if (typeOnly) {
                return makeBinder(binderSpecs);
            } else {
                return makeBinder(null)(nextOrObserver, error, completed);
            }
        }
    }, {
        key: 'then',
        value: function then(onFulfilled, onRejected) {
            return this.promise_.then(onFulfilled, onRejected);
        }
    }, {
        key: 'catch',
        value: function _catch(onRejected) {
            return this.then(null, onRejected);
        }
    }, {
        key: 'addObserver_',
        value: function addObserver_(observer) {
            this.observers_.push(observer);
            this.notifyObserver_(observer);
        }
    }, {
        key: 'removeObserver_',
        value: function removeObserver_(observer) {
            fbsArray.remove(this.observers_, observer);
        }
    }, {
        key: 'notifyObservers_',
        value: function notifyObservers_() {
            var _this9 = this;

            this.finishPromise_();
            var observers = fbsArray.clone(this.observers_);
            observers.forEach(function (observer) {
                _this9.notifyObserver_(observer);
            });
        }
    }, {
        key: 'finishPromise_',
        value: function finishPromise_() {
            if (this.resolve_ !== null) {
                var triggered = true;
                switch (fbsTaskEnums.taskStateFromInternalTaskState(this.state_)) {
                    case _taskenums.TaskState.SUCCESS:
                        (0, _async.async)(this.resolve_.bind(null, this.snapshot))();
                        break;
                    case _taskenums.TaskState.CANCELED:
                    case _taskenums.TaskState.ERROR:
                        var toCall = this.reject_;
                        (0, _async.async)(toCall.bind(null, this.error_))();
                        break;
                    default:
                        triggered = false;
                        break;
                }
                if (triggered) {
                    this.resolve_ = null;
                    this.reject_ = null;
                }
            }
        }
    }, {
        key: 'notifyObserver_',
        value: function notifyObserver_(observer) {
            var externalState = fbsTaskEnums.taskStateFromInternalTaskState(this.state_);
            switch (externalState) {
                case _taskenums.TaskState.RUNNING:
                case _taskenums.TaskState.PAUSED:
                    if (observer.next !== null) {
                        (0, _async.async)(observer.next.bind(observer, this.snapshot))();
                    }
                    break;
                case _taskenums.TaskState.SUCCESS:
                    if (observer.complete !== null) {
                        (0, _async.async)(observer.complete.bind(observer))();
                    }
                    break;
                case _taskenums.TaskState.CANCELED:
                case _taskenums.TaskState.ERROR:
                    if (observer.error !== null) {
                        (0, _async.async)(observer.error.bind(observer, this.error_))();
                    }
                    break;
                default:
                    if (observer.error !== null) {
                        (0, _async.async)(observer.error.bind(observer, this.error_))();
                    }
            }
        }
    }, {
        key: 'resume',
        value: function resume() {
            fbsArgs.validate('resume', [], arguments);
            var valid = this.state_ === _taskenums.InternalTaskState.PAUSED || this.state_ === _taskenums.InternalTaskState.PAUSING;
            if (valid) {
                this.transition_(_taskenums.InternalTaskState.RUNNING);
            }
            return valid;
        }
    }, {
        key: 'pause',
        value: function pause() {
            fbsArgs.validate('pause', [], arguments);
            var valid = this.state_ === _taskenums.InternalTaskState.RUNNING;
            if (valid) {
                this.transition_(_taskenums.InternalTaskState.PAUSING);
            }
            return valid;
        }
    }, {
        key: 'cancel',
        value: function cancel() {
            fbsArgs.validate('cancel', [], arguments);
            var valid = this.state_ === _taskenums.InternalTaskState.RUNNING || this.state_ === _taskenums.InternalTaskState.PAUSING;
            if (valid) {
                this.transition_(_taskenums.InternalTaskState.CANCELING);
            }
            return valid;
        }
    }, {
        key: 'snapshot',
        get: function get() {
            var externalState = fbsTaskEnums.taskStateFromInternalTaskState(this.state_);
            return new _tasksnapshot.UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);
        }
    }]);

    return UploadTask;
}();
}, 452, null, "firebase/storage/task.js");
__d(/* firebase/storage/implementation/observer.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Observer = undefined;

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
var Observer = exports.Observer = function Observer(nextOrObserver, opt_error, opt_complete) {
    _classCallCheck(this, Observer);

    var asFunctions = type.isFunction(nextOrObserver) || type.isDef(opt_error) || type.isDef(opt_complete);
    if (asFunctions) {
        this.next = nextOrObserver;
        this.error = opt_error || null;
        this.complete = opt_complete || null;
    } else {
        var observer = nextOrObserver;
        this.next = observer['next'];
        this.error = observer['error'];
        this.complete = observer['complete'];
    }
};
}, 453, null, "firebase/storage/implementation/observer.js");
__d(/* firebase/storage/tasksnapshot.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var UploadTaskSnapshot = exports.UploadTaskSnapshot = function () {
    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {
        _classCallCheck(this, UploadTaskSnapshot);

        this.bytesTransferred = bytesTransferred;
        this.totalBytes = totalBytes;
        this.state = state;
        this.metadata = metadata;
        this.task = task;
        this.ref = ref;
    }

    _createClass(UploadTaskSnapshot, [{
        key: 'downloadURL',
        get: function get() {
            if (this.metadata !== null) {
                var urls = this.metadata['downloadURLs'];
                if (urls != null && urls[0] != null) {
                    return urls[0];
                } else {
                    return null;
                }
            } else {
                return null;
            }
        }
    }]);

    return UploadTaskSnapshot;
}();
}, 454, null, "firebase/storage/tasksnapshot.js");
__d(/* firebase/storage/implementation/async.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.async = async;

var _promise_external = require(437                 ); // 437 = ./promise_external

var promiseimpl = _interopRequireWildcard(_promise_external);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function async(f) {
    return function () {
        for (var _len = arguments.length, argsToForward = Array(_len), _key = 0; _key < _len; _key++) {
            argsToForward[_key] = arguments[_key];
        }

        promiseimpl.resolve(true).then(function () {
            f.apply(null, argsToForward);
        });
    };
}
}, 455, null, "firebase/storage/implementation/async.js");
__d(/* firebase/storage/service.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ServiceInternals = exports.Service = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _args = require(441                    ); // 441 = ./implementation/args

var args = _interopRequireWildcard(_args);

var _authwrapper = require(457                           ); // 457 = ./implementation/authwrapper

var _location = require(444                        ); // 444 = ./implementation/location

var _promise_external = require(437                                ); // 437 = ./implementation/promise_external

var fbsPromiseImpl = _interopRequireWildcard(_promise_external);

var _request = require(460                       ); // 460 = ./implementation/request

var RequestExports = _interopRequireWildcard(_request);

var _reference = require(440          ); // 440 = ./reference

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var Service = exports.Service = function () {
    function Service(app, pool, url) {
        _classCallCheck(this, Service);

        this.bucket_ = null;

        this.authWrapper_ = new _authwrapper.AuthWrapper(app, function (authWrapper, loc) {
            return new _reference.Reference(authWrapper, loc);
        }, RequestExports.makeRequest, this, pool);
        this.app_ = app;
        if (url != null) {
            this.bucket_ = _location.Location.makeFromBucketSpec(url);
        } else {
            var authWrapperBucket = this.authWrapper_.bucket();
            if (authWrapperBucket != null) {
                this.bucket_ = new _location.Location(authWrapperBucket, '');
            }
        }
        this.internals_ = new ServiceInternals(this);
    }


    _createClass(Service, [{
        key: 'ref',
        value: function value(path) {
            args.validate('ref', [args.stringSpec(function (path) {
                if (/^[A-Za-z]+:\/\//.test(path)) {
                    throw 'Expected child path but got a URL, use refFromURL instead.';
                }
            }, true)], arguments);
            if (this.bucket_ == null) {
                throw new Error('No Storage Bucket defined in Firebase Options.');
            }
            var ref = new _reference.Reference(this.authWrapper_, this.bucket_);
            if (path != null) {
                return ref.child(path);
            } else {
                return ref;
            }
        }
    }, {
        key: 'refFromURL',
        value: function refFromURL(url) {
            args.validate('refFromURL', [args.stringSpec(function (p) {
                if (!/^[A-Za-z]+:\/\//.test(p)) {
                    throw 'Expected full URL but got a child path, use ref instead.';
                }
                try {
                    _location.Location.makeFromUrl(p);
                } catch (e) {
                    throw 'Expected valid full URL but got an invalid one.';
                }
            }, false)], arguments);
            return new _reference.Reference(this.authWrapper_, url);
        }
    }, {
        key: 'setMaxUploadRetryTime',
        value: function setMaxUploadRetryTime(time) {
            args.validate('setMaxUploadRetryTime', [args.nonNegativeNumberSpec()], arguments);
            this.authWrapper_.setMaxUploadRetryTime(time);
        }
    }, {
        key: 'setMaxOperationRetryTime',
        value: function setMaxOperationRetryTime(time) {
            args.validate('setMaxOperationRetryTime', [args.nonNegativeNumberSpec()], arguments);
            this.authWrapper_.setMaxOperationRetryTime(time);
        }
    }, {
        key: 'maxUploadRetryTime',
        get: function get() {
            return this.authWrapper_.maxUploadRetryTime();
        }
    }, {
        key: 'maxOperationRetryTime',
        get: function get() {
            return this.authWrapper_.maxOperationRetryTime();
        }
    }, {
        key: 'app',
        get: function get() {
            return this.app_;
        }
    }, {
        key: 'INTERNAL',
        get: function get() {
            return this.internals_;
        }
    }]);

    return Service;
}();


var ServiceInternals = exports.ServiceInternals = function () {
    function ServiceInternals(service) {
        _classCallCheck(this, ServiceInternals);

        this.service_ = service;
    }


    _createClass(ServiceInternals, [{
        key: 'delete',
        value: function _delete() {
            this.service_.authWrapper_.deleteApp();
            return fbsPromiseImpl.resolve(undefined);
        }
    }]);

    return ServiceInternals;
}();
}, 456, null, "firebase/storage/service.js");
__d(/* firebase/storage/implementation/authwrapper.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuthWrapper = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _constants = require(432          ); // 432 = ./constants

var constants = _interopRequireWildcard(_constants);

var _error2 = require(431      ); // 431 = ./error

var errorsExports = _interopRequireWildcard(_error2);

var _failrequest = require(458            ); // 458 = ./failrequest

var _location = require(444         ); // 444 = ./location

var _promise_external = require(437                 ); // 437 = ./promise_external

var promiseimpl = _interopRequireWildcard(_promise_external);

var _requestmap = require(459           ); // 459 = ./requestmap

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var AuthWrapper = exports.AuthWrapper = function () {
    function AuthWrapper(app, maker, requestMaker, service, pool) {
        _classCallCheck(this, AuthWrapper);

        this.bucket_ = null;
        this.deleted_ = false;
        this.app_ = app;
        if (this.app_ !== null) {
            var options = this.app_.options;
            if (type.isDef(options)) {
                this.bucket_ = AuthWrapper.extractBucket_(options);
            }
        }
        this.storageRefMaker_ = maker;
        this.requestMaker_ = requestMaker;
        this.pool_ = pool;
        this.service_ = service;
        this.maxOperationRetryTime_ = constants.defaultMaxOperationRetryTime;
        this.maxUploadRetryTime_ = constants.defaultMaxUploadRetryTime;
        this.requestMap_ = new _requestmap.RequestMap();
    }

    _createClass(AuthWrapper, [{
        key: 'getAuthToken',
        value: function getAuthToken() {
            if (this.app_ !== null && type.isDef(this.app_.INTERNAL) && type.isDef(this.app_.INTERNAL.getToken)) {
                return this.app_.INTERNAL.getToken().then(function (response) {
                    if (response !== null) {
                        return response.accessToken;
                    } else {
                        return null;
                    }
                }, function () {
                    return null;
                });
            } else {
                return promiseimpl.resolve(null);
            }
        }
    }, {
        key: 'bucket',
        value: function bucket() {
            if (this.deleted_) {
                throw errorsExports.appDeleted();
            } else {
                return this.bucket_;
            }
        }
    }, {
        key: 'service',
        value: function service() {
            return this.service_;
        }
    }, {
        key: 'makeStorageReference',
        value: function makeStorageReference(loc) {
            return this.storageRefMaker_(this, loc);
        }
    }, {
        key: 'makeRequest',
        value: function makeRequest(requestInfo, authToken) {
            if (!this.deleted_) {
                var request = this.requestMaker_(requestInfo, authToken, this.pool_);
                this.requestMap_.addRequest(request);
                return request;
            } else {
                return new _failrequest.FailRequest(errorsExports.appDeleted());
            }
        }
    }, {
        key: 'deleteApp',
        value: function deleteApp() {
            this.deleted_ = true;
            this.app_ = null;
            this.requestMap_.clear();
        }
    }, {
        key: 'maxUploadRetryTime',
        value: function maxUploadRetryTime() {
            return this.maxUploadRetryTime_;
        }
    }, {
        key: 'setMaxUploadRetryTime',
        value: function setMaxUploadRetryTime(time) {
            this.maxUploadRetryTime_ = time;
        }
    }, {
        key: 'maxOperationRetryTime',
        value: function maxOperationRetryTime() {
            return this.maxOperationRetryTime_;
        }
    }, {
        key: 'setMaxOperationRetryTime',
        value: function setMaxOperationRetryTime(time) {
            this.maxOperationRetryTime_ = time;
        }
    }], [{
        key: 'extractBucket_',
        value: function extractBucket_(config) {
            var bucketString = config[constants.configOption] || null;
            if (bucketString == null) {
                return null;
            }
            var loc = _location.Location.makeFromBucketSpec(bucketString);
            return loc.bucket;
        }
    }]);

    return AuthWrapper;
}();
}, 457, null, "firebase/storage/implementation/authwrapper.js");
__d(/* firebase/storage/implementation/failrequest.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FailRequest = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _promise_external = require(437                 ); // 437 = ./promise_external

var promiseimpl = _interopRequireWildcard(_promise_external);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var FailRequest = exports.FailRequest = function () {
    function FailRequest(error) {
        _classCallCheck(this, FailRequest);

        this.promise_ = promiseimpl.reject(error);
    }


    _createClass(FailRequest, [{
        key: 'getPromise',
        value: function getPromise() {
            return this.promise_;
        }
    }, {
        key: 'cancel',
        value: function cancel() {
            arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        }
    }]);

    return FailRequest;
}();
}, 458, null, "firebase/storage/implementation/failrequest.js");
__d(/* firebase/storage/implementation/requestmap.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestMap = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _object = require(436       ); // 436 = ./object

var object = _interopRequireWildcard(_object);

var _constants = require(432          ); // 432 = ./constants

var constants = _interopRequireWildcard(_constants);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var RequestMap = exports.RequestMap = function () {
    function RequestMap() {
        _classCallCheck(this, RequestMap);

        this.map_ = {};
        this.id_ = constants.minSafeInteger;
    }


    _createClass(RequestMap, [{
        key: 'addRequest',
        value: function addRequest(r) {
            var id = this.id_;
            this.id_++;
            this.map_[id] = r;
            var self = this;
            function unmap() {
                delete self.map_[id];
            }
            r.getPromise().then(unmap, unmap);
        }
    }, {
        key: 'clear',
        value: function clear() {
            object.forEach(this.map_, function (key, val) {
                if (val) {
                    val.cancel(true);
                }
            });
            this.map_ = {};
        }
    }]);

    return RequestMap;
}();
}, 459, null, "firebase/storage/implementation/requestmap.js");
__d(/* firebase/storage/implementation/request.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestEndStatus = undefined;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

exports.addAuthHeader_ = addAuthHeader_;
exports.addVersionHeader_ = addVersionHeader_;
exports.makeRequest = makeRequest;

var _array = require(450      ); // 450 = ./array

var array = _interopRequireWildcard(_array);

var _backoff = require(461        ); // 461 = ./backoff

var backoff = _interopRequireWildcard(_backoff);

var _error = require(431      ); // 431 = ./error

var errorsExports = _interopRequireWildcard(_error);

var _object = require(436       ); // 436 = ./object

var object = _interopRequireWildcard(_object);

var _promise_external = require(437                 ); // 437 = ./promise_external

var promiseimpl = _interopRequireWildcard(_promise_external);

var _type = require(438     ); // 438 = ./type

var type = _interopRequireWildcard(_type);

var _url = require(446    ); // 446 = ./url

var UrlUtils = _interopRequireWildcard(_url);

var _xhrio = require(439      ); // 439 = ./xhrio

var XhrIoExports = _interopRequireWildcard(_xhrio);

function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};if (obj != null) {
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
        }newObj.default = obj;return newObj;
    }
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var NetworkRequest = function () {
    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {
        _classCallCheck(this, NetworkRequest);

        this.pendingXhr_ = null;
        this.backoffId_ = null;
        this.resolve_ = null;
        this.reject_ = null;
        this.canceled_ = false;
        this.appDelete_ = false;
        this.url_ = url;
        this.method_ = method;
        this.headers_ = headers;
        this.body_ = body;
        this.successCodes_ = successCodes.slice();
        this.additionalRetryCodes_ = additionalRetryCodes.slice();
        this.callback_ = callback;
        this.errorCallback_ = errorCallback;
        this.progressCallback_ = progressCallback;
        this.timeout_ = timeout;
        this.pool_ = pool;
        var self = this;
        this.promise_ = promiseimpl.make(function (resolve, reject) {
            self.resolve_ = resolve;
            self.reject_ = reject;
            self.start_();
        });
    }


    _createClass(NetworkRequest, [{
        key: 'start_',
        value: function start_() {
            var self = this;
            function doTheRequest(backoffCallback, canceled) {
                if (canceled) {
                    backoffCallback(false, new RequestEndStatus(false, null, true));
                    return;
                }
                var xhr = self.pool_.createXhrIo();
                self.pendingXhr_ = xhr;
                function progressListener(progressEvent) {
                    var loaded = progressEvent.loaded;
                    var total = progressEvent.lengthComputable ? progressEvent.total : -1;
                    if (self.progressCallback_ !== null) {
                        self.progressCallback_(loaded, total);
                    }
                }
                if (self.progressCallback_ !== null) {
                    xhr.addUploadProgressListener(progressListener);
                }
                xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {
                    if (self.progressCallback_ !== null) {
                        xhr.removeUploadProgressListener(progressListener);
                    }
                    self.pendingXhr_ = null;
                    xhr = xhr;
                    var hitServer = xhr.getErrorCode() === XhrIoExports.ErrorCode.NO_ERROR;
                    var status = xhr.getStatus();
                    if (!hitServer || self.isRetryStatusCode_(status)) {
                        var wasCanceled = xhr.getErrorCode() === XhrIoExports.ErrorCode.ABORT;
                        backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));
                        return;
                    }
                    var successCode = array.contains(self.successCodes_, status);
                    backoffCallback(true, new RequestEndStatus(successCode, xhr));
                });
            }

            function backoffDone(requestWentThrough, status) {
                var resolve = self.resolve_;
                var reject = self.reject_;
                var xhr = status.xhr;
                if (status.wasSuccessCode) {
                    try {
                        var result = self.callback_(xhr, xhr.getResponseText());
                        if (type.isJustDef(result)) {
                            resolve(result);
                        } else {
                            resolve();
                        }
                    } catch (e) {
                        reject(e);
                    }
                } else {
                    if (xhr !== null) {
                        var err = errorsExports.unknown();
                        err.setServerResponseProp(xhr.getResponseText());
                        if (self.errorCallback_) {
                            reject(self.errorCallback_(xhr, err));
                        } else {
                            reject(err);
                        }
                    } else {
                        if (status.canceled) {
                            var _err = self.appDelete_ ? errorsExports.appDeleted() : errorsExports.canceled();
                            reject(_err);
                        } else {
                            var _err2 = errorsExports.retryLimitExceeded();
                            reject(_err2);
                        }
                    }
                }
            }
            if (this.canceled_) {
                backoffDone(false, new RequestEndStatus(false, null, true));
            } else {
                this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);
            }
        }
    }, {
        key: 'getPromise',
        value: function getPromise() {
            return this.promise_;
        }
    }, {
        key: 'cancel',
        value: function cancel(appDelete) {
            this.canceled_ = true;
            this.appDelete_ = appDelete || false;
            if (this.backoffId_ !== null) {
                backoff.stop(this.backoffId_);
            }
            if (this.pendingXhr_ !== null) {
                this.pendingXhr_.abort();
            }
        }
    }, {
        key: 'isRetryStatusCode_',
        value: function isRetryStatusCode_(status) {
            var isExtraRetryCode = array.contains([408, 429], status);
            var isRequestSpecificRetryCode = array.contains(this.additionalRetryCodes_, status);
            return status >= 500 && status < 600 || isExtraRetryCode || isRequestSpecificRetryCode;
        }
    }]);

    return NetworkRequest;
}();


var RequestEndStatus = exports.RequestEndStatus = function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {
    _classCallCheck(this, RequestEndStatus);

    this.wasSuccessCode = wasSuccessCode;
    this.xhr = xhr;
    this.canceled = !!opt_canceled;
};

function addAuthHeader_(headers, authToken) {
    if (authToken !== null && authToken.length > 0) {
        headers['Authorization'] = 'Firebase ' + authToken;
    }
}
function addVersionHeader_(headers) {
    var number = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';
    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;
}

function makeRequest(requestInfo, authToken, pool) {
    var queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);
    var url = requestInfo.url + queryPart;
    var headers = object.clone(requestInfo.headers);
    addAuthHeader_(headers, authToken);
    addVersionHeader_(headers);
    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);
}
}, 460, null, "firebase/storage/implementation/request.js");
__d(/* firebase/storage/implementation/backoff.js */function(global, require, module, exports) {/*! @license Firebase v4.1.2
Build: rev-4a4cc92
Terms: https://firebase.google.com/terms/ */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.start = start;
exports.stop = stop;

function start(f, callback, timeout) {
    var waitSeconds = 1;

    var timeoutId = null;
    var hitTimeout = false;
    var cancelState = 0;
    function canceled() {
        return cancelState === 2;
    }
    var triggeredCallback = false;
    function triggerCallback() {
        if (!triggeredCallback) {
            triggeredCallback = true;
            callback.apply(null, arguments);
        }
    }
    function callWithDelay(millis) {
        timeoutId = setTimeout(function () {
            timeoutId = null;
            f(handler, canceled());
        }, millis);
    }
    function handler(success) {
        for (var _len = arguments.length, var_args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            var_args[_key - 1] = arguments[_key];
        }

        if (triggeredCallback) {
            return;
        }
        if (success) {
            triggerCallback.apply(null, arguments);
            return;
        }
        var mustStop = canceled() || hitTimeout;
        if (mustStop) {
            triggerCallback.apply(null, arguments);
            return;
        }
        if (waitSeconds < 64) {
            waitSeconds *= 2;
        }
        var waitMillis = void 0;
        if (cancelState === 1) {
            cancelState = 2;
            waitMillis = 0;
        } else {
            waitMillis = (waitSeconds + Math.random()) * 1000;
        }
        callWithDelay(waitMillis);
    }
    var stopped = false;
    function stop(wasTimeout) {
        if (stopped) {
            return;
        }
        stopped = true;
        if (triggeredCallback) {
            return;
        }
        if (timeoutId !== null) {
            if (!wasTimeout) {
                cancelState = 2;
            }
            clearTimeout(timeoutId);
            callWithDelay(0);
        } else {
            if (!wasTimeout) {
                cancelState = 1;
            }
        }
    }
    callWithDelay(0);
    setTimeout(function () {
        hitTimeout = true;
        stop(true);
    }, timeout);
    return stop;
}

function stop(id) {
    id(false);
}
}, 461, null, "firebase/storage/implementation/backoff.js");
__d(/* react-native-fetch-blob/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var _uri = require(463          ); // 463 = ./utils/uri

var _uri2 = babelHelpers.interopRequireDefault(_uri);

var _StatefulPromise = require(464                         ); // 464 = ./class/StatefulPromise.js

var _StatefulPromise2 = babelHelpers.interopRequireDefault(_StatefulPromise);

var _fs = require(465   ); // 465 = ./fs

var _fs2 = babelHelpers.interopRequireDefault(_fs);

var _uuid = require(469           ); // 469 = ./utils/uuid

var _uuid2 = babelHelpers.interopRequireDefault(_uuid);

var _base = require(471      ); // 471 = base-64

var _base2 = babelHelpers.interopRequireDefault(_base);

var _polyfill = require(472         ); // 472 = ./polyfill

var _polyfill2 = babelHelpers.interopRequireDefault(_polyfill);

var _lodash = require(484     ); // 484 = lodash

var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

var _android = require(485        ); // 485 = ./android

var _android2 = babelHelpers.interopRequireDefault(_android);

var _ios = require(486    ); // 486 = ./ios

var _ios2 = babelHelpers.interopRequireDefault(_ios);

var _net = require(487    ); // 487 = ./net

var _net2 = babelHelpers.interopRequireDefault(_net);

var _jsonStream = require(488            ); // 488 = ./json-stream

var _jsonStream2 = babelHelpers.interopRequireDefault(_jsonStream);

var RNFetchBlobSession = _fs2.default.RNFetchBlobSession,
    readStream = _fs2.default.readStream,
    createFile = _fs2.default.createFile,
    unlink = _fs2.default.unlink,
    exists = _fs2.default.exists,
    mkdir = _fs2.default.mkdir,
    session = _fs2.default.session,
    writeStream = _fs2.default.writeStream,
    readFile = _fs2.default.readFile,
    ls = _fs2.default.ls,
    isDir = _fs2.default.isDir,
    mv = _fs2.default.mv,
    cp = _fs2.default.cp;


var Blob = _polyfill2.default.Blob;
var emitter = _reactNative.DeviceEventEmitter;
var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;

if (_reactNative.Platform.OS === 'ios') {
  _reactNative.AppState.addEventListener('change', function (e) {
    console.log('app state changed', e);
    if (e === 'active') RNFetchBlob.emitExpiredEvent(function () {});
  });
}

emitter.addListener("RNFetchBlobMessage", function (e) {

  if (e.event === 'warn') {
    console.warn(e.detail);
  } else if (e.event === 'error') {
    throw e.detail;
  } else {
    console.log("RNFetchBlob native message", e.detail);
  }
});

if (!RNFetchBlob || !RNFetchBlob.fetchBlobForm || !RNFetchBlob.fetchBlob) {
  console.warn('react-native-fetch-blob could not find valid native module.', 'please make sure you have linked native modules using `rnpm link`,', 'and restart RN packager or manually compile IOS/Android project.');
}

function wrap(path) {
  return 'RNFetchBlob-file://' + path;
}

function config(options) {
  return { fetch: fetch.bind(options) };
}

function fetchFile() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var method = arguments[1];
  var url = arguments[2];
  var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var body = arguments[4];


  if (!_uri2.default.isFileURI(url)) {
    throw 'could not fetch file from an invalid URI : ' + url;
  }

  url = _uri2.default.unwrapFileURI(url);

  var promise = null;
  var cursor = 0;
  var total = -1;
  var cacheData = '';
  var info = null;
  var _progress = void 0,
      _uploadProgress = void 0,
      _stateChange = void 0;

  switch (method.toLowerCase()) {

    case 'post':
      break;

    case 'put':
      break;

    default:
      promise = _fs2.default.stat(url).then(function (stat) {
        total = stat.size;
        return _fs2.default.readStream(url, headers.encoding || 'utf8', Math.floor(headers.bufferSize) || 409600, Math.floor(headers.interval) || 100);
      }).then(function (stream) {
        return new Promise(function (resolve, reject) {
          stream.open();
          info = {
            state: "2",
            headers: { 'source': 'system-fs' },
            status: 200,
            respType: 'text',
            rnfbEncode: headers.encoding || 'utf8'
          };
          _stateChange(info);
          stream.onData(function (chunk) {
            _progress && _progress(cursor, total, chunk);
            if (headers.noCache) return;
            cacheData += chunk;
          });
          stream.onError(function (err) {
            reject(err);
          });
          stream.onEnd(function () {
            resolve(new FetchBlobResponse(null, info, cacheData));
          });
        });
      });
      break;
  }

  promise.progress = function (fn) {
    _progress = fn;
    return promise;
  };
  promise.stateChange = function (fn) {
    _stateChange = fn;
    return promise;
  };
  promise.uploadProgress = function (fn) {
    _uploadProgress = fn;
    return promise;
  };

  return promise;
}

function fetch() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var taskId = (0, _uuid2.default)();
  var options = this || {};
  var subscription = void 0,
      subscriptionUpload = void 0,
      stateEvent = void 0,
      partEvent = void 0;
  var respInfo = {};

  var _ref = [].concat(babelHelpers.toConsumableArray(args)),
      method = _ref[0],
      url = _ref[1],
      headers = _ref[2],
      body = _ref[3];

  headers = _lodash2.default.reduce(headers, function (result, value, key) {
    result[key] = value || '';
    return result;
  }, {});

  if (_uri2.default.isFileURI(url)) {
    return fetchFile(options, method, url, headers, body);
  }

  var promise = new Promise(function (resolve, reject) {
    var nativeMethodName = Array.isArray(body) ? 'fetchBlobForm' : 'fetchBlob';

    subscription = emitter.addListener('RNFetchBlobProgress', function (e) {
      if (e.taskId === taskId && promise.onProgress) {
        promise.onProgress(e.written, e.total, e.chunk);
      }
    });

    subscriptionUpload = emitter.addListener('RNFetchBlobProgress-upload', function (e) {
      if (e.taskId === taskId && promise.onUploadProgress) {
        promise.onUploadProgress(e.written, e.total);
      }
    });

    stateEvent = emitter.addListener('RNFetchBlobState', function (e) {
      if (e.taskId === taskId) respInfo = e;
      promise.onStateChange && promise.onStateChange(e);
    });

    subscription = emitter.addListener('RNFetchBlobExpire', function (e) {
      if (e.taskId === taskId && promise.onExpire) {
        promise.onExpire(e);
      }
    });

    partEvent = emitter.addListener('RNFetchBlobServerPush', function (e) {
      if (e.taskId === taskId && promise.onPartData) {
        promise.onPartData(e.chunk);
      }
    });

    if (body instanceof Blob && body.isRNFetchBlobPolyfill) {
      body = body.getRNFetchBlobRef();
    }

    var req = RNFetchBlob[nativeMethodName];

    req(options, taskId, method, url, headers || {}, body, function (err, rawType, data) {
      subscription.remove();
      subscriptionUpload.remove();
      stateEvent.remove();
      partEvent.remove();
      delete promise['progress'];
      delete promise['uploadProgress'];
      delete promise['stateChange'];
      delete promise['part'];
      delete promise['cancel'];

      promise.cancel = function () {};

      if (err) reject(new Error(err, respInfo));else {
        if (options.path || options.fileCache || options.addAndroidDownloads || options.key || options.auto && respInfo.respType === 'blob') {
          if (options.session) session(options.session).add(data);
        }
        respInfo.rnfbEncode = rawType;
        resolve(new FetchBlobResponse(taskId, respInfo, data));
      }
    });
  });

  promise.progress = function () {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var interval = 250;
    var count = -1;
    var fn = function fn() {};
    if (args.length === 2) {
      interval = args[0].interval || interval;
      count = args[0].count || count;
      fn = args[1];
    } else {
      fn = args[0];
    }
    promise.onProgress = fn;
    RNFetchBlob.enableProgressReport(taskId, interval, count);
    return promise;
  };
  promise.uploadProgress = function () {
    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    var interval = 250;
    var count = -1;
    var fn = function fn() {};
    if (args.length === 2) {
      interval = args[0].interval || interval;
      count = args[0].count || count;
      fn = args[1];
    } else {
      fn = args[0];
    }
    promise.onUploadProgress = fn;
    RNFetchBlob.enableUploadProgressReport(taskId, interval, count);
    return promise;
  };
  promise.part = function (fn) {
    promise.onPartData = fn;
    return promise;
  };
  promise.stateChange = function (fn) {
    promise.onStateChange = fn;
    return promise;
  };
  promise.expire = function (fn) {
    promise.onExpire = fn;
    return promise;
  };
  promise.cancel = function (fn) {
    fn = fn || function () {};
    subscription.remove();
    subscriptionUpload.remove();
    stateEvent.remove();
    RNFetchBlob.cancelRequest(taskId, fn);
  };
  promise.taskId = taskId;

  return promise;
}

var FetchBlobResponse = function FetchBlobResponse(taskId, info, data) {
  var _this = this;

  babelHelpers.classCallCheck(this, FetchBlobResponse);

  this.data = data;
  this.taskId = taskId;
  this.type = info.rnfbEncode;
  this.respInfo = info;

  this.info = function () {
    return _this.respInfo;
  };

  this.array = function () {
    var cType = info.headers['Content-Type'] || info.headers['content-type'];
    return new Promise(function (resolve, reject) {
      switch (_this.type) {
        case 'base64':
          break;
        case 'path':
          _fs2.default.readFile(_this.data, 'ascii').then(resolve);
          break;
        default:
          break;
      }
    });
  };

  this.blob = function () {
    var Blob = _polyfill2.default.Blob;
    var cType = info.headers['Content-Type'] || info.headers['content-type'];
    return new Promise(function (resolve, reject) {
      switch (_this.type) {
        case 'base64':
          Blob.build(_this.data, { type: cType + ';BASE64' }).then(resolve);
          break;
        case 'path':
          _polyfill2.default.Blob.build(wrap(_this.data), { type: cType }).then(resolve);
          break;
        default:
          _polyfill2.default.Blob.build(_this.data, { type: 'text/plain' }).then(resolve);
          break;
      }
    });
  };

  this.text = function () {
    var res = _this.data;
    switch (_this.type) {
      case 'base64':
        return _base2.default.decode(_this.data);
      case 'path':
        return _fs2.default.readFile(_this.data, 'base64').then(function (b64) {
          return Promise.resolve(_base2.default.decode(b64));
        });
      default:
        return _this.data;
    }
  };

  this.json = function () {
    switch (_this.type) {
      case 'base64':
        return JSON.parse(_base2.default.decode(_this.data));
      case 'path':
        return _fs2.default.readFile(_this.data, 'utf8').then(function (text) {
          return Promise.resolve(JSON.parse(text));
        });
      default:
        return JSON.parse(_this.data);
    }
  };

  this.base64 = function () {
    switch (_this.type) {
      case 'base64':
        return _this.data;
      case 'path':
        return _fs2.default.readFile(_this.data, 'base64');
      default:
        return _base2.default.encode(_this.data);
    }
  };

  this.flush = function () {
    var path = _this.path();
    if (!path || _this.type !== 'path') return;
    return unlink(path);
  };

  this.path = function () {
    if (_this.type === 'path') return _this.data;
    return null;
  };

  this.session = function (name) {
    if (_this.type === 'path') return session(name).add(_this.data);else {
      console.warn('only file paths can be add into session.');
      return null;
    }
  };

  this.readStream = function (encode) {
    if (_this.type === 'path') {
      return readStream(_this.data, encode);
    } else {
      console.warn('RNFetchblob', 'this response data does not contains any available stream');
      return null;
    }
  };

  this.readFile = function (encode) {
    if (_this.type === 'path') {
      encode = encode || 'utf8';
      return readFile(_this.data, encode);
    } else {
      console.warn('RNFetchblob', 'this response does not contains a readable file');
      return null;
    }
  };
};

exports.default = {
  fetch: fetch,
  base64: _base2.default,
  android: _android2.default,
  ios: _ios2.default,
  config: config,
  session: session,
  fs: _fs2.default,
  wrap: wrap,
  net: _net2.default,
  polyfill: _polyfill2.default,
  JSONStream: _jsonStream2.default
};
}, 462, null, "react-native-fetch-blob/index.js");
__d(/* react-native-fetch-blob/utils/uri.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {

  isFileURI: function isFileURI(uri) {
    if (typeof uri !== 'string') return false;
    return (/^RNFetchBlob-file\:\/\//.test(uri)
    );
  },

  isJSONStreamURI: function isJSONStreamURI(uri) {
    if (typeof uri !== 'string') return false;
    return (/^JSONStream\:\/\//.test(uri)
    );
  },

  removeURIScheme: function removeURIScheme(uri, iterations) {
    iterations = iterations || 1;
    var result = uri;
    for (var i = 0; i < iterations; i++) {
      result = String(result).replace(/^[^\:]+\:\/\//, '');
    }
    return String(result);
  },

  unwrapFileURI: function unwrapFileURI(uri) {
    return String(uri).replace(/^RNFetchBlob-file\:\/\//, '');
  }

};
}, 463, null, "react-native-fetch-blob/utils/uri.js");
__d(/* react-native-fetch-blob/class/StatefulPromise.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var StatefulPromise = function (_Promise) {
  babelHelpers.inherits(StatefulPromise, _Promise);

  function StatefulPromise() {
    babelHelpers.classCallCheck(this, StatefulPromise);
    return babelHelpers.possibleConstructorReturn(this, (StatefulPromise.__proto__ || Object.getPrototypeOf(StatefulPromise)).apply(this, arguments));
  }

  return StatefulPromise;
}(Promise);

exports.default = StatefulPromise;
}, 464, null, "react-native-fetch-blob/class/StatefulPromise.js");
__d(/* react-native-fetch-blob/fs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var _RNFetchBlobSession = require(466                         ); // 466 = ./class/RNFetchBlobSession

var _RNFetchBlobSession2 = babelHelpers.interopRequireDefault(_RNFetchBlobSession);

var _RNFetchBlobWriteStream = require(467                             ); // 467 = ./class/RNFetchBlobWriteStream

var _RNFetchBlobWriteStream2 = babelHelpers.interopRequireDefault(_RNFetchBlobWriteStream);

var _RNFetchBlobReadStream = require(468                            ); // 468 = ./class/RNFetchBlobReadStream

var _RNFetchBlobReadStream2 = babelHelpers.interopRequireDefault(_RNFetchBlobReadStream);

var _RNFetchBlobFile = require(470                      ); // 470 = ./class/RNFetchBlobFile

var _RNFetchBlobFile2 = babelHelpers.interopRequireDefault(_RNFetchBlobFile);

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;
var emitter = _reactNative.DeviceEventEmitter;
var dirs = {
  DocumentDir: RNFetchBlob.DocumentDir,
  CacheDir: RNFetchBlob.CacheDir,
  PictureDir: RNFetchBlob.PictureDir,
  MusicDir: RNFetchBlob.MusicDir,
  MovieDir: RNFetchBlob.MovieDir,
  DownloadDir: RNFetchBlob.DownloadDir,
  DCIMDir: RNFetchBlob.DCIMDir,
  SDCardDir: RNFetchBlob.SDCardDir,
  MainBundleDir: RNFetchBlob.MainBundleDir
};

function session(name) {
  var s = _RNFetchBlobSession2.default.getSession(name);
  if (s) return new _RNFetchBlobSession2.default(name);else {
    _RNFetchBlobSession2.default.setSession(name, []);
    return new _RNFetchBlobSession2.default(name, []);
  }
}

function asset(path) {
  if (_reactNative.Platform.OS === 'ios') {
    if (/^assets-library\:\/\//.test(path)) return path;
  }
  return 'bundle-assets://' + path;
}

function createFile(path, data, encoding) {
  encoding = encoding || 'utf8';
  return new Promise(function (resolve, reject) {
    var handler = function handler(err) {
      if (err) reject(new Error(err));else resolve();
    };
    if (encoding.toLowerCase() === 'ascii') {
      if (Array.isArray(data)) RNFetchBlob.createFileASCII(path, data, handler);else reject(new Error('`data` of ASCII file must be an array contains numbers'));
    } else {
      RNFetchBlob.createFile(path, data, encoding, handler);
    }
  });
}

function writeStream(path, encoding, append) {
  if (!path) throw Error('RNFetchBlob could not open file stream with empty `path`');
  encoding = encoding || 'utf8';
  append = append || false;
  return new Promise(function (resolve, reject) {
    RNFetchBlob.writeStream(path, encoding || 'base64', append || false, function (err, streamId) {
      if (err) reject(new Error(err));else resolve(new _RNFetchBlobWriteStream2.default(streamId, encoding));
    });
  });
}

function readStream(path, encoding, bufferSize) {
  var tick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;

  return Promise.resolve(new _RNFetchBlobReadStream2.default(path, encoding, bufferSize, tick));
}

function mkdir(path) {

  return new Promise(function (resolve, reject) {
    RNFetchBlob.mkdir(path, function (err, res) {
      if (err) reject(new Error(err));else resolve();
    });
  });
}

function pathForAppGroup(groupName) {
  return RNFetchBlob.pathForAppGroup(groupName);
}

function readFile(path, encoding, bufferSize) {
  if (typeof path !== 'string') return Promise.reject(new Error('Invalid argument "path" '));
  return RNFetchBlob.readFile(path, encoding);
}

function writeFile(path, data, encoding) {
  encoding = encoding || 'utf8';
  if (typeof path !== 'string') return Promise.reject('Invalid argument "path" ');
  if (encoding.toLocaleLowerCase() === 'ascii') {
    if (!Array.isArray(data)) Promise.reject(new Error('Expected "data" is an Array when encoding is "ascii", however got ' + typeof data));else return RNFetchBlob.writeFileArray(path, data, false);
  } else {
    if (typeof data !== 'string') Promise.reject(new Error('Expected "data" is a String when encoding is "utf8" or "base64", however got ' + typeof data));else return RNFetchBlob.writeFile(path, encoding, data, false);
  }
}

function appendFile(path, data, encoding) {
  encoding = encoding || 'utf8';
  if (typeof path !== 'string') return Promise.reject('Invalid argument "path" ');
  if (encoding.toLocaleLowerCase() === 'ascii') {
    if (!Array.isArray(data)) Promise.reject(new Error('Expected "data" is an Array when encoding is "ascii", however got ' + typeof data));else return RNFetchBlob.writeFileArray(path, data, true);
  } else {
    if (typeof data !== 'string') Promise.reject(new Error('Expected "data" is a String when encoding is "utf8" or "base64", however got ' + typeof data));else return RNFetchBlob.writeFile(path, encoding, data, true);
  }
}

function stat(path) {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.stat(path, function (err, stat) {
      if (err) reject(new Error(err));else {
        if (stat) {
          stat.size = parseInt(stat.size);
          stat.lastModified = parseInt(stat.lastModified);
        }
        resolve(stat);
      }
    });
  });
}

function scanFile(pairs) {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.scanFile(pairs, function (err) {
      if (err) reject(new Error(err));else resolve();
    });
  });
}

function cp(path, dest) {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.cp(path, dest, function (err, res) {
      if (err) reject(new Error(err));else resolve(res);
    });
  });
}

function mv(path, dest) {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.mv(path, dest, function (err, res) {
      if (err) reject(new Error(err));else resolve(res);
    });
  });
}

function lstat(path) {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.lstat(path, function (err, stat) {
      if (err) reject(new Error(err));else resolve(stat);
    });
  });
}

function ls(path) {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.ls(path, function (err, res) {
      if (err) reject(new Error(err));else resolve(res);
    });
  });
}

function unlink(path) {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.unlink(path, function (err) {
      if (err) {
        reject(new Error(err));
      } else resolve();
    });
  });
}

function exists(path) {

  return new Promise(function (resolve, reject) {
    try {
      RNFetchBlob.exists(path, function (exist) {
        resolve(exist);
      });
    } catch (err) {
      reject(new Error(err));
    }
  });
}

function slice(src, dest, start, end) {
  var p = Promise.resolve();
  var size = 0;
  function normalize(num, size) {
    if (num < 0) return Math.max(0, size + num);
    if (!num && num !== 0) return size;
    return num;
  }
  if (start < 0 || end < 0 || !start || !end) {
    p = p.then(function () {
      return stat(src);
    }).then(function (stat) {
      size = Math.floor(stat.size);
      start = normalize(start || 0, size);
      end = normalize(end, size);
      return Promise.resolve();
    });
  }
  return p.then(function () {
    return RNFetchBlob.slice(src, dest, start, end);
  });
}

function isDir(path) {

  return new Promise(function (resolve, reject) {
    try {
      RNFetchBlob.exists(path, function (exist, isDir) {
        resolve(isDir);
      });
    } catch (err) {
      reject(new Error(err));
    }
  });
}

function df() {
  return new Promise(function (resolve, reject) {
    RNFetchBlob.df(function (err, stat) {
      if (err) reject(err);else resolve(stat);
    });
  });
}

exports.default = {
  RNFetchBlobSession: _RNFetchBlobSession2.default,
  unlink: unlink,
  mkdir: mkdir,
  session: session,
  ls: ls,
  readStream: readStream,
  mv: mv,
  cp: cp,
  writeStream: writeStream,
  writeFile: writeFile,
  appendFile: appendFile,
  pathForAppGroup: pathForAppGroup,
  readFile: readFile,
  exists: exists,
  createFile: createFile,
  isDir: isDir,
  stat: stat,
  lstat: lstat,
  scanFile: scanFile,
  dirs: dirs,
  slice: slice,
  asset: asset,
  df: df
};
}, 465, null, "react-native-fetch-blob/fs.js");
__d(/* react-native-fetch-blob/class/RNFetchBlobSession.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;
var emitter = _reactNative.DeviceEventEmitter;

var sessions = {};

var RNFetchBlobSession = function () {
  babelHelpers.createClass(RNFetchBlobSession, null, [{
    key: 'getSession',
    value: function getSession(name) {
      return sessions[name];
    }
  }, {
    key: 'setSession',
    value: function setSession(name, val) {
      sessions[name] = val;
    }
  }, {
    key: 'removeSession',
    value: function removeSession(name) {
      delete sessions[name];
    }
  }]);

  function RNFetchBlobSession(name, list) {
    babelHelpers.classCallCheck(this, RNFetchBlobSession);

    this.name = name;
    if (!sessions[name]) {
      if (Array.isArray(list)) sessions[name] = list;else sessions[name] = [];
    }
  }

  babelHelpers.createClass(RNFetchBlobSession, [{
    key: 'add',
    value: function add(path) {
      sessions[this.name].push(path);
      return this;
    }
  }, {
    key: 'remove',
    value: function remove(path) {
      var list = sessions[this.name];
      for (var i in list) {
        if (list[i] === path) {
          sessions[this.name].splice(i, 1);
          break;
        }
      }
      return this;
    }
  }, {
    key: 'list',
    value: function list() {
      return sessions[this.name];
    }
  }, {
    key: 'dispose',
    value: function dispose() {
      var _this = this;

      return new Promise(function (resolve, reject) {
        RNFetchBlob.removeSession(sessions[_this.name], function (err) {
          if (err) reject(err);else {
            delete sessions[_this.name];
            resolve();
          }
        });
      });
    }
  }]);
  return RNFetchBlobSession;
}();

exports.default = RNFetchBlobSession;
}, 466, null, "react-native-fetch-blob/class/RNFetchBlobSession.js");
__d(/* react-native-fetch-blob/class/RNFetchBlobWriteStream.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;
var emitter = _reactNative.DeviceEventEmitter;

var RNFetchBlobWriteStream = function () {
  function RNFetchBlobWriteStream(streamId, encoding, append) {
    babelHelpers.classCallCheck(this, RNFetchBlobWriteStream);

    this.id = streamId;
    this.encoding = encoding;
    this.append = append;
  }

  babelHelpers.createClass(RNFetchBlobWriteStream, [{
    key: 'write',
    value: function write(data) {
      var _this = this;

      return new Promise(function (resolve, reject) {
        try {
          var method = _this.encoding === 'ascii' ? 'writeArrayChunk' : 'writeChunk';
          if (_this.encoding.toLocaleLowerCase() === 'ascii' && !Array.isArray(data)) {
            reject('ascii input data must be an Array');
            return;
          }
          RNFetchBlob[method](_this.id, data, function (error) {
            if (error) reject(error);else resolve();
          });
        } catch (err) {
          reject(err);
        }
      });
    }
  }, {
    key: 'close',
    value: function close() {
      var _this2 = this;

      return new Promise(function (resolve, reject) {
        try {
          RNFetchBlob.closeStream(_this2.id, function () {
            resolve();
          });
        } catch (err) {
          reject(err);
        }
      });
    }
  }]);
  return RNFetchBlobWriteStream;
}();

exports.default = RNFetchBlobWriteStream;
}, 467, null, "react-native-fetch-blob/class/RNFetchBlobWriteStream.js");
__d(/* react-native-fetch-blob/class/RNFetchBlobReadStream.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var _uuid = require(469            ); // 469 = ../utils/uuid

var _uuid2 = babelHelpers.interopRequireDefault(_uuid);

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;
var emitter = _reactNative.DeviceEventEmitter;

var RNFetchBlobReadStream = function () {
  function RNFetchBlobReadStream(path, encoding, bufferSize, tick) {
    var _this = this;

    babelHelpers.classCallCheck(this, RNFetchBlobReadStream);
    this.tick = 10;

    if (!path) throw Error('RNFetchBlob could not open file stream with empty `path`');
    this.encoding = encoding || 'utf8';
    this.bufferSize = bufferSize;
    this.path = path;
    this.closed = false;
    this.tick = tick;
    this._onData = function () {};
    this._onEnd = function () {};
    this._onError = function () {};
    this.streamId = 'RNFBRS' + (0, _uuid2.default)();

    var subscription = emitter.addListener(this.streamId, function (e) {
      var event = e.event,
          detail = e.detail;

      if (_this._onData && event === 'data') {
        _this._onData(detail);
        return;
      } else if (_this._onEnd && event === 'end') {
        _this._onEnd(detail);
      } else {
        if (_this._onError) _this._onError(detail);else throw new Error(detail);
      }

      if (event === 'error' || event === 'end') {
        subscription.remove();
        _this.closed = true;
      }
    });
  }

  babelHelpers.createClass(RNFetchBlobReadStream, [{
    key: 'open',
    value: function open() {
      if (!this.closed) RNFetchBlob.readStream(this.path, this.encoding, this.bufferSize || 10240, this.tick || -1, this.streamId);else throw new Error('Stream closed');
    }
  }, {
    key: 'onData',
    value: function onData(fn) {
      this._onData = fn;
    }
  }, {
    key: 'onError',
    value: function onError(fn) {
      this._onError = fn;
    }
  }, {
    key: 'onEnd',
    value: function onEnd(fn) {
      this._onEnd = fn;
    }
  }]);
  return RNFetchBlobReadStream;
}();

exports.default = RNFetchBlobReadStream;
}, 468, null, "react-native-fetch-blob/class/RNFetchBlobReadStream.js");
__d(/* react-native-fetch-blob/utils/uuid.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getUUID;
function getUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = Math.random() * 16 | 0,
        v = c == 'x' ? r : r & 0x3 | 0x8;
    return v.toString(16);
  });
}
}, 469, null, "react-native-fetch-blob/utils/uuid.js");
__d(/* react-native-fetch-blob/class/RNFetchBlobFile.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;
var emitter = _reactNative.DeviceEventEmitter;

var RNFetchBlobFile = function RNFetchBlobFile() {
  babelHelpers.classCallCheck(this, RNFetchBlobFile);
};

exports.default = RNFetchBlobFile;
}, 470, null, "react-native-fetch-blob/class/RNFetchBlobFile.js");
__d(/* base-64/base64.js */function(global, require, module, exports) {
;(function (root) {
	var freeExports = typeof exports == 'object' && exports;

	var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;

	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	var InvalidCharacterError = function InvalidCharacterError(message) {
		this.message = message;
	};
	InvalidCharacterError.prototype = new Error();
	InvalidCharacterError.prototype.name = 'InvalidCharacterError';

	var error = function error(message) {
		throw new InvalidCharacterError(message);
	};

	var TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	var REGEX_SPACE_CHARACTERS = /[\t\n\f\r ]/g;

	var decode = function decode(input) {
		input = String(input).replace(REGEX_SPACE_CHARACTERS, '');
		var length = input.length;
		if (length % 4 == 0) {
			input = input.replace(/==?$/, '');
			length = input.length;
		}
		if (length % 4 == 1 || /[^+a-zA-Z0-9/]/.test(input)) {
			error('Invalid character: the string to be decoded is not correctly encoded.');
		}
		var bitCounter = 0;
		var bitStorage;
		var buffer;
		var output = '';
		var position = -1;
		while (++position < length) {
			buffer = TABLE.indexOf(input.charAt(position));
			bitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;

			if (bitCounter++ % 4) {
				output += String.fromCharCode(0xFF & bitStorage >> (-2 * bitCounter & 6));
			}
		}
		return output;
	};

	var encode = function encode(input) {
		input = String(input);
		if (/[^\0-\xFF]/.test(input)) {
			error('The string to be encoded contains characters outside of the ' + 'Latin1 range.');
		}
		var padding = input.length % 3;
		var output = '';
		var position = -1;
		var a;
		var b;
		var c;
		var d;
		var buffer;

		var length = input.length - padding;

		while (++position < length) {
			a = input.charCodeAt(position) << 16;
			b = input.charCodeAt(++position) << 8;
			c = input.charCodeAt(++position);
			buffer = a + b + c;

			output += TABLE.charAt(buffer >> 18 & 0x3F) + TABLE.charAt(buffer >> 12 & 0x3F) + TABLE.charAt(buffer >> 6 & 0x3F) + TABLE.charAt(buffer & 0x3F);
		}

		if (padding == 2) {
			a = input.charCodeAt(position) << 8;
			b = input.charCodeAt(++position);
			buffer = a + b;
			output += TABLE.charAt(buffer >> 10) + TABLE.charAt(buffer >> 4 & 0x3F) + TABLE.charAt(buffer << 2 & 0x3F) + '=';
		} else if (padding == 1) {
			buffer = input.charCodeAt(position);
			output += TABLE.charAt(buffer >> 2) + TABLE.charAt(buffer << 4 & 0x3F) + '==';
		}

		return output;
	};

	var base64 = {
		'encode': encode,
		'decode': decode,
		'version': '0.1.0'
	};

	if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
		define(function () {
			return base64;
		});
	} else if (freeExports && !freeExports.nodeType) {
		if (freeModule) {
			freeModule.exports = base64;
		} else {
			for (var key in base64) {
				base64.hasOwnProperty(key) && (freeExports[key] = base64[key]);
			}
		}
	} else {
		root.base64 = base64;
	}
})(this);
}, 471, null, "base-64/base64.js");
__d(/* react-native-fetch-blob/polyfill/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Blob = require(473        ); // 473 = ./Blob.js

var _Blob2 = babelHelpers.interopRequireDefault(_Blob);

var _File = require(476        ); // 476 = ./File.js

var _File2 = babelHelpers.interopRequireDefault(_File);

var _XMLHttpRequest = require(477                  ); // 477 = ./XMLHttpRequest.js

var _XMLHttpRequest2 = babelHelpers.interopRequireDefault(_XMLHttpRequest);

var _ProgressEvent = require(479              ); // 479 = ./ProgressEvent

var _ProgressEvent2 = babelHelpers.interopRequireDefault(_ProgressEvent);

var _Event = require(480      ); // 480 = ./Event

var _Event2 = babelHelpers.interopRequireDefault(_Event);

var _FileReader = require(481           ); // 481 = ./FileReader

var _FileReader2 = babelHelpers.interopRequireDefault(_FileReader);

var _Fetch = require(482      ); // 482 = ./Fetch

var _Fetch2 = babelHelpers.interopRequireDefault(_Fetch);

exports.default = {
  Blob: _Blob2.default, File: _File2.default, XMLHttpRequest: _XMLHttpRequest2.default, ProgressEvent: _ProgressEvent2.default, Event: _Event2.default, FileReader: _FileReader2.default, Fetch: _Fetch2.default
};
}, 472, null, "react-native-fetch-blob/polyfill/index.js");
__d(/* react-native-fetch-blob/polyfill/Blob.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require(462          ); // 462 = ../index.js

var _index2 = babelHelpers.interopRequireDefault(_index);

var _fs = require(465       ); // 465 = ../fs.js

var _fs2 = babelHelpers.interopRequireDefault(_fs);

var _uuid = require(469            ); // 469 = ../utils/uuid

var _uuid2 = babelHelpers.interopRequireDefault(_uuid);

var _log = require(474              ); // 474 = ../utils/log.js

var _log2 = babelHelpers.interopRequireDefault(_log);

var _EventTarget2 = require(475            ); // 475 = ./EventTarget

var _EventTarget3 = babelHelpers.interopRequireDefault(_EventTarget2);

var log = new _log2.default('Blob');
var blobCacheDir = _fs2.default.dirs.DocumentDir + '/RNFetchBlob-blobs/';

log.disable();

var Blob = function (_EventTarget) {
  babelHelpers.inherits(Blob, _EventTarget);
  babelHelpers.createClass(Blob, [{
    key: 'blobPath',
    get: function get() {
      return this._ref;
    }
  }], [{
    key: 'clearCache',
    value: function clearCache() {
      return _fs2.default.unlink(blobCacheDir).then(function () {
        return _fs2.default.mkdir(blobCacheDir);
      });
    }
  }, {
    key: 'build',
    value: function build(data, cType) {
      return new Promise(function (resolve, reject) {
        new Blob(data, cType).onCreated(resolve);
      });
    }
  }, {
    key: 'setLog',
    value: function setLog(level) {
      if (level === -1) log.disable();else log.level(level);
    }
  }]);

  function Blob(data, cType, defer) {
    babelHelpers.classCallCheck(this, Blob);

    var _this = babelHelpers.possibleConstructorReturn(this, (Blob.__proto__ || Object.getPrototypeOf(Blob)).call(this));

    _this.isRNFetchBlobPolyfill = true;
    _this.multipartBoundary = null;
    _this._ref = null;
    _this._blobCreated = false;
    _this._onCreated = [];
    _this._closed = false;

    cType = cType || {};
    _this.cacheName = getBlobName();
    _this.isRNFetchBlobPolyfill = true;
    _this.isDerived = defer;
    _this.type = cType.type || 'text/plain';
    log.verbose('Blob constructor called', 'mime', _this.type, 'type', typeof data, 'length', data ? data.length : 0);
    _this._ref = blobCacheDir + _this.cacheName;
    var p = null;
    if (!data) data = '';
    if (data.isRNFetchBlobPolyfill) {
      log.verbose('create Blob cache file from Blob object');
      var size = 0;
      _this._ref = String(data.getRNFetchBlobRef());
      var orgPath = _this._ref;

      p = _fs2.default.exists(orgPath).then(function (exist) {
        if (exist) return _fs2.default.writeFile(orgPath, data, 'uri').then(function (size) {
          return Promise.resolve(size);
        }).catch(function (err) {
          throw 'RNFetchBlob Blob file creation error, ' + err;
        });else throw 'could not create Blob from path ' + orgPath + ', file not exists';
      });
    } else if (data instanceof FormData) {
        log.verbose('create Blob cache file from FormData', data);
        var boundary = 'RNFetchBlob-' + _this.cacheName + '-' + Date.now();
        _this.multipartBoundary = boundary;
        var parts = data.getParts();
        var formArray = [];
        if (!parts) {
          p = _fs2.default.writeFile(_this._ref, '', 'utf8');
        } else {
          for (var i in parts) {
            formArray.push('\r\n--' + boundary + '\r\n');
            var part = parts[i];
            for (var j in part.headers) {
              formArray.push(j + ': ' + part.headers[j] + '\r\n');
            }
            formArray.push('\r\n');
            if (part.isRNFetchBlobPolyfill) formArray.push(part);else formArray.push(part.string);
          }
          log.verbose('FormData array', formArray);
          formArray.push('\r\n--' + boundary + '--\r\n');
          p = createMixedBlobData(_this._ref, formArray);
        }
      } else if (typeof data === 'string' && data.startsWith('RNFetchBlob-file://')) {
          log.verbose('create Blob cache file from file path', data);
          _this._ref = String(data).replace('RNFetchBlob-file://', '');
          var _orgPath = _this._ref;
          if (defer) return babelHelpers.possibleConstructorReturn(_this);else {
            p = _fs2.default.stat(_orgPath).then(function (stat) {
              return Promise.resolve(stat.size);
            });
          }
        } else if (typeof data === 'string') {
            var encoding = 'utf8';
            var mime = String(_this.type);

            if (/(application\/octet|\;base64)/i.test(mime)) encoding = 'base64';else data = data.toString();

            _this.type = String(_this.type).replace(/;base64/ig, '');
            log.verbose('create Blob cache file from string', 'encode', encoding);
            p = _fs2.default.writeFile(_this._ref, data, encoding).then(function (size) {
              return Promise.resolve(size);
            });
          } else if (Array.isArray(data)) {
              log.verbose('create Blob cache file from mixed array', data);
              p = createMixedBlobData(_this._ref, data);
            } else {
              data = data.toString();
              p = _fs2.default.writeFile(_this._ref, data, 'utf8').then(function (size) {
                return Promise.resolve(size);
              });
            }
    p && p.then(function (size) {
      _this.size = size;
      _this._invokeOnCreateEvent();
    }).catch(function (err) {
      log.error('RNFetchBlob could not create Blob : ' + _this._ref, err);
    });

    return _this;
  }

  babelHelpers.createClass(Blob, [{
    key: 'onCreated',
    value: function onCreated(fn) {
      log.verbose('#register blob onCreated', this._blobCreated);
      if (!this._blobCreated) this._onCreated.push(fn);else {
        fn(this);
      }
      return this;
    }
  }, {
    key: 'markAsDerived',
    value: function markAsDerived() {
      this._isDerived = true;
    }
  }, {
    key: 'getRNFetchBlobRef',
    value: function getRNFetchBlobRef() {
      return this._ref;
    }
  }, {
    key: 'slice',
    value: function slice(start, end) {
      var _this2 = this;

      var contentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

      if (this._closed) throw 'Blob has been released.';
      log.verbose('slice called', start, end, contentType);

      var resPath = blobCacheDir + getBlobName();
      var pass = false;
      log.debug('fs.slice new blob will at', resPath);
      var result = new Blob(_index2.default.wrap(resPath), { type: contentType }, true);
      _fs2.default.exists(blobCacheDir).then(function (exist) {
        if (exist) return Promise.resolve();
        return _fs2.default.mkdir(blobCacheDir);
      }).then(function () {
        return _fs2.default.slice(_this2._ref, resPath, start, end);
      }).then(function (dest) {
        log.debug('fs.slice done', dest);
        result._invokeOnCreateEvent();
        pass = true;
      }).catch(function (err) {
        console.warn('Blob.slice failed:', err);
        pass = true;
      });
      log.debug('slice returning new Blob');

      return result;
    }
  }, {
    key: 'readBlob',
    value: function readBlob(encoding) {
      if (this._closed) throw 'Blob has been released.';
      return _fs2.default.readFile(this._ref, encoding || 'utf8');
    }
  }, {
    key: 'close',
    value: function close() {
      if (this._closed) return Promise.reject('Blob has been released.');
      this._closed = true;
      return _fs2.default.unlink(this._ref).catch(function (err) {
        console.warn(err);
      });
    }
  }, {
    key: '_invokeOnCreateEvent',
    value: function _invokeOnCreateEvent() {
      log.verbose('invoke create event', this._onCreated);
      this._blobCreated = true;
      var fns = this._onCreated;
      for (var i in fns) {
        if (typeof fns[i] === 'function') {
          fns[i](this);
        }
      }
      delete this._onCreated;
    }
  }, {
    key: 'isDerived',
    get: function get() {
      return this._isDerived || false;
    }
  }]);
  return Blob;
}(_EventTarget3.default);

exports.default = Blob;

function getBlobName() {
  return 'blob-' + (0, _uuid2.default)();
}

function createMixedBlobData(ref, dataArray) {
  var p = _fs2.default.writeFile(ref, '');
  var args = [];
  var size = 0;
  for (var i in dataArray) {
    var part = dataArray[i];
    if (!part) continue;
    if (part.isRNFetchBlobPolyfill) {
      args.push([ref, part._ref, 'uri']);
    } else if (typeof part === 'string') args.push([ref, part, 'utf8']);else if (Array.isArray(part)) args.push([ref, part, 'ascii']);
  }

  var _loop = function _loop(_i) {
    p = p.then(function (written) {
      var arg = this;
      if (written) size += written;
      log.verbose('mixed blob write', args[_i], written);
      return _fs2.default.appendFile.apply(_fs2.default, babelHelpers.toConsumableArray(arg));
    }.bind(args[_i]));
  };

  for (var _i in args) {
    _loop(_i);
  }
  return p.then(function () {
    return Promise.resolve(size);
  });
}
}, 473, null, "react-native-fetch-blob/polyfill/Blob.js");
__d(/* react-native-fetch-blob/utils/log.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var Log = function () {
  function Log(name) {
    babelHelpers.classCallCheck(this, Log);
    this._isEnable = true;
    this._level = 0;

    this._name = name;
  }

  babelHelpers.createClass(Log, [{
    key: 'level',
    value: function level(val) {
      this._isEnable = true;
      this._level = val;
    }
  }, {
    key: 'enable',
    value: function enable() {
      this._isEnable = true;
    }
  }, {
    key: 'disable',
    value: function disable() {
      this._isEnable = false;
    }
  }, {
    key: 'verbose',
    value: function verbose() {
      var _console;

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      this._isEnable && this._level > 2 && (_console = console).log.apply(_console, [this._name, 'verbose:'].concat(args));
    }
  }, {
    key: 'debug',
    value: function debug() {
      var _console2;

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      this._isEnable && this._level > 1 && (_console2 = console).log.apply(_console2, [this._name, 'debug:'].concat(args));
    }
  }, {
    key: 'info',
    value: function info() {
      var _console3;

      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      this._isEnable && this._level > 0 && (_console3 = console).log.apply(_console3, [this._name, 'info:'].concat(args));
    }
  }, {
    key: 'error',
    value: function error() {
      var _console4;

      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      this._isEnable && this._level > -1 && (_console4 = console).warn.apply(_console4, [this._name, 'error:'].concat(args));
    }
  }]);
  return Log;
}();

exports.default = Log;
}, 474, null, "react-native-fetch-blob/utils/log.js");
__d(/* react-native-fetch-blob/polyfill/EventTarget.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _log = require(474              ); // 474 = ../utils/log.js

var _log2 = babelHelpers.interopRequireDefault(_log);

var log = new _log2.default('EventTarget');

log.disable();

var EventTarget = function () {
  function EventTarget() {
    babelHelpers.classCallCheck(this, EventTarget);

    log.info('constructor called');
    this.listeners = {};
  }

  babelHelpers.createClass(EventTarget, [{
    key: 'addEventListener',
    value: function addEventListener(type, cb) {
      log.info('add event listener', type, cb);
      if (!(type in this.listeners)) {
        this.listeners[type] = [];
      }
      this.listeners[type].push(cb);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, cb) {
      log.info('remove event listener', type, cb);
      if (!(type in this.listeners)) return;
      var handlers = this.listeners[type];
      for (var i in handlers) {
        if (cb === handlers[i]) {
          handlers.splice(i, 1);
          return this.removeEventListener(type, cb);
        }
      }
    }
  }, {
    key: 'dispatchEvent',
    value: function dispatchEvent(type, event) {
      log.info('dispatch event', event);
      if (!(type in this.listeners)) return;
      var handlers = this.listeners[type];
      for (var i in handlers) {
        handlers[i].call(this, event);
      }
    }
  }, {
    key: 'clearEventListeners',
    value: function clearEventListeners() {
      for (var i in this.listeners) {
        delete this.listeners[i];
      }
    }
  }]);
  return EventTarget;
}();

exports.default = EventTarget;
}, 475, null, "react-native-fetch-blob/polyfill/EventTarget.js");
__d(/* react-native-fetch-blob/polyfill/File.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fs = require(465       ); // 465 = ../fs.js

var _fs2 = babelHelpers.interopRequireDefault(_fs);

var _Blob2 = require(473        ); // 473 = ./Blob.js

var _Blob3 = babelHelpers.interopRequireDefault(_Blob2);

var File = function (_Blob) {
  babelHelpers.inherits(File, _Blob);
  babelHelpers.createClass(File, null, [{
    key: 'build',
    value: function build(name, data, cType) {
      return new Promise(function (resolve, reject) {
        new File(data, cType).onCreated(function (f) {
          f.name = name;
          resolve(f);
        });
      });
    }
  }]);

  function File(data, cType) {
    babelHelpers.classCallCheck(this, File);

    var _this = babelHelpers.possibleConstructorReturn(this, (File.__proto__ || Object.getPrototypeOf(File)).call(this, data, cType));

    _this.name = '';
    return _this;
  }

  return File;
}(_Blob3.default);

exports.default = File;
}, 476, null, "react-native-fetch-blob/polyfill/File.js");
__d(/* react-native-fetch-blob/polyfill/XMLHttpRequest.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require(462          ); // 462 = ../index.js

var _index2 = babelHelpers.interopRequireDefault(_index);

var _XMLHttpRequestEventTarget = require(478                             ); // 478 = ./XMLHttpRequestEventTarget.js

var _XMLHttpRequestEventTarget2 = babelHelpers.interopRequireDefault(_XMLHttpRequestEventTarget);

var _log = require(474              ); // 474 = ../utils/log.js

var _log2 = babelHelpers.interopRequireDefault(_log);

var _Blob = require(473        ); // 473 = ./Blob.js

var _Blob2 = babelHelpers.interopRequireDefault(_Blob);

var _ProgressEvent = require(479                 ); // 479 = ./ProgressEvent.js

var _ProgressEvent2 = babelHelpers.interopRequireDefault(_ProgressEvent);

var _uri = require(463           ); // 463 = ../utils/uri

var _uri2 = babelHelpers.interopRequireDefault(_uri);

var log = new _log2.default('XMLHttpRequest');

log.disable();


var UNSENT = 0;
var OPENED = 1;
var HEADERS_RECEIVED = 2;
var LOADING = 3;
var DONE = 4;

var XMLHttpRequest = function (_XMLHttpRequestEventT) {
  babelHelpers.inherits(XMLHttpRequest, _XMLHttpRequestEventT);
  babelHelpers.createClass(XMLHttpRequest, [{
    key: 'UNSENT',
    get: function get() {
      return UNSENT;
    }
  }, {
    key: 'OPENED',
    get: function get() {
      return OPENED;
    }
  }, {
    key: 'HEADERS_RECEIVED',
    get: function get() {
      return HEADERS_RECEIVED;
    }
  }, {
    key: 'LOADING',
    get: function get() {
      return LOADING;
    }
  }, {
    key: 'DONE',
    get: function get() {
      return DONE;
    }
  }], [{
    key: 'setLog',
    value: function setLog(level) {
      if (level === -1) log.disable();else log.level(level);
    }
  }, {
    key: 'addBinaryContentType',
    value: function addBinaryContentType(substr) {
      for (var i in XMLHttpRequest.binaryContentTypes) {
        if (new RegExp(substr, 'i').test(XMLHttpRequest.binaryContentTypes[i])) {
          return;
        }
      }
      XMLHttpRequest.binaryContentTypes.push(substr);
    }
  }, {
    key: 'removeBinaryContentType',
    value: function removeBinaryContentType(val) {
      for (var i in XMLHttpRequest.binaryContentTypes) {
        if (new RegExp(substr, 'i').test(XMLHttpRequest.binaryContentTypes[i])) {
          XMLHttpRequest.binaryContentTypes.splice(i, 1);
          return;
        }
      }
    }
  }, {
    key: 'UNSENT',
    get: function get() {
      return UNSENT;
    }
  }, {
    key: 'OPENED',
    get: function get() {
      return OPENED;
    }
  }, {
    key: 'HEADERS_RECEIVED',
    get: function get() {
      return HEADERS_RECEIVED;
    }
  }, {
    key: 'LOADING',
    get: function get() {
      return LOADING;
    }
  }, {
    key: 'DONE',
    get: function get() {
      return DONE;
    }
  }]);

  function XMLHttpRequest() {
    babelHelpers.classCallCheck(this, XMLHttpRequest);

    log.verbose('XMLHttpRequest constructor called');

    var _this = babelHelpers.possibleConstructorReturn(this, (XMLHttpRequest.__proto__ || Object.getPrototypeOf(XMLHttpRequest)).call(this));

    _this.upload = new _XMLHttpRequestEventTarget2.default();
    _this._readyState = UNSENT;
    _this._uriType = 'net';
    _this._response = '';
    _this._responseText = '';
    _this._responseHeaders = {};
    _this._responseType = '';
    _this._responseURL = '';
    _this._responseXML = '';
    _this._status = 0;
    _this._statusText = '';
    _this._timeout = 60000;
    _this._sendFlag = false;
    _this._uploadStarted = false;
    _this._increment = false;
    _this._config = {};
    _this._headers = {
      'Content-Type': 'text/plain'
    };
    _this._cleanUp = null;
    return _this;
  }

  babelHelpers.createClass(XMLHttpRequest, [{
    key: 'open',
    value: function open(method, url, async, user, password) {
      log.verbose('XMLHttpRequest open ', method, url, async, user, password);
      this._method = method;
      this._url = url;
      this._headers = {};
      this._increment = _uri2.default.isJSONStreamURI(this._url);
      this._url = this._url.replace(/^JSONStream\:\/\//, '');
      this._dispatchReadStateChange(XMLHttpRequest.OPENED);
    }
  }, {
    key: 'send',
    value: function send(body) {
      var _this2 = this;

      this._body = body;

      if (this._readyState !== XMLHttpRequest.OPENED) throw 'InvalidStateError : XMLHttpRequest is not opened yet.';
      var promise = Promise.resolve();
      this._sendFlag = true;
      log.verbose('XMLHttpRequest send ', body);
      var _method = this._method,
          _url = this._url,
          _headers = this._headers;

      log.verbose('sending request with args', _method, _url, _headers, body);
      log.verbose(typeof body, body instanceof FormData);

      if (body instanceof _Blob2.default) {
        log.debug('sending blob body', body._blobCreated);
        promise = new Promise(function (resolve, reject) {
          body.onCreated(function (blob) {
            if (blob.isDerived) {
              _this2._cleanUp = function () {
                blob.close();
              };
            }
            log.debug('body created send request');
            body = _index2.default.wrap(blob.getRNFetchBlobRef());
            resolve();
          });
        });
      } else if (typeof body === 'object') {
        body = JSON.stringify(body);
        promise = Promise.resolve();
      } else {
        body = body ? body.toString() : body;
        promise = Promise.resolve();
      }

      promise.then(function () {
        log.debug('send request invoke', body);
        for (var h in _headers) {
          _headers[h] = _headers[h].toString();
        }

        _this2._task = _index2.default.config({
          auto: true,
          timeout: _this2._timeout,
          increment: _this2._increment,
          binaryContentTypes: XMLHttpRequest.binaryContentTypes
        }).fetch(_method, _url, _headers, body);
        _this2._task.stateChange(_this2._headerReceived.bind(_this2)).uploadProgress(_this2._uploadProgressEvent.bind(_this2)).progress(_this2._progressEvent.bind(_this2)).catch(_this2._onError.bind(_this2)).then(_this2._onDone.bind(_this2));
      });
    }
  }, {
    key: 'overrideMimeType',
    value: function overrideMimeType(mime) {
      log.verbose('XMLHttpRequest overrideMimeType', mime);
      this._headers['Content-Type'] = mime;
    }
  }, {
    key: 'setRequestHeader',
    value: function setRequestHeader(name, value) {
      log.verbose('XMLHttpRequest set header', name, value);
      if (this._readyState !== OPENED || this._sendFlag) {
        throw 'InvalidStateError : Calling setRequestHeader in wrong state  ' + this._readyState;
      }

      if (typeof name !== 'string' || /[^\u0000-\u00ff]/.test(name)) {
        throw 'TypeError : header field name should be a string';
      }

      var invalidPatterns = [/[\(\)\>\<\@\,\:\\\/\[\]\?\=\}\{\s\ \u007f\;\t\0\v\r]/, /tt/];
      for (var i in invalidPatterns) {
        if (invalidPatterns[i].test(name) || typeof name !== 'string') {
          throw 'SyntaxError : Invalid header field name ' + name;
        }
      }
      this._headers[name] = value;
    }
  }, {
    key: 'abort',
    value: function abort() {
      var _this3 = this;

      log.verbose('XMLHttpRequest abort ');
      if (!this._task) return;
      this._task.cancel(function (err) {
        var e = {
          timeStamp: Date.now()
        };
        if (_this3.onabort) _this3.onabort();
        if (err) {
          e.detail = err;
          e.type = 'error';
          _this3.dispatchEvent('error', e);
        } else {
          e.type = 'abort';
          _this3.dispatchEvent('abort', e);
        }
      });
    }
  }, {
    key: 'getResponseHeader',
    value: function getResponseHeader(field) {
      log.verbose('XMLHttpRequest get header', field, this._responseHeaders);
      if (!this._responseHeaders) return null;
      return this._responseHeaders[field] || this._responseHeaders[field.toLowerCase()] || null;
    }
  }, {
    key: 'getAllResponseHeaders',
    value: function getAllResponseHeaders() {
      log.verbose('XMLHttpRequest get all headers', this._responseHeaders);
      if (!this._responseHeaders) return '';
      var result = '';
      var respHeaders = this.responseHeaders;
      for (var i in respHeaders) {
        result += i + ': ' + respHeaders[i] + String.fromCharCode(0x0D, 0x0A);
      }
      return result.substr(0, result.length - 2);
    }
  }, {
    key: '_headerReceived',
    value: function _headerReceived(e) {
      log.debug('header received ', this._task.taskId, e);
      this.responseURL = this._url;
      if (e.state === "2") {
        this._responseHeaders = e.headers;
        this._statusText = e.status;
        this._status = Math.floor(e.status);
        this._dispatchReadStateChange(XMLHttpRequest.HEADERS_RECEIVED);
      }
    }
  }, {
    key: '_uploadProgressEvent',
    value: function _uploadProgressEvent(send, total) {
      if (!this._uploadStarted) {
        this.upload.dispatchEvent('loadstart');
        this._uploadStarted = true;
      }
      if (send >= total) this.upload.dispatchEvent('load');
      this.upload.dispatchEvent('progress', new _ProgressEvent2.default(true, send, total));
    }
  }, {
    key: '_progressEvent',
    value: function _progressEvent(send, total, chunk) {
      log.verbose(this.readyState);
      if (this._readyState === XMLHttpRequest.HEADERS_RECEIVED) this._dispatchReadStateChange(XMLHttpRequest.LOADING);
      var lengthComputable = false;
      if (total && total >= 0) lengthComputable = true;
      var e = new _ProgressEvent2.default(lengthComputable, send, total);

      if (this._increment) {
        this._responseText += chunk;
      }
      this.dispatchEvent('progress', e);
    }
  }, {
    key: '_onError',
    value: function _onError(err) {
      var statusCode = Math.floor(this.status);
      if (statusCode >= 100 && statusCode !== 408) {
        return;
      }
      log.debug('XMLHttpRequest error', err);
      this._statusText = err;
      this._status = String(err).match(/\d+/);
      this._status = this._status ? Math.floor(this.status) : 404;
      this._dispatchReadStateChange(XMLHttpRequest.DONE);
      if (err && String(err.message).match(/(timed\sout|timedout)/) || this._status == 408) {
        this.dispatchEvent('timeout');
      }
      this.dispatchEvent('loadend');
      this.dispatchEvent('error', {
        type: 'error',
        detail: err
      });
      this.clearEventListeners();
    }
  }, {
    key: '_onDone',
    value: function _onDone(resp) {
      var _this4 = this;

      log.debug('XMLHttpRequest done', this._url, resp, this);
      this._statusText = this._status;
      var responseDataReady = function responseDataReady() {
        log.debug('request done state = 4');
        _this4.dispatchEvent('load');
        _this4.dispatchEvent('loadend');
        _this4._dispatchReadStateChange(XMLHttpRequest.DONE);
        _this4.clearEventListeners();
      };
      if (resp) {
        var info = resp.respInfo || {};
        log.debug(this._url, info, info.respType);
        switch (this._responseType) {
          case 'blob':
            resp.blob().then(function (b) {
              _this4._responseText = resp.text();
              _this4._response = b;
              responseDataReady();
            });
            break;
          case 'arraybuffer':
            break;
          case 'json':
            this._response = resp.json();
            this._responseText = resp.text();
            break;
          default:
            this._responseText = resp.text();
            this._response = this.responseText;
            responseDataReady();
            break;
        }
      }
    }
  }, {
    key: '_dispatchReadStateChange',
    value: function _dispatchReadStateChange(state) {
      this._readyState = state;
      if (typeof this._onreadystatechange === 'function') this._onreadystatechange();
    }
  }, {
    key: 'onreadystatechange',
    set: function set(fn) {
      log.verbose('XMLHttpRequest set onreadystatechange', fn);
      this._onreadystatechange = fn;
    },
    get: function get() {
      return this._onreadystatechange;
    }
  }, {
    key: 'readyState',
    get: function get() {
      log.verbose('get readyState', this._readyState);
      return this._readyState;
    }
  }, {
    key: 'status',
    get: function get() {
      log.verbose('get status', this._status);
      return this._status;
    }
  }, {
    key: 'statusText',
    get: function get() {
      log.verbose('get statusText', this._statusText);
      return this._statusText;
    }
  }, {
    key: 'response',
    get: function get() {
      log.verbose('get response', this._response);
      return this._response;
    }
  }, {
    key: 'responseText',
    get: function get() {
      log.verbose('get responseText', this._responseText);
      return this._responseText;
    }
  }, {
    key: 'responseURL',
    get: function get() {
      log.verbose('get responseURL', this._responseURL);
      return this._responseURL;
    }
  }, {
    key: 'responseHeaders',
    get: function get() {
      log.verbose('get responseHeaders', this._responseHeaders);
      return this._responseHeaders;
    }
  }, {
    key: 'timeout',
    set: function set(val) {
      this._timeout = val * 1000;
      log.verbose('set timeout', this._timeout);
    },
    get: function get() {
      log.verbose('get timeout', this._timeout);
      return this._timeout;
    }
  }, {
    key: 'responseType',
    set: function set(val) {
      log.verbose('set response type', this._responseType);
      this._responseType = val;
    },
    get: function get() {
      log.verbose('get response type', this._responseType);
      return this._responseType;
    }
  }], [{
    key: 'isRNFBPolyfill',
    get: function get() {
      return true;
    }
  }]);
  return XMLHttpRequest;
}(_XMLHttpRequestEventTarget2.default);

XMLHttpRequest.binaryContentTypes = ['image/', 'video/', 'audio/'];
exports.default = XMLHttpRequest;
}, 477, null, "react-native-fetch-blob/polyfill/XMLHttpRequest.js");
__d(/* react-native-fetch-blob/polyfill/XMLHttpRequestEventTarget.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _EventTarget2 = require(475               ); // 475 = ./EventTarget.js

var _EventTarget3 = babelHelpers.interopRequireDefault(_EventTarget2);

var _log = require(474              ); // 474 = ../utils/log.js

var _log2 = babelHelpers.interopRequireDefault(_log);

var log = new _log2.default('XMLHttpRequestEventTarget');

log.disable();

var XMLHttpRequestEventTarget = function (_EventTarget) {
  babelHelpers.inherits(XMLHttpRequestEventTarget, _EventTarget);

  function XMLHttpRequestEventTarget() {
    babelHelpers.classCallCheck(this, XMLHttpRequestEventTarget);

    var _this = babelHelpers.possibleConstructorReturn(this, (XMLHttpRequestEventTarget.__proto__ || Object.getPrototypeOf(XMLHttpRequestEventTarget)).call(this));

    _this._onabort = function () {};

    _this._onerror = function () {};

    _this._onload = function () {};

    _this._onloadstart = function () {};

    _this._onprogress = function () {};

    _this._ontimeout = function () {};

    _this._onloadend = function () {};

    log.info('constructor called');
    return _this;
  }

  babelHelpers.createClass(XMLHttpRequestEventTarget, [{
    key: 'dispatchEvent',
    value: function dispatchEvent(event, e) {
      log.debug('dispatch event', event, e);
      babelHelpers.get(XMLHttpRequestEventTarget.prototype.__proto__ || Object.getPrototypeOf(XMLHttpRequestEventTarget.prototype), 'dispatchEvent', this).call(this, event, e);
      switch (event) {
        case 'abort':
          this._onabort(e);
          break;
        case 'error':
          this._onerror(e);
          break;
        case 'load':
          this._onload(e);
          break;
        case 'loadstart':
          this._onloadstart(e);
          break;
        case 'loadend':
          this._onloadend(e);
          break;
        case 'progress':
          this._onprogress(e);
          break;
        case 'timeout':
          this._ontimeout(e);
          break;
      }
    }
  }, {
    key: 'onabort',
    set: function set(fn) {
      log.info('set onabort');
      this._onabort = fn;
    },
    get: function get() {
      return this._onabort;
    }
  }, {
    key: 'onerror',
    set: function set(fn) {
      log.info('set onerror');
      this._onerror = fn;
    },
    get: function get() {
      return this._onerror;
    }
  }, {
    key: 'onload',
    set: function set(fn) {
      log.info('set onload', fn);
      this._onload = fn;
    },
    get: function get() {
      return this._onload;
    }
  }, {
    key: 'onloadstart',
    set: function set(fn) {
      log.info('set onloadstart');
      this._onloadstart = fn;
    },
    get: function get() {
      return this._onloadstart;
    }
  }, {
    key: 'onprogress',
    set: function set(fn) {
      log.info('set onprogress');
      this._onprogress = fn;
    },
    get: function get() {
      return this._onprogress;
    }
  }, {
    key: 'ontimeout',
    set: function set(fn) {
      log.info('set ontimeout');
      this._ontimeout = fn;
    },
    get: function get() {
      return this._ontimeout;
    }
  }, {
    key: 'onloadend',
    set: function set(fn) {
      log.info('set onloadend');
      this._onloadend = fn;
    },
    get: function get() {
      return this._onloadend;
    }
  }]);
  return XMLHttpRequestEventTarget;
}(_EventTarget3.default);

exports.default = XMLHttpRequestEventTarget;
}, 478, null, "react-native-fetch-blob/polyfill/XMLHttpRequestEventTarget.js");
__d(/* react-native-fetch-blob/polyfill/ProgressEvent.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Event2 = require(480      ); // 480 = ./Event

var _Event3 = babelHelpers.interopRequireDefault(_Event2);

var ProgressEvent = function (_Event) {
  babelHelpers.inherits(ProgressEvent, _Event);

  function ProgressEvent(lengthComputable, loaded, total) {
    babelHelpers.classCallCheck(this, ProgressEvent);

    var _this = babelHelpers.possibleConstructorReturn(this, (ProgressEvent.__proto__ || Object.getPrototypeOf(ProgressEvent)).call(this));

    _this._lengthComputable = false;
    _this._loaded = -1;
    _this._total = -1;

    _this._lengthComputable = lengthComputable;
    _this._loaded = loaded;
    _this._total = total;
    return _this;
  }

  babelHelpers.createClass(ProgressEvent, [{
    key: 'lengthComputable',
    get: function get() {
      return this._lengthComputable;
    }
  }, {
    key: 'loaded',
    get: function get() {
      return this._loaded;
    }
  }, {
    key: 'total',
    get: function get() {
      return this._total;
    }
  }]);
  return ProgressEvent;
}(_Event3.default);

exports.default = ProgressEvent;
}, 479, null, "react-native-fetch-blob/polyfill/ProgressEvent.js");
__d(/* react-native-fetch-blob/polyfill/Event.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var Event = function Event() {
  babelHelpers.classCallCheck(this, Event);
};

exports.default = Event;
}, 480, null, "react-native-fetch-blob/polyfill/Event.js");
__d(/* react-native-fetch-blob/polyfill/FileReader.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require(462          ); // 462 = ../index.js

var _index2 = babelHelpers.interopRequireDefault(_index);

var _ProgressEvent = require(479                 ); // 479 = ./ProgressEvent.js

var _ProgressEvent2 = babelHelpers.interopRequireDefault(_ProgressEvent);

var _EventTarget2 = require(475            ); // 475 = ./EventTarget

var _EventTarget3 = babelHelpers.interopRequireDefault(_EventTarget2);

var _Blob = require(473     ); // 473 = ./Blob

var _Blob2 = babelHelpers.interopRequireDefault(_Blob);

var _log = require(474              ); // 474 = ../utils/log.js

var _log2 = babelHelpers.interopRequireDefault(_log);

var _fs = require(465    ); // 465 = ../fs

var _fs2 = babelHelpers.interopRequireDefault(_fs);

var log = new _log2.default('FileReader');

log.level(3);

var FileReader = function (_EventTarget) {
  babelHelpers.inherits(FileReader, _EventTarget);
  babelHelpers.createClass(FileReader, [{
    key: 'isRNFBPolyFill',
    get: function get() {
      return true;
    }
  }], [{
    key: 'EMPTY',
    get: function get() {
      return 0;
    }
  }, {
    key: 'LOADING',
    get: function get() {
      return 1;
    }
  }, {
    key: 'DONE',
    get: function get() {
      return 2;
    }
  }]);

  function FileReader() {
    babelHelpers.classCallCheck(this, FileReader);

    var _this = babelHelpers.possibleConstructorReturn(this, (FileReader.__proto__ || Object.getPrototypeOf(FileReader)).call(this));

    _this._readState = 0;

    log.verbose('file reader const');
    _this._result = null;
    return _this;
  }

  babelHelpers.createClass(FileReader, [{
    key: 'abort',
    value: function abort() {
      log.verbose('abort', b, label);
    }
  }, {
    key: 'readAsArrayBuffer',
    value: function readAsArrayBuffer(b) {
      log.verbose('readAsArrayBuffer', b, label);
    }
  }, {
    key: 'readAsBinaryString',
    value: function readAsBinaryString(b) {
      log.verbose('readAsBinaryString', b, label);
    }
  }, {
    key: 'readAsText',
    value: function readAsText(b, label) {
      log.verbose('readAsText', b, label);
    }
  }, {
    key: 'readAsDataURL',
    value: function readAsDataURL(b) {
      log.verbose('readAsDataURL', b, label);
    }
  }, {
    key: 'dispatchEvent',
    value: function dispatchEvent(event, e) {
      log.verbose('dispatch event', event, e);
      babelHelpers.get(FileReader.prototype.__proto__ || Object.getPrototypeOf(FileReader.prototype), 'dispatchEvent', this).call(this, event, e);
      if (typeof this['on' + event] === 'function') {
        this['on' + event](e);
      }
    }
  }, {
    key: 'readState',
    get: function get() {
      return this._readyState;
    }
  }, {
    key: 'result',
    get: function get() {
      return this._result;
    }
  }]);
  return FileReader;
}(_EventTarget3.default);

exports.default = FileReader;
}, 481, null, "react-native-fetch-blob/polyfill/FileReader.js");
__d(/* react-native-fetch-blob/polyfill/Fetch.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require(462          ); // 462 = ../index.js

var _index2 = babelHelpers.interopRequireDefault(_index);

var _log = require(474              ); // 474 = ../utils/log.js

var _log2 = babelHelpers.interopRequireDefault(_log);

var _fs = require(465    ); // 465 = ../fs

var _fs2 = babelHelpers.interopRequireDefault(_fs);

var _unicode = require(483               ); // 483 = ../utils/unicode

var _unicode2 = babelHelpers.interopRequireDefault(_unicode);

var _Blob = require(473     ); // 473 = ./Blob

var _Blob2 = babelHelpers.interopRequireDefault(_Blob);

var log = new _log2.default('FetchPolyfill');

log.disable();

var Fetch = function Fetch(config) {
  babelHelpers.classCallCheck(this, Fetch);

  babelHelpers.extends(this, new RNFetchBlobFetchPolyfill(config));
};

exports.default = Fetch;

var RNFetchBlobFetchPolyfill = function RNFetchBlobFetchPolyfill(config) {
  babelHelpers.classCallCheck(this, RNFetchBlobFetchPolyfill);

  this.build = function () {
    return function (url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};


      var body = options.body;
      var promise = Promise.resolve();
      var blobCache = null;

      options.headers = options.headers || {};
      var ctype = options['Content-Type'] || options['content-type'];
      var ctypeH = options.headers['Content-Type'] || options.headers['content-type'];
      options.headers['Content-Type'] = ctype || ctypeH;
      options.headers['content-type'] = ctype || ctypeH;
      options.method = options.method || 'GET';
      if (body) {
        if (body instanceof FormData) {
          log.verbose('convert FormData to blob body');
          promise = _Blob2.default.build(body).then(function (b) {
            blobCache = b;
            options.headers['Content-Type'] = 'multipart/form-data;boundary=' + b.multipartBoundary;
            return Promise.resolve(_index2.default.wrap(b._ref));
          });
        } else if (body.isRNFetchBlobPolyfill) promise = Promise.resolve(_index2.default.wrap(body.blobPath));else if (typeof body !== 'object' && options.headers['Content-Type'] !== 'application/json') promise = Promise.resolve(JSON.stringify(body));else if (typeof body !== 'string') promise = Promise.resolve(body.toString());else promise = Promise.resolve(body);
      }

      var task = promise.then(function (body) {
        return _index2.default.config(config).fetch(options.method, url, options.headers, body);
      });

      var statefulPromise = task.then(function (resp) {
        log.verbose('response', resp);

        if (blobCache !== null && blobCache instanceof _Blob2.default) blobCache.close();
        return Promise.resolve(new RNFetchBlobFetchRepsonse(resp));
      });

      statefulPromise.cancel = task.cancel;
      statefulPromise.progress = task.progress;
      statefulPromise.uploadProgress = task.uploadProgress;

      return statefulPromise;
    };
  };
};

var RNFetchBlobFetchRepsonse = function () {
  function RNFetchBlobFetchRepsonse(resp) {
    babelHelpers.classCallCheck(this, RNFetchBlobFetchRepsonse);

    var info = resp.info();
    this.headers = info.headers;
    this.ok = info.status >= 200 && info.status <= 299, this.status = info.status;
    this.type = 'basic';
    this.bodyUsed = false;
    this.resp = resp;
    this.rnfbRespInfo = info;
    this.rnfbResp = resp;
  }

  babelHelpers.createClass(RNFetchBlobFetchRepsonse, [{
    key: 'rawResp',
    value: function rawResp() {
      return Promise.resolve(this.rnfbResp);
    }
  }, {
    key: 'arrayBuffer',
    value: function arrayBuffer() {
      log.verbose('to arrayBuffer', this.rnfbRespInfo);
      this.bodyUsed = true;
      return readArrayBuffer(this.rnfbResp, this.rnfbRespInfo);
    }
  }, {
    key: 'text',
    value: function text() {
      log.verbose('to text', this.rnfbResp, this.rnfbRespInfo);
      this.bodyUsed = true;
      return readText(this.rnfbResp, this.rnfbRespInfo);
    }
  }, {
    key: 'json',
    value: function json() {
      log.verbose('to json', this.rnfbResp, this.rnfbRespInfo);
      this.bodyUsed = true;
      return readJSON(this.rnfbResp, this.rnfbRespInfo);
    }
  }, {
    key: 'blob',
    value: function blob() {
      log.verbose('to blob', this.rnfbResp, this.rnfbRespInfo);
      this.bodyUsed = true;
      return readBlob(this.rnfbResp, this.rnfbRespInfo);
    }
  }]);
  return RNFetchBlobFetchRepsonse;
}();

function readArrayBuffer(resp, info) {
  switch (info.rnfbEncode) {
    case 'path':
      return resp.readFile('ascii');
      break;
    default:
      var buffer = [];
      var str = resp.text();
      for (var i in str) {
        buffer[i] = str.charCodeAt(i);
      }
      return Promise.resolve(buffer);
      break;
  }
}

function readText(resp, info) {
  switch (info.rnfbEncode) {
    case 'base64':
      return Promise.resolve(resp.text());
      break;
    case 'path':
      return resp.text();
      break;
    default:
      return Promise.resolve(resp.text());
      break;
  }
}

function readBlob(resp, info) {
  log.verbose('readBlob', resp, info);
  return resp.blob();
}

function readJSON(resp, info) {
  log.verbose('readJSON', resp, info);
  switch (info.rnfbEncode) {
    case 'base64':
      return Promise.resolve(resp.json());
    case 'path':
      return resp.json();
    default:
      return Promise.resolve(resp.json());
  }
}
}, 482, null, "react-native-fetch-blob/polyfill/Fetch.js");
__d(/* react-native-fetch-blob/utils/unicode.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (x) {
  var r = /\\u([\d\w]{4})/gi;
  x = x.replace(r, function (match, grp) {
    return String.fromCharCode(parseInt(grp, 16));
  });
  return unescape(x);
};
}, 483, null, "react-native-fetch-blob/utils/unicode.js");
__d(/* lodash/lodash.js */function(global, require, module, exports) {/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function () {
  var undefined;

  var VERSION = '4.17.4';

  var LARGE_ARRAY_SIZE = 200;

  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  var MAX_MEMOIZE_SIZE = 500;

  var PLACEHOLDER = '__lodash_placeholder__';

  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];

  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  var reEscapeChar = /\\(\\)?/g;

  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  var reFlags = /\w*$/;

  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  var reIsBinary = /^0b[01]+$/i;

  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  var reIsOctal = /^0o[0-7]+$/i;

  var reIsUint = /^(?:0|[1-9]\d*)$/;

  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  var reNoMatch = /($^)/;

  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  var rsApos = '[\'\u2019]',
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  var reApos = RegExp(rsApos, 'g');

  var reComboMark = RegExp(rsCombo, 'g');

  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');

  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');

  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];

  var templateCounter = -1;

  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

  var deburredLetters = {
    '\xc0': 'A', '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a', '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C', '\xe7': 'c',
    '\xd0': 'D', '\xf0': 'd',
    '\xc8': 'E', '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e', '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I', '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i', '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N', '\xf1': 'n',
    '\xd2': 'O', '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o', '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U', '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u', '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y', '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',

    '\u0100': 'A', '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a', '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C', '\u0108': 'C', '\u010A': 'C', '\u010C': 'C',
    '\u0107': 'c', '\u0109': 'c', '\u010B': 'c', '\u010D': 'c',
    '\u010E': 'D', '\u0110': 'D', '\u010F': 'd', '\u0111': 'd',
    '\u0112': 'E', '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011A': 'E',
    '\u0113': 'e', '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011B': 'e',
    '\u011C': 'G', '\u011E': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011D': 'g', '\u011F': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H', '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I', '\u012A': 'I', '\u012C': 'I', '\u012E': 'I', '\u0130': 'I',
    '\u0129': 'i', '\u012B': 'i', '\u012D': 'i', '\u012F': 'i', '\u0131': 'i',
    '\u0134': 'J', '\u0135': 'j',
    '\u0136': 'K', '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L', '\u013B': 'L', '\u013D': 'L', '\u013F': 'L', '\u0141': 'L',
    '\u013A': 'l', '\u013C': 'l', '\u013E': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N', '\u0145': 'N', '\u0147': 'N', '\u014A': 'N',
    '\u0144': 'n', '\u0146': 'n', '\u0148': 'n', '\u014B': 'n',
    '\u014C': 'O', '\u014E': 'O', '\u0150': 'O',
    '\u014D': 'o', '\u014F': 'o', '\u0151': 'o',
    '\u0154': 'R', '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r', '\u0157': 'r', '\u0159': 'r',
    '\u015A': 'S', '\u015C': 'S', '\u015E': 'S', '\u0160': 'S',
    '\u015B': 's', '\u015D': 's', '\u015F': 's', '\u0161': 's',
    '\u0162': 'T', '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't', '\u0165': 't', '\u0167': 't',
    '\u0168': 'U', '\u016A': 'U', '\u016C': 'U', '\u016E': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u', '\u016B': 'u', '\u016D': 'u', '\u016F': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W', '\u0175': 'w',
    '\u0176': 'Y', '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z', '\u017B': 'Z', '\u017D': 'Z',
    '\u017A': 'z', '\u017C': 'z', '\u017E': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017F': 's'
  };

  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  var root = freeGlobal || freeSelf || Function('return this')();

  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  var moduleExports = freeModule && freeModule.exports === freeExports;

  var freeProcess = moduleExports && freeGlobal.process;

  var nodeUtil = function () {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();

  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  function addMapEntry(map, pair) {
    map.set(pair[0], pair[1]);
    return map;
  }

  function addSetEntry(set, value) {
    set.add(value);
    return set;
  }

  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  var asciiSize = baseProperty('length');

  function asciiToArray(string) {
    return string.split('');
  }

  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function (value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while (fromRight ? index-- : ++index < length) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  function baseIndexOf(array, value, fromIndex) {
    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  function baseIsNaN(value) {
    return value !== value;
  }

  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? baseSum(array, iteratee) / length : NAN;
  }

  function baseProperty(key) {
    return function (object) {
      return object == null ? undefined : object[key];
    };
  }

  function basePropertyOf(object) {
    return function (key) {
      return object == null ? undefined : object[key];
    };
  }

  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function (value, index, collection) {
      accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : result + current;
      }
    }
    return result;
  }

  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  function baseToPairs(object, props) {
    return arrayMap(props, function (key) {
      return [key, object[key]];
    });
  }

  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  function baseValues(object, props) {
    return arrayMap(props, function (key) {
      return object[key];
    });
  }

  function cacheHas(cache, key) {
    return cache.has(key);
  }

  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  var deburrLetter = basePropertyOf(deburredLetters);

  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function (value) {
      result[++index] = [value, value];
    });
    return result;
  }

  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  function stringSize(string) {
    return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
  }

  function stringToArray(string) {
    return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
  }

  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  var runInContext = function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    var coreJsData = context['__core-js_shared__'];

    var funcToString = funcProto.toString;

    var hasOwnProperty = objectProto.hasOwnProperty;

    var idCounter = 0;

    var maskSrcKey = function () {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? 'Symbol(src)_1.' + uid : '';
    }();

    var nativeObjectToString = objectProto.toString;

    var objectCtorString = funcToString.call(Object);

    var oldDash = root._;

    var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? typeof Symbol === 'function' ? Symbol.isConcatSpreadable : '@@isConcatSpreadable' : undefined,
        symIterator = Symbol ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : undefined,
        symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

    var defineProperty = function () {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }();

    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    var metaMap = WeakMap && new WeakMap();

    var realNames = {};

    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    var baseCreate = function () {
      function object() {}
      return function (proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = undefined;
        return result;
      };
    }();

    function baseLodash() {}

    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    lodash.templateSettings = {
      'escape': reEscape,

      'evaluate': reEvaluate,

      'interpolate': reInterpolate,

      'variable': '',

      'imports': {
        '_': lodash
      }
    };

    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : start - 1,
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || !isRight && arrLength == length && takeCount == length) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer: while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
    }

    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
      return this;
    }

    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash(),
        'map': new (Map || ListCache)(),
        'string': new Hash()
      };
    }

    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }

    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }

    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    function stackGet(key) {
      return this.__data__.get(key);
    }

    function stackHas(key) {
      return this.__data__.has(key);
    }

    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }

    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    function assignMergeValue(object, key, value) {
      if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }

    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }

    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function (value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }

      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function (subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }

        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    function baseConforms(source) {
      var props = keys(source);
      return function (object) {
        return baseConformsTo(object, source, props);
      };
    }

    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if (value === undefined && !(key in object) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function () {
        func.apply(undefined, args);
      }, wait);
    }

    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer: while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = comparator || value !== 0 ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        } else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    var baseEach = createBaseEach(baseForOwn);

    var baseEachRight = createBaseEach(baseForOwnRight, true);

    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function (value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end === undefined || end > length ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function (value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    var baseFor = createBaseFor();

    var baseForRight = createBaseFor(true);

    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    function baseFunctions(object, props) {
      return arrayFilter(props, function (key) {
        return isFunction(object[key]);
      });
    }

    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : undefined;
    }

    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }

    function baseGt(value, other) {
      return value > other;
    }

    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer: while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = comparator || value !== 0 ? value : 0;
        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function (value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }

    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    function baseIteratee(value) {
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }

    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    function baseLt(value, other) {
      return value < other;
    }

    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function (value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function (object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function (object) {
        var objValue = get(object, path);
        return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function (srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack());
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(object[key], srcValue, key + '', object, source, stack) : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || srcIndex && isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function (value, key, collection) {
        var criteria = arrayMap(iteratees, function (iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function (object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    function basePick(object, paths) {
      return basePickBy(object, paths, function (value, path) {
        return hasIn(object, path);
      });
    }

    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    function basePropertyDeep(path) {
      return function (object) {
        return baseGet(object, path);
      };
    }

    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }

      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    function baseSample(collection) {
      return arraySample(values(collection));
    }

    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    var baseSetData = !metaMap ? identity : function (func, data) {
      metaMap.set(func, data);
      return func;
    };

    var baseSetToString = !defineProperty ? identity : function (func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function (value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = low + high >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? computed <= value : computed < value;
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    function baseToString(value) {
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = value + '';
      return result == '0' && 1 / value == -INFINITY ? '-0' : result;
    }

    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer: while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = comparator || value !== 0 ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        } else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}

      return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
    }

    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function (result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    var castRest = baseRest;

    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }

    var clearTimeout = ctxClearTimeout || function (id) {
      return root.clearTimeout(id);
    };

    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor());
    }

    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor());
    }

    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }

      return object.index - other.index;
    }

    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    function createAggregator(setter, initializer) {
      return function (collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    function createAssigner(assigner) {
      return baseRest(function (object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    function createBaseEach(eachFunc, fromRight) {
      return function (collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    function createBaseFor(fromRight) {
      return function (object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    function createCaseFirst(methodName) {
      return function (string) {
        string = toString(string);

        var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;

        var chr = strSymbols ? strSymbols[0] : string.charAt(0);

        var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    function createCompounder(callback) {
      return function (string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    function createCtor(Ctor) {
      return function () {
        var args = arguments;
        switch (args.length) {
          case 0:
            return new Ctor();
          case 1:
            return new Ctor(args[0]);
          case 2:
            return new Ctor(args[0], args[1]);
          case 3:
            return new Ctor(args[0], args[1], args[2]);
          case 4:
            return new Ctor(args[0], args[1], args[2], args[3]);
          case 5:
            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        return isObject(result) ? result : thisBinding;
      };
    }

    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
        }
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    function createFind(findIndexFunc) {
      return function (collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function predicate(key) {
            return iteratee(iterable[key], key, iterable);
          };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    function createFlow(fromRight) {
      return flatRest(function (funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
          }
        }
        return function () {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    function createInverter(setter, toIteratee) {
      return function (object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    function createMathOperation(operator, defaultValue) {
      return function (value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    function createOver(arrayFunc) {
      return flatRest(function (iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function (args) {
          var thisArg = this;
          return arrayFunc(iteratees, function (iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
    }

    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = this && this !== root && this instanceof wrapper ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    function createRange(fromRight) {
      return function (start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }

        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    function createRelationalOperation(operator) {
      return function (value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    function createRound(methodName) {
      var func = Math[methodName];
      return function (number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
      return new Set(values);
    };

    function createToPairs(keysFunc) {
      return function (object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
        return srcValue;
      }
      return objValue;
    }

    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }

      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;

      stack.set(array, other);
      stack.set(other, array);

      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }

        if (seen) {
          if (!arraySome(other, function (othValue, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          return object == other + '';

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }

          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }

      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }

        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    var getData = !metaMap ? noop : function (func) {
      return metaMap.get(func);
    };

    function getFuncName(func) {
      var result = func.name + '',
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
    }

    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function (symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    var getTag = baseGetTag;

    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function getTag(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }

    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':
            start += size;break;
          case 'dropRight':
            end -= size;break;
          case 'take':
            end = nativeMin(end, start + size);break;
          case 'takeRight':
            start = nativeMax(start, end - size);break;
        }
      }
      return { 'start': start, 'end': end };
    }

    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }

    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    function initCloneObject(object) {
      return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }

    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag:case float64Tag:
        case int8Tag:case int16Tag:case int32Tag:
        case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
    }

    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
        return eq(object[index], value);
      }
      return false;
    }

    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }

    function isKeyable(value) {
      var type = typeof value;
      return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
    }

    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }

    var isMaskable = coreJsData ? isFunction : stubFalse;

    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

      return value === proto;
    }

    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    function matchesStrictComparable(key, srcValue) {
      return function (object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
      };
    }

    function memoizeCapped(func) {
      var result = memoize(func, function (key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;

      if (!(isCommon || isCombo)) {
        return data;
      }

      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];

        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }

      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }

      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }

      value = source[7];
      if (value) {
        data[7] = value;
      }

      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }

      if (data[9] == null) {
        data[9] = source[9];
      }

      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? func.length - 1 : start, 0);
      return function () {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    var setData = shortOut(baseSetData);

    var setTimeout = ctxSetTimeout || function (func, wait) {
      return root.setTimeout(func, wait);
    };

    var setToString = shortOut(baseSetToString);

    function setWrapToString(wrapper, reference, bitmask) {
      var source = reference + '';
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function () {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    var stringToPath = memoizeCapped(function (string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function (match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);
      });
      return result;
    });

    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = value + '';
      return result == '0' && 1 / value == -INFINITY ? '-0' : result;
    }

    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return func + '';
        } catch (e) {}
      }
      return '';
    }

    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function (pair) {
        var value = '_.' + pair[0];
        if (bitmask & pair[1] && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__ = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    function chunk(array, size, guard) {
      if (guard ? isIterateeCall(array, size, guard) : size === undefined) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, index += size);
      }
      return result;
    }

    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    var difference = baseRest(function (array, values) {
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
    });

    var differenceBy = baseRest(function (array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
    });

    var differenceWith = baseRest(function (array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
    });

    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    function dropRightWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
    }

    function dropWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
    }

    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    function head(array) {
      return array && array.length ? array[0] : undefined;
    }

    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    var intersection = baseRest(function (arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
    });

    var intersectionBy = baseRest(function (arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
    });

    var intersectionWith = baseRest(function (arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
    });

    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
    }

    function nth(array, n) {
      return array && array.length ? baseNth(array, toInteger(n)) : undefined;
    }

    var pull = baseRest(pullAll);

    function pullAll(array, values) {
      return array && array.length && values && values.length ? basePullAll(array, values) : array;
    }

    function pullAllBy(array, values, iteratee) {
      return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
    }

    function pullAllWith(array, values, comparator) {
      return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
    }

    var pullAt = flatRest(function (array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function (index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      } else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    function sortedUniq(array) {
      return array && array.length ? baseSortedUniq(array) : [];
    }

    function sortedUniqBy(array, iteratee) {
      return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
    }

    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = guard || n === undefined ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    function takeRightWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
    }

    function takeWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
    }

    var union = baseRest(function (arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    var unionBy = baseRest(function (arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    var unionWith = baseRest(function (arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    function uniq(array) {
      return array && array.length ? baseUniq(array) : [];
    }

    function uniqBy(array, iteratee) {
      return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return array && array.length ? baseUniq(array, undefined, comparator) : [];
    }

    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function (group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function (index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function (group) {
        return apply(iteratee, undefined, group);
      });
    }

    var without = baseRest(function (array, values) {
      return isArrayLikeObject(array) ? baseDifference(array, values) : [];
    });

    var xor = baseRest(function (arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    var xorBy = baseRest(function (arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    var xorWith = baseRest(function (arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    var zip = baseRest(unzip);

    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    var zipWith = baseRest(function (arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    function thru(value, interceptor) {
      return interceptor(value);
    }

    var wrapperAt = flatRest(function (paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function interceptor(object) {
        return baseAt(object, paths);
      };

      if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function (array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    function wrapperChain() {
      return chain(this);
    }

    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    function wrapperToIterator() {
      return this;
    }

    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    var countBy = createAggregator(function (result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    var find = createFind(findIndex);

    var findLast = createFind(findLastIndex);

    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    var groupBy = createAggregator(function (result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
    }

    var invokeMap = baseRest(function (collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function (value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    var keyBy = createAggregator(function (result, value, key) {
      baseAssignValue(result, key, value);
    });

    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    var partition = createAggregator(function (result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function () {
      return [[], []];
    });

    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    function sampleSize(collection, n, guard) {
      if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    var sortBy = baseRest(function (collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    var now = ctxNow || function () {
      return root.Date.now();
    };

    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function () {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = func && n == null ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function () {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    var bind = baseRest(function (func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    var bindKey = baseRest(function (object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        lastInvokeTime = time;

        timerId = setTimeout(timerExpired, wait);

        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }

        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    var defer = baseRest(function (func, args) {
      return baseDelay(func, 1, args);
    });

    var delay = baseRest(function (func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    function memoize(func, resolver) {
      if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function memoized() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }

    memoize.Cache = MapCache;

    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function () {
        var args = arguments;
        switch (args.length) {
          case 0:
            return !predicate.call(this);
          case 1:
            return !predicate.call(this, args[0]);
          case 2:
            return !predicate.call(this, args[0], args[1]);
          case 3:
            return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    function once(func) {
      return before(2, func);
    }

    var overArgs = castRest(function (func, transforms) {
      transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function (args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    var partial = baseRest(function (func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    var partialRight = baseRest(function (func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    var rearg = flatRest(function (func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function (args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    function unary(func) {
      return ary(func, 1);
    }

    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }

    var gt = createRelationalOperation(baseGt);

    var gte = createRelationalOperation(function (value, other) {
      return value >= other;
    });

    var isArguments = baseIsArguments(function () {
      return arguments;
    }()) ? baseIsArguments : function (value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
    };

    var isArray = Array.isArray;

    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    function isBoolean(value) {
      return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
    }

    var isBuffer = nativeIsBuffer || stubFalse;

    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
    }

    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }

      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    function isLength(value) {
      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    function isNaN(value) {
      return isNumber(value) && value != +value;
    }

    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    function isNull(value) {
      return value === null;
    }

    function isNil(value) {
      return value == null;
    }

    function isNumber(value) {
      return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
    }

    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }

    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    function isString(value) {
      return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }

    function isSymbol(value) {
      return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }

    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    function isUndefined(value) {
      return value === undefined;
    }

    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    var lt = createRelationalOperation(baseLt);

    var lte = createRelationalOperation(function (value, other) {
      return value <= other;
    });

    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;

      return func(value);
    }

    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? remainder ? result - remainder : result : 0;
    }

    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }

    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    function toSafeInteger(value) {
      return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
    }

    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    var assign = createAssigner(function (object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    var assignIn = createAssigner(function (object, source) {
      copyObject(source, keysIn(source), object);
    });

    var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    var at = flatRest(baseAt);

    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    var defaults = baseRest(function (args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    var defaultsDeep = baseRest(function (args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    function forIn(object, iteratee) {
      return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    function forInRight(object, iteratee) {
      return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    var invert = createInverter(function (result, value, key) {
      result[value] = key;
    }, constant(identity));

    var invertBy = createInverter(function (result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    var invoke = baseRest(baseInvoke);

    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function (value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function (value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    var merge = createAssigner(function (object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    var omit = flatRest(function (object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function (path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    var pick = flatRest(function (object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function (prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function (value, path) {
        return predicate(value, path[0]);
      });
    }

    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    var toPairs = createToPairs(keys);

    var toPairsIn = createToPairs(keysIn);

    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor() : [];
        } else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        } else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        } else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      } else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
      }
      return baseRandom(lower, upper);
    }

    var camelCase = createCompounder(function (result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined ? length : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    function escape(string) {
      string = toString(string);
      return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
    }

    function escapeRegExp(string) {
      string = toString(string);
      return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
    }

    var kebabCase = createCompounder(function (result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    var lowerCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    var lowerFirst = createCaseFirst('toLowerCase');

    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
    }

    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
    }

    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
    }

    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    function repeat(string, n, guard) {
      if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    var snakeCase = createCompounder(function (result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    var startCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    function template(string, options, guard) {
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');

      var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';

      string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        return match;
      });

      source += "';\n";

      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }

      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');

      source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';

      var result = attempt(function () {
        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
      });

      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    function toLower(value) {
      return toString(value).toLowerCase();
    }

    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += result.length - end;
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while (match = separator.exec(substring)) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    function unescape(string) {
      string = toString(string);
      return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
    }

    var upperCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    var upperFirst = createCaseFirst('toUpperCase');

    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    var attempt = baseRest(function (func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    var bindAll = flatRest(function (object, methodNames) {
      arrayEach(methodNames, function (key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function (pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function (args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    function constant(value) {
      return function () {
        return value;
      };
    }

    function defaultTo(value, defaultValue) {
      return value == null || value !== value ? defaultValue : value;
    }

    var flow = createFlow();

    var flowRight = createFlow(true);

    function identity(value) {
      return value;
    }

    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    var method = baseRest(function (path, args) {
      return function (object) {
        return baseInvoke(object, path, args);
      };
    });

    var methodOf = baseRest(function (object, args) {
      return function (path) {
        return baseInvoke(object, path, args);
      };
    });

    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function (methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function () {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    function noop() {}

    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function (args) {
        return baseNth(args, n);
      });
    }

    var over = createOver(arrayMap);

    var overEvery = createOver(arrayEvery);

    var overSome = createOver(arraySome);

    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    function propertyOf(object) {
      return function (path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    var range = createRange();

    var rangeRight = createRange(true);

    function stubArray() {
      return [];
    }

    function stubFalse() {
      return false;
    }

    function stubObject() {
      return {};
    }

    function stubString() {
      return '';
    }

    function stubTrue() {
      return true;
    }

    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    var add = createMathOperation(function (augend, addend) {
      return augend + addend;
    }, 0);

    var ceil = createRound('ceil');

    var divide = createMathOperation(function (dividend, divisor) {
      return dividend / divisor;
    }, 1);

    var floor = createRound('floor');

    function max(array) {
      return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
    }

    function maxBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
    }

    function mean(array) {
      return baseMean(array, identity);
    }

    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    function min(array) {
      return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
    }

    function minBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
    }

    var multiply = createMathOperation(function (multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    var round = createRound('round');

    var subtract = createMathOperation(function (minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    function sum(array) {
      return array && array.length ? baseSum(array, identity) : 0;
    }

    function sumBy(array, iteratee) {
      return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
    }

    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    mixin(lodash, lodash);

    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, function () {
      var source = {};
      baseForOwn(lodash, function (func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }(), { 'chain': false });

    lodash.VERSION = VERSION;

    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
      lodash[methodName].placeholder = lodash;
    });

    arrayEach(['drop', 'take'], function (methodName, index) {
      LazyWrapper.prototype[methodName] = function (n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function (n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function (iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    arrayEach(['head', 'last'], function (methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function () {
        return this[takeName](1).value()[0];
      };
    });

    arrayEach(['initial', 'tail'], function (methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function () {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function () {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function (predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function (predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function (value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function (predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function (start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function (predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function () {
      return this.take(MAX_ARRAY_LENGTH);
    };

    baseForOwn(LazyWrapper.prototype, function (func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function () {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function interceptor(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return isTaker && chainAll ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
      };
    });

    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function () {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function (value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    baseForOwn(LazyWrapper.prototype, function (func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '',
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  };

  var _ = runInContext();

  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    root._ = _;

    define(function () {
      return _;
    });
  } else if (freeModule) {
      (freeModule.exports = _)._ = _;

      freeExports._ = _;
    } else {
      root._ = _;
    }
}).call(this);
}, 484, null, "lodash/lodash.js");
__d(/* react-native-fetch-blob/android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;

function actionViewIntent(path) {
  var mime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text/plain';

  if (_reactNative.Platform.OS === 'android') return RNFetchBlob.actionViewIntent(path, mime);else return Promise.reject('RNFetchBlob.actionViewIntent only supports Android.');
}

function getContentIntent(mime) {
  if (_reactNative.Platform.OS === 'android') return RNFetchBlob.getContentIntent(mime);else return Promise.reject('RNFetchBlob.getContentIntent only supports Android.');
}

exports.default = {
  actionViewIntent: actionViewIntent,
  getContentIntent: getContentIntent
};
}, 485, null, "react-native-fetch-blob/android.js");
__d(/* react-native-fetch-blob/ios.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;

function previewDocument(path, scheme) {
  if (_reactNative.Platform.OS === 'ios') return RNFetchBlob.previewDocument('file://' + path, scheme);else return Promise.reject('RNFetchBlob.openDocument only supports IOS.');
}

function openDocument(path, scheme) {
  if (_reactNative.Platform.OS === 'ios') return RNFetchBlob.openDocument('file://' + path, scheme);else return Promise.reject('RNFetchBlob.previewDocument only supports IOS.');
}

function excludeFromBackupKey(url) {
  return RNFetchBlob.excludeFromBackupKey('file://' + path);
}

exports.default = {
  openDocument: openDocument,
  previewDocument: previewDocument,
  excludeFromBackupKey: excludeFromBackupKey
};
}, 486, null, "react-native-fetch-blob/ios.js");
__d(/* react-native-fetch-blob/net.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;

function getCookies(domain) {
  return RNFetchBlob.getCookies(domain || '');
}

function removeCookies(domain) {
  return RNFetchBlob.removeCookies(domain || '');
}

exports.default = {
  getCookies: getCookies,
  removeCookies: removeCookies
};
}, 487, null, "react-native-fetch-blob/net.js");
__d(/* react-native-fetch-blob/json-stream.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _oboeBrowserMin = require(489                        ); // 489 = ./lib/oboe-browser.min.js

var _oboeBrowserMin2 = babelHelpers.interopRequireDefault(_oboeBrowserMin);

var _XMLHttpRequest = require(477                        ); // 477 = ./polyfill/XMLHttpRequest

var _XMLHttpRequest2 = babelHelpers.interopRequireDefault(_XMLHttpRequest);

var _uri = require(463          ); // 463 = ./utils/uri

var _uri2 = babelHelpers.interopRequireDefault(_uri);

var OboeExtended = function OboeExtended(arg) {

  window.location = '';

  if (!window.XMLHttpRequest.isRNFBPolyfill) {
    window.XMLHttpRequest = _XMLHttpRequest2.default;
    console.warn('Use JSONStream will automatically replace window.XMLHttpRequest with RNFetchBlob.polyfill.XMLHttpRequest. You are seeing this warning because you did not replace it maually.');
  }

  if (typeof arg === 'string') {
    if (_uri2.default.isFileURI(arg)) {
      arg = {
        url: 'JSONStream://' + arg,
        headers: { noCache: true }
      };
    } else arg = 'JSONStream://' + arg;
  } else if (typeof arg === 'object') {
    var headers = arg.headers || {};
    if (_uri2.default.isFileURI(arg.url)) {
      headers.noCache = true;
    }
    arg = babelHelpers.extends(arg, {
      url: 'JSONStream://' + arg.url,
      headers: headers
    });
  }
  return (0, _oboeBrowserMin2.default)(arg);
};

exports.default = OboeExtended;
}, 488, null, "react-native-fetch-blob/json-stream.js");
__d(/* react-native-fetch-blob/lib/oboe-browser.min.js */function(global, require, module, exports) {!function (a, b, c, d, e, f) {
  function g(a, b) {
    return function () {
      return a.call(this, b.apply(this, arguments));
    };
  }function h(a) {
    return function (b) {
      return b[a];
    };
  }function i(a, b) {
    return b.apply(f, a);
  }function j(a) {
    var b = a.length - 1,
        d = c.prototype.slice;if (0 == b) return function () {
      return a.call(this, d.call(arguments));
    };if (1 == b) return function () {
      return a.call(this, arguments[0], d.call(arguments, 1));
    };var e = c(a.length);return function () {
      for (var c = 0; b > c; c++) {
        e[c] = arguments[c];
      }return e[b] = d.call(arguments, b), a.apply(this, e);
    };
  }function k(a) {
    return function (b, c) {
      return a(c, b);
    };
  }function l(a, b) {
    return function (c) {
      return a(c) && b(c);
    };
  }function m() {}function n() {
    return !0;
  }function o(a) {
    return function () {
      return a;
    };
  }function p(a, b) {
    return b && b.constructor === a;
  }function q(a) {
    return a !== f;
  }function r(a, c) {
    return c instanceof b && y(function (a) {
      return a in c;
    }, a);
  }function s(a, b) {
    return [a, b];
  }function t(a) {
    return A(a.reduce(k(s), X));
  }function u(a) {
    return w(function (a, b) {
      return a.unshift(b), a;
    }, [], a);
  }function v(a, b) {
    return b ? s(a(Y(b)), v(a, Z(b))) : X;
  }function w(a, b, c) {
    return c ? a(w(a, b, Z(c)), Y(c)) : b;
  }function x(a, b, c) {
    function d(a, c) {
      return a ? b(Y(a)) ? (c(Y(a)), Z(a)) : s(Y(a), d(Z(a), c)) : X;
    }return d(a, c || m);
  }function y(a, b) {
    return !b || a(Y(b)) && y(a, Z(b));
  }function z(a, b) {
    a && (Y(a).apply(null, b), z(Z(a), b));
  }function A(a) {
    function b(a, c) {
      return a ? b(Z(a), s(Y(a), c)) : c;
    }return b(a, X);
  }function B(a, b) {
    return b && (a(Y(b)) ? Y(b) : B(a, Z(b)));
  }function C(a) {
    "use strict";
    function b() {
      var a = 0;P.length > p && (c("Max buffer length exceeded: textNode"), a = Math.max(a, P.length)), Q.length > p && (c("Max buffer length exceeded: numberNode"), a = Math.max(a, Q.length)), O = p - a + Y;
    }function c(a) {
      P && (m(P), n(), P = ""), i = d(a + "\nLn: " + $ + "\nCol: " + Z + "\nChr: " + j), o(N(f, f, i));
    }function e() {
      return T == s ? (m({}), n(), void (S = !0)) : ((T !== t || 0 !== X) && c("Unexpected end"), P && (m(P), n(), P = ""), void (S = !0));
    }function g(a) {
      return "\r" == a || "\n" == a || " " == a || "	" == a;
    }function h(a) {
      if (!i) {
        if (S) return c("Cannot write after close");var d = 0;for (j = a[0]; j && (k = j, j = a[d++]);) {
          switch (Y++, "\n" == j ? ($++, Z = 0) : Z++, T) {case s:
              if ("{" === j) T = u;else if ("[" === j) T = w;else if (!g(j)) return c("Non-whitespace before {[.");continue;case z:case u:
              if (g(j)) continue;if (T === z) U.push(A);else {
                if ("}" === j) {
                  m({}), n(), T = U.pop() || t;continue;
                }U.push(v);
              }if ('"' !== j) return c('Malformed object key should start with " ');T = y;continue;case A:case v:
              if (g(j)) continue;if (":" === j) T === v ? (U.push(v), P && (m({}), l(P), P = ""), X++) : P && (l(P), P = ""), T = t;else if ("}" === j) P && (m(P), n(), P = ""), n(), X--, T = U.pop() || t;else {
                if ("," !== j) return c("Bad object");T === v && U.push(v), P && (m(P), n(), P = ""), T = z;
              }continue;case w:case t:
              if (g(j)) continue;if (T === w) {
                if (m([]), X++, T = t, "]" === j) {
                  n(), X--, T = U.pop() || t;continue;
                }U.push(x);
              }if ('"' === j) T = y;else if ("{" === j) T = u;else if ("[" === j) T = w;else if ("t" === j) T = B;else if ("f" === j) T = E;else if ("n" === j) T = I;else if ("-" === j) Q += j;else if ("0" === j) Q += j, T = M;else {
                if (-1 === "123456789".indexOf(j)) return c("Bad value");Q += j, T = M;
              }continue;case x:
              if ("," === j) U.push(x), P && (m(P), n(), P = ""), T = t;else {
                if ("]" !== j) {
                  if (g(j)) continue;return c("Bad array");
                }P && (m(P), n(), P = ""), n(), X--, T = U.pop() || t;
              }continue;case y:
              var e = d - 1;a: for (;;) {
                for (; W > 0;) {
                  if (V += j, j = a.charAt(d++), 4 === W ? (P += String.fromCharCode(parseInt(V, 16)), W = 0, e = d - 1) : W++, !j) break a;
                }if ('"' === j && !R) {
                  T = U.pop() || t, P += a.substring(e, d - 1), P || (m(""), n());break;
                }if ("\\" === j && !R && (R = !0, P += a.substring(e, d - 1), j = a.charAt(d++), !j)) break;if (R) {
                  if (R = !1, "n" === j ? P += "\n" : "r" === j ? P += "\r" : "t" === j ? P += "	" : "f" === j ? P += "\f" : "b" === j ? P += "\b" : "u" === j ? (W = 1, V = "") : P += j, j = a.charAt(d++), e = d - 1, j) continue;break;
                }q.lastIndex = d;var f = q.exec(a);if (!f) {
                  d = a.length + 1, P += a.substring(e, d - 1);break;
                }if (d = f.index + 1, j = a.charAt(f.index), !j) {
                  P += a.substring(e, d - 1);break;
                }
              }continue;case B:
              if (!j) continue;if ("r" !== j) return c("Invalid true started with t" + j);T = C;continue;case C:
              if (!j) continue;if ("u" !== j) return c("Invalid true started with tr" + j);T = D;continue;case D:
              if (!j) continue;if ("e" !== j) return c("Invalid true started with tru" + j);m(!0), n(), T = U.pop() || t;continue;case E:
              if (!j) continue;if ("a" !== j) return c("Invalid false started with f" + j);T = F;continue;case F:
              if (!j) continue;if ("l" !== j) return c("Invalid false started with fa" + j);T = G;continue;case G:
              if (!j) continue;if ("s" !== j) return c("Invalid false started with fal" + j);T = H;continue;case H:
              if (!j) continue;if ("e" !== j) return c("Invalid false started with fals" + j);m(!1), n(), T = U.pop() || t;continue;case I:
              if (!j) continue;if ("u" !== j) return c("Invalid null started with n" + j);T = J;continue;case J:
              if (!j) continue;if ("l" !== j) return c("Invalid null started with nu" + j);T = K;continue;case K:
              if (!j) continue;if ("l" !== j) return c("Invalid null started with nul" + j);m(null), n(), T = U.pop() || t;continue;case L:
              if ("." !== j) return c("Leading zero not followed by .");Q += j, T = M;continue;case M:
              if (-1 !== "0123456789".indexOf(j)) Q += j;else if ("." === j) {
                if (-1 !== Q.indexOf(".")) return c("Invalid number has two dots");Q += j;
              } else if ("e" === j || "E" === j) {
                if (-1 !== Q.indexOf("e") || -1 !== Q.indexOf("E")) return c("Invalid number has two exponential");Q += j;
              } else if ("+" === j || "-" === j) {
                if ("e" !== k && "E" !== k) return c("Invalid symbol in number");Q += j;
              } else Q && (m(parseFloat(Q)), n(), Q = ""), d--, T = U.pop() || t;continue;default:
              return c("Unknown state: " + T);}
        }Y >= O && b();
      }
    }var i,
        j,
        k,
        l = a(qb).emit,
        m = a(rb).emit,
        n = a(sb).emit,
        o = a(jb).emit,
        p = 65536,
        q = /[\\"\n]/g,
        r = 0,
        s = r++,
        t = r++,
        u = r++,
        v = r++,
        w = r++,
        x = r++,
        y = r++,
        z = r++,
        A = r++,
        B = r++,
        C = r++,
        D = r++,
        E = r++,
        F = r++,
        G = r++,
        H = r++,
        I = r++,
        J = r++,
        K = r++,
        L = r++,
        M = r,
        O = p,
        P = "",
        Q = "",
        R = !1,
        S = !1,
        T = s,
        U = [],
        V = null,
        W = 0,
        X = 0,
        Y = 0,
        Z = 0,
        $ = 1;a(nb).on(h), a(ob).on(e);
  }function D(a, b) {
    "use strict";
    function c(a) {
      return function (b) {
        d = a(d, b);
      };
    }var d,
        e = {};for (var f in b) {
      a(f).on(c(b[f]), e);
    }a(hb).on(function (a) {
      var b,
          c = Y(d),
          e = ab(c),
          f = Z(d);f && (b = bb(Y(f)), b[e] = a);
    }), a(ib).on(function () {
      var a,
          b = Y(d),
          c = ab(b),
          e = Z(d);e && (a = bb(Y(e)), delete a[c]);
    }), a(pb).on(function () {
      for (var c in b) {
        a(c).un(e);
      }
    });
  }function E(a) {
    var b = {};return a && a.split("\r\n").forEach(function (a) {
      var c = a.indexOf(": ");b[a.substring(0, c)] = a.substring(c + 2);
    }), b;
  }function F(a, b) {
    function c(a) {
      return { "http:": 80, "https:": 443 }[a];
    }function d(b) {
      return b.port || c(b.protocol || a.protocol);
    }return !!(b.protocol && b.protocol != a.protocol || b.host && b.host != a.host || b.host && d(b) != d(a));
  }function G(a) {
    var b = /(\w+:)?(?:\/\/)([\w.-]+)?(?::(\d+))?\/?/,
        c = b.exec(a) || [];return { protocol: c[1] || "", host: c[2] || "", port: c[3] || "" };
  }function H() {
    return new XMLHttpRequest();
  }function I(b, c, d, e, g, h, i) {
    "use strict";
    function j() {
      var a = c.responseText,
          b = a.substr(m);b && k(b), m = V(a);
    }var k = b(nb).emit,
        l = b(jb).emit,
        m = 0,
        n = !0;b(pb).on(function () {
      c.onreadystatechange = null, c.abort();
    }), "onprogress" in c && (c.onprogress = j), c.onreadystatechange = function () {
      function a() {
        try {
          n && b(mb).emit(c.status, E(c.getAllResponseHeaders())), n = !1;
        } catch (a) {}
      }switch (c.readyState) {case 2:case 3:
          return a();case 4:
          a();var d = 2 == String(c.status)[0];d ? (j(), b(ob).emit()) : l(N(c.status, c.responseText));}
    };try {
      c.open(d, e, !0);for (var o in h) {
        c.setRequestHeader(o, h[o]);
      }F(a.location, G(e)) || c.setRequestHeader("X-Requested-With", "XMLHttpRequest"), c.withCredentials = i, c.send(g);
    } catch (p) {
      a.setTimeout(T(l, N(f, f, p)), 0);
    }
  }function J(a, b) {
    return { key: a, node: b };
  }function K(a) {
    function b(a, b) {
      var d = bb(Y(a));return p(c, d) ? f(a, V(d), b) : a;
    }function d(a, c) {
      if (!a) return j(c), f(a, cb, c);var d = b(a, c),
          g = Z(d),
          h = ab(Y(d));return e(g, h, c), s(J(h, c), g);
    }function e(a, b, c) {
      bb(Y(a))[b] = c;
    }function f(a, b, c) {
      a && e(a, b, c);var d = s(J(b, c), a);return h(d), d;
    }function g(a) {
      return i(a), Z(a) || k(bb(Y(a)));
    }var h = a(fb).emit,
        i = a(gb).emit,
        j = a(lb).emit,
        k = a(kb).emit,
        l = {};return l[rb] = d, l[sb] = g, l[qb] = f, l;
  }function L(a, b, c) {
    function d(a) {
      return function (b) {
        return b.id == a;
      };
    }var e, f;return { on: function on(c, d) {
        var g = { listener: c, id: d || c };return b && b.emit(a, c, g.id), e = s(g, e), f = s(c, f), this;
      }, emit: function emit() {
        z(f, arguments);
      }, un: function un(b) {
        var g;e = x(e, d(b), function (a) {
          g = a;
        }), g && (f = x(f, function (a) {
          return a == g.listener;
        }), c && c.emit(a, g.listener, g.id));
      }, listeners: function listeners() {
        return f;
      }, hasListener: function hasListener(a) {
        var b = a ? d(a) : n;return q(B(b, e));
      } };
  }function M() {
    function a(a) {
      return c[a] = L(a, d, e);
    }function b(b) {
      return c[b] || a(b);
    }var c = {},
        d = a("newListener"),
        e = a("removeListener");return ["emit", "on", "un"].forEach(function (a) {
      b[a] = j(function (c, d) {
        i(d, b(c)[a]);
      });
    }), b;
  }function N(a, b, c) {
    try {
      var d = e.parse(b);
    } catch (f) {}return { statusCode: a, body: b, jsonBody: d, thrown: c };
  }function O(a, b) {
    function c(a, b, c) {
      var d = A(c);a(b, u(Z(v(ab, d))), u(v(bb, d)));
    }function d(b, d, e) {
      var f = a(b).emit;d.on(function (a) {
        var b = e(a);b !== !1 && c(f, bb(b), a);
      }, b), a("removeListener").on(function (c) {
        c == b && (a(c).listeners() || d.un(b));
      });
    }var e = { node: a(gb), path: a(fb) };a("newListener").on(function (a) {
      var c = /(node|path):(.*)/.exec(a);if (c) {
        var f = e[c[1]];f.hasListener(a) || d(a, f, b(c[2]));
      }
    });
  }function P(a, b) {
    function c(b, c) {
      return a(b).on(e(c), c), p;
    }function d(a, b, c) {
      c = c || b;var d = e(b);return a.on(function () {
        var b = !1;p.forget = function () {
          b = !0;
        }, i(arguments, d), delete p.forget, b && a.un(c);
      }, c), p;
    }function e(b) {
      return function () {
        try {
          return b.apply(p, arguments);
        } catch (c) {
          a(jb).emit(N(f, f, c));
        }
      };
    }function g(b, c) {
      return a(b + ":" + c);
    }function h(a) {
      return function () {
        var b = a.apply(this, arguments);q(b) && (b == S.drop ? t() : u(b));
      };
    }function k(a, b, c) {
      var e;e = "node" == a ? h(c) : c, d(g(a, b), e, c);
    }function l(a, b) {
      for (var c in b) {
        k(a, c, b[c]);
      }
    }function n(a, b, c) {
      return W(b) ? k(a, b, c) : l(a, b), p;
    }var p,
        r = /^(node|path):./,
        s = a(kb),
        t = a(ib).emit,
        u = a(hb).emit,
        v = j(function (b, c) {
      if (p[b]) i(c, p[b]);else {
        var e = a(b),
            f = c[0];r.test(b) ? d(e, f) : e.on(f);
      }return p;
    }),
        w = function w(b, c, d) {
      if ("done" == b) s.un(c);else if ("node" == b || "path" == b) a.un(b + ":" + c, d);else {
        var e = c;a(b).un(e);
      }return p;
    };return a(lb).on(function (a) {
      p.root = o(a);
    }), a(mb).on(function (a, b) {
      p.header = function (a) {
        return a ? b[a] : b;
      };
    }), p = { on: v, addListener: v, removeListener: w, emit: a.emit, node: T(n, "node"), path: T(n, "path"), done: T(d, s), start: T(c, mb), fail: a(jb).on, abort: a(pb).emit, header: m, root: m, source: b };
  }function Q(a, b, c, d, e) {
    var f = M();return b && I(f, H(), a, b, c, d, e), C(f), D(f, K(f)), O(f, db), P(f, b);
  }function R(a, b, c, d, f, g, h) {
    function i(a, b) {
      return b === !1 && (a += -1 == a.indexOf("?") ? "?" : "&", a += "_=" + new Date().getTime()), a;
    }return f = f ? e.parse(e.stringify(f)) : {}, d ? W(d) || (d = e.stringify(d), f["Content-Type"] = f["Content-Type"] || "application/json") : d = null, a(c || "GET", i(b, h), d, f, g || !1);
  }function S(a) {
    var b = $("resume", "pause", "pipe"),
        c = T(r, b);return a ? c(a) || W(a) ? R(Q, a) : R(Q, a.url, a.method, a.body, a.headers, a.withCredentials, a.cached) : Q();
  }var T = j(function (a, b) {
    var c = b.length;return j(function (d) {
      for (var e = 0; e < d.length; e++) {
        b[c + e] = d[e];
      }return b.length = c + d.length, a.apply(this, b);
    });
  }),
      U = (j(function (a) {
    function b(a, b) {
      return [i(a, b)];
    }var c = t(a);return j(function (a) {
      return w(b, a, c)[0];
    });
  }), j(function (a) {
    return j(function (b) {
      for (var c, d = 0; d < V(a); d++) {
        if (c = i(b, a[d])) return c;
      }
    });
  })),
      V = h("length"),
      W = T(p, String),
      X = null,
      Y = h(0),
      Z = h(1),
      $ = j(t),
      _ = function () {
    var a = function a(_a) {
      return _a.exec.bind(_a);
    },
        b = j(function (b) {
      return b.unshift(/^/), a(RegExp(b.map(h("source")).join("")));
    }),
        c = /(\$?)/,
        d = /([\w-_]+|\*)/,
        e = /()/,
        f = /\["([^"]+)"\]/,
        g = /\[(\d+|\*)\]/,
        i = /{([\w ]*?)}/,
        k = /(?:{([\w ]*?)})?/,
        l = b(c, d, k),
        m = b(c, f, k),
        n = b(c, g, k),
        o = b(c, e, i),
        p = b(/\.\./),
        q = b(/\./),
        r = b(c, /!/),
        s = b(/$/);return function (a) {
      return a(U(l, m, n, o), p, q, r, s);
    };
  }(),
      ab = h("key"),
      bb = h("node"),
      cb = {},
      db = _(function (a, b, c, e, f) {
    function h(a, b) {
      var c = b[z],
          d = c && "*" != c ? function (a) {
        return B(a) == c;
      } : n;return l(d, a);
    }function i(a, b) {
      var c = b[A];if (!c) return a;var d = T(r, t(c.split(/\W+/))),
          e = g(d, C);return l(e, a);
    }function j(a, b) {
      var c = !!b[y];return c ? l(a, Y) : a;
    }function k(a) {
      function b(a) {
        return B(a) != cb;
      }return a == n ? n : l(b, g(a, Z));
    }function m(a) {
      if (a == n) return n;var b = o(),
          c = a,
          d = k(function (a) {
        return e(a);
      }),
          e = U(b, c, d);return e;
    }function o() {
      return function (a) {
        return B(a) == cb;
      };
    }function p(a) {
      return function (b) {
        var c = a(b);return c === !0 ? Y(b) : c;
      };
    }function q(a, b, c) {
      return w(function (a, b) {
        return b(a, c);
      }, b, a);
    }function s(a, b, c, d, e) {
      var f = a(c);if (f) {
        var g = q(b, d, f),
            h = c.substr(V(f[0]));return e(h, g);
      }
    }function u(a, b) {
      return T(s, a, b);
    }function v(a, b) {
      return b;
    }function x(a, b) {
      var c = a ? x : v;return D(a, b, c);
    }var y = 1,
        z = 2,
        A = 3,
        B = g(ab, Y),
        C = g(bb, Y),
        D = U(u(a, $(j, i, h, k)), u(b, $(m)), u(c, $()), u(e, $(j, o)), u(f, $(p)), function (a) {
      throw d('"' + a + '" could not be tokenised');
    });return function (a) {
      try {
        return x(a, n);
      } catch (b) {
        throw d('Could not compile "' + a + '" because ' + b.message);
      }
    };
  }),
      eb = 1,
      fb = eb++,
      gb = eb++,
      hb = eb++,
      ib = eb++,
      jb = "fail",
      kb = eb++,
      lb = eb++,
      mb = "start",
      nb = "data",
      ob = "end",
      pb = eb++,
      qb = eb++,
      rb = eb++,
      sb = eb++;S.drop = function () {
    return S.drop;
  }, "function" == typeof define && define.amd ? define("oboe", [], function () {
    return S;
  }) : "object" == typeof exports ? module.exports = S : a.oboe = S;
}(function () {
  try {
    return window;
  } catch (a) {
    return self;
  }
}(), Object, Array, Error, JSON);
}, 489, null, "react-native-fetch-blob/lib/oboe-browser.min.js");
__d(/* react-navigation/src/react-navigation.js */function(global, require, module, exports) {

module.exports = {
  get createNavigationContainer() {
    return require(491                          ).default; // 491 = ./createNavigationContainer
  },
  get StateUtils() {
    return require(495           ).default; // 495 = ./StateUtils
  },
  get addNavigationHelpers() {
    return require(494                     ).default; // 494 = ./addNavigationHelpers
  },
  get NavigationActions() {
    return require(493                  ).default; // 493 = ./NavigationActions
  },

  get createNavigator() {
    return require(496                           ).default; // 496 = ./navigators/createNavigator
  },
  get StackNavigator() {
    return require(497                          ).default; // 497 = ./navigators/StackNavigator
  },
  get TabNavigator() {
    return require(529                        ).default; // 529 = ./navigators/TabNavigator
  },
  get DrawerNavigator() {
    return require(545                           ).default; // 545 = ./navigators/DrawerNavigator
  },

  get StackRouter() {
    return require(520                    ).default; // 520 = ./routers/StackRouter
  },
  get TabRouter() {
    return require(530                  ).default; // 530 = ./routers/TabRouter
  },

  get Transitioner() {
    return require(518                   ).default; // 518 = ./views/Transitioner
  },
  get CardStack() {
    return require(499                ).default; // 499 = ./views/CardStack
  },
  get Card() {
    return require(501           ).default; // 501 = ./views/Card
  },

  get Header() {
    return require(504             ).default; // 504 = ./views/Header
  },
  get HeaderTitle() {
    return require(505                  ).default; // 505 = ./views/HeaderTitle
  },
  get HeaderBackButton() {
    return require(506                       ).default; // 506 = ./views/HeaderBackButton
  },

  get DrawerView() {
    return require(547                        ).default; // 547 = ./views/Drawer/DrawerView
  },
  get DrawerItems() {
    return require(550                                  ).default; // 550 = ./views/Drawer/DrawerNavigatorItems
  },

  get TabView() {
    return require(531                      ).default; // 531 = ./views/TabView/TabView
  },
  get TabBarTop() {
    return require(542                        ).default; // 542 = ./views/TabView/TabBarTop
  },
  get TabBarBottom() {
    return require(544                           ).default; // 544 = ./views/TabView/TabBarBottom
  },

  get withNavigation() {
    return require(551                     ).default; // 551 = ./views/withNavigation
  }
};
}, 490, null, "react-navigation/src/react-navigation.js");
__d(/* react-navigation/src/createNavigationContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\createNavigationContainer.js';
exports.default = createNavigationContainer;

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _PlatformHelpers = require(492                ); // 492 = ./PlatformHelpers

var _NavigationActions = require(493                  ); // 493 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(494                     ); // 494 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

function createNavigationContainer(Component, containerOptions) {
  (0, _invariant2.default)(typeof containerOptions === 'undefined', 'containerOptions.URIPrefix has been removed. Pass the uriPrefix prop to the navigator instead');

  var NavigationContainer = function (_React$Component) {
    babelHelpers.inherits(NavigationContainer, _React$Component);

    function NavigationContainer(props) {
      babelHelpers.classCallCheck(this, NavigationContainer);

      var _this = babelHelpers.possibleConstructorReturn(this, (NavigationContainer.__proto__ || Object.getPrototypeOf(NavigationContainer)).call(this, props));

      _this.subs = null;

      _this._handleOpenURL = function (url) {
        var parsedUrl = _this._urlToPathAndParams(url);
        if (parsedUrl) {
          var path = parsedUrl.path,
              params = parsedUrl.params;

          var action = Component.router.getActionForPathAndParams(path, params);
          if (action) {
            _this.dispatch(action);
          }
        }
      };

      _this.dispatch = function (action) {
        var state = _this.state;

        if (!_this._isStateful()) {
          return false;
        }
        var nav = Component.router.getStateForAction(action, state.nav);
        if (nav && nav !== state.nav) {
          _this.setState({ nav: nav }, function () {
            return _this._onNavigationStateChange(state.nav, nav, action);
          });
          return true;
        }
        return false;
      };

      _this._validateProps(props);

      _this.state = {
        nav: _this._isStateful() ? Component.router.getStateForAction(_NavigationActions2.default.init()) : null
      };
      return _this;
    }

    babelHelpers.createClass(NavigationContainer, [{
      key: '_isStateful',
      value: function _isStateful() {
        return !this.props.navigation;
      }
    }, {
      key: '_validateProps',
      value: function _validateProps(props) {
        if (this._isStateful()) {
          return;
        }

        var navigation = props.navigation,
            screenProps = props.screenProps,
            containerProps = babelHelpers.objectWithoutProperties(props, ['navigation', 'screenProps']);


        var keys = Object.keys(containerProps);

        (0, _invariant2.default)(keys.length === 0, 'This navigator has both navigation and container props, so it is ' + ('unclear if it should own its own state. Remove props: "' + keys.join(', ') + '" ') + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');
      }
    }, {
      key: '_urlToPathAndParams',
      value: function _urlToPathAndParams(url) {
        var params = {};
        var delimiter = this.props.uriPrefix || '://';
        var path = url.split(delimiter)[1];
        if (!path) {
          path = url;
        }
        return {
          path: path,
          params: params
        };
      }
    }, {
      key: '_onNavigationStateChange',
      value: function _onNavigationStateChange(prevNav, nav, action) {
        if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful()) {
          if (console.group) {
            console.group('Navigation Dispatch: ');
            console.log('Action: ', action);
            console.log('New State: ', nav);
            console.log('Last State: ', prevNav);
            console.groupEnd();
          } else {
            console.log('Navigation Dispatch: ', {
              action: action,
              newState: nav,
              lastState: prevNav
            });
          }

          return;
        }

        if (typeof this.props.onNavigationStateChange === 'function') {
          this.props.onNavigationStateChange(prevNav, nav, action);
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._validateProps(nextProps);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        if (!this._isStateful()) {
          return;
        }

        this.subs = _PlatformHelpers.BackAndroid.addEventListener('backPress', function () {
          return _this2.dispatch(_NavigationActions2.default.back());
        });

        _PlatformHelpers.Linking.addEventListener('url', function (_ref) {
          var url = _ref.url;

          _this2._handleOpenURL(url);
        });

        _PlatformHelpers.Linking.getInitialURL().then(function (url) {
          return url && _this2._handleOpenURL(url);
        });
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _PlatformHelpers.Linking.removeEventListener('url', this._handleOpenURL);
        this.subs && this.subs.remove();
      }
    }, {
      key: 'render',
      value: function render() {
        var navigation = this.props.navigation;
        if (this._isStateful()) {
          if (!this._navigation || this._navigation.state !== this.state.nav) {
            this._navigation = (0, _addNavigationHelpers2.default)({
              dispatch: this.dispatch,
              state: this.state.nav
            });
          }
          navigation = this._navigation;
        }
        return _react2.default.createElement(Component, babelHelpers.extends({}, this.props, { navigation: navigation, __source: {
            fileName: _jsxFileName,
            lineNumber: 202
          }
        }));
      }
    }]);
    return NavigationContainer;
  }(_react2.default.Component);

  NavigationContainer.router = Component.router;


  return NavigationContainer;
}
}, 491, null, "react-navigation/src/createNavigationContainer.js");
__d(/* react-navigation/src/PlatformHelpers.native.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Linking = exports.BackAndroid = undefined;

var _reactNative = require(46            ); // 46 = react-native

var BackAndroid = _reactNative.BackHandler || _reactNative.BackAndroid;

exports.BackAndroid = BackAndroid;
exports.Linking = _reactNative.Linking;
}, 492, null, "react-navigation/src/PlatformHelpers.native.js");
__d(/* react-navigation/src/NavigationActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var BACK = 'Navigation/BACK';
var INIT = 'Navigation/INIT';
var NAVIGATE = 'Navigation/NAVIGATE';
var RESET = 'Navigation/RESET';
var SET_PARAMS = 'Navigation/SET_PARAMS';
var URI = 'Navigation/URI';

var createAction = function createAction(type) {
  return function () {
    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return babelHelpers.extends({
      type: type
    }, payload);
  };
};

var back = createAction(BACK);
var init = createAction(INIT);
var navigate = createAction(NAVIGATE);
var reset = createAction(RESET);
var setParams = createAction(SET_PARAMS);
var uri = createAction(URI);

var deprecatedActionMap = {
  Back: BACK,
  Init: INIT,
  Navigate: NAVIGATE,
  Reset: RESET,
  SetParams: SET_PARAMS,
  Uri: URI
};

var mapDeprecatedActionAndWarn = function mapDeprecatedActionAndWarn(action) {
  var mappedType = deprecatedActionMap[action.type];
  if (!mappedType) {
    return action;
  }

  console.warn(['The action type \'' + action.type + '\' has been renamed to \'' + mappedType + '\'.', '\'' + action.type + '\' will continue to work while in beta but will be removed', 'in the first major release. Moving forward, you should use the', 'action constants and action creators exported by this library in', "the 'actions' object.", 'See https://github.com/react-community/react-navigation/pull/120 for', 'more details.'].join(' '));

  return babelHelpers.extends({}, action, {
    type: deprecatedActionMap[action.type]
  });
};

exports.default = {
  BACK: BACK,
  INIT: INIT,
  NAVIGATE: NAVIGATE,
  RESET: RESET,
  SET_PARAMS: SET_PARAMS,
  URI: URI,

  back: back,
  init: init,
  navigate: navigate,
  reset: reset,
  setParams: setParams,
  uri: uri,

  mapDeprecatedActionAndWarn: mapDeprecatedActionAndWarn
};
}, 493, null, "react-navigation/src/NavigationActions.js");
__d(/* react-navigation/src/addNavigationHelpers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (navigation) {
  return babelHelpers.extends({}, navigation, {
    goBack: function goBack(key) {
      return navigation.dispatch(_NavigationActions2.default.back({
        key: key === undefined ? navigation.state.key : key
      }));
    },
    navigate: function navigate(routeName, params, action) {
      return navigation.dispatch(_NavigationActions2.default.navigate({
        routeName: routeName,
        params: params,
        action: action
      }));
    },

    setParams: function setParams(params) {
      return navigation.dispatch(_NavigationActions2.default.setParams({
        params: params,
        key: navigation.state.key
      }));
    }
  });
};

var _NavigationActions = require(493                  ); // 493 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);
}, 494, null, "react-navigation/src/addNavigationHelpers.js");
__d(/* react-navigation/src/StateUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var StateUtils = {
  get: function get(state, key) {
    return state.routes.find(function (route) {
      return route.key === key;
    }) || null;
  },
  indexOf: function indexOf(state, key) {
    return state.routes.map(function (route) {
      return route.key;
    }).indexOf(key);
  },
  has: function has(state, key) {
    return !!state.routes.some(function (route) {
      return route.key === key;
    });
  },
  push: function push(state, route) {
    (0, _invariant2.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);

    var routes = state.routes.slice();
    routes.push(route);

    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  pop: function pop(state) {
    if (state.index <= 0) {
      return state;
    }
    var routes = state.routes.slice(0, -1);
    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  jumpToIndex: function jumpToIndex(state, index) {
    if (index === state.index) {
      return state;
    }

    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s to jump to', index);

    return babelHelpers.extends({}, state, {
      index: index
    });
  },
  jumpTo: function jumpTo(state, key) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.jumpToIndex(state, index);
  },
  back: function back(state) {
    var index = state.index - 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  forward: function forward(state) {
    var index = state.index + 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  replaceAt: function replaceAt(state, key, route) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.replaceAtIndex(state, index, route);
  },
  replaceAtIndex: function replaceAtIndex(state, index, route) {
    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);

    if (state.routes[index] === route) {
      return state;
    }

    var routes = state.routes.slice();
    routes[index] = route;

    return babelHelpers.extends({}, state, {
      index: index,
      routes: routes
    });
  },
  reset: function reset(state, routes, index) {
    (0, _invariant2.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');

    var nextIndex = index === undefined ? routes.length - 1 : index;

    if (state.routes.length === routes.length && state.index === nextIndex) {
      var compare = function compare(route, ii) {
        return routes[ii] === route;
      };
      if (state.routes.every(compare)) {
        return state;
      }
    }

    (0, _invariant2.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);

    return babelHelpers.extends({}, state, {
      index: nextIndex,
      routes: routes
    });
  }
};

exports.default = StateUtils;
}, 495, null, "react-navigation/src/StateUtils.js");
__d(/* react-navigation/src/navigators/createNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\navigators\\createNavigator.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var createNavigator = function createNavigator(router, routeConfigs, navigatorConfig, navigatorType) {
  return function (View) {
    var Navigator = function (_React$Component) {
      babelHelpers.inherits(Navigator, _React$Component);

      function Navigator() {
        babelHelpers.classCallCheck(this, Navigator);
        return babelHelpers.possibleConstructorReturn(this, (Navigator.__proto__ || Object.getPrototypeOf(Navigator)).apply(this, arguments));
      }

      babelHelpers.createClass(Navigator, [{
        key: 'render',
        value: function render() {
          return _react2.default.createElement(View, babelHelpers.extends({}, this.props, { router: router, __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          }));
        }
      }]);
      return Navigator;
    }(_react2.default.Component);

    Navigator.router = router;
    Navigator.routeConfigs = routeConfigs;
    Navigator.navigatorConfig = navigatorConfig;
    Navigator.navigatorType = navigatorType;


    return Navigator;
  };
};

exports.default = createNavigator;
}, 496, null, "react-navigation/src/navigators/createNavigator.js");
__d(/* react-navigation/src/navigators/StackNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\navigators\\StackNavigator.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _createNavigationContainer = require(491                           ); // 491 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _createNavigator = require(496                ); // 496 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _CardStackTransitioner = require(498                             ); // 498 = ../views/CardStackTransitioner

var _CardStackTransitioner2 = babelHelpers.interopRequireDefault(_CardStackTransitioner);

var _StackRouter = require(520                     ); // 520 = ../routers/StackRouter

var _StackRouter2 = babelHelpers.interopRequireDefault(_StackRouter);

var _NavigatorTypes = require(528               ); // 528 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

exports.default = function (routeConfigMap) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var initialRouteName = stackConfig.initialRouteName,
      initialRouteParams = stackConfig.initialRouteParams,
      paths = stackConfig.paths,
      headerMode = stackConfig.headerMode,
      mode = stackConfig.mode,
      cardStyle = stackConfig.cardStyle,
      transitionConfig = stackConfig.transitionConfig,
      onTransitionStart = stackConfig.onTransitionStart,
      onTransitionEnd = stackConfig.onTransitionEnd,
      navigationOptions = stackConfig.navigationOptions;

  var stackRouterConfig = {
    initialRouteName: initialRouteName,
    initialRouteParams: initialRouteParams,
    paths: paths,
    navigationOptions: navigationOptions
  };

  var router = (0, _StackRouter2.default)(routeConfigMap, stackRouterConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigMap, stackConfig, _NavigatorTypes2.default.STACK)(function (props) {
    return _react2.default.createElement(_CardStackTransitioner2.default, babelHelpers.extends({}, props, {
      headerMode: headerMode,
      mode: mode,
      cardStyle: cardStyle,
      transitionConfig: transitionConfig,
      onTransitionStart: onTransitionStart,
      onTransitionEnd: onTransitionEnd,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 52
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator, stackConfig.containerOptions);
};
}, 497, null, "react-navigation/src/navigators/StackNavigator.js");
__d(/* react-navigation/src/views/CardStackTransitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\CardStackTransitioner.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _CardStack = require(499          ); // 499 = ./CardStack

var _CardStack2 = babelHelpers.interopRequireDefault(_CardStack);

var _CardStackStyleInterpolator = require(517                           ); // 517 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var _Transitioner = require(518             ); // 518 = ./Transitioner

var _Transitioner2 = babelHelpers.interopRequireDefault(_Transitioner);

var _TransitionConfigs = require(516                  ); // 516 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var NativeAnimatedModule = _reactNative.NativeModules && _reactNative.NativeModules.NativeAnimatedModule;

var CardStackTransitioner = function (_Component) {
  babelHelpers.inherits(CardStackTransitioner, _Component);

  function CardStackTransitioner() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStackTransitioner);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStackTransitioner.__proto__ || Object.getPrototypeOf(CardStackTransitioner)).call.apply(_ref, [this].concat(args))), _this), _this._configureTransition = function (transitionProps, prevTransitionProps) {
      var isModal = _this.props.mode === 'modal';

      var transitionSpec = babelHelpers.extends({}, _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, transitionProps, prevTransitionProps, isModal).transitionSpec);
      if (!!NativeAnimatedModule && _CardStackStyleInterpolator2.default.canUseNativeDriver(isModal)) {
        transitionSpec.useNativeDriver = true;
      }
      return transitionSpec;
    }, _this._render = function (props) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          headerMode = _this$props.headerMode,
          mode = _this$props.mode,
          router = _this$props.router,
          cardStyle = _this$props.cardStyle,
          transitionConfig = _this$props.transitionConfig,
          style = _this$props.style;

      return _react2.default.createElement(_CardStack2.default, babelHelpers.extends({
        screenProps: screenProps,
        headerMode: headerMode,
        mode: mode,
        router: router,
        cardStyle: cardStyle,
        transitionConfig: transitionConfig,
        style: style
      }, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 110
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStackTransitioner, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_Transitioner2.default, {
        configureTransition: this._configureTransition,
        navigation: this.props.navigation,
        render: this._render,
        style: this.props.style,
        onTransitionStart: this.props.onTransitionStart,
        onTransitionEnd: this.props.onTransitionEnd,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60
        }
      });
    }
  }]);
  return CardStackTransitioner;
}(_react.Component);

CardStackTransitioner.defaultProps = {
  mode: 'card'
};
exports.default = CardStackTransitioner;
}, 498, null, "react-navigation/src/views/CardStackTransitioner.js");
__d(/* react-navigation/src/views/CardStack.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\CardStack.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _clamp = require(500    ); // 500 = clamp

var _clamp2 = babelHelpers.interopRequireDefault(_clamp);

var _reactNative = require(46            ); // 46 = react-native

var _Card = require(501     ); // 501 = ./Card

var _Card2 = babelHelpers.interopRequireDefault(_Card);

var _Header = require(504       ); // 504 = ./Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _NavigationActions = require(493                   ); // 493 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(494                      ); // 494 = ../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _SceneView = require(510          ); // 510 = ./SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _TransitionConfigs = require(516                  ); // 516 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var emptyFunction = function emptyFunction() {};

var ANIMATION_DURATION = 500;

var POSITION_THRESHOLD = 1 / 2;

var RESPOND_THRESHOLD = 20;

var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 25;
var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;

var animatedSubscribeValue = function animatedSubscribeValue(animatedValue) {
  if (!animatedValue.__isNative) {
    return;
  }
  if (Object.keys(animatedValue._listeners).length === 0) {
    animatedValue.addListener(emptyFunction);
  }
};

var CardStack = function (_Component) {
  babelHelpers.inherits(CardStack, _Component);

  function CardStack() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStack);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStack.__proto__ || Object.getPrototypeOf(CardStack)).call.apply(_ref, [this].concat(args))), _this), _this._gestureStartValue = 0, _this._isResponding = false, _this._immediateIndex = null, _this._screenDetails = {}, _this._getScreenDetails = function (scene) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          navigation = _this$props.navigation,
          router = _this$props.router;

      var screenDetails = _this._screenDetails[scene.key];
      if (!screenDetails || screenDetails.state !== scene.route) {
        var screenNavigation = (0, _addNavigationHelpers2.default)(babelHelpers.extends({}, navigation, {
          state: scene.route
        }));
        screenDetails = {
          state: scene.route,
          navigation: screenNavigation,
          options: router.getScreenOptions(screenNavigation, screenProps)
        };
        _this._screenDetails[scene.key] = screenDetails;
      }
      return screenDetails;
    }, _this._renderCard = function (scene) {
      var isModal = _this.props.mode === 'modal';

      var _TransitionConfigs$ge = _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, {}, {}, isModal),
          screenInterpolator = _TransitionConfigs$ge.screenInterpolator;

      var style = screenInterpolator && screenInterpolator(babelHelpers.extends({}, _this.props, { scene: scene }));

      var SceneComponent = _this.props.router.getComponentForRouteName(scene.route.routeName);

      return _react2.default.createElement(
        _Card2.default,
        babelHelpers.extends({}, _this.props, {
          key: 'card_' + scene.key,
          style: [style, _this.props.cardStyle],
          scene: scene,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 430
          }
        }),
        _this._renderInnerScene(SceneComponent, scene)
      );
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStack, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      var _this2 = this;

      if (props.screenProps !== this.props.screenProps) {
        this._screenDetails = {};
      }
      props.scenes.forEach(function (newScene) {
        if (_this2._screenDetails[newScene.key] && _this2._screenDetails[newScene.key].state !== newScene.route) {
          _this2._screenDetails[newScene.key] = null;
        }
      });
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(scene, headerMode) {
      var header = this._getScreenDetails(scene).options.header;

      if (typeof header !== 'undefined' && typeof header !== 'function') {
        return header;
      }

      var renderHeader = header || function (props) {
        return _react2.default.createElement(_Header2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 173
          }
        }));
      };

      var _props = this.props,
          mode = _props.mode,
          passProps = babelHelpers.objectWithoutProperties(_props, ['mode']);


      return renderHeader(babelHelpers.extends({}, passProps, {
        scene: scene,
        mode: headerMode,
        getScreenDetails: this._getScreenDetails
      }));
    }
  }, {
    key: '_animatedSubscribe',
    value: function _animatedSubscribe(props) {
      animatedSubscribeValue(props.layout.width);
      animatedSubscribeValue(props.layout.height);
      animatedSubscribeValue(props.position);
    }
  }, {
    key: '_reset',
    value: function _reset(resetToIndex, duration) {
      _reactNative.Animated.timing(this.props.position, {
        toValue: resetToIndex,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: this.props.position.__isNative
      }).start();
    }
  }, {
    key: '_goBack',
    value: function _goBack(backFromIndex, duration) {
      var _this3 = this;

      var _props2 = this.props,
          navigation = _props2.navigation,
          position = _props2.position,
          scenes = _props2.scenes;

      var toValue = Math.max(backFromIndex - 1, 0);

      this._immediateIndex = toValue;

      _reactNative.Animated.timing(position, {
        toValue: toValue,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: position.__isNative
      }).start(function () {
        _this3._immediateIndex = null;
        var backFromScene = scenes.find(function (s) {
          return s.index === toValue + 1;
        });
        if (!_this3._isResponding && backFromScene) {
          navigation.dispatch(_NavigationActions2.default.back({ key: backFromScene.route.key }));
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var floatingHeader = null;
      var headerMode = this._getHeaderMode();
      if (headerMode === 'float') {
        floatingHeader = this._renderHeader(this.props.scene, headerMode);
      }
      var _props3 = this.props,
          navigation = _props3.navigation,
          position = _props3.position,
          layout = _props3.layout,
          scene = _props3.scene,
          scenes = _props3.scenes,
          mode = _props3.mode;
      var index = navigation.state.index;

      var isVertical = mode === 'modal';

      var responder = _reactNative.PanResponder.create({
        onPanResponderTerminate: function onPanResponderTerminate() {
          _this4._isResponding = false;
          _this4._reset(index, 0);
        },
        onPanResponderGrant: function onPanResponderGrant() {
          position.stopAnimation(function (value) {
            _this4._isResponding = true;
            _this4._gestureStartValue = value;
          });
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gesture) {
          if (index !== scene.index) {
            return false;
          }
          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;
          var currentDragDistance = gesture[isVertical ? 'dy' : 'dx'];
          var currentDragPosition = event.nativeEvent[isVertical ? 'pageY' : 'pageX'];
          var axisLength = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var axisHasBeenMeasured = !!axisLength;

          var screenEdgeDistance = currentDragPosition - currentDragDistance;

          var gestureResponseDistance = isVertical ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;

          if (screenEdgeDistance > gestureResponseDistance) {
            return false;
          }

          var hasDraggedEnough = Math.abs(currentDragDistance) > RESPOND_THRESHOLD;

          var isOnFirstCard = immediateIndex === 0;
          var shouldSetResponder = hasDraggedEnough && axisHasBeenMeasured && !isOnFirstCard;
          return shouldSetResponder;
        },
        onPanResponderMove: function onPanResponderMove(event, gesture) {
          var startValue = _this4._gestureStartValue;
          var axis = isVertical ? 'dy' : 'dx';
          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var currentValue = _reactNative.I18nManager.isRTL && axis === 'dx' ? startValue + gesture[axis] / axisDistance : startValue - gesture[axis] / axisDistance;
          var value = (0, _clamp2.default)(index - 1, currentValue, index);
          position.setValue(value);
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderRelease: function onPanResponderRelease(event, gesture) {
          if (!_this4._isResponding) {
            return;
          }
          _this4._isResponding = false;

          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;

          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var movedDistance = gesture[isVertical ? 'moveY' : 'moveX'];
          var defaultVelocity = axisDistance / ANIMATION_DURATION;
          var gestureVelocity = gesture[isVertical ? 'vy' : 'vx'];
          var velocity = Math.max(gestureVelocity, defaultVelocity);
          var resetDuration = movedDistance / velocity;
          var goBackDuration = (axisDistance - movedDistance) / velocity;

          position.stopAnimation(function (value) {
            if (gestureVelocity < -0.5) {
              _this4._reset(immediateIndex, resetDuration);
              return;
            }
            if (gestureVelocity > 0.5) {
              _this4._goBack(immediateIndex, goBackDuration);
              return;
            }

            if (value <= index - POSITION_THRESHOLD) {
              _this4._goBack(immediateIndex, goBackDuration);
            } else {
              _this4._reset(immediateIndex, resetDuration);
            }
          });
        }
      });

      var _getScreenDetails = this._getScreenDetails(scene),
          options = _getScreenDetails.options;

      var gesturesEnabled = typeof options.gesturesEnabled === 'boolean' ? options.gesturesEnabled : _reactNative.Platform.OS === 'ios';

      var handlers = gesturesEnabled ? responder.panHandlers : {};

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, handlers, { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 363
          }
        }),
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.scenes, __source: {
              fileName: _jsxFileName,
              lineNumber: 364
            }
          },
          scenes.map(function (s) {
            return _this4._renderCard(s);
          })
        ),
        floatingHeader
      );
    }
  }, {
    key: '_getHeaderMode',
    value: function _getHeaderMode() {
      if (this.props.headerMode) {
        return this.props.headerMode;
      }
      if (_reactNative.Platform.OS === 'android' || this.props.mode === 'modal') {
        return 'screen';
      }
      return 'float';
    }
  }, {
    key: '_renderInnerScene',
    value: function _renderInnerScene(SceneComponent, scene) {
      var _getScreenDetails2 = this._getScreenDetails(scene),
          navigation = _getScreenDetails2.navigation;

      var screenProps = this.props.screenProps;

      var headerMode = this._getHeaderMode();
      if (headerMode === 'screen') {
        return _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 391
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { flex: 1 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 392
              }
            },
            _react2.default.createElement(_SceneView2.default, {
              screenProps: screenProps,
              navigation: navigation,
              component: SceneComponent,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 393
              }
            })
          ),
          this._renderHeader(scene, headerMode)
        );
      }
      return _react2.default.createElement(_SceneView2.default, {
        screenProps: this.props.screenProps,
        navigation: navigation,
        component: SceneComponent,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 404
        }
      });
    }
  }]);
  return CardStack;
}(_react.Component);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,

    flexDirection: 'column-reverse'
  },
  scenes: {
    flex: 1
  }
});

exports.default = CardStack;
}, 499, null, "react-navigation/src/views/CardStack.js");
__d(/* clamp/index.js */function(global, require, module, exports) {module.exports = clamp;

function clamp(value, min, max) {
  return min < max ? value < min ? min : value > max ? max : value : value < max ? max : value > min ? min : value;
}
}, 500, null, "clamp/index.js");
__d(/* react-navigation/src/views/Card.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\Card.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _PointerEventsContainer = require(502                       ); // 502 = ./PointerEventsContainer

var _PointerEventsContainer2 = babelHelpers.interopRequireDefault(_PointerEventsContainer);

var Card = function (_React$Component) {
  babelHelpers.inherits(Card, _React$Component);

  function Card() {
    babelHelpers.classCallCheck(this, Card);
    return babelHelpers.possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));
  }

  babelHelpers.createClass(Card, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          pointerEvents = _props.pointerEvents,
          style = _props.style;

      return _react2.default.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          ref: this.props.onComponentRef,
          style: [styles.main, style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 27
          }
        },
        children
      );
    }
  }]);
  return Card;
}(_react2.default.Component);

var styles = _reactNative.StyleSheet.create({
  main: {
    backgroundColor: '#E9E9EF',
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    shadowColor: 'black',
    shadowOffset: { width: 0, height: 0 },
    shadowOpacity: 0.4,
    shadowRadius: 10,
    top: 0
  }
});

Card = (0, _PointerEventsContainer2.default)(Card);

exports.default = Card;
}, 501, null, "react-navigation/src/views/Card.js");
__d(/* react-navigation/src/views/PointerEventsContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\PointerEventsContainer.js';
exports.default = create;

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _AnimatedValueSubscription = require(503                          ); // 503 = ./AnimatedValueSubscription

var _AnimatedValueSubscription2 = babelHelpers.interopRequireDefault(_AnimatedValueSubscription);

var MIN_POSITION_OFFSET = 0.01;

function create(Component) {
  var Container = function (_React$Component) {
    babelHelpers.inherits(Container, _React$Component);

    function Container(props, context) {
      babelHelpers.classCallCheck(this, Container);

      var _this = babelHelpers.possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props, context));

      _this._pointerEvents = _this._computePointerEvents();
      return _this;
    }

    babelHelpers.createClass(Container, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._onPositionChange = this._onPositionChange.bind(this);
        this._onComponentRef = this._onComponentRef.bind(this);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._bindPosition(this.props);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._positionListener && this._positionListener.remove();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._bindPosition(nextProps);
      }
    }, {
      key: 'render',
      value: function render() {
        this._pointerEvents = this._computePointerEvents();
        return _react2.default.createElement(Component, babelHelpers.extends({}, this.props, {
          pointerEvents: this._pointerEvents,
          onComponentRef: this._onComponentRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        }));
      }
    }, {
      key: '_onComponentRef',
      value: function _onComponentRef(component) {
        this._component = component;
        if (component) {
          (0, _invariant2.default)(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');
        }
      }
    }, {
      key: '_bindPosition',
      value: function _bindPosition(props) {
        this._positionListener && this._positionListener.remove();
        this._positionListener = new _AnimatedValueSubscription2.default(props.position, this._onPositionChange);
      }
    }, {
      key: '_onPositionChange',
      value: function _onPositionChange() {
        if (this._component) {
          var pointerEvents = this._computePointerEvents();
          if (this._pointerEvents !== pointerEvents) {
            this._pointerEvents = pointerEvents;
            this._component.setNativeProps({ pointerEvents: pointerEvents });
          }
        }
      }
    }, {
      key: '_computePointerEvents',
      value: function _computePointerEvents() {
        var _props = this.props,
            navigation = _props.navigation,
            position = _props.position,
            scene = _props.scene;


        if (scene.isStale || navigation.state.index !== scene.index) {
          return scene.index > navigation.state.index ? 'box-only' : 'none';
        }

        var offset = position.__getAnimatedValue() - navigation.state.index;
        if (Math.abs(offset) > MIN_POSITION_OFFSET) {
          return 'box-only';
        }

        return 'auto';
      }
    }]);
    return Container;
  }(_react2.default.Component);

  return Container;
}
}, 502, null, "react-navigation/src/views/PointerEventsContainer.js");
__d(/* react-navigation/src/views/AnimatedValueSubscription.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var AnimatedValueSubscription = function () {
  function AnimatedValueSubscription(value, callback) {
    babelHelpers.classCallCheck(this, AnimatedValueSubscription);

    this._value = value;
    this._token = value.addListener(callback);
  }

  babelHelpers.createClass(AnimatedValueSubscription, [{
    key: 'remove',
    value: function remove() {
      this._value.removeListener(this._token);
    }
  }]);
  return AnimatedValueSubscription;
}();

exports.default = AnimatedValueSubscription;
}, 503, null, "react-navigation/src/views/AnimatedValueSubscription.js");
__d(/* react-navigation/src/views/Header.js */function(global, require, module, exports) {

'no babel-plugin-flow-react-proptypes';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\Header.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _HeaderTitle = require(505            ); // 505 = ./HeaderTitle

var _HeaderTitle2 = babelHelpers.interopRequireDefault(_HeaderTitle);

var _HeaderBackButton = require(506                 ); // 506 = ./HeaderBackButton

var _HeaderBackButton2 = babelHelpers.interopRequireDefault(_HeaderBackButton);

var _HeaderStyleInterpolator = require(509                        ); // 509 = ./HeaderStyleInterpolator

var _HeaderStyleInterpolator2 = babelHelpers.interopRequireDefault(_HeaderStyleInterpolator);

var APPBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 44 : 56;
var STATUSBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 20 : 0;
var TITLE_OFFSET = _reactNative.Platform.OS === 'ios' ? 70 : 40;

var Header = function (_React$PureComponent) {
  babelHelpers.inherits(Header, _React$PureComponent);

  function Header() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, Header);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Header.__proto__ || Object.getPrototypeOf(Header)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      widths: {}
    }, _this._renderTitleComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerTitle = details.options.headerTitle;
      if (headerTitle && typeof headerTitle !== 'string') {
        return headerTitle;
      }
      var titleString = _this._getHeaderTitleString(props.scene);

      var titleStyle = details.options.headerTitleStyle;
      var color = details.options.headerTintColor;

      var onLayoutIOS = _reactNative.Platform.OS === 'ios' ? function (e) {
        _this.setState({
          widths: babelHelpers.extends({}, _this.state.widths, babelHelpers.defineProperty({}, props.scene.key, e.nativeEvent.layout.width))
        });
      } : undefined;

      return _react2.default.createElement(
        _HeaderTitle2.default,
        {
          onLayout: onLayoutIOS,
          style: [color ? { color: color } : null, titleStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 105
          }
        },
        titleString
      );
    }, _this._renderLeftComponent = function (props) {
      var options = _this.props.getScreenDetails(props.scene).options;
      if (typeof options.headerLeft !== 'undefined') {
        return options.headerLeft;
      }
      if (props.scene.index === 0) {
        return null;
      }
      var backButtonTitle = _this._getBackButtonTitleString(props.scene);
      var truncatedBackButtonTitle = _this._getTruncatedBackButtonTitle(props.scene);
      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;
      return _react2.default.createElement(_HeaderBackButton2.default, {
        onPress: function onPress() {
          _this.props.navigation.goBack(null);
        },
        pressColorAndroid: options.headerPressColorAndroid,
        tintColor: options.headerTintColor,
        title: backButtonTitle,
        truncatedTitle: truncatedBackButtonTitle,
        titleStyle: options.headerBackTitleStyle,
        width: width,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 130
        }
      });
    }, _this._renderRightComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerRight = details.options.headerRight;

      return headerRight || null;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(Header, [{
    key: '_getHeaderTitleString',
    value: function _getHeaderTitleString(scene) {
      var sceneOptions = this.props.getScreenDetails(scene).options;
      if (typeof sceneOptions.headerTitle === 'string') {
        return sceneOptions.headerTitle;
      }
      return sceneOptions.title;
    }
  }, {
    key: '_getLastScene',
    value: function _getLastScene(scene) {
      return this.props.scenes.find(function (s) {
        return s.index === scene.index - 1;
      });
    }
  }, {
    key: '_getBackButtonTitleString',
    value: function _getBackButtonTitleString(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      var headerBackTitle = this.props.getScreenDetails(lastScene).options.headerBackTitle;

      if (headerBackTitle || headerBackTitle === null) {
        return headerBackTitle;
      }
      return this._getHeaderTitleString(lastScene);
    }
  }, {
    key: '_getTruncatedBackButtonTitle',
    value: function _getTruncatedBackButtonTitle(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      return this.props.getScreenDetails(lastScene).options.headerTruncatedBackTitle;
    }
  }, {
    key: '_renderLeft',
    value: function _renderLeft(props) {
      return this._renderSubView(props, 'left', this._renderLeftComponent, _HeaderStyleInterpolator2.default.forLeft);
    }
  }, {
    key: '_renderTitle',
    value: function _renderTitle(props, options) {
      var style = {};

      if (_reactNative.Platform.OS === 'android') {
        if (!options.hasLeftComponent) {
          style.left = 0;
        }
        if (!options.hasRightComponent) {
          style.right = 0;
        }
      }

      return this._renderSubView(babelHelpers.extends({}, props, { style: style }), 'title', this._renderTitleComponent, _HeaderStyleInterpolator2.default.forCenter);
    }
  }, {
    key: '_renderRight',
    value: function _renderRight(props) {
      return this._renderSubView(props, 'right', this._renderRightComponent, _HeaderStyleInterpolator2.default.forRight);
    }
  }, {
    key: '_renderSubView',
    value: function _renderSubView(props, name, renderer, styleInterpolator) {
      var scene = props.scene;
      var index = scene.index,
          isStale = scene.isStale,
          key = scene.key;


      var offset = this.props.navigation.state.index - index;

      if (Math.abs(offset) > 2) {
        return null;
      }

      var subView = renderer(props);

      if (subView == null) {
        return null;
      }

      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';

      return _react2.default.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          key: name + '_' + key,
          style: [styles.item, styles[name], props.style, styleInterpolator(babelHelpers.extends({}, this.props, props))],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 214
          }
        },
        subView
      );
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(props) {
      var left = this._renderLeft(props);
      var right = this._renderRight(props);
      var title = this._renderTitle(props, {
        hasLeftComponent: !!left,
        hasRightComponent: !!right
      });

      return _react2.default.createElement(
        _reactNative.View,
        {
          style: [_reactNative.StyleSheet.absoluteFill, styles.header],
          key: 'scene_' + props.scene.key,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 242
          }
        },
        title,
        left,
        right
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var appBar = void 0;

      if (this.props.mode === 'float') {
        var scenesProps = this.props.scenes.map(function (scene) {
          return {
            position: _this2.props.position,
            progress: _this2.props.progress,
            scene: scene
          };
        });
        appBar = scenesProps.map(this._renderHeader, this);
      } else {
        appBar = this._renderHeader({
          position: new _reactNative.Animated.Value(this.props.scene.index),
          progress: new _reactNative.Animated.Value(0),
          scene: this.props.scene
        });
      }

      var _props = this.props,
          scenes = _props.scenes,
          scene = _props.scene,
          position = _props.position,
          screenProps = _props.screenProps,
          progress = _props.progress,
          style = _props.style,
          rest = babelHelpers.objectWithoutProperties(_props, ['scenes', 'scene', 'position', 'screenProps', 'progress', 'style']);

      var _props$getScreenDetai = this.props.getScreenDetails(scene, screenProps),
          options = _props$getScreenDetai.options;

      var headerStyle = options.headerStyle;

      return _react2.default.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({}, rest, { style: [styles.container, headerStyle, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 288
          }
        }),
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.appBar, __source: {
              fileName: _jsxFileName,
              lineNumber: 289
            }
          },
          appBar
        )
      );
    }
  }]);
  return Header;
}(_react2.default.PureComponent);

Header.HEIGHT = APPBAR_HEIGHT + STATUSBAR_HEIGHT;


var styles = _reactNative.StyleSheet.create({
  container: {
    paddingTop: STATUSBAR_HEIGHT,
    backgroundColor: _reactNative.Platform.OS === 'ios' ? '#EFEFF2' : '#FFF',
    height: STATUSBAR_HEIGHT + APPBAR_HEIGHT,
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },
    elevation: 4
  },
  appBar: {
    flex: 1
  },
  header: {
    flexDirection: 'row'
  },
  item: {
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },
  title: {
    bottom: 0,
    left: TITLE_OFFSET,
    right: TITLE_OFFSET,
    top: 0,
    position: 'absolute',
    alignItems: _reactNative.Platform.OS === 'ios' ? 'center' : 'flex-start'
  },
  left: {
    left: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  },
  right: {
    right: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  }
});

exports.default = Header;
}, 504, null, "react-navigation/src/views/Header.js");
__d(/* react-navigation/src/views/HeaderTitle.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\HeaderTitle.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var HeaderTitle = function HeaderTitle(_ref) {
  var style = _ref.style,
      rest = babelHelpers.objectWithoutProperties(_ref, ['style']);
  return _react2.default.createElement(_reactNative.Text, babelHelpers.extends({
    numberOfLines: 1
  }, rest, {
    style: [styles.title, style],
    accessibilityTraits: 'header',
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15
    }
  }));
};

var styles = _reactNative.StyleSheet.create({
  title: {
    fontSize: _reactNative.Platform.OS === 'ios' ? 17 : 18,
    fontWeight: _reactNative.Platform.OS === 'ios' ? '600' : '500',
    color: 'rgba(0, 0, 0, .9)',
    textAlign: _reactNative.Platform.OS === 'ios' ? 'center' : 'left',
    marginHorizontal: 16
  }
});

exports.default = HeaderTitle;
}, 505, null, "react-navigation/src/views/HeaderTitle.js");
__d(/* react-navigation/src/views/HeaderBackButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\HeaderBackButton.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _TouchableItem = require(507              ); // 507 = ./TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var HeaderBackButton = function (_React$PureComponent) {
  babelHelpers.inherits(HeaderBackButton, _React$PureComponent);

  function HeaderBackButton() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, HeaderBackButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = HeaderBackButton.__proto__ || Object.getPrototypeOf(HeaderBackButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._onTextLayout = function (e) {
      if (_this.state.initialTextWidth) {
        return;
      }
      _this.setState({
        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(HeaderBackButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          onPress = _props.onPress,
          pressColorAndroid = _props.pressColorAndroid,
          width = _props.width,
          title = _props.title,
          titleStyle = _props.titleStyle,
          tintColor = _props.tintColor,
          truncatedTitle = _props.truncatedTitle;


      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;

      var backButtonTitle = renderTruncated ? truncatedTitle : title;

      var asset = require(508                     ); // 508 = ./assets/back-icon.png

      return _react2.default.createElement(
        _TouchableItem2.default,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: backButtonTitle,
          accessibilityTraits: 'button',
          testID: 'header-back',
          delayPressIn: 0,
          onPress: onPress,
          pressColor: pressColorAndroid,
          style: styles.container,
          borderless: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 78
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 89
            }
          },
          _react2.default.createElement(_reactNative.Image, {
            style: [styles.icon, title && styles.iconWithTitle, { tintColor: tintColor }],
            source: asset,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 90
            }
          }),
          _reactNative.Platform.OS === 'ios' && title && _react2.default.createElement(
            _reactNative.Text,
            {
              onLayout: this._onTextLayout,
              style: [styles.title, { color: tintColor }, titleStyle],
              numberOfLines: 1,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 96
              }
            },
            backButtonTitle
          )
        )
      );
    }
  }]);
  return HeaderBackButton;
}(_react2.default.PureComponent);

HeaderBackButton.defaultProps = {
  pressColorAndroid: 'rgba(0, 0, 0, .32)',
  tintColor: _reactNative.Platform.select({
    ios: '#037aff'
  }),
  truncatedTitle: 'Back'
};


var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    flexDirection: 'row',
    backgroundColor: 'transparent'
  },
  title: {
    fontSize: 17,
    paddingRight: 10
  },
  icon: _reactNative.Platform.OS === 'ios' ? {
    height: 20,
    width: 12,
    marginLeft: 10,
    marginRight: 22,
    marginVertical: 12,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  } : {
    height: 24,
    width: 24,
    margin: 16,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  },
  iconWithTitle: _reactNative.Platform.OS === 'ios' ? {
    marginRight: 5
  } : {}
});

exports.default = HeaderBackButton;
}, 506, null, "react-navigation/src/views/HeaderBackButton.js");
__d(/* react-navigation/src/views/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\TouchableItem.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var ANDROID_VERSION_LOLLIPOP = 21;

var TouchableItem = function (_Component) {
  babelHelpers.inherits(TouchableItem, _Component);

  function TouchableItem() {
    babelHelpers.classCallCheck(this, TouchableItem);
    return babelHelpers.possibleConstructorReturn(this, (TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).apply(this, arguments));
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {
        var _props = this.props,
            _style = _props.style,
            rest = babelHelpers.objectWithoutProperties(_props, ['style']);


        return _react2.default.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            style: null,
            background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            { style: this.props.style, __source: {
                fileName: _jsxFileName,
                lineNumber: 67
              }
            },
            _react.Children.only(this.props.children)
          )
        );
      }

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        babelHelpers.extends({}, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75
          }
        }),
        this.props.children
      );
    }
  }]);
  return TouchableItem;
}(_react.Component);

TouchableItem.defaultProps = {
  pressColor: 'rgba(0, 0, 0, .32)'
};
exports.default = TouchableItem;
}, 507, null, "react-navigation/src/views/TouchableItem.js");
__d(/* react-navigation/src/views/assets/back-icon.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-navigation/src/views/assets","width":24,"height":24,"scales":[1,1.5,2,3,4],"hash":"a364dc7a784101f7c8f6791c7b4514ce","name":"back-icon","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 508, null, "react-navigation/src/views/assets/back-icon.png");
__d(/* react-navigation/src/views/HeaderStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

function forLeft(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index - 0.5, index, index + 0.5, index + 1],
      outputRange: [0, 0, 1, 0, 0]
    })
  };
}

function forCenter(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index, index + 1],
      outputRange: [0, 1, 0]
    }),
    transform: [{
      translateX: position.interpolate({
        inputRange: [index - 1, index + 1],
        outputRange: _reactNative.I18nManager.isRTL ? [-200, 200] : [200, -200]
      })
    }]
  };
}

function forRight(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index, index + 1],
      outputRange: [0, 1, 0]
    })
  };
}

exports.default = {
  forLeft: forLeft,
  forCenter: forCenter,
  forRight: forRight
};
}, 509, null, "react-navigation/src/views/HeaderStyleInterpolator.js");
__d(/* react-navigation/src/views/SceneView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\SceneView.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var SceneView = function (_PureComponent) {
  babelHelpers.inherits(SceneView, _PureComponent);

  function SceneView() {
    babelHelpers.classCallCheck(this, SceneView);
    return babelHelpers.possibleConstructorReturn(this, (SceneView.__proto__ || Object.getPrototypeOf(SceneView)).apply(this, arguments));
  }

  babelHelpers.createClass(SceneView, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        navigation: this.props.navigation
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          screenProps = _props.screenProps,
          navigation = _props.navigation,
          Component = _props.component;


      return _react2.default.createElement(Component, { screenProps: screenProps, navigation: navigation, __source: {
          fileName: _jsxFileName,
          lineNumber: 35
        }
      });
    }
  }]);
  return SceneView;
}(_react.PureComponent);

SceneView.childContextTypes = {
  navigation: _propTypes2.default.object.isRequired
};
exports.default = SceneView;
}, 510, null, "react-navigation/src/views/SceneView.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(512                        )(isValidElement, throwOnDirectAccess); // 512 = ./factoryWithTypeCheckers
} else {
  module.exports = require(515                         )(); // 515 = ./factoryWithThrowingShims
}
}, 511, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var warning = require(19                ); // 19 = fbjs/lib/warning

var ReactPropTypesSecret = require(513                         ); // 513 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(514               ); // 514 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 512, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 513, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(23                  ); // 23 = fbjs/lib/invariant
  var warning = require(19                ); // 19 = fbjs/lib/warning
  var ReactPropTypesSecret = require(513                         ); // 513 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 514, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(20                      ); // 20 = fbjs/lib/emptyFunction
var invariant = require(23                  ); // 23 = fbjs/lib/invariant
var ReactPropTypesSecret = require(513                         ); // 513 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 515, null, "prop-types/factoryWithThrowingShims.js");
__d(/* react-navigation/src/views/TransitionConfigs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

var _CardStackStyleInterpolator = require(517                           ); // 517 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var DefaultTransitionSpec = {
  duration: 250,
  easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
  timing: _reactNative.Animated.timing
};

var IOSTransitionSpec = {
  duration: 500,
  easing: _reactNative.Easing.bezier(0.2833, 0.99, 0.31833, 0.99),
  timing: _reactNative.Animated.timing
};

var SlideFromRightIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forHorizontal
};

var ModalSlideFromBottomIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forVertical
};

var FadeInFromBottomAndroid = {
  transitionSpec: {
    duration: 350,
    easing: _reactNative.Easing.out(_reactNative.Easing.poly(5)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

var FadeOutToBottomAndroid = {
  transitionSpec: {
    duration: 230,
    easing: _reactNative.Easing.in(_reactNative.Easing.poly(4)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

function defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {
  if (_reactNative.Platform.OS === 'android') {
    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {
      return FadeOutToBottomAndroid;
    }
    return FadeInFromBottomAndroid;
  }

  if (isModal) {
    return ModalSlideFromBottomIOS;
  }
  return SlideFromRightIOS;
}

function getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {
  var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);
  if (transitionConfigurer) {
    return babelHelpers.extends({}, defaultConfig, transitionConfigurer());
  }
  return defaultConfig;
}

exports.default = {
  DefaultTransitionSpec: DefaultTransitionSpec,
  defaultTransitionConfig: defaultTransitionConfig,
  getTransitionConfig: getTransitionConfig
};
}, 516, null, "react-navigation/src/views/TransitionConfigs.js");
__d(/* react-navigation/src/views/CardStackStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

function forInitial(props) {
  var navigation = props.navigation,
      scene = props.scene;


  var focused = navigation.state.index === scene.index;
  var opacity = focused ? 1 : 0;

  var translate = focused ? 0 : 1000000;
  return {
    opacity: opacity,
    transform: [{ translateX: translate }, { translateY: translate }]
  };
}

function forHorizontal(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var inputRange = [index - 1, index, index + 1];

  var width = layout.initWidth;
  var outputRange = _reactNative.I18nManager.isRTL ? [-width, 0, 10] : [width, 0, -10];

  var opacity = position.interpolate({
    inputRange: [index - 1, index - 0.99, index, index + 0.99, index + 1],
    outputRange: [0, 1, 1, 0.3, 0]
  });

  var translateY = 0;
  var translateX = position.interpolate({
    inputRange: inputRange,
    outputRange: outputRange
  });

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forVertical(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var height = layout.initHeight;

  var opacity = position.interpolate({
    inputRange: [index - 1, index - 0.99, index, index + 0.99, index + 1],
    outputRange: [0, 1, 1, 0.3, 0]
  });

  var translateX = 0;
  var translateY = position.interpolate({
    inputRange: [index - 1, index, index + 1],
    outputRange: [height, 0, 0]
  });

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forFadeFromBottomAndroid(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var inputRange = [index - 1, index, index + 0.99, index + 1];

  var opacity = position.interpolate({
    inputRange: inputRange,
    outputRange: [0, 1, 1, 0]
  });

  var translateX = 0;
  var translateY = position.interpolate({
    inputRange: inputRange,
    outputRange: [50, 0, 0, 0]
  });

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function canUseNativeDriver() {
  return true;
}

exports.default = {
  forHorizontal: forHorizontal,
  forVertical: forVertical,
  forFadeFromBottomAndroid: forFadeFromBottomAndroid,
  canUseNativeDriver: canUseNativeDriver
};
}, 517, null, "react-navigation/src/views/CardStackStyleInterpolator.js");
__d(/* react-navigation/src/views/Transitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\Transitioner.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _ScenesReducer = require(519              ); // 519 = ./ScenesReducer

var _ScenesReducer2 = babelHelpers.interopRequireDefault(_ScenesReducer);

var _TransitionConfigs = require(516                  ); // 516 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var DefaultTransitionSpec = _TransitionConfigs2.default.DefaultTransitionSpec;

var Transitioner = function (_React$Component) {
  babelHelpers.inherits(Transitioner, _React$Component);

  function Transitioner(props, context) {
    babelHelpers.classCallCheck(this, Transitioner);

    var _this = babelHelpers.possibleConstructorReturn(this, (Transitioner.__proto__ || Object.getPrototypeOf(Transitioner)).call(this, props, context));

    var layout = {
      height: new _reactNative.Animated.Value(0),
      initHeight: 0,
      initWidth: 0,
      isMeasured: false,
      width: new _reactNative.Animated.Value(0)
    };

    _this.state = {
      layout: layout,
      position: new _reactNative.Animated.Value(_this.props.navigation.state.index),
      progress: new _reactNative.Animated.Value(1),
      scenes: (0, _ScenesReducer2.default)([], _this.props.navigation.state)
    };

    _this._prevTransitionProps = null;
    _this._transitionProps = buildTransitionProps(props, _this.state);
    _this._isMounted = false;
    _this._isTransitionRunning = false;
    _this._queuedTransition = null;
    return _this;
  }

  babelHelpers.createClass(Transitioner, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._onLayout = this._onLayout.bind(this);
      this._onTransitionEnd = this._onTransitionEnd.bind(this);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._isMounted = true;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._isMounted = false;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextScenes = (0, _ScenesReducer2.default)(this.state.scenes, nextProps.navigation.state, this.props.navigation.state);

      if (nextScenes === this.state.scenes) {
        return;
      }

      var indexHasChanged = nextProps.navigation.state.index !== this.props.navigation.state.index;
      if (this._isTransitionRunning) {
        this._queuedTransition = { nextProps: nextProps, nextScenes: nextScenes, indexHasChanged: indexHasChanged };
        return;
      }

      this._startTransition(nextProps, nextScenes, indexHasChanged);
    }
  }, {
    key: '_startTransition',
    value: function _startTransition(nextProps, nextScenes, indexHasChanged) {
      var _this2 = this;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: nextScenes
      });

      var position = nextState.position,
          progress = nextState.progress;


      progress.setValue(0);

      this._prevTransitionProps = this._transitionProps;
      this._transitionProps = buildTransitionProps(nextProps, nextState);

      var transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;

      var transitionSpec = babelHelpers.extends({}, DefaultTransitionSpec, transitionUserSpec);

      var timing = transitionSpec.timing;

      delete transitionSpec.timing;

      var toValue = nextProps.navigation.state.index;
      var positionHasChanged = position.__getValue() !== toValue;

      var animations = indexHasChanged && positionHasChanged ? [timing(progress, babelHelpers.extends({}, transitionSpec, {
        toValue: 1
      })), timing(position, babelHelpers.extends({}, transitionSpec, {
        toValue: nextProps.navigation.state.index
      }))] : [];

      this._isTransitionRunning = true;
      this.setState(nextState, function () {
        nextProps.onTransitionStart && nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);
        _reactNative.Animated.parallel(animations).start(_this2._onTransitionEnd);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { onLayout: this._onLayout, style: [styles.main, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 187
          }
        },
        this.props.render(this._transitionProps, this._prevTransitionProps)
      );
    }
  }, {
    key: '_onLayout',
    value: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          height = _event$nativeEvent$la.height,
          width = _event$nativeEvent$la.width;

      if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {
        return;
      }
      var layout = babelHelpers.extends({}, this.state.layout, {
        initHeight: height,
        initWidth: width,
        isMeasured: true
      });

      layout.height.setValue(height);
      layout.width.setValue(width);

      var nextState = babelHelpers.extends({}, this.state, {
        layout: layout
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);
      this.setState(nextState);
    }
  }, {
    key: '_onTransitionEnd',
    value: function _onTransitionEnd() {
      var _this3 = this;

      if (!this._isMounted) {
        return;
      }
      var prevTransitionProps = this._prevTransitionProps;
      this._prevTransitionProps = null;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: this.state.scenes.filter(isSceneNotStale)
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);

      this.setState(nextState, function () {
        _this3.props.onTransitionEnd && _this3.props.onTransitionEnd(_this3._transitionProps, prevTransitionProps);
        if (_this3._queuedTransition) {
          _this3._startTransition(_this3._queuedTransition.nextProps, _this3._queuedTransition.nextScenes, _this3._queuedTransition.indexHasChanged);
          _this3._queuedTransition = null;
        } else {
          _this3._isTransitionRunning = false;
        }
      });
    }
  }]);
  return Transitioner;
}(_react2.default.Component);

function buildTransitionProps(props, state) {
  var navigation = props.navigation;
  var layout = state.layout,
      position = state.position,
      progress = state.progress,
      scenes = state.scenes;


  var scene = scenes.find(isSceneActive);

  (0, _invariant2.default)(scene, 'Could not find active scene');

  return {
    layout: layout,
    navigation: navigation,
    position: position,
    progress: progress,
    scenes: scenes,
    scene: scene,
    index: scene.index
  };
}

function isSceneNotStale(scene) {
  return !scene.isStale;
}

function isSceneActive(scene) {
  return scene.isActive;
}

var styles = _reactNative.StyleSheet.create({
  main: {
    flex: 1
  }
});

exports.default = Transitioner;
}, 518, null, "react-navigation/src/views/Transitioner.js");
__d(/* react-navigation/src/views/ScenesReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ScenesReducer;

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _shallowEqual = require(115                    ); // 115 = fbjs/lib/shallowEqual

var _shallowEqual2 = babelHelpers.interopRequireDefault(_shallowEqual);

var SCENE_KEY_PREFIX = 'scene_';

function compareKey(one, two) {
  var delta = one.length - two.length;
  if (delta > 0) {
    return 1;
  }
  if (delta < 0) {
    return -1;
  }
  return one > two ? 1 : -1;
}

function compareScenes(one, two) {
  if (one.index > two.index) {
    return 1;
  }
  if (one.index < two.index) {
    return -1;
  }

  return compareKey(one.key, two.key);
}

function areScenesShallowEqual(one, two) {
  return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);
}

function areRoutesShallowEqual(one, two) {
  if (!one || !two) {
    return one === two;
  }

  if (one.key !== two.key) {
    return false;
  }

  return (0, _shallowEqual2.default)(one, two);
}

function ScenesReducer(scenes, nextState, prevState) {
  if (prevState === nextState) {
    return scenes;
  }

  var prevScenes = new Map();
  var freshScenes = new Map();
  var staleScenes = new Map();

  scenes.forEach(function (scene) {
    var key = scene.key;

    if (scene.isStale) {
      staleScenes.set(key, scene);
    }
    prevScenes.set(key, scene);
  });

  var nextKeys = new Set();
  nextState.routes.forEach(function (route, index) {
    var key = SCENE_KEY_PREFIX + route.key;
    var scene = {
      index: index,
      isActive: false,
      isStale: false,
      key: key,
      route: route
    };
    (0, _invariant2.default)(!nextKeys.has(key), 'navigation.state.routes[' + index + '].key "' + key + '" conflicts with ' + 'another route!');
    nextKeys.add(key);

    if (staleScenes.has(key)) {
      staleScenes.delete(key);
    }
    freshScenes.set(key, scene);
  });

  if (prevState) {
    prevState.routes.forEach(function (route, index) {
      var key = SCENE_KEY_PREFIX + route.key;
      if (freshScenes.has(key)) {
        return;
      }
      staleScenes.set(key, {
        index: index,
        isActive: false,
        isStale: true,
        key: key,
        route: route
      });
    });
  }

  var nextScenes = [];

  var mergeScene = function mergeScene(nextScene) {
    var key = nextScene.key;

    var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;
    if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {
      nextScenes.push(prevScene);
    } else {
      nextScenes.push(nextScene);
    }
  };

  staleScenes.forEach(mergeScene);
  freshScenes.forEach(mergeScene);

  nextScenes.sort(compareScenes);

  var activeScenesCount = 0;
  nextScenes.forEach(function (scene, ii) {
    var isActive = !scene.isStale && scene.index === nextState.index;
    if (isActive !== scene.isActive) {
      nextScenes[ii] = babelHelpers.extends({}, scene, {
        isActive: isActive
      });
    }
    if (isActive) {
      activeScenesCount++;
    }
  });

  (0, _invariant2.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);

  if (nextScenes.length !== scenes.length) {
    return nextScenes;
  }

  if (nextScenes.some(function (scene, index) {
    return !areScenesShallowEqual(scenes[index], scene);
  })) {
    return nextScenes;
  }

  return scenes;
}
}, 519, null, "react-navigation/src/views/ScenesReducer.js");
__d(/* react-navigation/src/routers/StackRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pathToRegexp = require(521             ); // 521 = path-to-regexp

var _pathToRegexp2 = babelHelpers.interopRequireDefault(_pathToRegexp);

var _NavigationActions = require(493                   ); // 493 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _createConfigGetter = require(523                   ); // 523 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _getScreenForRouteName = require(524                      ); // 524 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _StateUtils = require(495            ); // 495 = ../StateUtils

var _StateUtils2 = babelHelpers.interopRequireDefault(_StateUtils);

var _validateRouteConfigMap = require(526                       ); // 526 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(527                          ); // 527 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

var uniqueBaseId = 'id-' + Date.now();
var uuidCount = 0;
function _getUuid() {
  return uniqueBaseId + '-' + uuidCount++;
}

exports.default = function (routeConfigs) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var childRouters = {};
  var routeNames = Object.keys(routeConfigs);

  routeNames.forEach(function (routeName) {
    var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    if (screen && screen.router) {
      childRouters[routeName] = screen.router;
    } else {
      childRouters[routeName] = null;
    }
  });

  var initialRouteParams = stackConfig.initialRouteParams;


  var initialRouteName = stackConfig.initialRouteName || routeNames[0];

  var initialChildRouter = childRouters[initialRouteName];
  var paths = stackConfig.paths || {};

  routeNames.forEach(function (routeName) {
    var pathPattern = paths[routeName] || routeConfigs[routeName].path;
    var matchExact = !!pathPattern && !childRouters[routeName];
    if (typeof pathPattern !== 'string') {
      pathPattern = routeName;
    }
    var keys = [];
    var re = (0, _pathToRegexp2.default)(pathPattern, keys);
    if (!matchExact) {
      var wildcardRe = (0, _pathToRegexp2.default)(pathPattern + '/*', keys);
      re = new RegExp('(?:' + re.source + ')|(?:' + wildcardRe.source + ')');
    }

    paths[routeName] = { re: re, keys: keys, toPath: _pathToRegexp2.default.compile(pathPattern) };
  });

  return {
    getComponentForState: function getComponentForState(state) {
      var activeChildRoute = state.routes[state.index];
      var routeName = activeChildRoute.routeName;

      if (childRouters[routeName]) {
        return childRouters[routeName].getComponentForState(activeChildRoute);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getStateForAction: function getStateForAction(passedAction, state) {
      var action = _NavigationActions2.default.mapDeprecatedActionAndWarn(passedAction);

      if (!state) {
        var route = {};
        if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
          return {
            index: 0,
            routes: [babelHelpers.extends({}, action, {
              type: undefined,
              key: 'Init-' + _getUuid()
            })]
          };
        }
        if (initialChildRouter) {
          route = initialChildRouter.getStateForAction(_NavigationActions2.default.navigate({
            routeName: initialRouteName,
            params: initialRouteParams
          }));
        }
        var params = (route.params || action.params || initialRouteParams) && babelHelpers.extends({}, route.params || {}, action.params || {}, initialRouteParams || {});
        route = babelHelpers.extends({}, route, {
          routeName: initialRouteName,
          key: 'Init-' + _getUuid()
        }, params ? { params: params } : {});

        state = {
          index: 0,
          routes: [route]
        };
      }

      if (action.type !== _NavigationActions2.default.RESET || action.key !== null) {
        var keyIndex = action.key ? _StateUtils2.default.indexOf(state, action.key) : -1;
        var childIndex = keyIndex >= 0 ? keyIndex : state.index;
        var childRoute = state.routes[childIndex];
        var childRouter = childRouters[childRoute.routeName];
        if (childRouter) {
          var _route = childRouter.getStateForAction(action, childRoute);
          if (_route === null) {
            return state;
          }
          if (_route && _route !== childRoute) {
            return _StateUtils2.default.replaceAt(state, childRoute.key, _route);
          }
        }
      }

      if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
        var _childRouter = childRouters[action.routeName];
        var _route2 = void 0;
        if (_childRouter) {
          var childAction = action.action || _NavigationActions2.default.init({ params: action.params });
          _route2 = babelHelpers.extends({
            params: action.params
          }, _childRouter.getStateForAction(childAction), {
            key: _getUuid(),
            routeName: action.routeName
          });
        } else {
          _route2 = {
            params: action.params,
            key: _getUuid(),
            routeName: action.routeName
          };
        }
        return _StateUtils2.default.push(state, _route2);
      }

      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var childRouterNames = Object.keys(childRouters);
        for (var i = 0; i < childRouterNames.length; i++) {
          var childRouterName = childRouterNames[i];
          var _childRouter2 = childRouters[childRouterName];
          if (_childRouter2) {
            var initChildRoute = _childRouter2.getStateForAction(_NavigationActions2.default.init());

            var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);
            var routeToPush = null;
            if (navigatedChildRoute === null) {
              routeToPush = initChildRoute;
            } else if (navigatedChildRoute !== initChildRoute) {
              routeToPush = navigatedChildRoute;
            }
            if (routeToPush) {
              return _StateUtils2.default.push(state, babelHelpers.extends({}, routeToPush, {
                key: _getUuid(),
                routeName: childRouterName
              }));
            }
          }
        }
      }

      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var lastRoute = state.routes.find(function (route) {
          return route.key === action.key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var routes = [].concat(babelHelpers.toConsumableArray(state.routes));
          routes[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: routes
          });
        }
      }

      if (action.type === _NavigationActions2.default.RESET) {
        var resetAction = action;

        return babelHelpers.extends({}, state, {
          routes: resetAction.actions.map(function (childAction) {
            var router = childRouters[childAction.routeName];
            if (router) {
              return babelHelpers.extends({}, childAction, router.getStateForAction(childAction), {
                routeName: childAction.routeName,
                key: _getUuid()
              });
            }
            var route = babelHelpers.extends({}, childAction, {
              key: _getUuid()
            });
            delete route.type;
            return route;
          }),
          index: action.index
        });
      }

      if (action.type === _NavigationActions2.default.BACK) {
        var backRouteIndex = null;
        if (action.key) {
          var backRoute = state.routes.find(function (route) {
            return route.key === action.key;
          });

          backRouteIndex = state.routes.indexOf(backRoute);
        }
        if (backRouteIndex == null) {
          return _StateUtils2.default.pop(state);
        }
        if (backRouteIndex > 0) {
          return babelHelpers.extends({}, state, {
            routes: state.routes.slice(0, backRouteIndex),
            index: backRouteIndex - 1
          });
        }
      }
      return state;
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = route.routeName;
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);

      var subPath = paths[routeName].toPath(route.params);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var child = screen.router.getPathAndParamsForState(route);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(pathToResolve) {
      if (!pathToResolve) {
        return _NavigationActions2.default.navigate({
          routeName: initialRouteName
        });
      }

      var _pathToResolve$split = pathToResolve.split('?'),
          _pathToResolve$split2 = babelHelpers.slicedToArray(_pathToResolve$split, 2),
          pathNameToResolve = _pathToResolve$split2[0],
          queryString = _pathToResolve$split2[1];

      var matchedRouteName = void 0;
      var pathMatch = void 0;
      var pathMatchKeys = void 0;

      for (var _iterator = Object.entries(paths), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var routeName = _ref2[0];
        var path = _ref2[1];
        var re = path.re,
            keys = path.keys;

        pathMatch = re.exec(pathNameToResolve);
        if (pathMatch && pathMatch.length) {
          pathMatchKeys = keys;
          matchedRouteName = routeName;
          break;
        }
      }

      if (!matchedRouteName) {
        return null;
      }

      var nestedAction = void 0;
      if (childRouters[matchedRouteName]) {
        nestedAction = childRouters[matchedRouteName].getActionForPathAndParams(pathMatch.slice(pathMatchKeys.length).join('/'));
      }

      var queryParams = (queryString || '').split('&').reduce(function (result, item) {
        if (item !== '') {
          var nextResult = result || {};

          var _item$split = item.split('='),
              _item$split2 = babelHelpers.slicedToArray(_item$split, 2),
              key = _item$split2[0],
              value = _item$split2[1];

          nextResult[key] = value;
          return nextResult;
        }
        return result;
      }, null);

      var params = pathMatch.slice(1).reduce(function (result, matchResult, i) {
        var key = pathMatchKeys[i];
        if (key.asterisk || !key) {
          return result;
        }
        var nextResult = result || {};
        var paramName = key.name;
        nextResult[paramName] = matchResult;
        return nextResult;
      }, queryParams);

      return _NavigationActions2.default.navigate(babelHelpers.extends({
        routeName: matchedRouteName
      }, params ? { params: params } : {}, nestedAction ? { action: nestedAction } : {}));
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, stackConfig.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 520, null, "react-navigation/src/routers/StackRouter.js");
__d(/* path-to-regexp/index.js */function(global, require, module, exports) {var isarray = require(522      ); // 522 = isarray

module.exports = pathToRegexp;
module.exports.parse = parse;
module.exports.compile = compile;
module.exports.tokensToFunction = tokensToFunction;
module.exports.tokensToRegExp = tokensToRegExp;

var PATH_REGEXP = new RegExp(['(\\\\.)', '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

function parse(str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    if (escaped) {
      path += escaped[1];
      continue;
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
    });
  }

  if (index < str.length) {
    path += str.substr(index);
  }

  if (path) {
    tokens.push(path);
  }

  return tokens;
}

function compile(str, options) {
  return tokensToFunction(parse(str, options));
}

function encodeURIComponentPretty(str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function encodeAsterisk(str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function tokensToFunction(tokens) {
  var matches = new Array(tokens.length);

  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue;
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          if (token.partial) {
            path += token.prefix;
          }

          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
        }

        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue;
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }

      path += token.prefix + segment;
    }

    return path;
  };
}

function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
}

function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, '\\$1');
}

function attachKeys(re, keys) {
  re.keys = keys;
  return re;
}

function flags(options) {
  return options.sensitive ? '' : 'i';
}

function regexpToRegexp(path, keys) {
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys);
}

function arrayToRegexp(path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys);
}

function stringToRegexp(path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options);
}

function tokensToRegExp(tokens, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys);
}

function pathToRegexp(path, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys);
  }

  if (isarray(path)) {
    return arrayToRegexp(path, keys, options);
  }

  return stringToRegexp(path, keys, options);
}
}, 521, null, "path-to-regexp/index.js");
__d(/* isarray/index.js */function(global, require, module, exports) {module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};
}, 522, null, "isarray/index.js");
__d(/* react-navigation/src/routers/createConfigGetter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(524                      ); // 524 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _addNavigationHelpers = require(494                      ); // 494 = ../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _validateScreenOptions = require(525                      ); // 525 = ./validateScreenOptions

var _validateScreenOptions2 = babelHelpers.interopRequireDefault(_validateScreenOptions);

function applyConfig(configurer, navigationOptions, configProps) {
  if (typeof configurer === 'function') {
    return babelHelpers.extends({}, navigationOptions, configurer(babelHelpers.extends({}, configProps, {
      navigationOptions: navigationOptions
    })));
  }
  if (typeof configurer === 'object') {
    return babelHelpers.extends({}, navigationOptions, configurer);
  }
  return navigationOptions;
}

exports.default = function (routeConfigs, navigatorScreenConfig) {
  return function (navigation, screenProps) {
    var state = navigation.state,
        dispatch = navigation.dispatch;

    var route = state;
    var _ref = route,
        routes = _ref.routes,
        index = _ref.index;


    (0, _invariant2.default)(route.routeName && typeof route.routeName === 'string', 'Cannot get config because the route does not have a routeName.');

    var Component = (0, _getScreenForRouteName2.default)(routeConfigs, route.routeName);

    var outputConfig = {};

    if (Component.router) {
      (0, _invariant2.default)(route && routes && index != null, 'Expect nav state to have routes and index, ' + JSON.stringify(route));
      var childRoute = routes[index];
      var childNavigation = (0, _addNavigationHelpers2.default)({
        state: childRoute,
        dispatch: dispatch
      });
      outputConfig = Component.router.getScreenOptions(childNavigation, screenProps);
    }

    var routeConfig = routeConfigs[route.routeName];

    var routeScreenConfig = routeConfig.navigationOptions;
    var componentScreenConfig = Component.navigationOptions;

    var configOptions = { navigation: navigation, screenProps: screenProps || {} };

    outputConfig = applyConfig(navigatorScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(componentScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);

    (0, _validateScreenOptions2.default)(outputConfig, route);

    return outputConfig;
  };
};
}, 523, null, "react-navigation/src/routers/createConfigGetter.js");
__d(/* react-navigation/src/routers/getScreenForRouteName.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getScreenForRouteName;

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function getScreenForRouteName(routeConfigs, routeName) {
  var routeConfig = routeConfigs[routeName];

  (0, _invariant2.default)(routeConfig, 'There is no route defined for key ' + routeName + '.\n' + ('Must be one of: ' + Object.keys(routeConfigs).map(function (a) {
    return '\'' + a + '\'';
  }).join(',')));

  if (routeConfig.screen) {
    return routeConfig.screen;
  }

  if (typeof routeConfig.getScreen === 'function') {
    var screen = routeConfig.getScreen();
    (0, _invariant2.default)(typeof screen === 'function', 'The getScreen defined for route \'' + routeName + ' didn\'t return a valid ' + 'screen or navigator.\n\n' + 'Please pass it like this:\n' + (routeName + ': {\n  getScreen: () => require(\'./MyScreen\').default\n}'));
    return screen;
  }

  (0, _invariant2.default)(false, 'Route ' + routeName + ' must define a screen or a getScreen.');
}
}, 524, null, "react-navigation/src/routers/getScreenForRouteName.js");
__d(/* react-navigation/src/routers/validateScreenOptions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var deprecatedKeys = ['tabBar'];

exports.default = function (screenOptions, route) {
  var keys = Object.keys(screenOptions);

  var deprecatedKey = keys.find(function (key) {
    return deprecatedKeys.includes(key);
  });

  if (typeof screenOptions.title === 'function') {
    (0, _invariant2.default)(false, ['`title` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {
    (0, _invariant2.default)(false, ['`' + deprecatedKey + '` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    ' + deprecatedKey + ': ({ state }) => ({', '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', '    ' + deprecatedKey + 'Key: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {
    (0, _invariant2.default)(false, ['Invalid key `' + deprecatedKey + '` defined in navigation options for `' + route.routeName + '` screen.', '\n', 'Try replacing the following navigation options:', '{', '    ' + deprecatedKey + ': {'].concat(babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '        ' + key + ': ...,';
    })), ['    },', '}', '\n', 'with:', '{'], babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '    ' + (deprecatedKey + key[0].toUpperCase() + key.slice(1)) + ': ...,';
    })), ['}']).join('\n'));
  }
};
}, 525, null, "react-navigation/src/routers/validateScreenOptions.js");
__d(/* react-navigation/src/routers/validateRouteConfigMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function validateRouteConfigMap(routeConfigs) {
  var routeNames = Object.keys(routeConfigs);
  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');

  routeNames.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];

    (0, _invariant2.default)(routeConfig.screen || routeConfig.getScreen, 'Route \'' + routeName + '\' should declare a screen. ' + 'For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}');

    if (routeConfig.screen && routeConfig.getScreen) {
      (0, _invariant2.default)(false, 'Route \'' + routeName + '\' should declare a screen or ' + 'a getScreen, not both.');
    }

    if (routeConfig.screen) {
      (0, _invariant2.default)(typeof routeConfig.screen === 'function', 'The component for route \'' + routeName + '\' must be a ' + 'a React component. For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}\n\n' + 'You can also use a navigator:\n\n' + "import MyNavigator from './MyNavigator';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyNavigator,\n' + '}');
    }
  });
}

exports.default = validateRouteConfigMap;
}, 526, null, "react-navigation/src/routers/validateRouteConfigMap.js");
__d(/* react-navigation/src/routers/getScreenConfigDeprecated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

exports.default = function () {
  return (0, _invariant2.default)(false, '`getScreenConfig` has been replaced with `getScreenOptions`');
};
}, 527, null, "react-navigation/src/routers/getScreenConfigDeprecated.js");
__d(/* react-navigation/src/navigators/NavigatorTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var STACK = 'react-navigation/STACK';
var TABS = 'react-navigation/TABS';
var DRAWER = 'react-navigation/DRAWER';

exports.default = {
  STACK: STACK,
  TABS: TABS,
  DRAWER: DRAWER
};
}, 528, null, "react-navigation/src/navigators/NavigatorTypes.js");
__d(/* react-navigation/src/navigators/TabNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\navigators\\TabNavigator.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _createNavigator = require(496                ); // 496 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(491                           ); // 491 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(530                   ); // 530 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _TabView = require(531                       ); // 531 = ../views/TabView/TabView

var _TabView2 = babelHelpers.interopRequireDefault(_TabView);

var _TabBarTop = require(542                         ); // 542 = ../views/TabView/TabBarTop

var _TabBarTop2 = babelHelpers.interopRequireDefault(_TabBarTop);

var _TabBarBottom = require(544                            ); // 544 = ../views/TabView/TabBarBottom

var _TabBarBottom2 = babelHelpers.interopRequireDefault(_TabBarBottom);

var _NavigatorTypes = require(528               ); // 528 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var TabNavigator = function TabNavigator(routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var mergedConfig = babelHelpers.extends({}, TabNavigator.Presets.Default, config);
  var tabBarComponent = mergedConfig.tabBarComponent,
      tabBarPosition = mergedConfig.tabBarPosition,
      tabBarOptions = mergedConfig.tabBarOptions,
      swipeEnabled = mergedConfig.swipeEnabled,
      animationEnabled = mergedConfig.animationEnabled,
      lazy = mergedConfig.lazy,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['tabBarComponent', 'tabBarPosition', 'tabBarOptions', 'swipeEnabled', 'animationEnabled', 'lazy']);


  var router = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigs, config, _NavigatorTypes2.default.STACK)(function (props) {
    return _react2.default.createElement(_TabView2.default, babelHelpers.extends({}, props, {
      tabBarComponent: tabBarComponent,
      tabBarPosition: tabBarPosition,
      tabBarOptions: tabBarOptions,
      swipeEnabled: swipeEnabled,
      animationEnabled: animationEnabled,
      lazy: lazy,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 51
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator, tabsConfig.containerOptions);
};

var Presets = {
  iOSBottomTabs: {
    tabBarComponent: _TabBarBottom2.default,
    tabBarPosition: 'bottom',
    swipeEnabled: false,
    animationEnabled: false,
    lazy: false
  },
  AndroidTopTabs: {
    tabBarComponent: _TabBarTop2.default,
    tabBarPosition: 'top',
    swipeEnabled: true,
    animationEnabled: true,
    lazy: false
  }
};

TabNavigator.Presets = {
  iOSBottomTabs: Presets.iOSBottomTabs,
  AndroidTopTabs: Presets.AndroidTopTabs,
  Default: _reactNative.Platform.OS === 'ios' ? Presets.iOSBottomTabs : Presets.AndroidTopTabs
};

exports.default = TabNavigator;
}, 529, null, "react-navigation/src/navigators/TabNavigator.js");
__d(/* react-navigation/src/routers/TabRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(23                  ); // 23 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(524                      ); // 524 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _createConfigGetter = require(523                   ); // 523 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _NavigationActions = require(493                   ); // 493 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _validateRouteConfigMap = require(526                       ); // 526 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(527                          ); // 527 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

exports.default = function (routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var order = config.order || Object.keys(routeConfigs);
  var paths = config.paths || {};
  var initialRouteName = config.initialRouteName || order[0];
  var initialRouteIndex = order.indexOf(initialRouteName);
  var backBehavior = config.backBehavior || 'initialRoute';
  var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';
  var tabRouters = {};
  order.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];
    paths[routeName] = typeof routeConfig.path === 'string' ? routeConfig.path : routeName;
    tabRouters[routeName] = null;
    if (routeConfig.screen && routeConfig.screen.router) {
      tabRouters[routeName] = routeConfig.screen.router;
    }
  });
  (0, _invariant2.default)(initialRouteIndex !== -1, 'Invalid initialRouteName \'' + initialRouteName + '\' for TabRouter. ' + ('Should be one of ' + order.map(function (n) {
    return '"' + n + '"';
  }).join(', ')));
  return {
    getStateForAction: function getStateForAction(action, inputState) {
      action = _NavigationActions2.default.mapDeprecatedActionAndWarn(action);

      var state = inputState;
      if (!state) {
        var _routes = order.map(function (routeName) {
          var tabRouter = tabRouters[routeName];
          if (tabRouter) {
            var childAction = action.action || _NavigationActions2.default.init(babelHelpers.extends({}, action.params ? { params: action.params } : {}));
            return babelHelpers.extends({}, tabRouter.getStateForAction(childAction), {
              key: routeName,
              routeName: routeName
            });
          }
          return {
            key: routeName,
            routeName: routeName
          };
        });
        state = {
          routes: _routes,
          index: initialRouteIndex
        };
      }

      if (action.type === _NavigationActions2.default.INIT) {
        var _action = action,
            params = _action.params;

        if (params) {
          state.routes = state.routes.map(function (route) {
            return babelHelpers.extends({}, route, {
              params: babelHelpers.extends({}, route.params, params)
            });
          });
        }
      }

      var activeTabLastState = state.routes[state.index];
      var activeTabRouter = tabRouters[order[state.index]];
      if (activeTabRouter) {
        var activeTabState = activeTabRouter.getStateForAction(action.action || action, activeTabLastState);
        if (!activeTabState && inputState) {
          return null;
        }
        if (activeTabState && activeTabState !== activeTabLastState) {
          var _routes2 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes2[state.index] = activeTabState;
          return babelHelpers.extends({}, state, {
            routes: _routes2
          });
        }
      }

      var activeTabIndex = state.index;
      var isBackEligible = action.key == null || action.key === activeTabLastState.key;
      if (action.type === _NavigationActions2.default.BACK && isBackEligible && shouldBackNavigateToInitialRoute) {
        activeTabIndex = initialRouteIndex;
      }
      var didNavigate = false;
      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var navigateAction = action;
        didNavigate = !!order.find(function (tabId, i) {
          if (tabId === navigateAction.routeName) {
            activeTabIndex = i;
            return true;
          }
          return false;
        });
        if (didNavigate) {
          var childState = state.routes[activeTabIndex];
          var newChildState = void 0;

          var tabRouter = tabRouters[action.routeName];

          if (action.action) {
            newChildState = tabRouter ? tabRouter.getStateForAction(action.action, childState) : null;
          } else if (!tabRouter && action.params) {
            newChildState = babelHelpers.extends({}, childState, {
              params: babelHelpers.extends({}, childState.params || {}, action.params)
            });
          }

          if (newChildState && newChildState !== childState) {
            var _routes3 = [].concat(babelHelpers.toConsumableArray(state.routes));
            _routes3[activeTabIndex] = newChildState;
            return babelHelpers.extends({}, state, {
              routes: _routes3,
              index: activeTabIndex
            });
          }
        }
      }
      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var lastRoute = state.routes.find(function (route) {
          return route.key === action.key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var _routes4 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes4[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: _routes4
          });
        }
      }
      if (activeTabIndex !== state.index) {
        return babelHelpers.extends({}, state, {
          index: activeTabIndex
        });
      } else if (didNavigate && !inputState) {
        return state;
      } else if (didNavigate) {
        return null;
      }

      var index = state.index;

      var routes = state.routes;
      order.find(function (tabId, i) {
        var tabRouter = tabRouters[tabId];
        if (i === index) {
          return false;
        }
        var tabState = routes[i];
        if (tabRouter) {
          tabState = tabRouter.getStateForAction(action, tabState);
        }
        if (!tabState) {
          index = i;
          return true;
        }
        if (tabState !== routes[i]) {
          routes = [].concat(babelHelpers.toConsumableArray(routes));
          routes[i] = tabState;
          index = i;
          return true;
        }
        return false;
      });


      if (index !== state.index || routes !== state.routes) {
        return babelHelpers.extends({}, state, {
          index: index,
          routes: routes
        });
      }
      return state;
    },
    getComponentForState: function getComponentForState(state) {
      var routeName = order[state.index];
      (0, _invariant2.default)(routeName, 'There is no route defined for index ' + state.index + '. Check that\n        that you passed in a navigation state with a valid tab/screen index.');
      var childRouter = tabRouters[routeName];
      if (childRouter) {
        return childRouter.getComponentForState(state.routes[state.index]);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = order[state.index];
      var subPath = paths[routeName];
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var child = screen.router.getPathAndParamsForState(route);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(path, params) {
      return order.map(function (tabId) {
        var parts = path.split('/');
        var pathToTest = paths[tabId];
        if (parts[0] === pathToTest) {
          var tabRouter = tabRouters[tabId];
          var action = _NavigationActions2.default.navigate({
            routeName: tabId
          });
          if (tabRouter && tabRouter.getActionForPathAndParams) {
            action.action = tabRouter.getActionForPathAndParams(parts.slice(1).join('/'), params);
          } else if (params) {
            action.params = params;
          }
          return action;
        }
        return null;
      }).find(function (action) {
        return !!action;
      }) || order.map(function (tabId) {
        var tabRouter = tabRouters[tabId];
        return tabRouter && tabRouter.getActionForPathAndParams(path, params);
      }).find(function (action) {
        return !!action;
      }) || null;
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, config.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 530, null, "react-navigation/src/routers/TabRouter.js");
__d(/* react-navigation/src/views/TabView/TabView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\TabView\\TabView.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNativeTabView = require(532                    ); // 532 = react-native-tab-view

var _SceneView = require(510           ); // 510 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(541                              ); // 541 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var TabView = function (_PureComponent) {
  babelHelpers.inherits(TabView, _PureComponent);

  function TabView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabView.__proto__ || Object.getPrototypeOf(TabView)).call.apply(_ref, [this].concat(args))), _this), _this._handlePageChanged = function (index) {
      var navigation = _this.props.navigation;

      navigation.navigate(navigation.state.routes[index].routeName);
    }, _this._renderScene = function (_ref2) {
      var route = _ref2.route;
      var screenProps = _this.props.screenProps;

      var childNavigation = _this.props.childNavigationProps[route.key];
      var TabComponent = _this.props.router.getComponentForRouteName(route.routeName);
      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.page, __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          }
        },
        _react2.default.createElement(_SceneView2.default, {
          screenProps: screenProps,
          component: TabComponent,
          navigation: childNavigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 70
          }
        })
      );
    }, _this._getLabel = function (_ref3) {
      var route = _ref3.route,
          tintColor = _ref3.tintColor,
          focused = _ref3.focused;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      if (options.tabBarLabel) {
        return typeof options.tabBarLabel === 'function' ? options.tabBarLabel({ tintColor: tintColor, focused: focused }) : options.tabBarLabel;
      }

      if (typeof options.title === 'string') {
        return options.title;
      }

      return route.routeName;
    }, _this._renderIcon = function (_ref4) {
      var focused = _ref4.focused,
          route = _ref4.route,
          tintColor = _ref4.tintColor;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});
      if (options.tabBarIcon) {
        return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({ tintColor: tintColor, focused: focused }) : options.tabBarIcon;
      }
      return null;
    }, _this._renderTabBar = function (props) {
      var _this$props = _this.props,
          tabBarOptions = _this$props.tabBarOptions,
          TabBarComponent = _this$props.tabBarComponent,
          animationEnabled = _this$props.animationEnabled;

      if (typeof TabBarComponent === 'undefined') {
        return null;
      }
      return _react2.default.createElement(TabBarComponent, babelHelpers.extends({}, props, tabBarOptions, {
        navigation: _this.props.navigation,
        getLabel: _this._getLabel,
        renderIcon: _this._renderIcon,
        animationEnabled: animationEnabled,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 121
        }
      }));
    }, _this._renderPager = function (props) {
      return _react2.default.createElement(_reactNativeTabView.TabViewPagerPan, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 132
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabView, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          tabBarComponent = _props.tabBarComponent,
          tabBarPosition = _props.tabBarPosition,
          animationEnabled = _props.animationEnabled,
          swipeEnabled = _props.swipeEnabled,
          lazy = _props.lazy,
          screenProps = _props.screenProps;


      var renderHeader = void 0;
      var renderFooter = void 0;
      var renderPager = void 0;

      var state = this.props.navigation.state;

      var options = router.getScreenOptions(this.props.childNavigationProps[state.routes[state.index].key], screenProps || {});

      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;

      if (tabBarComponent !== undefined && tabBarVisible) {
        if (tabBarPosition === 'bottom') {
          renderFooter = this._renderTabBar;
        } else {
          renderHeader = this._renderTabBar;
        }
      }

      if (animationEnabled === false && swipeEnabled === false) {
        renderPager = this._renderPager;
      }

      var props = {
        lazy: lazy,
        animationEnabled: animationEnabled,
        swipeEnabled: swipeEnabled,
        renderPager: renderPager,
        renderHeader: renderHeader,
        renderFooter: renderFooter,
        renderScene: this._renderScene,
        onRequestChangeTab: this._handlePageChanged,
        navigationState: this.props.navigation.state,
        screenProps: this.props.screenProps,
        style: styles.container
      };

      return _react2.default.createElement(_reactNativeTabView.TabViewAnimated, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 185
        }
      }));
    }
  }]);
  return TabView;
}(_react.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(TabView);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 531, null, "react-navigation/src/views/TabView/TabView.js");
__d(/* react-native-tab-view/src/index.js */function(global, require, module, exports) {

module.exports = {
  get TabViewAnimated() {
    return require(533                ).default; // 533 = ./TabViewAnimated
  },
  get TabViewPagerPan() {
    return require(537                ).default; // 537 = ./TabViewPagerPan
  },
  get TabViewPagerScroll() {
    return require(536                   ).default; // 536 = ./TabViewPagerScroll
  },
  get TabViewPagerAndroid() {
    return require(535                    ).default; // 535 = ./TabViewPagerAndroid
  },
  get TabBar() {
    return require(538       ).default; // 538 = ./TabBar
  },
  get SceneMap() {
    return require(540         ).default; // 540 = ./SceneMap
  }
};
}, 532, null, "react-native-tab-view/src/index.js");
__d(/* react-native-tab-view/src/TabViewAnimated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-view\\src\\TabViewAnimated.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(46            ); // 46 = react-native

var _TabViewPropTypes = require(534                 ); // 534 = ./TabViewPropTypes

var TabViewPager = void 0;

switch (_reactNative.Platform.OS) {
  case 'android':
    TabViewPager = require(535                    ).default; // 535 = ./TabViewPagerAndroid
    break;
  case 'ios':
    TabViewPager = require(536                   ).default; // 536 = ./TabViewPagerScroll
    break;
  default:
    TabViewPager = require(537                ).default; // 537 = ./TabViewPagerPan
    break;
}

var TabViewAnimated = function (_PureComponent) {
  babelHelpers.inherits(TabViewAnimated, _PureComponent);

  function TabViewAnimated(props) {
    babelHelpers.classCallCheck(this, TabViewAnimated);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewAnimated.__proto__ || Object.getPrototypeOf(TabViewAnimated)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      loaded: [_this.props.navigationState.index],
      layout: babelHelpers.extends({}, _this.props.initialLayout, {
        measured: false
      }),
      position: new _reactNative.Animated.Value(_this.props.navigationState.index)
    };
    return _this;
  }

  babelHelpers.createClass(TabViewAnimated, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._mounted = true;
      this._positionListener = this.state.position.addListener(this._trackPosition);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._mounted = false;
      this.state.position.removeListener(this._positionListener);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          navigationState = _props.navigationState,
          onRequestChangeTab = _props.onRequestChangeTab,
          onChangePosition = _props.onChangePosition,
          canJumpToTab = _props.canJumpToTab,
          lazy = _props.lazy,
          initialLayout = _props.initialLayout,
          renderScene = _props.renderScene,
          renderPager = _props.renderPager,
          renderHeader = _props.renderHeader,
          renderFooter = _props.renderFooter,
          rest = babelHelpers.objectWithoutProperties(_props, ['navigationState', 'onRequestChangeTab', 'onChangePosition', 'canJumpToTab', 'lazy', 'initialLayout', 'renderScene', 'renderPager', 'renderHeader', 'renderFooter']);

      var props = this._buildSceneRendererProps();

      return _react2.default.createElement(
        _reactNative.View,
        {
          onLayout: this._handleLayout,
          loaded: this.state.loaded,
          style: [styles.container, this.props.style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 260
          }
        },
        renderHeader && _react2.default.createElement(
          _reactNative.View,
          { collapsable: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 265
            }
          },
          renderHeader(props)
        ),
        renderPager(babelHelpers.extends({}, props, rest, {
          children: navigationState.routes.map(function (route, index) {
            return _this2._renderScene(babelHelpers.extends({}, props, {
              route: route,
              index: index,
              focused: index === navigationState.index
            }));
          })
        })),
        renderFooter && _react2.default.createElement(
          _reactNative.View,
          { collapsable: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 278
            }
          },
          renderFooter(props)
        )
      );
    }
  }]);
  return TabViewAnimated;
}(_react.PureComponent);

TabViewAnimated.propTypes = {
  navigationState: _TabViewPropTypes.NavigationStatePropType.isRequired,
  onRequestChangeTab: _propTypes2.default.func.isRequired,
  onChangePosition: _propTypes2.default.func,
  initialLayout: _propTypes2.default.shape({
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }),
  canJumpToTab: _propTypes2.default.func,
  renderPager: _propTypes2.default.func.isRequired,
  renderScene: _propTypes2.default.func.isRequired,
  renderHeader: _propTypes2.default.func,
  renderFooter: _propTypes2.default.func,
  lazy: _propTypes2.default.bool
};
TabViewAnimated.defaultProps = {
  renderPager: function renderPager(props) {
    return _react2.default.createElement(TabViewPager, babelHelpers.extends({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 81
      }
    }));
  },
  initialLayout: {
    height: 0,
    width: 0
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this._mounted = false;
  this._subscriptions = {};

  this._renderScene = function (props) {
    var _props2 = _this3.props,
        renderScene = _props2.renderScene,
        lazy = _props2.lazy;
    var navigationState = props.navigationState;
    var loaded = _this3.state.loaded;

    if (lazy) {
      if (loaded.includes(navigationState.routes.indexOf(props.route))) {
        return renderScene(props);
      }
      return null;
    }
    return renderScene(props);
  };

  this._handleChangePosition = function (value) {
    var _props3 = _this3.props,
        onChangePosition = _props3.onChangePosition,
        navigationState = _props3.navigationState,
        lazy = _props3.lazy;

    if (onChangePosition) {
      onChangePosition(value);
    }
    var loaded = _this3.state.loaded;

    if (lazy) {
      var next = Math.ceil(value);
      if (next === navigationState.index) {
        next = Math.floor(value);
      }
      if (loaded.includes(next)) {
        return;
      }
      _this3.setState({
        loaded: [].concat(babelHelpers.toConsumableArray(loaded), [next])
      });
    }
  };

  this._trackPosition = function (e) {
    _this3._handleChangePosition(e.value);
    _this3._triggerEvent('position', e.value);
    _this3._lastPosition = e.value;
    var onChangePosition = _this3.props.onChangePosition;

    if (onChangePosition) {
      onChangePosition(e.value);
    }
  };

  this._getLastPosition = function () {
    if (typeof _this3._lastPosition === 'number') {
      return _this3._lastPosition;
    } else {
      return _this3.props.navigationState.index;
    }
  };

  this._handleLayout = function (e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        height = _e$nativeEvent$layout.height,
        width = _e$nativeEvent$layout.width;


    if (_this3.state.layout.width === width && _this3.state.layout.height === height) {
      return;
    }

    _this3.setState({
      layout: {
        measured: true,
        height: height,
        width: width
      }
    });
  };

  this._buildSceneRendererProps = function () {
    return {
      layout: _this3.state.layout,
      navigationState: _this3.props.navigationState,
      position: _this3.state.position,
      jumpToIndex: _this3._jumpToIndex,
      getLastPosition: _this3._getLastPosition,
      subscribe: _this3._addSubscription
    };
  };

  this._jumpToIndex = function (index) {
    if (!_this3._mounted) {
      return;
    }

    var _props4 = _this3.props,
        canJumpToTab = _props4.canJumpToTab,
        navigationState = _props4.navigationState;


    if (canJumpToTab && !canJumpToTab(navigationState.routes[index])) {
      _this3._triggerEvent('reset', navigationState.index);
      return;
    }

    if (index !== navigationState.index) {
      _this3.props.onRequestChangeTab(index);
    }
  };

  this._addSubscription = function (event, callback) {
    if (!_this3._subscriptions[event]) {
      _this3._subscriptions[event] = [];
    }
    _this3._subscriptions[event].push(callback);
    return {
      remove: function remove() {
        var index = _this3._subscriptions[event].indexOf(callback);
        if (index > -1) {
          _this3._subscriptions[event].splice(index, 1);
        }
      }
    };
  };

  this._triggerEvent = function (event, value) {
    if (_this3._subscriptions[event]) {
      _this3._subscriptions[event].forEach(function (fn) {
        return fn(value);
      });
    }
  };
};

exports.default = TabViewAnimated;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 533, null, "react-native-tab-view/src/TabViewAnimated.js");
__d(/* react-native-tab-view/src/TabViewPropTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SceneRendererPropType = exports.NavigationStatePropType = exports.NavigationRoutePropType = undefined;

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(46            ); // 46 = react-native

var NavigationRoutePropType = exports.NavigationRoutePropType = _propTypes2.default.shape({
  title: _propTypes2.default.string,
  key: _propTypes2.default.string.isRequired
});

var NavigationStatePropType = exports.NavigationStatePropType = _propTypes2.default.shape({
  routes: _propTypes2.default.arrayOf(NavigationRoutePropType).isRequired,
  index: _propTypes2.default.number.isRequired
});

var SceneRendererPropType = exports.SceneRendererPropType = {
  layout: _propTypes2.default.shape({
    measured: _propTypes2.default.bool.isRequired,
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }).isRequired,
  navigationState: NavigationStatePropType.isRequired,
  position: _propTypes2.default.instanceOf(_reactNative.Animated.Value).isRequired,
  jumpToIndex: _propTypes2.default.func.isRequired,
  getLastPosition: _propTypes2.default.func.isRequired,
  subscribe: _propTypes2.default.func.isRequired
};
}, 534, null, "react-native-tab-view/src/TabViewPropTypes.js");
__d(/* react-native-tab-view/src/TabViewPagerAndroid.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-view\\src\\TabViewPagerAndroid.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(46            ); // 46 = react-native

var _TabViewPropTypes = require(534                 ); // 534 = ./TabViewPropTypes

var TabViewPagerAndroid = function (_PureComponent) {
  babelHelpers.inherits(TabViewPagerAndroid, _PureComponent);

  function TabViewPagerAndroid(props) {
    babelHelpers.classCallCheck(this, TabViewPagerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerAndroid.__proto__ || Object.getPrototypeOf(TabViewPagerAndroid)).call(this, props));

    _this._isIdle = true;
    _this._currentIndex = 0;

    _this._getPageIndex = function (index) {
      return _reactNative.I18nManager.isRTL ? _this.props.navigationState.routes.length - (index + 1) : index;
    };

    _this._setPage = function (index) {
      if (_this._viewPager) {
        var page = _this._getPageIndex(index);
        if (_this.props.animationEnabled !== false) {
          _this._viewPager.setPage(page);
        } else {
          _this._viewPager.setPageWithoutAnimation(page);
        }
      }
    };

    _this._handlePageChange = function (index) {
      if (_this._isIdle && _this._currentIndex !== index) {
        _this._setPage(index);
        _this._currentIndex = index;
      }
    };

    _this._handlePageScroll = function (e) {
      _this.props.position.setValue(_this._getPageIndex(e.nativeEvent.position) + e.nativeEvent.offset * (_reactNative.I18nManager.isRTL ? -1 : 1));
    };

    _this._handlePageScrollStateChanged = function (e) {
      _this._isIdle = e === 'idle';
      _this.props.jumpToIndex(_this._currentIndex);
    };

    _this._handlePageSelected = function (e) {
      var index = _this._getPageIndex(e.nativeEvent.position);
      _this._currentIndex = index;
    };

    _this._setRef = function (el) {
      return _this._viewPager = el;
    };

    _this._currentIndex = _this.props.navigationState.index;
    return _this;
  }

  babelHelpers.createClass(TabViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._handlePageChange);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.layout !== nextProps.layout || _react.Children.count(this.props.children) !== _react.Children.count(nextProps.children)) {
        global.requestAnimationFrame(function () {
          if (_this2._viewPager) {
            var navigationState = nextProps.navigationState;

            var page = _reactNative.I18nManager.isRTL ? navigationState.routes.length - (navigationState.index + 1) : navigationState.index;

            _this2._viewPager.setPageWithoutAnimation(page);
          }
        });
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._handlePageChange(this.props.navigationState.index);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          navigationState = _props.navigationState,
          swipeEnabled = _props.swipeEnabled;

      var content = _react.Children.map(children, function (child, i) {
        return _react2.default.createElement(
          _reactNative.View,
          {
            key: navigationState.routes[i].key,
            testID: navigationState.routes[i].testID,
            style: styles.page,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 118
            }
          },
          child
        );
      });

      if (_reactNative.I18nManager.isRTL) {
        content.reverse();
      }

      var initialPage = this._getPageIndex(navigationState.index);

      return _react2.default.createElement(
        _reactNative.ViewPagerAndroid,
        {
          key: navigationState.routes.length,
          keyboardDismissMode: 'on-drag',
          initialPage: initialPage,
          scrollEnabled: swipeEnabled !== false,
          onPageScroll: this._handlePageScroll,
          onPageScrollStateChanged: this._handlePageScrollStateChanged,
          onPageSelected: this._handlePageSelected,
          style: styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 134
          }
        },
        content
      );
    }
  }]);
  return TabViewPagerAndroid;
}(_react.PureComponent);

TabViewPagerAndroid.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerAndroid;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    overflow: 'hidden'
  }
});
}, 535, null, "react-native-tab-view/src/TabViewPagerAndroid.js");
__d(/* react-native-tab-view/src/TabViewPagerScroll.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-view\\src\\TabViewPagerScroll.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(46            ); // 46 = react-native

var _TabViewPropTypes = require(534                 ); // 534 = ./TabViewPropTypes

var TabViewPagerScroll = function (_PureComponent) {
  babelHelpers.inherits(TabViewPagerScroll, _PureComponent);

  function TabViewPagerScroll(props) {
    babelHelpers.classCallCheck(this, TabViewPagerScroll);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerScroll.__proto__ || Object.getPrototypeOf(TabViewPagerScroll)).call(this, props));

    _this._nextOffset = 0;
    _this._isIdle = true;

    _this._scrollTo = function (x) {
      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.animationEnabled !== false;

      _this._nextOffset = x;

      if (_this._isIdle && _this._scrollView) {
        _this._scrollView.scrollTo({
          x: x,
          animated: animated
        });
      }
    };

    _this._handleMomentumScrollEnd = function (e) {
      var nextIndex = Math.round(e.nativeEvent.contentOffset.x / _this.props.layout.width);
      _this._isIdle = true;
      _this.props.jumpToIndex(nextIndex);
    };

    _this._handleScroll = function (e) {
      _this._isIdle = e.nativeEvent.contentOffset.x === _this._nextOffset;
      _this.props.position.setValue(e.nativeEvent.contentOffset.x / _this.props.layout.width);
    };

    _this._setRef = function (el) {
      return _this._scrollView = el;
    };

    _this.state = {
      initialOffset: {
        x: _this.props.navigationState.index * _this.props.layout.width,
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabViewPagerScroll, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._scrollTo(this.props.navigationState.index * this.props.layout.width, false);
      this._resetListener = this.props.subscribe('reset', this._scrollTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      var amount = this.props.navigationState.index * this.props.layout.width;
      if (prevProps.navigationState !== this.props.navigationState || prevProps.layout !== this.props.layout) {
        if (_reactNative.Platform.OS === 'android' || prevProps.navigationState !== this.props.navigationState) {
          global.requestAnimationFrame(function () {
            return _this2._scrollTo(amount);
          });
        } else {
          this._scrollTo(amount, false);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          layout = _props.layout,
          navigationState = _props.navigationState;

      return _react2.default.createElement(
        _reactNative.ScrollView,
        {
          horizontal: true,
          pagingEnabled: true,
          directionalLockEnabled: true,
          keyboardDismissMode: 'on-drag',
          keyboardShouldPersistTaps: 'always',
          scrollEnabled: this.props.swipeEnabled,
          automaticallyAdjustContentInsets: false,
          bounces: false,
          alwaysBounceHorizontal: false,
          scrollsToTop: false,
          showsHorizontalScrollIndicator: false,
          scrollEventThrottle: 16,
          onScroll: this._handleScroll,
          onMomentumScrollEnd: this._handleMomentumScrollEnd,
          contentOffset: this.state.initialOffset,
          style: styles.container,
          contentContainerStyle: layout.width ? null : styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 114
          }
        },
        _react.Children.map(children, function (child, i) {
          return _react2.default.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: layout.width ? { width: layout.width, overflow: 'hidden' } : i === navigationState.index ? styles.page : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 135
              }
            },
            i === navigationState.index || layout.width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerScroll;
}(_react.PureComponent);

TabViewPagerScroll.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerScroll;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 536, null, "react-native-tab-view/src/TabViewPagerScroll.js");
__d(/* react-native-tab-view/src/TabViewPagerPan.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-view\\src\\TabViewPagerPan.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(46            ); // 46 = react-native

var _TabViewPropTypes = require(534                 ); // 534 = ./TabViewPropTypes

var DEAD_ZONE = 12;

var DefaultTransitionSpec = {
  timing: _reactNative.Animated.spring,
  tension: 300,
  friction: 35
};

var TabViewPagerPan = function (_PureComponent) {
  babelHelpers.inherits(TabViewPagerPan, _PureComponent);

  function TabViewPagerPan() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabViewPagerPan);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabViewPagerPan.__proto__ || Object.getPrototypeOf(TabViewPagerPan)).call.apply(_ref, [this].concat(args))), _this), _this._pendingIndex = null, _this._lastValue = null, _this._isMoving = null, _this._startDirection = 0, _this._isIndexInRange = function (index) {
      var routes = _this.props.navigationState.routes;

      return index >= 0 && index <= routes.length - 1;
    }, _this._isMovingHorizontally = function (evt, gestureState) {
      return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 3) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 3);
    }, _this._isReverseDirection = function (gestureState) {
      if (_this._startDirection > 0) {
        return gestureState.vx < 0;
      } else {
        return gestureState.vx > 0;
      }
    }, _this._getNextIndex = function (evt, gestureState) {
      var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : _this.props.navigationState.index;

      var swipeVelocityThreshold = _this.props.swipeVelocityThreshold;

      if (_reactNative.Platform.OS === 'android') {
        swipeVelocityThreshold /= 1000000;
      }

      if (Math.abs(gestureState.dx) > _this.props.swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold) {
        var nextIndex = currentIndex - gestureState.dx / Math.abs(gestureState.dx) * (_reactNative.I18nManager.isRTL ? -1 : 1);
        if (_this._isIndexInRange(nextIndex)) {
          return nextIndex;
        }
      }
      return currentIndex;
    }, _this._canMoveScreen = function (evt, gestureState) {
      if (_this.props.swipeEnabled === false) {
        return false;
      }
      var _this$props$navigatio = _this.props.navigationState,
          routes = _this$props$navigatio.routes,
          index = _this$props$navigatio.index;

      var canMove = _this._isMovingHorizontally(evt, gestureState) && (gestureState.dx >= DEAD_ZONE && index >= 0 || gestureState.dx <= -DEAD_ZONE && index <= routes.length - 1);
      if (canMove) {
        _this._startDirection = gestureState.dx;
      }
      return canMove;
    }, _this._startGesture = function () {
      _this._lastValue = _this.props.getLastPosition();
      _this.props.position.stopAnimation();
    }, _this._respondToGesture = function (evt, gestureState) {
      var width = _this.props.layout.width;

      var currentPosition = typeof _this._lastValue === 'number' ? _this._lastValue : _this.props.navigationState.index;
      var nextPosition = currentPosition - gestureState.dx / width * (_reactNative.I18nManager.isRTL ? -1 : 1);
      if (_this._isMoving === null) {
        _this._isMoving = _this._isMovingHorizontally(evt, gestureState);
      }
      if (_this._isMoving && _this._isIndexInRange(nextPosition)) {
        _this.props.position.setValue(nextPosition);
      }
    }, _this._finishGesture = function (evt, gestureState) {
      var currentIndex = _this.props.navigationState.index;
      var currentValue = _this.props.getLastPosition();
      if (currentValue !== currentIndex) {
        if (_this._isMoving && !_this._isReverseDirection(gestureState)) {
          var nextIndex = _this._getNextIndex(evt, gestureState);
          _this._transitionTo(nextIndex);
        } else {
          _this._transitionTo(currentIndex);
        }
      }
      _this._lastValue = null;
      _this._isMoving = null;
    }, _this._transitionTo = function (toValue) {
      var lastPosition = _this.props.getLastPosition();
      var currentTransitionProps = {
        progress: lastPosition
      };
      var nextTransitionProps = {
        progress: toValue
      };

      _this._pendingIndex = toValue;

      if (_this.props.animationEnabled !== false) {
        var transitionSpec = _this.props.configureTransition(currentTransitionProps, nextTransitionProps);
        var timing = transitionSpec.timing,
            transitionConfig = babelHelpers.objectWithoutProperties(transitionSpec, ['timing']);


        timing(_this.props.position, babelHelpers.extends({}, transitionConfig, {
          toValue: toValue
        })).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            _this.props.jumpToIndex(toValue);
            _this._pendingIndex = null;
          }
        });
      } else {
        _this.props.position.setValue(toValue);
        _this.props.jumpToIndex(toValue);
        _this._pendingIndex = null;
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabViewPagerPan, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._panResponder = _reactNative.PanResponder.create({
        onMoveShouldSetPanResponder: this._canMoveScreen,
        onMoveShouldSetPanResponderCapture: this._canMoveScreen,
        onPanResponderGrant: this._startGesture,
        onPanResponderMove: this._respondToGesture,
        onPanResponderTerminate: this._finishGesture,
        onPanResponderRelease: this._finishGesture,
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._transitionTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.navigationState.index !== this.props.navigationState.index) {
        this._transitionTo(this.props.navigationState.index);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          layout = _props.layout,
          position = _props.position,
          navigationState = _props.navigationState,
          children = _props.children;
      var width = layout.width;
      var routes = navigationState.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (i) {
        return width * i * (_reactNative.I18nManager.isRTL ? 1 : -1);
      });

      var translateX = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      return _react2.default.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({
          style: [styles.sheet, width ? { width: routes.length * width, transform: [{ translateX: translateX }] } : null]
        }, this._panResponder.panHandlers, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 275
          }
        }),
        _react.Children.map(children, function (child, i) {
          return _react2.default.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: width ? { width: width } : i === navigationState.index ? _reactNative.StyleSheet.absoluteFill : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 285
              }
            },
            i === navigationState.index || width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerPan;
}(_react.PureComponent);

TabViewPagerPan.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  configureTransition: _propTypes2.default.func.isRequired,
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  swipeDistanceThreshold: _propTypes2.default.number.isRequired,
  swipeVelocityThreshold: _propTypes2.default.number.isRequired,
  children: _propTypes2.default.node
});
TabViewPagerPan.defaultProps = {
  configureTransition: function configureTransition() {
    return DefaultTransitionSpec;
  },
  initialLayout: {
    height: 0,
    width: 0
  },
  swipeDistanceThreshold: 120,
  swipeVelocityThreshold: 0.25
};
exports.default = TabViewPagerPan;


var styles = _reactNative.StyleSheet.create({
  sheet: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'stretch'
  }
});
}, 537, null, "react-native-tab-view/src/TabViewPagerPan.js");
__d(/* react-native-tab-view/src/TabBar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-view\\src\\TabBar.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(46            ); // 46 = react-native

var _TouchableItem = require(539              ); // 539 = ./TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var _TabViewPropTypes = require(534                 ); // 534 = ./TabViewPropTypes

var TabBar = function (_PureComponent) {
  babelHelpers.inherits(TabBar, _PureComponent);

  function TabBar(props) {
    babelHelpers.classCallCheck(this, TabBar);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).call(this, props));

    _initialiseProps.call(_this);

    var initialVisibility = 0;

    if (_this.props.scrollEnabled === true) {
      var tabWidth = _this._getTabWidthFromStyle(_this.props.tabStyle);
      if (_this.props.layout.width || tabWidth) {
        initialVisibility = 1;
      }
    } else {
      initialVisibility = 1;
    }

    _this.state = {
      offset: new _reactNative.Animated.Value(0),
      visibility: new _reactNative.Animated.Value(initialVisibility),
      initialOffset: {
        x: _this._getScrollAmount(_this.props, _this.props.navigationState.index),
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._adjustScroll(this.props.navigationState.index);
      this._positionListener = this.props.subscribe('position', this._adjustScroll);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigationState !== nextProps.navigationState) {
        this._resetScrollOffset(nextProps);
      }

      var nextTabWidth = this._getTabWidthFromStyle(nextProps.tabStyle);

      if (this.props.tabStyle !== nextProps.tabStyle && nextTabWidth || this.props.layout.width !== nextProps.layout.width && nextProps.layout.width) {
        this.state.visibility.setValue(1);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      if (this.props.scrollEnabled && (prevProps.layout !== this.props.layout || prevProps.tabStyle !== this.props.tabStyle)) {
        global.requestAnimationFrame(function () {
          return _this2._adjustScroll(_this2.props.navigationState.index);
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._positionListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          position = _props.position,
          navigationState = _props.navigationState,
          scrollEnabled = _props.scrollEnabled;
      var routes = navigationState.routes,
          index = navigationState.index;

      var maxDistance = this._getMaxScrollableDistance(this.props);
      var finalTabWidth = this._getFinalTabWidth(this.props);
      var tabBarWidth = finalTabWidth * routes.length;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var translateOutputRange = inputRange.map(function (i) {
        return _this3._getScrollAmount(_this3.props, i) * -1;
      });

      var translateX = _reactNative.Animated.add(position.interpolate({
        inputRange: inputRange,
        outputRange: translateOutputRange
      }), this.state.offset).interpolate({
        inputRange: [-maxDistance, 0],
        outputRange: [-maxDistance, 0],
        extrapolate: 'clamp'
      });

      return _react2.default.createElement(
        _reactNative.Animated.View,
        { style: [styles.tabBar, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 354
          }
        },
        _react2.default.createElement(
          _reactNative.Animated.View,
          {
            pointerEvents: 'none',
            style: [styles.indicatorContainer, scrollEnabled ? { width: tabBarWidth, transform: [{ translateX: translateX }] } : null],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 355
            }
          },
          this._renderIndicator(babelHelpers.extends({}, this.props, {
            width: new _reactNative.Animated.Value(finalTabWidth)
          }))
        ),
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.scroll, __source: {
              fileName: _jsxFileName,
              lineNumber: 369
            }
          },
          _react2.default.createElement(
            _reactNative.ScrollView,
            {
              horizontal: true,
              scrollEnabled: scrollEnabled,
              bounces: false,
              alwaysBounceHorizontal: false,
              scrollsToTop: false,
              showsHorizontalScrollIndicator: false,
              automaticallyAdjustContentInsets: false,
              overScrollMode: 'never',
              contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],
              scrollEventThrottle: 16,
              onScroll: this._handleScroll,
              onScrollBeginDrag: this._handleBeginDrag,
              onScrollEndDrag: this._handleEndDrag,
              onMomentumScrollBegin: this._handleMomentumScrollBegin,
              onMomentumScrollEnd: this._handleMomentumScrollEnd,
              contentOffset: this.state.initialOffset,
              ref: this._setRef,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 370
              }
            },
            routes.map(function (route, i) {
              var focused = index === i;
              var outputRange = inputRange.map(function (inputIndex) {
                return inputIndex === i ? 1 : 0.7;
              });
              var opacity = _reactNative.Animated.multiply(_this3.state.visibility, position.interpolate({
                inputRange: inputRange,
                outputRange: outputRange
              }));
              var scene = {
                route: route,
                focused: focused,
                index: i
              };
              var label = _this3._renderLabel(scene);
              var icon = _this3.props.renderIcon ? _this3.props.renderIcon(scene) : null;
              var badge = _this3.props.renderBadge ? _this3.props.renderBadge(scene) : null;

              var tabStyle = {};

              tabStyle.opacity = opacity;

              if (icon) {
                if (label) {
                  tabStyle.paddingTop = 8;
                } else {
                  tabStyle.padding = 12;
                }
              }

              var passedTabStyle = _reactNative.StyleSheet.flatten(_this3.props.tabStyle);
              var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;
              var tabContainerStyle = {};

              if (isWidthSet) {
                tabStyle.width = finalTabWidth;
              }

              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {
                tabContainerStyle.flex = passedTabStyle.flex;
              } else if (!isWidthSet) {
                tabContainerStyle.flex = 1;
              }

              var accessibilityLabel = route.accessibilityLabel || route.title;

              return _react2.default.createElement(
                _TouchableItem2.default,
                {
                  borderless: true,
                  key: route.key,
                  testID: route.testID,
                  accessible: route.accessible,
                  accessibilityLabel: accessibilityLabel,
                  accessibilityTraits: 'button',
                  pressColor: _this3.props.pressColor,
                  pressOpacity: _this3.props.pressOpacity,
                  delayPressIn: 0,
                  onPress: function onPress() {
                    var _props2 = _this3.props,
                        onTabPress = _props2.onTabPress,
                        jumpToIndex = _props2.jumpToIndex;

                    jumpToIndex(i);
                    if (onTabPress) {
                      onTabPress(scene);
                    }
                  },
                  style: tabContainerStyle,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 450
                  }
                },
                _react2.default.createElement(
                  _reactNative.View,
                  { style: styles.container, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 470
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 471
                      }
                    },
                    icon,
                    label
                  ),
                  badge ? _react2.default.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.badge, { opacity: _this3.state.visibility }],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 483
                      }
                    },
                    badge
                  ) : null
                )
              );
            })
          )
        )
      );
    }
  }]);
  return TabBar;
}(_react.PureComponent);

TabBar.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  scrollEnabled: _propTypes2.default.bool,
  pressColor: _TouchableItem2.default.propTypes.pressColor,
  pressOpacity: _TouchableItem2.default.propTypes.pressOpacity,
  getLabelText: _propTypes2.default.func,
  renderIcon: _propTypes2.default.func,
  renderLabel: _propTypes2.default.func,
  renderIndicator: _propTypes2.default.func,
  onTabPress: _propTypes2.default.func,
  labelStyle: _reactNative.Text.propTypes.style,
  style: _propTypes2.default.any
});
TabBar.defaultProps = {
  getLabelText: function getLabelText(_ref) {
    var route = _ref.route;
    return route.title ? route.title.toUpperCase() : null;
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this._isManualScroll = false;
  this._isMomentumScroll = false;

  this._renderLabel = function (scene) {
    if (typeof _this4.props.renderLabel !== 'undefined') {
      return _this4.props.renderLabel(scene);
    }
    var label = _this4.props.getLabelText(scene);
    if (typeof label !== 'string') {
      return null;
    }
    return _react2.default.createElement(
      _reactNative.Text,
      { style: [styles.tabLabel, _this4.props.labelStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 162
        }
      },
      label
    );
  };

  this._renderIndicator = function (props) {
    if (typeof _this4.props.renderIndicator !== 'undefined') {
      return _this4.props.renderIndicator(props);
    }
    var width = props.width,
        position = props.position;

    var translateX = _reactNative.Animated.multiply(_reactNative.Animated.multiply(position, width), _reactNative.I18nManager.isRTL ? -1 : 1);
    return _react2.default.createElement(_reactNative.Animated.View, {
      style: [styles.indicator, { width: width, transform: [{ translateX: translateX }] }, _this4.props.indicatorStyle],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 176
      }
    });
  };

  this._getTabWidthFromStyle = function (style) {
    if (_this4._tabWidthCache && _this4._tabWidthCache.style === style) {
      return _this4._tabWidthCache.width;
    }
    var passedTabStyle = _reactNative.StyleSheet.flatten(_this4.props.tabStyle);
    var cache = {
      style: style,
      width: passedTabStyle ? passedTabStyle.width : null
    };
    _this4._tabWidthCache = cache;
    return cache;
  };

  this._getFinalTabWidth = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    var tabWidth = _this4._getTabWidthFromStyle(props.tabStyle);
    if (typeof tabWidth === 'number') {
      return tabWidth;
    }
    if (typeof tabWidth === 'string' && tabWidth.endsWith('%')) {
      return layout.width * (parseFloat(tabWidth, 10) / 100);
    }
    if (props.scrollEnabled) {
      return layout.width / 5 * 2;
    }
    return layout.width / navigationState.routes.length;
  };

  this._getMaxScrollableDistance = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    if (layout.width === 0) {
      return 0;
    }
    var finalTabWidth = _this4._getFinalTabWidth(props);
    var tabBarWidth = finalTabWidth * navigationState.routes.length;
    var maxDistance = tabBarWidth - layout.width;
    return Math.max(maxDistance, 0);
  };

  this._normalizeScrollValue = function (props, value) {
    var maxDistance = _this4._getMaxScrollableDistance(props);
    return Math.max(Math.min(value, maxDistance), 0);
  };

  this._getScrollAmount = function (props, i) {
    var layout = props.layout;

    var finalTabWidth = _this4._getFinalTabWidth(props);
    var centerDistance = finalTabWidth * i + finalTabWidth / 2;
    var scrollAmount = centerDistance - layout.width / 2;
    return _this4._normalizeScrollValue(props, scrollAmount);
  };

  this._resetScrollOffset = function (props) {
    if (!props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(props, props.navigationState.index);
    _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: true
    });
    _reactNative.Animated.timing(_this4.state.offset, {
      toValue: 0,
      duration: 150
    }).start();
  };

  this._adjustScroll = function (index) {
    if (!_this4.props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, index);
    _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: false
    });
  };

  this._adjustOffset = function (value) {
    if (!_this4._isManualScroll || !_this4.props.scrollEnabled) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, _this4.props.navigationState.index);
    var scrollOffset = value - scrollAmount;

    if (_this4._isMomentumScroll) {
      _reactNative.Animated.spring(_this4.state.offset, {
        toValue: -scrollOffset,
        tension: 300,
        friction: 35
      }).start();
    } else {
      _this4.state.offset.setValue(-scrollOffset);
    }
  };

  this._handleScroll = function (e) {
    _this4._adjustOffset(e.nativeEvent.contentOffset.x);
  };

  this._handleBeginDrag = function () {
    _this4._isManualScroll = true;
    _this4._isMomentumScroll = false;
  };

  this._handleEndDrag = function () {
    global.requestAnimationFrame(function () {
      if (_this4._isMomentumScroll) {
        return;
      }
      _this4._isManualScroll = false;
    });
  };

  this._handleMomentumScrollBegin = function () {
    _this4._isMomentumScroll = true;
  };

  this._handleMomentumScrollEnd = function () {
    _this4._isMomentumScroll = false;
    _this4._isManualScroll = false;
  };

  this._setRef = function (el) {
    return _this4._scrollView = el;
  };
};

exports.default = TabBar;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  scroll: {
    overflow: _reactNative.Platform.OS === 'web' ? 'auto' : 'scroll'
  },
  tabBar: {
    backgroundColor: '#2196f3',
    elevation: 4,
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },
    zIndex: 1
  },
  tabContent: {
    flexDirection: 'row',
    flexWrap: 'nowrap'
  },
  tabLabel: {
    backgroundColor: 'transparent',
    color: 'white',
    margin: 8
  },
  tabItem: {
    flexGrow: 1,
    padding: 8,
    alignItems: 'center',
    justifyContent: 'center'
  },
  badge: {
    position: 'absolute',
    top: 0,
    right: 0
  },
  indicatorContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  indicator: {
    backgroundColor: '#ffeb3b',
    position: 'absolute',
    left: 0,
    bottom: 0,
    right: 0,
    height: 2
  }
});
}, 538, null, "react-native-tab-view/src/TabBar.js");
__d(/* react-native-tab-view/src/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-view\\src\\TouchableItem.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(46            ); // 46 = react-native

var LOLLIPOP = 21;

var TouchableItem = function (_PureComponent) {
  babelHelpers.inherits(TouchableItem, _PureComponent);

  function TouchableItem() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TouchableItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).call.apply(_ref, [this].concat(args))), _this), _this._handlePress = function () {
      global.requestAnimationFrame(_this.props.onPress);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          pressOpacity = _props.pressOpacity,
          pressColor = _props.pressColor,
          borderless = _props.borderless,
          rest = babelHelpers.objectWithoutProperties(_props, ['style', 'pressOpacity', 'pressColor', 'borderless']);


      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= LOLLIPOP) {
        return _react2.default.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            background: _reactNative.TouchableNativeFeedback.Ripple(pressColor, borderless),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            { style: style, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            },
            _react.Children.only(this.props.children)
          )
        );
      } else {
        return _react2.default.createElement(
          _reactNative.TouchableOpacity,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            style: style,
            activeOpacity: pressOpacity,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 66
            }
          }),
          this.props.children
        );
      }
    }
  }]);
  return TouchableItem;
}(_react.PureComponent);

TouchableItem.propTypes = {
  onPress: _propTypes2.default.func.isRequired,
  delayPressIn: _propTypes2.default.number,
  borderless: _propTypes2.default.bool,
  pressColor: _propTypes2.default.string,
  pressOpacity: _propTypes2.default.number,
  children: _propTypes2.default.node.isRequired
};
TouchableItem.defaultProps = {
  pressColor: 'rgba(255, 255, 255, .4)'
};
exports.default = TouchableItem;
}, 539, null, "react-native-tab-view/src/TouchableItem.js");
__d(/* react-native-tab-view/src/SceneMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-view\\src\\SceneMap.js';
exports.default = SceneMap;

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

function SceneMap(scenes) {
  var SceneComponent = function (_PureComponent) {
    babelHelpers.inherits(SceneComponent, _PureComponent);

    function SceneComponent() {
      babelHelpers.classCallCheck(this, SceneComponent);
      return babelHelpers.possibleConstructorReturn(this, (SceneComponent.__proto__ || Object.getPrototypeOf(SceneComponent)).apply(this, arguments));
    }

    babelHelpers.createClass(SceneComponent, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(scenes[this.props.route.key], this.props);
      }
    }]);
    return SceneComponent;
  }(_react.PureComponent);

  return function (_ref) {
    var route = _ref.route;
    return _react2.default.createElement(SceneComponent, { key: route.key, route: route, __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      }
    });
  };
}
}, 540, null, "react-native-tab-view/src/SceneMap.js");
__d(/* react-navigation/src/withCachedChildNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\withCachedChildNavigation.js';
exports.default = withCachedChildNavigation;

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _addNavigationHelpers = require(494                     ); // 494 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

function withCachedChildNavigation(Comp) {
  var _class, _temp2;

  return _temp2 = _class = function (_PureComponent) {
    babelHelpers.inherits(_class, _PureComponent);

    function _class() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, _class);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this._updateNavigationProps = function (navigation) {
        if (!_this._childNavigationProps) {
          _this._childNavigationProps = {};
        }
        navigation.state.routes.forEach(function (route) {
          var childNavigation = _this._childNavigationProps[route.key];
          if (childNavigation && childNavigation.state === route) {
            return;
          }
          _this._childNavigationProps[route.key] = (0, _addNavigationHelpers2.default)(babelHelpers.extends({}, navigation, {
            state: route
          }));
        });
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(_class, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._updateNavigationProps(this.props.navigation);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._updateNavigationProps(nextProps.navigation);
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Comp, babelHelpers.extends({}, this.props, {
          childNavigationProps: this._childNavigationProps,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 59
          }
        }));
      }
    }]);
    return _class;
  }(_react.PureComponent), _class.displayName = 'withCachedChildNavigation(' + (Comp.displayName || Comp.name) + ')', _temp2;
}
}, 541, null, "react-navigation/src/withCachedChildNavigation.js");
__d(/* react-navigation/src/views/TabView/TabBarTop.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\TabView\\TabBarTop.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNativeTabView = require(532                    ); // 532 = react-native-tab-view

var _TabBarIcon = require(543           ); // 543 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var TabBarTop = function (_PureComponent) {
  babelHelpers.inherits(TabBarTop, _PureComponent);

  function TabBarTop() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarTop);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarTop.__proto__ || Object.getPrototypeOf(TabBarTop)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          showLabel = _this$props.showLabel,
          upperCaseLabel = _this$props.upperCaseLabel,
          labelStyle = _this$props.labelStyle;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      if (typeof label === 'string') {
        return _react2.default.createElement(
          _reactNative.Animated.Text,
          { style: [styles.label, { color: color }, labelStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 81
            }
          },
          upperCaseLabel ? label.toUpperCase() : label
        );
      }
      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon,
          iconStyle = _this$props2.iconStyle;

      if (showIcon === false) {
        return null;
      }
      return _react2.default.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: [styles.icon, iconStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 107
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarTop, [{
    key: 'render',
    value: function render() {
      var props = this.props;

      return _react2.default.createElement(_reactNativeTabView.TabBar, babelHelpers.extends({}, props, {
        renderIcon: this._renderIcon,
        renderLabel: this._renderLabel,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 124
        }
      }));
    }
  }]);
  return TabBarTop;
}(_react.PureComponent);

TabBarTop.defaultProps = {
  activeTintColor: '#fff',
  inactiveTintColor: '#fff',
  showIcon: false,
  showLabel: true,
  upperCaseLabel: true
};
exports.default = TabBarTop;


var styles = _reactNative.StyleSheet.create({
  icon: {
    height: 24,
    width: 24
  },
  label: {
    textAlign: 'center',
    fontSize: 13,
    margin: 8,
    backgroundColor: 'transparent'
  }
});
}, 542, null, "react-navigation/src/views/TabView/TabBarTop.js");
__d(/* react-navigation/src/views/TabView/TabBarIcon.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\TabView\\TabBarIcon.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var TabBarIcon = function (_PureComponent) {
  babelHelpers.inherits(TabBarIcon, _PureComponent);

  function TabBarIcon() {
    babelHelpers.classCallCheck(this, TabBarIcon);
    return babelHelpers.possibleConstructorReturn(this, (TabBarIcon.__proto__ || Object.getPrototypeOf(TabBarIcon)).apply(this, arguments));
  }

  babelHelpers.createClass(TabBarIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          position = _props.position,
          scene = _props.scene,
          navigation = _props.navigation,
          activeTintColor = _props.activeTintColor,
          inactiveTintColor = _props.inactiveTintColor,
          style = _props.style;
      var route = scene.route,
          index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var activeOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 1 : 0;
        })
      });
      var inactiveOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 0 : 1;
        })
      });

      return _react2.default.createElement(
        _reactNative.View,
        { style: style, __source: {
            fileName: _jsxFileName,
            lineNumber: 52
          }
        },
        _react2.default.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: activeOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 53
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: true,
            tintColor: activeTintColor
          })
        ),
        _react2.default.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: inactiveOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: false,
            tintColor: inactiveTintColor
          })
        )
      );
    }
  }]);
  return TabBarIcon;
}(_react.PureComponent);

exports.default = TabBarIcon;


var styles = _reactNative.StyleSheet.create({
  icon: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    alignItems: 'center',
    justifyContent: 'center'
  }
});
}, 543, null, "react-navigation/src/views/TabView/TabBarIcon.js");
__d(/* react-navigation/src/views/TabView/TabBarBottom.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\TabView\\TabBarBottom.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _TabBarIcon = require(543           ); // 543 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var TabBarBottom = function (_PureComponent) {
  babelHelpers.inherits(TabBarBottom, _PureComponent);

  function TabBarBottom() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarBottom);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarBottom.__proto__ || Object.getPrototypeOf(TabBarBottom)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          labelStyle = _this$props.labelStyle,
          showLabel = _this$props.showLabel;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      if (typeof label === 'string') {
        return _react2.default.createElement(
          _reactNative.Animated.Text,
          { style: [styles.label, { color: color }, labelStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          },
          label
        );
      }

      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon;

      if (showIcon === false) {
        return null;
      }
      return _react2.default.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: styles.icon,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 110
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarBottom, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          position = _props.position,
          navigation = _props.navigation,
          jumpToIndex = _props.jumpToIndex,
          activeBackgroundColor = _props.activeBackgroundColor,
          inactiveBackgroundColor = _props.inactiveBackgroundColor,
          style = _props.style;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      return _react2.default.createElement(
        _reactNative.Animated.View,
        { style: [styles.tabBar, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 135
          }
        },
        routes.map(function (route, index) {
          var focused = index === navigation.state.index;
          var scene = { route: route, index: index, focused: focused };
          var outputRange = inputRange.map(function (inputIndex) {
            return inputIndex === index ? activeBackgroundColor : inactiveBackgroundColor;
          });
          var backgroundColor = position.interpolate({
            inputRange: inputRange,
            outputRange: outputRange
          });
          var justifyContent = _this2.props.showIcon ? 'flex-end' : 'center';
          return _react2.default.createElement(
            _reactNative.TouchableWithoutFeedback,
            {
              key: route.key,
              onPress: function onPress() {
                return jumpToIndex(index);
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 151
              }
            },
            _react2.default.createElement(
              _reactNative.Animated.View,
              {
                style: [styles.tab, { backgroundColor: backgroundColor, justifyContent: justifyContent }],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 155
                }
              },
              _this2._renderIcon(scene),
              _this2._renderLabel(scene)
            )
          );
        })
      );
    }
  }]);
  return TabBarBottom;
}(_react.PureComponent);

TabBarBottom.defaultProps = {
  activeTintColor: '#3478f6',
  activeBackgroundColor: 'transparent',
  inactiveTintColor: '#929292',
  inactiveBackgroundColor: 'transparent',
  showLabel: true,
  showIcon: true
};
exports.default = TabBarBottom;


var styles = _reactNative.StyleSheet.create({
  tabBar: {
    height: 49,
    flexDirection: 'row',
    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
    borderTopColor: 'rgba(0, 0, 0, .2)',
    backgroundColor: '#f4f4f4' },
  tab: {
    flex: 1,
    alignItems: 'stretch',
    justifyContent: 'flex-end'
  },
  icon: {
    flexGrow: 1
  },
  label: {
    textAlign: 'center',
    fontSize: 10,
    marginBottom: 1.5,
    backgroundColor: 'transparent'
  }
});
}, 544, null, "react-navigation/src/views/TabView/TabBarBottom.js");
__d(/* react-navigation/src/navigators/DrawerNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\navigators\\DrawerNavigator.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _createNavigator = require(496                ); // 496 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(491                           ); // 491 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(530                   ); // 530 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _DrawerScreen = require(546                           ); // 546 = ../views/Drawer/DrawerScreen

var _DrawerScreen2 = babelHelpers.interopRequireDefault(_DrawerScreen);

var _DrawerView = require(547                         ); // 547 = ../views/Drawer/DrawerView

var _DrawerView2 = babelHelpers.interopRequireDefault(_DrawerView);

var _DrawerNavigatorItems = require(550                                   ); // 550 = ../views/Drawer/DrawerNavigatorItems

var _DrawerNavigatorItems2 = babelHelpers.interopRequireDefault(_DrawerNavigatorItems);

var _NavigatorTypes = require(528               ); // 528 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var DefaultDrawerConfig = {
  drawerWidth: _reactNative.Dimensions.get('window').width - (_reactNative.Platform.OS === 'android' ? 56 : 64),
  contentComponent: _DrawerNavigatorItems2.default,
  drawerPosition: 'left'
};

var DrawerNavigator = function DrawerNavigator(routeConfigs, config) {
  var mergedConfig = babelHelpers.extends({}, DefaultDrawerConfig, config);
  var containerConfig = mergedConfig.containerConfig,
      drawerWidth = mergedConfig.drawerWidth,
      contentComponent = mergedConfig.contentComponent,
      contentOptions = mergedConfig.contentOptions,
      drawerPosition = mergedConfig.drawerPosition,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['containerConfig', 'drawerWidth', 'contentComponent', 'contentOptions', 'drawerPosition']);


  var contentRouter = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var drawerRouter = (0, _TabRouter2.default)({
    DrawerClose: {
      screen: (0, _createNavigator2.default)(contentRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
        return _react2.default.createElement(_DrawerScreen2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 61
          }
        }));
      })
    },
    DrawerOpen: {
      screen: function screen() {
        return null;
      }
    }
  }, {
    initialRouteName: 'DrawerClose'
  });

  var navigator = (0, _createNavigator2.default)(drawerRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
    return _react2.default.createElement(_DrawerView2.default, babelHelpers.extends({}, props, {
      drawerWidth: drawerWidth,
      contentComponent: contentComponent,
      contentOptions: contentOptions,
      drawerPosition: drawerPosition,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 78
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator, containerConfig);
};

exports.default = DrawerNavigator;
}, 545, null, "react-navigation/src/navigators/DrawerNavigator.js");
__d(/* react-navigation/src/views/Drawer/DrawerScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\Drawer\\DrawerScreen.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _SceneView = require(510           ); // 510 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(541                              ); // 541 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var DrawerScreen = function (_PureComponent) {
  babelHelpers.inherits(DrawerScreen, _PureComponent);

  function DrawerScreen() {
    babelHelpers.classCallCheck(this, DrawerScreen);
    return babelHelpers.possibleConstructorReturn(this, (DrawerScreen.__proto__ || Object.getPrototypeOf(DrawerScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(DrawerScreen, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          navigation = _props.navigation,
          childNavigationProps = _props.childNavigationProps,
          screenProps = _props.screenProps;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      var childNavigation = childNavigationProps[routes[index].key];
      var Content = router.getComponentForRouteName(routes[index].routeName);
      return _react2.default.createElement(_SceneView2.default, {
        screenProps: screenProps,
        component: Content,
        navigation: childNavigation,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47
        }
      });
    }
  }]);
  return DrawerScreen;
}(_react.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerScreen);
}, 546, null, "react-navigation/src/views/Drawer/DrawerScreen.js");
__d(/* react-navigation/src/views/Drawer/DrawerView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\Drawer\\DrawerView.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNativeDrawerLayoutPolyfill = require(548                                  ); // 548 = react-native-drawer-layout-polyfill

var _reactNativeDrawerLayoutPolyfill2 = babelHelpers.interopRequireDefault(_reactNativeDrawerLayoutPolyfill);

var _addNavigationHelpers = require(494                         ); // 494 = ../../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _DrawerSidebar = require(549              ); // 549 = ./DrawerSidebar

var _DrawerSidebar2 = babelHelpers.interopRequireDefault(_DrawerSidebar);

var DrawerView = function (_PureComponent) {
  babelHelpers.inherits(DrawerView, _PureComponent);

  function DrawerView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerView.__proto__ || Object.getPrototypeOf(DrawerView)).call.apply(_ref, [this].concat(args))), _this), _this._handleDrawerOpen = function () {
      var navigation = _this.props.navigation;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      if (routes[index].routeName !== 'DrawerOpen') {
        _this.props.navigation.navigate('DrawerOpen');
      }
    }, _this._handleDrawerClose = function () {
      var navigation = _this.props.navigation;
      var _navigation$state2 = navigation.state,
          routes = _navigation$state2.routes,
          index = _navigation$state2.index;

      if (routes[index].routeName !== 'DrawerClose') {
        _this.props.navigation.navigate('DrawerClose');
      }
    }, _this._updateScreenNavigation = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      if (_this._screenNavigationProp && _this._screenNavigationProp.state === navigationState) {
        return;
      }
      _this._screenNavigationProp = (0, _addNavigationHelpers2.default)(babelHelpers.extends({}, navigation, {
        state: navigationState
      }));
    }, _this._getNavigationState = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      return navigationState;
    }, _this._renderNavigationView = function () {
      return _react2.default.createElement(_DrawerSidebar2.default, {
        screenProps: _this.props.screenProps,
        navigation: _this._screenNavigationProp,
        router: _this.props.router,
        contentComponent: _this.props.contentComponent,
        contentOptions: _this.props.contentOptions,
        style: _this.props.style,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 119
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._updateScreenNavigation(this.props.navigation);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigation.state.index !== nextProps.navigation.state.index) {
        var _nextProps$navigation = nextProps.navigation.state,
            routes = _nextProps$navigation.routes,
            _index = _nextProps$navigation.index;

        if (routes[_index].routeName === 'DrawerOpen') {
          this._drawer.openDrawer();
        } else {
          this._drawer.closeDrawer();
        }
      }
      this._updateScreenNavigation(nextProps.navigation);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var DrawerScreen = this.props.router.getComponentForRouteName('DrawerClose');
      return _react2.default.createElement(
        _reactNativeDrawerLayoutPolyfill2.default,
        {
          ref: function ref(c) {
            _this2._drawer = c;
          },
          drawerWidth: this.props.drawerWidth,
          onDrawerOpen: this._handleDrawerOpen,
          onDrawerClose: this._handleDrawerClose,
          renderNavigationView: this._renderNavigationView,
          drawerPosition: this.props.drawerPosition === 'right' ? _reactNativeDrawerLayoutPolyfill2.default.positions.Right : _reactNativeDrawerLayoutPolyfill2.default.positions.Left,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 136
          }
        },
        _react2.default.createElement(DrawerScreen, {
          screenProps: this.props.screenProps,
          navigation: this._screenNavigationProp,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 150
          }
        })
      );
    }
  }]);
  return DrawerView;
}(_react.PureComponent);

exports.default = DrawerView;
}, 547, null, "react-navigation/src/views/Drawer/DrawerView.js");
__d(/* react-native-drawer-layout-polyfill/dist/index.android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", { value: true });var _reactNative = require(46            );exports.default = _reactNative.DrawerLayoutAndroid; // 46 = react-native
}, 548, null, "react-native-drawer-layout-polyfill/dist/index.android.js");
__d(/* react-navigation/src/views/Drawer/DrawerSidebar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\Drawer\\DrawerSidebar.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _withCachedChildNavigation = require(541                              ); // 541 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var DrawerSidebar = function (_PureComponent) {
  babelHelpers.inherits(DrawerSidebar, _PureComponent);

  function DrawerSidebar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerSidebar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerSidebar.__proto__ || Object.getPrototypeOf(DrawerSidebar)).call.apply(_ref, [this].concat(args))), _this), _this._getScreenOptions = function (routeKey) {
      var DrawerScreen = _this.props.router.getComponentForRouteName('DrawerClose');
      return DrawerScreen.router.getScreenOptions(_this.props.childNavigationProps[routeKey], _this.props.screenProps);
    }, _this._getLabel = function (_ref2) {
      var focused = _ref2.focused,
          tintColor = _ref2.tintColor,
          route = _ref2.route;

      var _this$_getScreenOptio = _this._getScreenOptions(route.key),
          drawerLabel = _this$_getScreenOptio.drawerLabel,
          title = _this$_getScreenOptio.title;

      if (drawerLabel) {
        return typeof drawerLabel === 'function' ? drawerLabel({ tintColor: tintColor, focused: focused }) : drawerLabel;
      }

      if (typeof title === 'string') {
        return title;
      }

      return route.routeName;
    }, _this._renderIcon = function (_ref3) {
      var focused = _ref3.focused,
          tintColor = _ref3.tintColor,
          route = _ref3.route;

      var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),
          drawerIcon = _this$_getScreenOptio2.drawerIcon;

      if (drawerIcon) {
        return typeof drawerIcon === 'function' ? drawerIcon({ tintColor: tintColor, focused: focused }) : drawerIcon;
      }
      return null;
    }, _this._onItemPress = function (_ref4) {
      var route = _ref4.route;

      _this.props.navigation.navigate('DrawerClose');
      _this.props.navigation.navigate(route.routeName);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerSidebar, [{
    key: 'render',
    value: function render() {
      var ContentComponent = this.props.contentComponent;
      var state = this.props.navigation.state;

      return _react2.default.createElement(
        _reactNative.View,
        { style: [styles.container, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 87
          }
        },
        _react2.default.createElement(ContentComponent, babelHelpers.extends({}, this.props.contentOptions, {
          navigation: this.props.navigation,
          items: state.routes,
          activeItemKey: state.routes[state.index] && state.routes[state.index].key,
          screenProps: this.props.screenProps,
          getLabel: this._getLabel,
          renderIcon: this._renderIcon,
          onItemPress: this._onItemPress,
          router: this.props.router,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        }))
      );
    }
  }]);
  return DrawerSidebar;
}(_react.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerSidebar);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff'
  }
});
}, 549, null, "react-navigation/src/views/Drawer/DrawerSidebar.js");
__d(/* react-navigation/src/views/Drawer/DrawerNavigatorItems.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\Drawer\\DrawerNavigatorItems.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _TouchableItem = require(507               ); // 507 = ../TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var DrawerNavigatorItems = function DrawerNavigatorItems(_ref) {
  var _ref$navigation = _ref.navigation,
      state = _ref$navigation.state,
      navigate = _ref$navigation.navigate,
      items = _ref.items,
      activeItemKey = _ref.activeItemKey,
      activeTintColor = _ref.activeTintColor,
      activeBackgroundColor = _ref.activeBackgroundColor,
      inactiveTintColor = _ref.inactiveTintColor,
      inactiveBackgroundColor = _ref.inactiveBackgroundColor,
      getLabel = _ref.getLabel,
      renderIcon = _ref.renderIcon,
      onItemPress = _ref.onItemPress,
      style = _ref.style,
      labelStyle = _ref.labelStyle;
  return _react2.default.createElement(
    _reactNative.View,
    { style: [styles.container, style], __source: {
        fileName: _jsxFileName,
        lineNumber: 49
      }
    },
    items.map(function (route, index) {
      var focused = activeItemKey === route.key;
      var color = focused ? activeTintColor : inactiveTintColor;
      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;
      var scene = { route: route, index: index, focused: focused, tintColor: color };
      var icon = renderIcon(scene);
      var label = getLabel(scene);
      return _react2.default.createElement(
        _TouchableItem2.default,
        {
          key: route.key,
          onPress: function onPress() {
            onItemPress({ route: route, focused: focused });
          },
          delayPressIn: 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 60
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: [styles.item, { backgroundColor: backgroundColor }], __source: {
              fileName: _jsxFileName,
              lineNumber: 67
            }
          },
          icon ? _react2.default.createElement(
            _reactNative.View,
            {
              style: [styles.icon, focused ? null : styles.inactiveIcon],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 69
              }
            },
            icon
          ) : null,
          typeof label === 'string' ? _react2.default.createElement(
            _reactNative.Text,
            { style: [styles.label, { color: color }, labelStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 76
              }
            },
            label
          ) : label
        )
      );
    })
  );
};

DrawerNavigatorItems.defaultProps = {
  activeTintColor: '#2196f3',
  activeBackgroundColor: 'rgba(0, 0, 0, .04)',
  inactiveTintColor: 'rgba(0, 0, 0, .87)',
  inactiveBackgroundColor: 'transparent'
};

var styles = _reactNative.StyleSheet.create({
  container: {
    marginTop: _reactNative.Platform.OS === 'ios' ? 20 : 0,
    paddingVertical: 4
  },
  item: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  icon: {
    marginHorizontal: 16,
    width: 24,
    alignItems: 'center'
  },
  inactiveIcon: {
    opacity: 0.62
  },
  label: {
    margin: 16,
    fontWeight: 'bold'
  }
});

exports.default = DrawerNavigatorItems;
}, 550, null, "react-navigation/src/views/Drawer/DrawerNavigatorItems.js");
__d(/* react-navigation/src/views/withNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-navigation\\src\\views\\withNavigation.js';
exports.default = withNavigation;

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require(552                      ); // 552 = hoist-non-react-statics

var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

function withNavigation(Component) {
  var componentWithNavigation = function componentWithNavigation(props, _ref) {
    var navigation = _ref.navigation;
    return _react2.default.createElement(Component, babelHelpers.extends({}, props, { navigation: navigation, __source: {
        fileName: _jsxFileName,
        lineNumber: 21
      }
    }));
  };

  componentWithNavigation.displayName = 'withNavigation(' + (Component.displayName || Component.name) + ')';

  componentWithNavigation.contextTypes = {
    navigation: _propTypes2.default.object.isRequired
  };

  return (0, _hoistNonReactStatics2.default)(componentWithNavigation, Component);
}
}, 551, null, "react-navigation/src/views/withNavigation.js");
__d(/* hoist-non-react-statics/index.js */function(global, require, module, exports) {
'use strict';

var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    arguments: true,
    arity: true
};

var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
    if (typeof sourceComponent !== 'string') {
        var keys = Object.getOwnPropertyNames(sourceComponent);

        if (isGetOwnPropertySymbolsAvailable) {
            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
                try {
                    targetComponent[keys[i]] = sourceComponent[keys[i]];
                } catch (error) {}
            }
        }
    }

    return targetComponent;
};
}, 552, null, "hoist-non-react-statics/index.js");
__d(/* Student_Counter/src/screens/HomeScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\HomeScreen.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNativeElements = require(554                    ); // 554 = react-native-elements

var _reactNative = require(46            ); // 46 = react-native

var HomeScreen = function (_React$Component) {
  babelHelpers.inherits(HomeScreen, _React$Component);

  function HomeScreen() {
    babelHelpers.classCallCheck(this, HomeScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (HomeScreen.__proto__ || Object.getPrototypeOf(HomeScreen)).call(this));

    _this.state = {
      appFunc: [{
        id: 1,
        title: 'Create Student',
        icon: 'school'
      }, {
        id: 2,
        title: 'Create Class',
        icon: 'Class'
      }, {
        id: 3,
        title: 'Create Lesson',
        icon: 'alarm'
      }]
    };
    return _this;
  }

  babelHelpers.createClass(HomeScreen, [{
    key: 'render',
    value: function render() {
      var functButtons = this.state.appFunc.map(function (obj) {
        return _react2.default.createElement(_reactNativeElements.Button, { key: obj.id, borderRadius: 5, raised: true, large: true, iconRight: true, containerViewStyle: styles.buttonContainer, icon: {
            name: obj.icon
          }, title: obj.title, backgroundColor: 'orange', __source: {
            fileName: _jsxFileName,
            lineNumber: 29
          }
        });
      });

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.viewStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 35
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.toolbar, __source: {
              fileName: _jsxFileName,
              lineNumber: 36
            }
          },
          _react2.default.createElement(_reactNativeElements.Icon, { name: 'menu', type: 'simple-line-icon', __source: {
              fileName: _jsxFileName,
              lineNumber: 37
            }
          }),
          _react2.default.createElement(
            _reactNative.Text,
            { style: styles.toolText, __source: {
                fileName: _jsxFileName,
                lineNumber: 38
              }
            },
            'Student Counter'
          ),
          _react2.default.createElement(_reactNativeElements.Icon, { name: 'search', tye: 'evilicon', __source: {
              fileName: _jsxFileName,
              lineNumber: 39
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          },
          functButtons
        )
      );
    }
  }]);
  return HomeScreen;
}(_react2.default.Component);

exports.default = HomeScreen;


var width = _reactNative.Dimensions.get('window').width;

var styles = {
  buttonContainer: {
    margin: 10,
    width: width - 30
  },
  viewStyle: {
    flex: 1,
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center'
  },
  toolbar: {
    flex: 0.1,
    flexDirection: 'row',
    justifyContent: 'space-between',
    width: width,
    paddingLeft: 10,
    paddingRight: 10,
    marginBottom: 10,
    backgroundColor: 'orange'
  },
  toolText: {
    color: 'white',
    marginTop: 11,
    fontWeight: 'bold',
    fontSize: 20
  }
};
}, 553, null, "Student_Counter/src/screens/HomeScreen.js");
__d(/* react-native-elements/src/index.js */function(global, require, module, exports) {var _badge = require(555            ); // 555 = ./badge/badge

var _badge2 = babelHelpers.interopRequireDefault(_badge);

var _Button = require(557               ); // 557 = ./buttons/Button

var _Button2 = babelHelpers.interopRequireDefault(_Button);

var _ButtonGroup = require(745                    ); // 745 = ./buttons/ButtonGroup

var _ButtonGroup2 = babelHelpers.interopRequireDefault(_ButtonGroup);

var _Card = require(746                ); // 746 = ./containers/Card

var _Card2 = babelHelpers.interopRequireDefault(_Card);

var _FormInput = require(748               ); // 748 = ./form/FormInput

var _FormInput2 = babelHelpers.interopRequireDefault(_FormInput);

var _FormLabel = require(749               ); // 749 = ./form/FormLabel

var _FormLabel2 = babelHelpers.interopRequireDefault(_FormLabel);

var _FormValidationMessage = require(750                           ); // 750 = ./form/FormValidationMessage

var _FormValidationMessage2 = babelHelpers.interopRequireDefault(_FormValidationMessage);

var _List = require(751          ); // 751 = ./list/List

var _List2 = babelHelpers.interopRequireDefault(_List);

var _ListItem = require(752              ); // 752 = ./list/ListItem

var _ListItem2 = babelHelpers.interopRequireDefault(_ListItem);

var _PricingCard = require(754                    ); // 754 = ./pricing/PricingCard

var _PricingCard2 = babelHelpers.interopRequireDefault(_PricingCard);

var _SocialIcon = require(755                  ); // 755 = ./social/SocialIcon

var _SocialIcon2 = babelHelpers.interopRequireDefault(_SocialIcon);

var _Text = require(558          ); // 558 = ./text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _Divider = require(747                ); // 747 = ./divider/Divider

var _Divider2 = babelHelpers.interopRequireDefault(_Divider);

var _SideMenu = require(756                  ); // 756 = ./sidemenu/SideMenu

var _SideMenu2 = babelHelpers.interopRequireDefault(_SideMenu);

var _CheckBox = require(759                  ); // 759 = ./checkbox/CheckBox

var _CheckBox2 = babelHelpers.interopRequireDefault(_CheckBox);

var _Search = require(760             ); // 760 = ./input/Search

var _Search2 = babelHelpers.interopRequireDefault(_Search);

var _Icon = require(753           ); // 753 = ./icons/Icon

var _Icon2 = babelHelpers.interopRequireDefault(_Icon);

var _Tabs = require(761          ); // 761 = ./tabs/Tabs

var _Tabs2 = babelHelpers.interopRequireDefault(_Tabs);

var _Tab = require(770         ); // 770 = ./tabs/Tab

var _Tab2 = babelHelpers.interopRequireDefault(_Tab);

var _colors = require(556              ); // 556 = ./config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _getIconType = require(726                    ); // 726 = ./helpers/getIconType

var _getIconType2 = babelHelpers.interopRequireDefault(_getIconType);

var _normalizeText = require(560                      ); // 560 = ./helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var _Grid = require(771          ); // 771 = ./grid/Grid

var _Grid2 = babelHelpers.interopRequireDefault(_Grid);

var _Row = require(772         ); // 772 = ./grid/Row

var _Row2 = babelHelpers.interopRequireDefault(_Row);

var _Col = require(773         ); // 773 = ./grid/Col

var _Col2 = babelHelpers.interopRequireDefault(_Col);

var _Tile = require(774          ); // 774 = ./tile/Tile

var _Tile2 = babelHelpers.interopRequireDefault(_Tile);

var _Slider = require(776              ); // 776 = ./slider/Slider

var _Slider2 = babelHelpers.interopRequireDefault(_Slider);

var _Avatar = require(777              ); // 777 = ./avatar/Avatar

var _Avatar2 = babelHelpers.interopRequireDefault(_Avatar);

var _Rating = require(778              ); // 778 = ./rating/Rating

var _Rating2 = babelHelpers.interopRequireDefault(_Rating);

var _SwipeDeck = require(784                    ); // 784 = ./swipedeck/SwipeDeck

var _SwipeDeck2 = babelHelpers.interopRequireDefault(_SwipeDeck);

var Elements = {
  Badge: _badge2.default,
  Button: _Button2.default,
  ButtonGroup: _ButtonGroup2.default,
  Card: _Card2.default,
  FormInput: _FormInput2.default,
  FormLabel: _FormLabel2.default,
  FormValidationMessage: _FormValidationMessage2.default,
  List: _List2.default,
  ListItem: _ListItem2.default,
  PricingCard: _PricingCard2.default,
  SocialIcon: _SocialIcon2.default,
  Text: _Text2.default,
  Divider: _Divider2.default,
  SideMenu: _SideMenu2.default,
  CheckBox: _CheckBox2.default,
  SearchBar: _Search2.default,
  Icon: _Icon2.default,
  Tabs: _Tabs2.default,
  Tab: _Tab2.default,
  colors: _colors2.default,
  getIconType: _getIconType2.default,
  normalize: _normalizeText2.default,
  Grid: _Grid2.default,
  Row: _Row2.default,
  Col: _Col2.default,
  Tile: _Tile2.default,
  Slider: _Slider2.default,
  Avatar: _Avatar2.default,
  Rating: _Rating2.default,
  SwipeDeck: _SwipeDeck2.default
};

module.exports = Elements;
}, 554, null, "react-native-elements/src/index.js");
__d(/* react-native-elements/src/badge/badge.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\badge\\badge.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var Badge = function Badge(props) {
  var containerStyle = props.containerStyle,
      textStyle = props.textStyle,
      wrapperStyle = props.wrapperStyle,
      onPress = props.onPress,
      component = props.component,
      value = props.value,
      children = props.children,
      element = props.element,
      attributes = babelHelpers.objectWithoutProperties(props, ['containerStyle', 'textStyle', 'wrapperStyle', 'onPress', 'component', 'value', 'children', 'element']);


  if (element) return element;

  var Component = _reactNative.View;
  var childElement = _react2.default.createElement(
    _reactNative.Text,
    { style: [styles.text, textStyle && textStyle], __source: {
        fileName: _jsxFileName,
        lineNumber: 23
      }
    },
    value
  );

  if (children) {
    childElement = children;
  }

  if (children && value) {
    console.error('Badge can only contain either child element or value');
  }

  if (!component && onPress) {
    Component = _reactNative.TouchableOpacity;
  }

  if (_react2.default.isValidElement(component)) {
    Component = component;
  }

  return _react2.default.createElement(
    _reactNative.View,
    { style: [styles.container && wrapperStyle && wrapperStyle], __source: {
        fileName: _jsxFileName,
        lineNumber: 43
      }
    },
    _react2.default.createElement(
      Component,
      babelHelpers.extends({
        style: [styles.badge, containerStyle && containerStyle],
        onPress: onPress
      }, attributes, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44
        }
      }),
      childElement
    )
  );
};

Badge.propTypes = {
  containerStyle: _reactNative.View.propTypes.style,
  wrapperStyle: _reactNative.View.propTypes.style,
  textStyle: _reactNative.Text.propTypes.style,
  children: _propTypes2.default.element,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  onPress: _propTypes2.default.func,
  component: _propTypes2.default.func,
  element: _propTypes2.default.element
};

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row'
  },
  badge: {
    padding: 12,
    paddingTop: 3,
    paddingBottom: 3,
    backgroundColor: _colors2.default.grey1,
    borderRadius: 20,
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    fontSize: 14,
    color: 'white'
  }
});

exports.default = Badge;
}, 555, null, "react-native-elements/src/badge/badge.js");
__d(/* react-native-elements/src/config/colors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  primary: '#9E9E9E',
  primary1: '#4d86f7',
  primary2: '#6296f9',
  secondary: '#8F0CE8',
  secondary2: '#00B233',
  secondary3: '#00FF48',
  grey0: '#393e42',
  grey1: '#43484d',
  grey2: '#5e6977',
  grey3: '#86939e',
  grey4: '#bdc6cf',
  grey5: '#e1e8ee',
  dkGreyBg: '#232323',
  greyOutline: '#cbd2d9',
  searchBg: '#303337',
  disabled: '#dadee0',
  white: '#ffffff',
  error: '#ff190c'
};
}, 556, null, "react-native-elements/src/config/colors.js");
__d(/* react-native-elements/src/buttons/Button.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\buttons\\Button.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _MaterialIcons = require(561                                      ); // 561 = react-native-vector-icons/MaterialIcons

var _MaterialIcons2 = babelHelpers.interopRequireDefault(_MaterialIcons);

var _getIconType = require(726                     ); // 726 = ../helpers/getIconType

var _getIconType2 = babelHelpers.interopRequireDefault(_getIconType);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var log = function log() {
  console.log('please attach method to this component');
};

var Button = function Button(props) {
  var disabled = props.disabled,
      loading = props.loading,
      loadingRight = props.loadingRight,
      activityIndicatorStyle = props.activityIndicatorStyle,
      buttonStyle = props.buttonStyle,
      borderRadius = props.borderRadius,
      title = props.title,
      onPress = props.onPress,
      icon = props.icon,
      iconComponent = props.iconComponent,
      secondary = props.secondary,
      secondary2 = props.secondary2,
      secondary3 = props.secondary3,
      primary1 = props.primary1,
      primary2 = props.primary2,
      backgroundColor = props.backgroundColor,
      color = props.color,
      fontSize = props.fontSize,
      underlayColor = props.underlayColor,
      raised = props.raised,
      textStyle = props.textStyle,
      large = props.large,
      iconRight = props.iconRight,
      fontWeight = props.fontWeight,
      disabledStyle = props.disabledStyle,
      fontFamily = props.fontFamily,
      containerViewStyle = props.containerViewStyle,
      attributes = babelHelpers.objectWithoutProperties(props, ['disabled', 'loading', 'loadingRight', 'activityIndicatorStyle', 'buttonStyle', 'borderRadius', 'title', 'onPress', 'icon', 'iconComponent', 'secondary', 'secondary2', 'secondary3', 'primary1', 'primary2', 'backgroundColor', 'color', 'fontSize', 'underlayColor', 'raised', 'textStyle', 'large', 'iconRight', 'fontWeight', 'disabledStyle', 'fontFamily', 'containerViewStyle']);
  var Component = props.Component;


  var iconElement = void 0;
  if (icon) {
    var Icon = void 0;
    if (iconComponent) {
      Icon = iconComponent;
    } else if (!icon.type) {
      Icon = _MaterialIcons2.default;
    } else {
      Icon = (0, _getIconType2.default)(icon.type);
    }
    iconElement = _react2.default.createElement(Icon, babelHelpers.extends({}, icon, {
      color: icon.color || 'white',
      size: icon.size || (large ? 26 : 18),
      style: [iconRight ? styles.iconRight : styles.icon, icon.style && icon.style],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 66
      }
    }));
  }
  var loadingElement = void 0;
  if (loading) {
    loadingElement = _react2.default.createElement(_reactNative.ActivityIndicator, {
      animating: true,
      style: [styles.activityIndicatorStyle, activityIndicatorStyle],
      color: color || 'white',
      size: large && 'large' || 'small',
      __source: {
        fileName: _jsxFileName,
        lineNumber: 80
      }
    });
  }
  if (!Component && _reactNative.Platform.OS === 'ios') {
    Component = _reactNative.TouchableHighlight;
  }
  if (!Component && _reactNative.Platform.OS === 'android') {
    Component = _reactNative.TouchableNativeFeedback;
  }
  if (!Component) {
    Component = _reactNative.TouchableHighlight;
  }

  if (_reactNative.Platform.OS === 'android' && borderRadius && !attributes.background) {
    attributes.background = _reactNative.TouchableNativeFeedback.Ripple('ThemeAttrAndroid', true);
  }

  return _react2.default.createElement(
    _reactNative.View,
    {
      style: [styles.container, raised && styles.raised, containerViewStyle],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 106
      }
    },
    _react2.default.createElement(
      Component,
      babelHelpers.extends({
        underlayColor: underlayColor || 'transparent',
        onPress: onPress || log,
        disabled: disabled || false
      }, attributes, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 109
        }
      }),
      _react2.default.createElement(
        _reactNative.View,
        {
          style: [styles.button, secondary && { backgroundColor: _colors2.default.secondary }, secondary2 && { backgroundColor: _colors2.default.secondary2 }, secondary3 && { backgroundColor: _colors2.default.secondary3 }, primary1 && { backgroundColor: _colors2.default.primary1 }, primary2 && { backgroundColor: _colors2.default.primary2 }, backgroundColor && { backgroundColor: backgroundColor }, borderRadius && { borderRadius: borderRadius }, !large && styles.small, buttonStyle && buttonStyle, disabled && { backgroundColor: _colors2.default.disabled }, disabled && disabledStyle && disabledStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 115
          }
        },
        icon && !iconRight && iconElement,
        loading && !loadingRight && loadingElement,
        _react2.default.createElement(
          _Text2.default,
          {
            style: [styles.text, color && { color: color }, !large && styles.smallFont, fontSize && { fontSize: fontSize }, textStyle && textStyle, fontWeight && { fontWeight: fontWeight }, fontFamily && { fontFamily: fontFamily }],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 133
            }
          },
          title
        ),
        loading && loadingRight && loadingElement,
        icon && iconRight && iconElement
      )
    )
  );
};

Button.propTypes = {
  buttonStyle: _reactNative.View.propTypes.style,
  title: _propTypes2.default.string,
  onPress: _propTypes2.default.any,
  icon: _propTypes2.default.object,
  iconComponent: _propTypes2.default.any,
  secondary: _propTypes2.default.bool,
  secondary2: _propTypes2.default.bool,
  secondary3: _propTypes2.default.bool,
  primary1: _propTypes2.default.bool,
  primary2: _propTypes2.default.bool,
  backgroundColor: _propTypes2.default.string,
  color: _propTypes2.default.string,
  fontSize: _propTypes2.default.any,
  underlayColor: _propTypes2.default.string,
  raised: _propTypes2.default.bool,
  textStyle: _reactNative.Text.propTypes.style,
  disabled: _propTypes2.default.bool,
  loading: _propTypes2.default.bool,
  activityIndicatorStyle: _reactNative.View.propTypes.style,
  loadingRight: _propTypes2.default.bool,
  Component: _propTypes2.default.any,
  borderRadius: _propTypes2.default.number,
  large: _propTypes2.default.bool,
  iconRight: _propTypes2.default.bool,
  fontWeight: _propTypes2.default.string,
  disabledStyle: _reactNative.View.propTypes.style,
  fontFamily: _propTypes2.default.string
};

var styles = _reactNative.StyleSheet.create({
  container: {
    marginLeft: 15,
    marginRight: 15
  },
  button: {
    padding: 19,
    backgroundColor: _colors2.default.primary,
    justifyContent: 'center',
    alignItems: 'center',
    flexDirection: 'row'
  },
  text: {
    color: 'white',
    fontSize: (0, _normalizeText2.default)(16)
  },
  icon: {
    marginRight: 10
  },
  iconRight: {
    marginLeft: 10
  },
  small: {
    padding: 12
  },
  smallFont: {
    fontSize: (0, _normalizeText2.default)(14)
  },
  activityIndicatorStyle: {
    marginHorizontal: 10,
    height: 0
  },
  raised: babelHelpers.extends({}, _reactNative.Platform.select({
    ios: {
      shadowColor: 'rgba(0,0,0, .4)',
      shadowOffset: { height: 1, width: 1 },
      shadowOpacity: 1,
      shadowRadius: 1
    },
    android: {
      elevation: 2
    }
  }))
});

exports.default = Button;
}, 557, null, "react-native-elements/src/buttons/Button.js");
__d(/* react-native-elements/src/text/Text.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\text\\Text.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _fonts = require(559              ); // 559 = ../config/fonts

var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var styles = _reactNative.StyleSheet.create({
  text: babelHelpers.extends({}, _reactNative.Platform.select({
    android: babelHelpers.extends({}, _fonts2.default.android.regular)
  })),
  bold: babelHelpers.extends({}, _reactNative.Platform.select({
    android: babelHelpers.extends({}, _fonts2.default.android.bold)
  }))
});

var TextElement = function TextElement(props) {
  var style = props.style,
      children = props.children,
      h1 = props.h1,
      h2 = props.h2,
      h3 = props.h3,
      h4 = props.h4,
      fontFamily = props.fontFamily,
      rest = babelHelpers.objectWithoutProperties(props, ['style', 'children', 'h1', 'h2', 'h3', 'h4', 'fontFamily']);


  return _react2.default.createElement(
    _reactNative.Text,
    babelHelpers.extends({
      style: [styles.text, h1 && { fontSize: (0, _normalizeText2.default)(40) }, h2 && { fontSize: (0, _normalizeText2.default)(34) }, h3 && { fontSize: (0, _normalizeText2.default)(28) }, h4 && { fontSize: (0, _normalizeText2.default)(22) }, h1 && styles.bold, h2 && styles.bold, h3 && styles.bold, h4 && styles.bold, fontFamily && { fontFamily: fontFamily }, style && style]
    }, rest, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 28
      }
    }),
    children
  );
};

TextElement.propTypes = {
  style: _propTypes2.default.any,
  h1: _propTypes2.default.bool,
  h2: _propTypes2.default.bool,
  h3: _propTypes2.default.bool,
  h4: _propTypes2.default.bool,
  fontFamily: _propTypes2.default.string,
  children: _propTypes2.default.any
};

exports.default = TextElement;
}, 558, null, "react-native-elements/src/text/Text.js");
__d(/* react-native-elements/src/config/fonts.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  ios: {},
  android: {
    regular: {
      fontFamily: 'sans-serif'
    },
    light: {
      fontFamily: 'sans-serif-light'
    },
    condensed: {
      fontFamily: 'sans-serif-condensed'
    },
    condensed_light: {
      fontFamily: 'sans-serif-condensed',
      fontWeight: 'light'
    },
    black: {
      fontFamily: 'sans-serif',
      fontWeight: 'bold'
    },
    thin: {
      fontFamily: 'sans-serif-thin'
    },
    medium: {
      fontFamily: 'sans-serif-medium'
    },
    bold: {
      fontFamily: 'sans-serif',
      fontWeight: 'bold'
    }
  }
};
}, 559, null, "react-native-elements/src/config/fonts.js");
__d(/* react-native-elements/src/helpers/normalizeText.js */function(global, require, module, exports) {

var React = require(46            );var PixelRatio = React.PixelRatio, // 46 = react-native
    Dimensions = React.Dimensions;


var pixelRatio = PixelRatio.get();
var deviceHeight = Dimensions.get('window').height;
var deviceWidth = Dimensions.get('window').width;

var normalize = function normalize(size) {
  if (pixelRatio === 2) {
    if (deviceWidth < 360) {
      return size * 0.95;
    }

    if (deviceHeight < 667) {
      return size;
    } else if (deviceHeight >= 667 && deviceHeight <= 735) {
      return size * 1.15;
    }

    return size * 1.25;
  }
  if (pixelRatio === 3) {
    if (deviceWidth <= 360) {
      return size;
    }

    if (deviceHeight < 667) {
      return size * 1.15;
    }
    if (deviceHeight >= 667 && deviceHeight <= 735) {
      return size * 1.2;
    }

    return size * 1.27;
  }
  if (pixelRatio === 3.5) {
    if (deviceWidth <= 360) {
      return size;
    }
    if (deviceHeight < 667) {
      return size * 1.20;
    }
    if (deviceHeight >= 667 && deviceHeight <= 735) {
      return size * 1.25;
    }

    return size * 1.40;
  }

  return size;
};

module.exports = normalize;
}, 560, null, "react-native-elements/src/helpers/normalizeText.js");
__d(/* react-native-vector-icons/MaterialIcons.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _MaterialIcons = require(725                             ); // 725 = ./glyphmaps/MaterialIcons.json

var _MaterialIcons2 = babelHelpers.interopRequireDefault(_MaterialIcons);

var iconSet = (0, _createIconSet2.default)(_MaterialIcons2.default, 'Material Icons', 'MaterialIcons.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 561, null, "react-native-vector-icons/MaterialIcons.js");
__d(/* react-native-vector-icons/lib/create-icon-set.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-vector-icons\\lib\\create-icon-set.js';
exports.default = createIconSet;

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(563             ); // 563 = ./react-native

var _iconButton = require(564            ); // 564 = ./icon-button

var _iconButton2 = babelHelpers.interopRequireDefault(_iconButton);

var _tabBarItemIos = require(712                 ); // 712 = ./tab-bar-item-ios

var _tabBarItemIos2 = babelHelpers.interopRequireDefault(_tabBarItemIos);

var _toolbarAndroid = require(724                ); // 724 = ./toolbar-android

var _toolbarAndroid2 = babelHelpers.interopRequireDefault(_toolbarAndroid);

var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;

var DEFAULT_ICON_SIZE = 12;
var DEFAULT_ICON_COLOR = 'black';

function createIconSet(glyphMap, fontFamily, fontFile) {
  var fontReference = fontFamily;

  if (_reactNative.Platform.OS === 'android' && fontFile) {
    fontReference = fontFile.replace(/\.(otf|ttf)$/, '');
  }

  if (_reactNative.Platform.OS === 'windows' && fontFile) {
    fontReference = 'Assets/' + fontFile + '#' + fontFamily;
  }

  var IconNamePropType = _propTypes2.default.oneOf(Object.keys(glyphMap));

  var Icon = function (_Component) {
    babelHelpers.inherits(Icon, _Component);

    function Icon() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, Icon);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Icon.__proto__ || Object.getPrototypeOf(Icon)).call.apply(_ref, [this].concat(args))), _this), _this.root = null, _this.handleRef = function (ref) {
        _this.root = ref;
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(Icon, [{
      key: 'setNativeProps',
      value: function setNativeProps(nativeProps) {
        if (this.root) {
          this.root.setNativeProps(nativeProps);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            name = _props.name,
            size = _props.size,
            color = _props.color,
            style = _props.style,
            props = babelHelpers.objectWithoutProperties(_props, ['name', 'size', 'color', 'style']);


        var glyph = name ? glyphMap[name] || '?' : '';
        if (typeof glyph === 'number') {
          glyph = String.fromCharCode(glyph);
        }

        var styleDefaults = {
          fontSize: size,
          color: color
        };

        var styleOverrides = {
          fontFamily: fontReference,
          fontWeight: 'normal',
          fontStyle: 'normal'
        };

        props.style = [styleDefaults, style, styleOverrides];
        props.ref = this.handleRef;

        return _react2.default.createElement(
          _reactNative.Text,
          babelHelpers.extends({}, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 81
            }
          }),
          glyph,
          this.props.children
        );
      }
    }]);
    return Icon;
  }(_react.Component);

  Icon.propTypes = {
    name: IconNamePropType,
    size: _propTypes2.default.number,
    color: _propTypes2.default.string,
    children: _propTypes2.default.node,
    style: _propTypes2.default.any };
  Icon.defaultProps = {
    size: DEFAULT_ICON_SIZE,
    allowFontScaling: false
  };


  var imageSourceCache = {};

  function ensureNativeModuleAvailable() {
    if (!NativeIconAPI) {
      if (_reactNative.Platform.OS === 'android') {
        throw new Error('RNVectorIconsModule not available, did you properly integrate the module? Try running `react-native link react-native-vector-icons` and recompiling.');
      }
      throw new Error('RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a? Try running `react-native link react-native-vector-icons` and recompiling.');
    }
  }

  function getImageSource(name) {
    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;
    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;

    ensureNativeModuleAvailable();

    var glyph = glyphMap[name] || '?';
    if (typeof glyph === 'number') {
      glyph = String.fromCharCode(glyph);
    }

    var processedColor = (0, _reactNative.processColor)(color);
    var cacheKey = glyph + ':' + size + ':' + processedColor;
    var scale = _reactNative.PixelRatio.get();

    return new Promise(function (resolve, reject) {
      var cached = imageSourceCache[cacheKey];
      if (typeof cached !== 'undefined') {
        if (!cached || cached instanceof Error) {
          reject(cached);
        } else {
          resolve({ uri: cached, scale: scale });
        }
      } else {
        NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor, function (err, image) {
          var error = typeof err === 'string' ? new Error(err) : err;
          imageSourceCache[cacheKey] = image || error || false;
          if (!error && image) {
            resolve({ uri: image, scale: scale });
          } else {
            reject(error);
          }
        });
      }
    });
  }

  function loadFont() {
    var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fontFile;

    if (_reactNative.Platform.OS === 'ios') {
      ensureNativeModuleAvailable();
      if (!file) {
        return Promise.reject(new Error('Unable to load font, because no file was specified. '));
      }
      return NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, babelHelpers.toConsumableArray(file.split('.')));
    }
    return Promise.resolve();
  }

  Icon.Button = (0, _iconButton2.default)(Icon);
  Icon.TabBarItem = (0, _tabBarItemIos2.default)(IconNamePropType, getImageSource);
  Icon.TabBarItemIOS = Icon.TabBarItem;
  Icon.ToolbarAndroid = (0, _toolbarAndroid2.default)(IconNamePropType, getImageSource);
  Icon.getImageSource = getImageSource;
  Icon.loadFont = loadFont;

  return Icon;
}
}, 562, null, "react-native-vector-icons/lib/create-icon-set.js");
__d(/* react-native-vector-icons/lib/react-native.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

Object.keys(_reactNative).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _reactNative[key];
    }
  });
});
}, 563, null, "react-native-vector-icons/lib/react-native.js");
__d(/* react-native-vector-icons/lib/icon-button.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-vector-icons\\lib\\icon-button.js';
exports.default = createIconButtonComponent;

var _isString = require(565              ); // 565 = lodash/isString

var _isString2 = babelHelpers.interopRequireDefault(_isString);

var _omit = require(574          ); // 574 = lodash/omit

var _omit2 = babelHelpers.interopRequireDefault(_omit);

var _pick = require(705          ); // 705 = lodash/pick

var _pick2 = babelHelpers.interopRequireDefault(_pick);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(563             ); // 563 = ./react-native

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    justifyContent: 'flex-start',
    alignItems: 'center',
    padding: 8
  },
  touchable: {
    overflow: 'hidden'
  },
  icon: {
    marginRight: 10
  },
  text: {
    fontWeight: '600',
    backgroundColor: 'transparent'
  }
});

var IOS7_BLUE = '#007AFF';

function createIconButtonComponent(Icon) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    babelHelpers.inherits(IconButton, _Component);

    function IconButton() {
      babelHelpers.classCallCheck(this, IconButton);
      return babelHelpers.possibleConstructorReturn(this, (IconButton.__proto__ || Object.getPrototypeOf(IconButton)).apply(this, arguments));
    }

    babelHelpers.createClass(IconButton, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            style = _props.style,
            iconStyle = _props.iconStyle,
            children = _props.children,
            restProps = babelHelpers.objectWithoutProperties(_props, ['style', 'iconStyle', 'children']);


        var iconProps = (0, _pick2.default)(restProps, Object.keys(_reactNative.Text.propTypes), 'style', 'name', 'size', 'color');
        var touchableProps = (0, _pick2.default)(restProps, Object.keys(_reactNative.TouchableHighlight.propTypes));
        var props = (0, _omit2.default)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;

        var colorStyle = (0, _pick2.default)(this.props, 'color');
        var blockStyle = (0, _pick2.default)(this.props, 'backgroundColor', 'borderRadius');

        return _react2.default.createElement(
          _reactNative.TouchableHighlight,
          babelHelpers.extends({
            style: [styles.touchable, blockStyle]
          }, touchableProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            babelHelpers.extends({ style: [styles.container, blockStyle, style] }, props, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 81
              }
            }),
            _react2.default.createElement(Icon, babelHelpers.extends({}, iconProps, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 82
              }
            })),
            (0, _isString2.default)(children) ? _react2.default.createElement(
              _reactNative.Text,
              { style: [styles.text, colorStyle], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 84
                }
              },
              children
            ) : children
          )
        );
      }
    }]);
    return IconButton;
  }(_react.Component), _class.propTypes = {
    backgroundColor: _propTypes2.default.string,
    borderRadius: _propTypes2.default.number,
    color: _propTypes2.default.string,
    size: _propTypes2.default.number,
    iconStyle: _propTypes2.default.any,
    style: _propTypes2.default.any,
    children: _propTypes2.default.node
  }, _class.defaultProps = {
    backgroundColor: IOS7_BLUE,
    borderRadius: 5,
    color: 'white',
    size: 20
  }, _temp;
}
}, 564, null, "react-native-vector-icons/lib/icon-button.js");
__d(/* lodash/isString.js */function(global, require, module, exports) {var baseGetTag = require(566            ), // 566 = ./_baseGetTag
    isArray = require(572        ), // 572 = ./isArray
    isObjectLike = require(573             ); // 573 = ./isObjectLike

var stringTag = '[object String]';

function isString(value) {
    return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
}

module.exports = isString;
}, 565, null, "lodash/isString.js");
__d(/* lodash/_baseGetTag.js */function(global, require, module, exports) {var Symbol = require(567        ), // 567 = ./_Symbol
    getRawTag = require(570           ), // 570 = ./_getRawTag
    objectToString = require(571                ); // 571 = ./_objectToString

var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function baseGetTag(value) {
    if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;
}, 566, null, "lodash/_baseGetTag.js");
__d(/* lodash/_Symbol.js */function(global, require, module, exports) {var root = require(568      ); // 568 = ./_root

var Symbol = root.Symbol;

module.exports = Symbol;
}, 567, null, "lodash/_Symbol.js");
__d(/* lodash/_root.js */function(global, require, module, exports) {var freeGlobal = require(569            ); // 569 = ./_freeGlobal

var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;
}, 568, null, "lodash/_root.js");
__d(/* lodash/_freeGlobal.js */function(global, require, module, exports) {
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;
}, 569, null, "lodash/_freeGlobal.js");
__d(/* lodash/_getRawTag.js */function(global, require, module, exports) {var Symbol = require(567        ); // 567 = ./_Symbol

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

var nativeObjectToString = objectProto.toString;

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;
}, 570, null, "lodash/_getRawTag.js");
__d(/* lodash/_objectToString.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

var nativeObjectToString = objectProto.toString;

function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;
}, 571, null, "lodash/_objectToString.js");
__d(/* lodash/isArray.js */function(global, require, module, exports) {
var isArray = Array.isArray;

module.exports = isArray;
}, 572, null, "lodash/isArray.js");
__d(/* lodash/isObjectLike.js */function(global, require, module, exports) {
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;
}, 573, null, "lodash/isObjectLike.js");
__d(/* lodash/omit.js */function(global, require, module, exports) {var arrayMap = require(575          ), // 575 = ./_arrayMap
    baseClone = require(576           ), // 576 = ./_baseClone
    baseUnset = require(678           ), // 678 = ./_baseUnset
    castPath = require(679          ), // 679 = ./_castPath
    copyObject = require(620            ), // 620 = ./_copyObject
    customOmitClone = require(692                 ), // 692 = ./_customOmitClone
    flatRest = require(694          ), // 694 = ./_flatRest
    getAllKeysIn = require(655              ); // 655 = ./_getAllKeysIn

var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

var omit = flatRest(function (object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function (path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;
}, 574, null, "lodash/omit.js");
__d(/* lodash/_arrayMap.js */function(global, require, module, exports) {
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;
}, 575, null, "lodash/_arrayMap.js");
__d(/* lodash/_baseClone.js */function(global, require, module, exports) {var Stack = require(577       ), // 577 = ./_Stack
    arrayEach = require(615           ), // 615 = ./_arrayEach
    assignValue = require(616             ), // 616 = ./_assignValue
    baseAssign = require(619            ), // 619 = ./_baseAssign
    baseAssignIn = require(639              ), // 639 = ./_baseAssignIn
    cloneBuffer = require(643             ), // 643 = ./_cloneBuffer
    copyArray = require(644           ), // 644 = ./_copyArray
    copySymbols = require(645             ), // 645 = ./_copySymbols
    copySymbolsIn = require(649               ), // 649 = ./_copySymbolsIn
    getAllKeys = require(653            ), // 653 = ./_getAllKeys
    getAllKeysIn = require(655              ), // 655 = ./_getAllKeysIn
    getTag = require(656        ), // 656 = ./_getTag
    initCloneArray = require(661                ), // 661 = ./_initCloneArray
    initCloneByTag = require(662                ), // 662 = ./_initCloneByTag
    initCloneObject = require(676                 ), // 676 = ./_initCloneObject
    isArray = require(572        ), // 572 = ./isArray
    isBuffer = require(626         ), // 626 = ./isBuffer
    isObject = require(595         ), // 595 = ./isObject
    keys = require(621     ); // 621 = ./keys

var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || isFunc && !object) {
      result = isFlat || isFunc ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }

  stack || (stack = new Stack());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function (subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }

    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;
}, 576, null, "lodash/_baseClone.js");
__d(/* lodash/_Stack.js */function(global, require, module, exports) {var ListCache = require(578           ), // 578 = ./_ListCache
    stackClear = require(586            ), // 586 = ./_stackClear
    stackDelete = require(587             ), // 587 = ./_stackDelete
    stackGet = require(588          ), // 588 = ./_stackGet
    stackHas = require(589          ), // 589 = ./_stackHas
    stackSet = require(590          ); // 590 = ./_stackSet

function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;
}, 577, null, "lodash/_Stack.js");
__d(/* lodash/_ListCache.js */function(global, require, module, exports) {var listCacheClear = require(579                ), // 579 = ./_listCacheClear
    listCacheDelete = require(580                 ), // 580 = ./_listCacheDelete
    listCacheGet = require(583              ), // 583 = ./_listCacheGet
    listCacheHas = require(584              ), // 584 = ./_listCacheHas
    listCacheSet = require(585              ); // 585 = ./_listCacheSet

function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;
}, 578, null, "lodash/_ListCache.js");
__d(/* lodash/_listCacheClear.js */function(global, require, module, exports) {
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;
}, 579, null, "lodash/_listCacheClear.js");
__d(/* lodash/_listCacheDelete.js */function(global, require, module, exports) {var assocIndexOf = require(581              ); // 581 = ./_assocIndexOf

var arrayProto = Array.prototype;

var splice = arrayProto.splice;

function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;
}, 580, null, "lodash/_listCacheDelete.js");
__d(/* lodash/_assocIndexOf.js */function(global, require, module, exports) {var eq = require(582   ); // 582 = ./eq

function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;
}, 581, null, "lodash/_assocIndexOf.js");
__d(/* lodash/eq.js */function(global, require, module, exports) {
function eq(value, other) {
  return value === other || value !== value && other !== other;
}

module.exports = eq;
}, 582, null, "lodash/eq.js");
__d(/* lodash/_listCacheGet.js */function(global, require, module, exports) {var assocIndexOf = require(581              ); // 581 = ./_assocIndexOf

function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;
}, 583, null, "lodash/_listCacheGet.js");
__d(/* lodash/_listCacheHas.js */function(global, require, module, exports) {var assocIndexOf = require(581              ); // 581 = ./_assocIndexOf

function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;
}, 584, null, "lodash/_listCacheHas.js");
__d(/* lodash/_listCacheSet.js */function(global, require, module, exports) {var assocIndexOf = require(581              ); // 581 = ./_assocIndexOf

function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;
}, 585, null, "lodash/_listCacheSet.js");
__d(/* lodash/_stackClear.js */function(global, require, module, exports) {var ListCache = require(578           ); // 578 = ./_ListCache

function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}

module.exports = stackClear;
}, 586, null, "lodash/_stackClear.js");
__d(/* lodash/_stackDelete.js */function(global, require, module, exports) {
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;
}, 587, null, "lodash/_stackDelete.js");
__d(/* lodash/_stackGet.js */function(global, require, module, exports) {
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;
}, 588, null, "lodash/_stackGet.js");
__d(/* lodash/_stackHas.js */function(global, require, module, exports) {
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;
}, 589, null, "lodash/_stackHas.js");
__d(/* lodash/_stackSet.js */function(global, require, module, exports) {var ListCache = require(578           ), // 578 = ./_ListCache
    Map = require(591     ), // 591 = ./_Map
    MapCache = require(600          ); // 600 = ./_MapCache

var LARGE_ARRAY_SIZE = 200;

function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;
}, 590, null, "lodash/_stackSet.js");
__d(/* lodash/_Map.js */function(global, require, module, exports) {var getNative = require(592           ), // 592 = ./_getNative
    root = require(568      ); // 568 = ./_root

var Map = getNative(root, 'Map');

module.exports = Map;
}, 591, null, "lodash/_Map.js");
__d(/* lodash/_getNative.js */function(global, require, module, exports) {var baseIsNative = require(593              ), // 593 = ./_baseIsNative
    getValue = require(599          ); // 599 = ./_getValue

function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;
}, 592, null, "lodash/_getNative.js");
__d(/* lodash/_baseIsNative.js */function(global, require, module, exports) {var isFunction = require(594           ), // 594 = ./isFunction
    isMasked = require(596          ), // 596 = ./_isMasked
    isObject = require(595         ), // 595 = ./isObject
    toSource = require(598          ); // 598 = ./_toSource

var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

var reIsHostCtor = /^\[object .+?Constructor\]$/;

var funcProto = Function.prototype,
    objectProto = Object.prototype;

var funcToString = funcProto.toString;

var hasOwnProperty = objectProto.hasOwnProperty;

var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;
}, 593, null, "lodash/_baseIsNative.js");
__d(/* lodash/isFunction.js */function(global, require, module, exports) {var baseGetTag = require(566            ), // 566 = ./_baseGetTag
    isObject = require(595         ); // 595 = ./isObject

var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

function isFunction(value) {
    if (!isObject(value)) {
        return false;
    }

    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;
}, 594, null, "lodash/isFunction.js");
__d(/* lodash/isObject.js */function(global, require, module, exports) {
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;
}, 595, null, "lodash/isObject.js");
__d(/* lodash/_isMasked.js */function(global, require, module, exports) {var coreJsData = require(597            ); // 597 = ./_coreJsData

var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();

function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}

module.exports = isMasked;
}, 596, null, "lodash/_isMasked.js");
__d(/* lodash/_coreJsData.js */function(global, require, module, exports) {var root = require(568      ); // 568 = ./_root

var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;
}, 597, null, "lodash/_coreJsData.js");
__d(/* lodash/_toSource.js */function(global, require, module, exports) {
var funcProto = Function.prototype;

var funcToString = funcProto.toString;

function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return func + '';
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;
}, 598, null, "lodash/_toSource.js");
__d(/* lodash/_getValue.js */function(global, require, module, exports) {
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;
}, 599, null, "lodash/_getValue.js");
__d(/* lodash/_MapCache.js */function(global, require, module, exports) {var mapCacheClear = require(601               ), // 601 = ./_mapCacheClear
    mapCacheDelete = require(609                ), // 609 = ./_mapCacheDelete
    mapCacheGet = require(612             ), // 612 = ./_mapCacheGet
    mapCacheHas = require(613             ), // 613 = ./_mapCacheHas
    mapCacheSet = require(614             ); // 614 = ./_mapCacheSet

function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;
}, 600, null, "lodash/_MapCache.js");
__d(/* lodash/_mapCacheClear.js */function(global, require, module, exports) {var Hash = require(602      ), // 602 = ./_Hash
    ListCache = require(578           ), // 578 = ./_ListCache
    Map = require(591     ); // 591 = ./_Map

function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash(),
    'map': new (Map || ListCache)(),
    'string': new Hash()
  };
}

module.exports = mapCacheClear;
}, 601, null, "lodash/_mapCacheClear.js");
__d(/* lodash/_Hash.js */function(global, require, module, exports) {var hashClear = require(603           ), // 603 = ./_hashClear
    hashDelete = require(605            ), // 605 = ./_hashDelete
    hashGet = require(606         ), // 606 = ./_hashGet
    hashHas = require(607         ), // 607 = ./_hashHas
    hashSet = require(608         ); // 608 = ./_hashSet

function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;
}, 602, null, "lodash/_Hash.js");
__d(/* lodash/_hashClear.js */function(global, require, module, exports) {var nativeCreate = require(604              ); // 604 = ./_nativeCreate

function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;
}, 603, null, "lodash/_hashClear.js");
__d(/* lodash/_nativeCreate.js */function(global, require, module, exports) {var getNative = require(592           ); // 592 = ./_getNative

var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;
}, 604, null, "lodash/_nativeCreate.js");
__d(/* lodash/_hashDelete.js */function(global, require, module, exports) {
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;
}, 605, null, "lodash/_hashDelete.js");
__d(/* lodash/_hashGet.js */function(global, require, module, exports) {var nativeCreate = require(604              ); // 604 = ./_nativeCreate

var HASH_UNDEFINED = '__lodash_hash_undefined__';

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;
}, 606, null, "lodash/_hashGet.js");
__d(/* lodash/_hashHas.js */function(global, require, module, exports) {var nativeCreate = require(604              ); // 604 = ./_nativeCreate

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

module.exports = hashHas;
}, 607, null, "lodash/_hashHas.js");
__d(/* lodash/_hashSet.js */function(global, require, module, exports) {var nativeCreate = require(604              ); // 604 = ./_nativeCreate

var HASH_UNDEFINED = '__lodash_hash_undefined__';

function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;
}, 608, null, "lodash/_hashSet.js");
__d(/* lodash/_mapCacheDelete.js */function(global, require, module, exports) {var getMapData = require(610            ); // 610 = ./_getMapData

function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;
}, 609, null, "lodash/_mapCacheDelete.js");
__d(/* lodash/_getMapData.js */function(global, require, module, exports) {var isKeyable = require(611           ); // 611 = ./_isKeyable

function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}

module.exports = getMapData;
}, 610, null, "lodash/_getMapData.js");
__d(/* lodash/_isKeyable.js */function(global, require, module, exports) {
function isKeyable(value) {
  var type = typeof value;
  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}

module.exports = isKeyable;
}, 611, null, "lodash/_isKeyable.js");
__d(/* lodash/_mapCacheGet.js */function(global, require, module, exports) {var getMapData = require(610            ); // 610 = ./_getMapData

function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;
}, 612, null, "lodash/_mapCacheGet.js");
__d(/* lodash/_mapCacheHas.js */function(global, require, module, exports) {var getMapData = require(610            ); // 610 = ./_getMapData

function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;
}, 613, null, "lodash/_mapCacheHas.js");
__d(/* lodash/_mapCacheSet.js */function(global, require, module, exports) {var getMapData = require(610            ); // 610 = ./_getMapData

function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;
}, 614, null, "lodash/_mapCacheSet.js");
__d(/* lodash/_arrayEach.js */function(global, require, module, exports) {
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;
}, 615, null, "lodash/_arrayEach.js");
__d(/* lodash/_assignValue.js */function(global, require, module, exports) {var baseAssignValue = require(617                 ), // 617 = ./_baseAssignValue
    eq = require(582   ); // 582 = ./eq

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;
}, 616, null, "lodash/_assignValue.js");
__d(/* lodash/_baseAssignValue.js */function(global, require, module, exports) {var defineProperty = require(618                ); // 618 = ./_defineProperty

function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;
}, 617, null, "lodash/_baseAssignValue.js");
__d(/* lodash/_defineProperty.js */function(global, require, module, exports) {var getNative = require(592           ); // 592 = ./_getNative

var defineProperty = function () {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}();

module.exports = defineProperty;
}, 618, null, "lodash/_defineProperty.js");
__d(/* lodash/_baseAssign.js */function(global, require, module, exports) {var copyObject = require(620            ), // 620 = ./_copyObject
    keys = require(621     ); // 621 = ./keys

function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;
}, 619, null, "lodash/_baseAssign.js");
__d(/* lodash/_copyObject.js */function(global, require, module, exports) {var assignValue = require(616             ), // 616 = ./_assignValue
    baseAssignValue = require(617                 ); // 617 = ./_baseAssignValue

function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;
}, 620, null, "lodash/_copyObject.js");
__d(/* lodash/keys.js */function(global, require, module, exports) {var arrayLikeKeys = require(622               ), // 622 = ./_arrayLikeKeys
    baseKeys = require(634          ), // 634 = ./_baseKeys
    isArrayLike = require(638            ); // 638 = ./isArrayLike

function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;
}, 621, null, "lodash/keys.js");
__d(/* lodash/_arrayLikeKeys.js */function(global, require, module, exports) {var baseTimes = require(623           ), // 623 = ./_baseTimes
    isArguments = require(624            ), // 624 = ./isArguments
    isArray = require(572        ), // 572 = ./isArray
    isBuffer = require(626         ), // 626 = ./isBuffer
    isIndex = require(628         ), // 628 = ./_isIndex
    isTypedArray = require(629             ); // 629 = ./isTypedArray

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;
}, 622, null, "lodash/_arrayLikeKeys.js");
__d(/* lodash/_baseTimes.js */function(global, require, module, exports) {
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;
}, 623, null, "lodash/_baseTimes.js");
__d(/* lodash/isArguments.js */function(global, require, module, exports) {var baseIsArguments = require(625                 ), // 625 = ./_baseIsArguments
    isObjectLike = require(573             ); // 573 = ./isObjectLike

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

var propertyIsEnumerable = objectProto.propertyIsEnumerable;

var isArguments = baseIsArguments(function () {
    return arguments;
}()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;
}, 624, null, "lodash/isArguments.js");
__d(/* lodash/_baseIsArguments.js */function(global, require, module, exports) {var baseGetTag = require(566            ), // 566 = ./_baseGetTag
    isObjectLike = require(573             ); // 573 = ./isObjectLike

var argsTag = '[object Arguments]';

function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;
}, 625, null, "lodash/_baseIsArguments.js");
__d(/* lodash/isBuffer.js */function(global, require, module, exports) {var root = require(568      ), // 568 = ./_root
    stubFalse = require(627          ); // 627 = ./stubFalse

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var Buffer = moduleExports ? root.Buffer : undefined;

var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;
}, 626, null, "lodash/isBuffer.js");
__d(/* lodash/stubFalse.js */function(global, require, module, exports) {
function stubFalse() {
  return false;
}

module.exports = stubFalse;
}, 627, null, "lodash/stubFalse.js");
__d(/* lodash/_isIndex.js */function(global, require, module, exports) {
var MAX_SAFE_INTEGER = 9007199254740991;

var reIsUint = /^(?:0|[1-9]\d*)$/;

function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;
}, 628, null, "lodash/_isIndex.js");
__d(/* lodash/isTypedArray.js */function(global, require, module, exports) {var baseIsTypedArray = require(630                  ), // 630 = ./_baseIsTypedArray
    baseUnary = require(632           ), // 632 = ./_baseUnary
    nodeUtil = require(633          ); // 633 = ./_nodeUtil

var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;
}, 629, null, "lodash/isTypedArray.js");
__d(/* lodash/_baseIsTypedArray.js */function(global, require, module, exports) {var baseGetTag = require(566            ), // 566 = ./_baseGetTag
    isLength = require(631         ), // 631 = ./isLength
    isObjectLike = require(573             ); // 573 = ./isObjectLike

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;
}, 630, null, "lodash/_baseIsTypedArray.js");
__d(/* lodash/isLength.js */function(global, require, module, exports) {
var MAX_SAFE_INTEGER = 9007199254740991;

function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;
}, 631, null, "lodash/isLength.js");
__d(/* lodash/_baseUnary.js */function(global, require, module, exports) {
function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}

module.exports = baseUnary;
}, 632, null, "lodash/_baseUnary.js");
__d(/* lodash/_nodeUtil.js */function(global, require, module, exports) {var freeGlobal = require(569            ); // 569 = ./_freeGlobal

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var freeProcess = moduleExports && freeGlobal.process;

var nodeUtil = function () {
  try {
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}();

module.exports = nodeUtil;
}, 633, null, "lodash/_nodeUtil.js");
__d(/* lodash/_baseKeys.js */function(global, require, module, exports) {var isPrototype = require(635             ), // 635 = ./_isPrototype
    nativeKeys = require(636            ); // 636 = ./_nativeKeys

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;
}, 634, null, "lodash/_baseKeys.js");
__d(/* lodash/_isPrototype.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

  return value === proto;
}

module.exports = isPrototype;
}, 635, null, "lodash/_isPrototype.js");
__d(/* lodash/_nativeKeys.js */function(global, require, module, exports) {var overArg = require(637         ); // 637 = ./_overArg

var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;
}, 636, null, "lodash/_nativeKeys.js");
__d(/* lodash/_overArg.js */function(global, require, module, exports) {
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;
}, 637, null, "lodash/_overArg.js");
__d(/* lodash/isArrayLike.js */function(global, require, module, exports) {var isFunction = require(594           ), // 594 = ./isFunction
    isLength = require(631         ); // 631 = ./isLength

function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;
}, 638, null, "lodash/isArrayLike.js");
__d(/* lodash/_baseAssignIn.js */function(global, require, module, exports) {var copyObject = require(620            ), // 620 = ./_copyObject
    keysIn = require(640       ); // 640 = ./keysIn

function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;
}, 639, null, "lodash/_baseAssignIn.js");
__d(/* lodash/keysIn.js */function(global, require, module, exports) {var arrayLikeKeys = require(622               ), // 622 = ./_arrayLikeKeys
    baseKeysIn = require(641            ), // 641 = ./_baseKeysIn
    isArrayLike = require(638            ); // 638 = ./isArrayLike

function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;
}, 640, null, "lodash/keysIn.js");
__d(/* lodash/_baseKeysIn.js */function(global, require, module, exports) {var isObject = require(595         ), // 595 = ./isObject
    isPrototype = require(635             ), // 635 = ./_isPrototype
    nativeKeysIn = require(642              ); // 642 = ./_nativeKeysIn

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;
}, 641, null, "lodash/_baseKeysIn.js");
__d(/* lodash/_nativeKeysIn.js */function(global, require, module, exports) {
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;
}, 642, null, "lodash/_nativeKeysIn.js");
__d(/* lodash/_cloneBuffer.js */function(global, require, module, exports) {var root = require(568      ); // 568 = ./_root

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;
}, 643, null, "lodash/_cloneBuffer.js");
__d(/* lodash/_copyArray.js */function(global, require, module, exports) {
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;
}, 644, null, "lodash/_copyArray.js");
__d(/* lodash/_copySymbols.js */function(global, require, module, exports) {var copyObject = require(620            ), // 620 = ./_copyObject
    getSymbols = require(646            ); // 646 = ./_getSymbols

function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;
}, 645, null, "lodash/_copySymbols.js");
__d(/* lodash/_getSymbols.js */function(global, require, module, exports) {var arrayFilter = require(647             ), // 647 = ./_arrayFilter
    stubArray = require(648          ); // 648 = ./stubArray

var objectProto = Object.prototype;

var propertyIsEnumerable = objectProto.propertyIsEnumerable;

var nativeGetSymbols = Object.getOwnPropertySymbols;

var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;
}, 646, null, "lodash/_getSymbols.js");
__d(/* lodash/_arrayFilter.js */function(global, require, module, exports) {
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;
}, 647, null, "lodash/_arrayFilter.js");
__d(/* lodash/stubArray.js */function(global, require, module, exports) {
function stubArray() {
  return [];
}

module.exports = stubArray;
}, 648, null, "lodash/stubArray.js");
__d(/* lodash/_copySymbolsIn.js */function(global, require, module, exports) {var copyObject = require(620            ), // 620 = ./_copyObject
    getSymbolsIn = require(650              ); // 650 = ./_getSymbolsIn

function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;
}, 649, null, "lodash/_copySymbolsIn.js");
__d(/* lodash/_getSymbolsIn.js */function(global, require, module, exports) {var arrayPush = require(651           ), // 651 = ./_arrayPush
    getPrototype = require(652              ), // 652 = ./_getPrototype
    getSymbols = require(646            ), // 646 = ./_getSymbols
    stubArray = require(648          ); // 648 = ./stubArray

var nativeGetSymbols = Object.getOwnPropertySymbols;

var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;
}, 650, null, "lodash/_getSymbolsIn.js");
__d(/* lodash/_arrayPush.js */function(global, require, module, exports) {
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;
}, 651, null, "lodash/_arrayPush.js");
__d(/* lodash/_getPrototype.js */function(global, require, module, exports) {var overArg = require(637         ); // 637 = ./_overArg

var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;
}, 652, null, "lodash/_getPrototype.js");
__d(/* lodash/_getAllKeys.js */function(global, require, module, exports) {var baseGetAllKeys = require(654                ), // 654 = ./_baseGetAllKeys
    getSymbols = require(646            ), // 646 = ./_getSymbols
    keys = require(621     ); // 621 = ./keys

function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;
}, 653, null, "lodash/_getAllKeys.js");
__d(/* lodash/_baseGetAllKeys.js */function(global, require, module, exports) {var arrayPush = require(651           ), // 651 = ./_arrayPush
    isArray = require(572        ); // 572 = ./isArray

function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;
}, 654, null, "lodash/_baseGetAllKeys.js");
__d(/* lodash/_getAllKeysIn.js */function(global, require, module, exports) {var baseGetAllKeys = require(654                ), // 654 = ./_baseGetAllKeys
    getSymbolsIn = require(650              ), // 650 = ./_getSymbolsIn
    keysIn = require(640       ); // 640 = ./keysIn

function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;
}, 655, null, "lodash/_getAllKeysIn.js");
__d(/* lodash/_getTag.js */function(global, require, module, exports) {var DataView = require(657          ), // 657 = ./_DataView
    Map = require(591     ), // 591 = ./_Map
    Promise = require(658         ), // 658 = ./_Promise
    Set = require(659     ), // 659 = ./_Set
    WeakMap = require(660         ), // 660 = ./_WeakMap
    baseGetTag = require(566            ), // 566 = ./_baseGetTag
    toSource = require(598          ); // 598 = ./_toSource

var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

var getTag = baseGetTag;

if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
            switch (ctorString) {
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
        }
        return result;
    };
}

module.exports = getTag;
}, 656, null, "lodash/_getTag.js");
__d(/* lodash/_DataView.js */function(global, require, module, exports) {var getNative = require(592           ), // 592 = ./_getNative
    root = require(568      ); // 568 = ./_root

var DataView = getNative(root, 'DataView');

module.exports = DataView;
}, 657, null, "lodash/_DataView.js");
__d(/* lodash/_Promise.js */function(global, require, module, exports) {var getNative = require(592           ), // 592 = ./_getNative
    root = require(568      ); // 568 = ./_root

var Promise = getNative(root, 'Promise');

module.exports = Promise;
}, 658, null, "lodash/_Promise.js");
__d(/* lodash/_Set.js */function(global, require, module, exports) {var getNative = require(592           ), // 592 = ./_getNative
    root = require(568      ); // 568 = ./_root

var Set = getNative(root, 'Set');

module.exports = Set;
}, 659, null, "lodash/_Set.js");
__d(/* lodash/_WeakMap.js */function(global, require, module, exports) {var getNative = require(592           ), // 592 = ./_getNative
    root = require(568      ); // 568 = ./_root

var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;
}, 660, null, "lodash/_WeakMap.js");
__d(/* lodash/_initCloneArray.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;
}, 661, null, "lodash/_initCloneArray.js");
__d(/* lodash/_initCloneByTag.js */function(global, require, module, exports) {var cloneArrayBuffer = require(663                  ), // 663 = ./_cloneArrayBuffer
    cloneDataView = require(665               ), // 665 = ./_cloneDataView
    cloneMap = require(666          ), // 666 = ./_cloneMap
    cloneRegExp = require(670             ), // 670 = ./_cloneRegExp
    cloneSet = require(671          ), // 671 = ./_cloneSet
    cloneSymbol = require(674             ), // 674 = ./_cloneSymbol
    cloneTypedArray = require(675                 ); // 675 = ./_cloneTypedArray

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag:case float64Tag:
    case int8Tag:case int16Tag:case int32Tag:
    case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;
}, 662, null, "lodash/_initCloneByTag.js");
__d(/* lodash/_cloneArrayBuffer.js */function(global, require, module, exports) {var Uint8Array = require(664            ); // 664 = ./_Uint8Array

function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;
}, 663, null, "lodash/_cloneArrayBuffer.js");
__d(/* lodash/_Uint8Array.js */function(global, require, module, exports) {var root = require(568      ); // 568 = ./_root

var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;
}, 664, null, "lodash/_Uint8Array.js");
__d(/* lodash/_cloneDataView.js */function(global, require, module, exports) {var cloneArrayBuffer = require(663                  ); // 663 = ./_cloneArrayBuffer

function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;
}, 665, null, "lodash/_cloneDataView.js");
__d(/* lodash/_cloneMap.js */function(global, require, module, exports) {var addMapEntry = require(667             ), // 667 = ./_addMapEntry
    arrayReduce = require(668             ), // 668 = ./_arrayReduce
    mapToArray = require(669            ); // 669 = ./_mapToArray

var CLONE_DEEP_FLAG = 1;

function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor());
}

module.exports = cloneMap;
}, 666, null, "lodash/_cloneMap.js");
__d(/* lodash/_addMapEntry.js */function(global, require, module, exports) {
function addMapEntry(map, pair) {
  map.set(pair[0], pair[1]);
  return map;
}

module.exports = addMapEntry;
}, 667, null, "lodash/_addMapEntry.js");
__d(/* lodash/_arrayReduce.js */function(global, require, module, exports) {
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;
}, 668, null, "lodash/_arrayReduce.js");
__d(/* lodash/_mapToArray.js */function(global, require, module, exports) {
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;
}, 669, null, "lodash/_mapToArray.js");
__d(/* lodash/_cloneRegExp.js */function(global, require, module, exports) {
var reFlags = /\w*$/;

function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;
}, 670, null, "lodash/_cloneRegExp.js");
__d(/* lodash/_cloneSet.js */function(global, require, module, exports) {var addSetEntry = require(672             ), // 672 = ./_addSetEntry
    arrayReduce = require(668             ), // 668 = ./_arrayReduce
    setToArray = require(673            ); // 673 = ./_setToArray

var CLONE_DEEP_FLAG = 1;

function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor());
}

module.exports = cloneSet;
}, 671, null, "lodash/_cloneSet.js");
__d(/* lodash/_addSetEntry.js */function(global, require, module, exports) {
function addSetEntry(set, value) {
  set.add(value);
  return set;
}

module.exports = addSetEntry;
}, 672, null, "lodash/_addSetEntry.js");
__d(/* lodash/_setToArray.js */function(global, require, module, exports) {
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;
}, 673, null, "lodash/_setToArray.js");
__d(/* lodash/_cloneSymbol.js */function(global, require, module, exports) {var Symbol = require(567        ); // 567 = ./_Symbol

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;
}, 674, null, "lodash/_cloneSymbol.js");
__d(/* lodash/_cloneTypedArray.js */function(global, require, module, exports) {var cloneArrayBuffer = require(663                  ); // 663 = ./_cloneArrayBuffer

function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;
}, 675, null, "lodash/_cloneTypedArray.js");
__d(/* lodash/_initCloneObject.js */function(global, require, module, exports) {var baseCreate = require(677            ), // 677 = ./_baseCreate
    getPrototype = require(652              ), // 652 = ./_getPrototype
    isPrototype = require(635             ); // 635 = ./_isPrototype

function initCloneObject(object) {
    return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
}

module.exports = initCloneObject;
}, 676, null, "lodash/_initCloneObject.js");
__d(/* lodash/_baseCreate.js */function(global, require, module, exports) {var isObject = require(595         ); // 595 = ./isObject

var objectCreate = Object.create;

var baseCreate = function () {
  function object() {}
  return function (proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object();
    object.prototype = undefined;
    return result;
  };
}();

module.exports = baseCreate;
}, 677, null, "lodash/_baseCreate.js");
__d(/* lodash/_baseUnset.js */function(global, require, module, exports) {var castPath = require(679          ), // 679 = ./_castPath
    last = require(687     ), // 687 = ./last
    parent = require(688        ), // 688 = ./_parent
    toKey = require(690       ); // 690 = ./_toKey

function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;
}, 678, null, "lodash/_baseUnset.js");
__d(/* lodash/_castPath.js */function(global, require, module, exports) {var isArray = require(572        ), // 572 = ./isArray
    isKey = require(680       ), // 680 = ./_isKey
    stringToPath = require(682              ), // 682 = ./_stringToPath
    toString = require(685         ); // 685 = ./toString

function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;
}, 679, null, "lodash/_castPath.js");
__d(/* lodash/_isKey.js */function(global, require, module, exports) {var isArray = require(572        ), // 572 = ./isArray
    isSymbol = require(681         ); // 681 = ./isSymbol

var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}

module.exports = isKey;
}, 680, null, "lodash/_isKey.js");
__d(/* lodash/isSymbol.js */function(global, require, module, exports) {var baseGetTag = require(566            ), // 566 = ./_baseGetTag
    isObjectLike = require(573             ); // 573 = ./isObjectLike

var symbolTag = '[object Symbol]';

function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}

module.exports = isSymbol;
}, 681, null, "lodash/isSymbol.js");
__d(/* lodash/_stringToPath.js */function(global, require, module, exports) {var memoizeCapped = require(683               ); // 683 = ./_memoizeCapped

var reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

var reEscapeChar = /\\(\\)?/g;

var stringToPath = memoizeCapped(function (string) {
  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function (match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);
  });
  return result;
});

module.exports = stringToPath;
}, 682, null, "lodash/_stringToPath.js");
__d(/* lodash/_memoizeCapped.js */function(global, require, module, exports) {var memoize = require(684        ); // 684 = ./memoize

var MAX_MEMOIZE_SIZE = 500;

function memoizeCapped(func) {
  var result = memoize(func, function (key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;
}, 683, null, "lodash/_memoizeCapped.js");
__d(/* lodash/memoize.js */function(global, require, module, exports) {var MapCache = require(600          ); // 600 = ./_MapCache

var FUNC_ERROR_TEXT = 'Expected a function';

function memoize(func, resolver) {
  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function memoized() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache)();
  return memoized;
}

memoize.Cache = MapCache;

module.exports = memoize;
}, 684, null, "lodash/memoize.js");
__d(/* lodash/toString.js */function(global, require, module, exports) {var baseToString = require(686              ); // 686 = ./_baseToString

function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;
}, 685, null, "lodash/toString.js");
__d(/* lodash/_baseToString.js */function(global, require, module, exports) {var Symbol = require(567        ), // 567 = ./_Symbol
    arrayMap = require(575          ), // 575 = ./_arrayMap
    isArray = require(572        ), // 572 = ./isArray
    isSymbol = require(681         ); // 681 = ./isSymbol

var INFINITY = 1 / 0;

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

function baseToString(value) {
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = baseToString;
}, 686, null, "lodash/_baseToString.js");
__d(/* lodash/last.js */function(global, require, module, exports) {
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;
}, 687, null, "lodash/last.js");
__d(/* lodash/_parent.js */function(global, require, module, exports) {var baseGet = require(689         ), // 689 = ./_baseGet
    baseSlice = require(691           ); // 691 = ./_baseSlice

function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;
}, 688, null, "lodash/_parent.js");
__d(/* lodash/_baseGet.js */function(global, require, module, exports) {var castPath = require(679          ), // 679 = ./_castPath
    toKey = require(690       ); // 690 = ./_toKey

function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return index && index == length ? object : undefined;
}

module.exports = baseGet;
}, 689, null, "lodash/_baseGet.js");
__d(/* lodash/_toKey.js */function(global, require, module, exports) {var isSymbol = require(681         ); // 681 = ./isSymbol

var INFINITY = 1 / 0;

function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = toKey;
}, 690, null, "lodash/_toKey.js");
__d(/* lodash/_baseSlice.js */function(global, require, module, exports) {
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;
}, 691, null, "lodash/_baseSlice.js");
__d(/* lodash/_customOmitClone.js */function(global, require, module, exports) {var isPlainObject = require(693              ); // 693 = ./isPlainObject

function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;
}, 692, null, "lodash/_customOmitClone.js");
__d(/* lodash/isPlainObject.js */function(global, require, module, exports) {var baseGetTag = require(566            ), // 566 = ./_baseGetTag
    getPrototype = require(652              ), // 652 = ./_getPrototype
    isObjectLike = require(573             ); // 573 = ./isObjectLike

var objectTag = '[object Object]';

var funcProto = Function.prototype,
    objectProto = Object.prototype;

var funcToString = funcProto.toString;

var hasOwnProperty = objectProto.hasOwnProperty;

var objectCtorString = funcToString.call(Object);

function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;
}, 693, null, "lodash/isPlainObject.js");
__d(/* lodash/_flatRest.js */function(global, require, module, exports) {var flatten = require(695        ), // 695 = ./flatten
    overRest = require(698          ), // 698 = ./_overRest
    setToString = require(700             ); // 700 = ./_setToString

function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;
}, 694, null, "lodash/_flatRest.js");
__d(/* lodash/flatten.js */function(global, require, module, exports) {var baseFlatten = require(696             ); // 696 = ./_baseFlatten

function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;
}, 695, null, "lodash/flatten.js");
__d(/* lodash/_baseFlatten.js */function(global, require, module, exports) {var arrayPush = require(651           ), // 651 = ./_arrayPush
    isFlattenable = require(697               ); // 697 = ./_isFlattenable

function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;
}, 696, null, "lodash/_baseFlatten.js");
__d(/* lodash/_isFlattenable.js */function(global, require, module, exports) {var Symbol = require(567        ), // 567 = ./_Symbol
    isArguments = require(624            ), // 624 = ./isArguments
    isArray = require(572        ); // 572 = ./isArray

var spreadableSymbol = Symbol ? typeof Symbol === 'function' ? Symbol.isConcatSpreadable : '@@isConcatSpreadable' : undefined;

function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;
}, 697, null, "lodash/_isFlattenable.js");
__d(/* lodash/_overRest.js */function(global, require, module, exports) {var apply = require(699       ); // 699 = ./_apply

var nativeMax = Math.max;

function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;
}, 698, null, "lodash/_overRest.js");
__d(/* lodash/_apply.js */function(global, require, module, exports) {
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;
}, 699, null, "lodash/_apply.js");
__d(/* lodash/_setToString.js */function(global, require, module, exports) {var baseSetToString = require(701                 ), // 701 = ./_baseSetToString
    shortOut = require(704          ); // 704 = ./_shortOut

var setToString = shortOut(baseSetToString);

module.exports = setToString;
}, 700, null, "lodash/_setToString.js");
__d(/* lodash/_baseSetToString.js */function(global, require, module, exports) {var constant = require(702         ), // 702 = ./constant
    defineProperty = require(618                ), // 618 = ./_defineProperty
    identity = require(703         ); // 703 = ./identity

var baseSetToString = !defineProperty ? identity : function (func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;
}, 701, null, "lodash/_baseSetToString.js");
__d(/* lodash/constant.js */function(global, require, module, exports) {
function constant(value) {
  return function () {
    return value;
  };
}

module.exports = constant;
}, 702, null, "lodash/constant.js");
__d(/* lodash/identity.js */function(global, require, module, exports) {
function identity(value) {
  return value;
}

module.exports = identity;
}, 703, null, "lodash/identity.js");
__d(/* lodash/_shortOut.js */function(global, require, module, exports) {
var HOT_COUNT = 800,
    HOT_SPAN = 16;

var nativeNow = Date.now;

function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function () {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;
}, 704, null, "lodash/_shortOut.js");
__d(/* lodash/pick.js */function(global, require, module, exports) {var basePick = require(706          ), // 706 = ./_basePick
    flatRest = require(694          ); // 694 = ./_flatRest

var pick = flatRest(function (object, paths) {
  return object == null ? {} : basePick(object, paths);
});

module.exports = pick;
}, 705, null, "lodash/pick.js");
__d(/* lodash/_basePick.js */function(global, require, module, exports) {var basePickBy = require(707            ), // 707 = ./_basePickBy
    hasIn = require(709      ); // 709 = ./hasIn

function basePick(object, paths) {
  return basePickBy(object, paths, function (value, path) {
    return hasIn(object, path);
  });
}

module.exports = basePick;
}, 706, null, "lodash/_basePick.js");
__d(/* lodash/_basePickBy.js */function(global, require, module, exports) {var baseGet = require(689         ), // 689 = ./_baseGet
    baseSet = require(708         ), // 708 = ./_baseSet
    castPath = require(679          ); // 679 = ./_castPath

function basePickBy(object, paths, predicate) {
    var index = -1,
        length = paths.length,
        result = {};

    while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
            baseSet(result, castPath(path, object), value);
        }
    }
    return result;
}

module.exports = basePickBy;
}, 707, null, "lodash/_basePickBy.js");
__d(/* lodash/_baseSet.js */function(global, require, module, exports) {var assignValue = require(616             ), // 616 = ./_assignValue
    castPath = require(679          ), // 679 = ./_castPath
    isIndex = require(628         ), // 628 = ./_isIndex
    isObject = require(595         ), // 595 = ./isObject
    toKey = require(690       ); // 690 = ./_toKey

function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;
}, 708, null, "lodash/_baseSet.js");
__d(/* lodash/hasIn.js */function(global, require, module, exports) {var baseHasIn = require(710           ), // 710 = ./_baseHasIn
    hasPath = require(711         ); // 711 = ./_hasPath

function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;
}, 709, null, "lodash/hasIn.js");
__d(/* lodash/_baseHasIn.js */function(global, require, module, exports) {
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;
}, 710, null, "lodash/_baseHasIn.js");
__d(/* lodash/_hasPath.js */function(global, require, module, exports) {var castPath = require(679          ), // 679 = ./_castPath
    isArguments = require(624            ), // 624 = ./isArguments
    isArray = require(572        ), // 572 = ./isArray
    isIndex = require(628         ), // 628 = ./_isIndex
    isLength = require(631         ), // 631 = ./isLength
    toKey = require(690       ); // 690 = ./_toKey

function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
}

module.exports = hasPath;
}, 711, null, "lodash/_hasPath.js");
__d(/* react-native-vector-icons/lib/tab-bar-item-ios.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-vector-icons\\lib\\tab-bar-item-ios.js';
exports.default = createTabBarItemIOSComponent;

var _isEqual = require(713             ); // 713 = lodash/isEqual

var _isEqual2 = babelHelpers.interopRequireDefault(_isEqual);

var _pick = require(705          ); // 705 = lodash/pick

var _pick2 = babelHelpers.interopRequireDefault(_pick);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(563             ); // 563 = ./react-native

function createTabBarItemIOSComponent(IconNamePropType, getImageSource) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    babelHelpers.inherits(TabBarItemIOS, _Component);

    function TabBarItemIOS() {
      babelHelpers.classCallCheck(this, TabBarItemIOS);
      return babelHelpers.possibleConstructorReturn(this, (TabBarItemIOS.__proto__ || Object.getPrototypeOf(TabBarItemIOS)).apply(this, arguments));
    }

    babelHelpers.createClass(TabBarItemIOS, [{
      key: 'updateIconSources',
      value: function updateIconSources(props) {
        var _this2 = this;

        if (props.iconName) {
          getImageSource(props.iconName, props.iconSize, props.iconColor).then(function (icon) {
            return _this2.setState({ icon: icon });
          });
        }
        if (props.selectedIconName || props.selectedIconColor) {
          var selectedIconName = props.selectedIconName || props.iconName;
          var selectedIconColor = props.selectedIconColor || props.iconColor;
          getImageSource(selectedIconName, props.iconSize, selectedIconColor).then(function (selectedIcon) {
            return _this2.setState({ selectedIcon: selectedIcon });
          });
        }
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this.updateIconSources(this.props);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var keys = Object.keys(TabBarItemIOS.propTypes);
        if (!(0, _isEqual2.default)((0, _pick2.default)(nextProps, keys), (0, _pick2.default)(this.props, keys))) {
          this.updateIconSources(nextProps);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(_reactNative.TabBarIOS.Item, babelHelpers.extends({}, this.props, this.state, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        }));
      }
    }]);
    return TabBarItemIOS;
  }(_react.Component), _class.propTypes = {
    iconName: IconNamePropType.isRequired,
    selectedIconName: IconNamePropType,
    iconSize: _propTypes2.default.number,
    iconColor: _propTypes2.default.string,
    selectedIconColor: _propTypes2.default.string
  }, _class.defaultProps = {
    iconSize: 30
  }, _temp;
}
}, 712, null, "react-native-vector-icons/lib/tab-bar-item-ios.js");
__d(/* lodash/isEqual.js */function(global, require, module, exports) {var baseIsEqual = require(714             ); // 714 = ./_baseIsEqual

function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;
}, 713, null, "lodash/isEqual.js");
__d(/* lodash/_baseIsEqual.js */function(global, require, module, exports) {var baseIsEqualDeep = require(715                 ), // 715 = ./_baseIsEqualDeep
    isObjectLike = require(573             ); // 573 = ./isObjectLike

function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;
}, 714, null, "lodash/_baseIsEqual.js");
__d(/* lodash/_baseIsEqualDeep.js */function(global, require, module, exports) {var Stack = require(577       ), // 577 = ./_Stack
    equalArrays = require(716             ), // 716 = ./_equalArrays
    equalByTag = require(722            ), // 722 = ./_equalByTag
    equalObjects = require(723              ), // 723 = ./_equalObjects
    getTag = require(656        ), // 656 = ./_getTag
    isArray = require(572        ), // 572 = ./isArray
    isBuffer = require(626         ), // 626 = ./isBuffer
    isTypedArray = require(629             ); // 629 = ./isTypedArray

var COMPARE_PARTIAL_FLAG = 1;

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;
}, 715, null, "lodash/_baseIsEqualDeep.js");
__d(/* lodash/_equalArrays.js */function(global, require, module, exports) {var SetCache = require(717          ), // 717 = ./_SetCache
    arraySome = require(720           ), // 720 = ./_arraySome
    cacheHas = require(721          ); // 721 = ./_cacheHas

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }

  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;

  stack.set(array, other);
  stack.set(other, array);

  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }

    if (seen) {
      if (!arraySome(other, function (othValue, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;
}, 716, null, "lodash/_equalArrays.js");
__d(/* lodash/_SetCache.js */function(global, require, module, exports) {var MapCache = require(600          ), // 600 = ./_MapCache
    setCacheAdd = require(718             ), // 718 = ./_setCacheAdd
    setCacheHas = require(719             ); // 719 = ./_setCacheHas

function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new MapCache();
    while (++index < length) {
        this.add(values[index]);
    }
}

SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;
}, 717, null, "lodash/_SetCache.js");
__d(/* lodash/_setCacheAdd.js */function(global, require, module, exports) {
var HASH_UNDEFINED = '__lodash_hash_undefined__';

function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;
}, 718, null, "lodash/_setCacheAdd.js");
__d(/* lodash/_setCacheHas.js */function(global, require, module, exports) {
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;
}, 719, null, "lodash/_setCacheHas.js");
__d(/* lodash/_arraySome.js */function(global, require, module, exports) {
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;
}, 720, null, "lodash/_arraySome.js");
__d(/* lodash/_cacheHas.js */function(global, require, module, exports) {
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;
}, 721, null, "lodash/_cacheHas.js");
__d(/* lodash/_equalByTag.js */function(global, require, module, exports) {var Symbol = require(567        ), // 567 = ./_Symbol
    Uint8Array = require(664            ), // 664 = ./_Uint8Array
    eq = require(582   ), // 582 = ./eq
    equalArrays = require(716             ), // 716 = ./_equalArrays
    mapToArray = require(669            ), // 669 = ./_mapToArray
    setToArray = require(673            ); // 673 = ./_setToArray

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      return object == other + '';

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }

      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;
}, 722, null, "lodash/_equalByTag.js");
__d(/* lodash/_equalObjects.js */function(global, require, module, exports) {var getAllKeys = require(653            ); // 653 = ./_getAllKeys

var COMPARE_PARTIAL_FLAG = 1;

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }

  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }

    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;
}, 723, null, "lodash/_equalObjects.js");
__d(/* react-native-vector-icons/lib/toolbar-android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-vector-icons\\lib\\toolbar-android.js';
exports.default = createToolbarAndroidComponent;

var _isEqual = require(713             ); // 713 = lodash/isEqual

var _isEqual2 = babelHelpers.interopRequireDefault(_isEqual);

var _pick = require(705          ); // 705 = lodash/pick

var _pick2 = babelHelpers.interopRequireDefault(_pick);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(563             ); // 563 = ./react-native

function createToolbarAndroidComponent(IconNamePropType, getImageSource) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    babelHelpers.inherits(IconToolbarAndroid, _Component);

    function IconToolbarAndroid() {
      babelHelpers.classCallCheck(this, IconToolbarAndroid);
      return babelHelpers.possibleConstructorReturn(this, (IconToolbarAndroid.__proto__ || Object.getPrototypeOf(IconToolbarAndroid)).apply(this, arguments));
    }

    babelHelpers.createClass(IconToolbarAndroid, [{
      key: 'updateIconSources',
      value: function updateIconSources(props) {
        var _this2 = this;

        var size = props.iconSize;
        var color = props.iconColor || props.titleColor;
        if (props.logoName) {
          getImageSource(props.logoName, size, color).then(function (logo) {
            return _this2.setState({ logo: logo });
          });
        }
        if (props.navIconName) {
          getImageSource(props.navIconName, size, color).then(function (navIcon) {
            return _this2.setState({ navIcon: navIcon });
          });
        }
        if (props.overflowIconName) {
          getImageSource(props.overflowIconName, size, color).then(function (overflowIcon) {
            return _this2.setState({ overflowIcon: overflowIcon });
          });
        }

        Promise.all((props.actions || []).map(function (action) {
          if (action.iconName) {
            return getImageSource(action.iconName, action.iconSize || size, action.iconColor || color).then(function (icon) {
              return babelHelpers.extends({}, action, { icon: icon });
            });
          }
          return Promise.resolve(action);
        })).then(function (actions) {
          return _this2.setState({ actions: actions });
        });
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this.updateIconSources(this.props);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var _this3 = this;

        var keys = Object.keys(IconToolbarAndroid.propTypes);
        if (!(0, _isEqual2.default)((0, _pick2.default)(nextProps, keys), (0, _pick2.default)(this.props, keys))) {
          var stateToEvict = {};
          if (!nextProps.logoName) {
            stateToEvict.logo = undefined;
          }
          if (!nextProps.navIconName) {
            stateToEvict.navIcon = undefined;
          }
          if (!nextProps.overflowIconName) {
            stateToEvict.overflowIcon = undefined;
          }
          if (this.state && Object.keys(stateToEvict).length) {
            this.setState(stateToEvict, function () {
              return _this3.updateIconSources(nextProps);
            });
          } else {
            this.updateIconSources(nextProps);
          }
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(_reactNative.ToolbarAndroid, babelHelpers.extends({}, this.props, this.state, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 93
          }
        }));
      }
    }]);
    return IconToolbarAndroid;
  }(_react.Component), _class.propTypes = {
    logoIconName: IconNamePropType,
    navIconName: IconNamePropType,
    overflowIconName: IconNamePropType,
    actions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      title: _propTypes2.default.string.isRequired,
      iconName: IconNamePropType,
      iconSize: _propTypes2.default.number,
      iconColor: _propTypes2.default.string,
      show: _propTypes2.default.oneOf(['always', 'ifRoom', 'never']),
      showWithText: _propTypes2.default.bool
    })),
    iconSize: _propTypes2.default.number,
    iconColor: _propTypes2.default.string
  }, _class.defaultProps = {
    iconSize: 24
  }, _temp;
}
}, 724, null, "react-native-vector-icons/lib/toolbar-android.js");
__d(/* react-native-vector-icons/glyphmaps/MaterialIcons.json */function(global, require, module, exports) {module.exports = module.exports = {
  "3d-rotation": 59469,
  "ac-unit": 60219,
  "access-alarm": 57744,
  "access-alarms": 57745,
  "access-time": 57746,
  "accessibility": 59470,
  "accessible": 59668,
  "account-balance": 59471,
  "account-balance-wallet": 59472,
  "account-box": 59473,
  "account-circle": 59475,
  "adb": 58894,
  "add": 57669,
  "add-a-photo": 58425,
  "add-alarm": 57747,
  "add-alert": 57347,
  "add-box": 57670,
  "add-circle": 57671,
  "add-circle-outline": 57672,
  "add-location": 58727,
  "add-shopping-cart": 59476,
  "add-to-photos": 58269,
  "add-to-queue": 57436,
  "adjust": 58270,
  "airline-seat-flat": 58928,
  "airline-seat-flat-angled": 58929,
  "airline-seat-individual-suite": 58930,
  "airline-seat-legroom-extra": 58931,
  "airline-seat-legroom-normal": 58932,
  "airline-seat-legroom-reduced": 58933,
  "airline-seat-recline-extra": 58934,
  "airline-seat-recline-normal": 58935,
  "airplanemode-active": 57749,
  "airplanemode-inactive": 57748,
  "airplay": 57429,
  "airport-shuttle": 60220,
  "alarm": 59477,
  "alarm-add": 59478,
  "alarm-off": 59479,
  "alarm-on": 59480,
  "album": 57369,
  "all-inclusive": 60221,
  "all-out": 59659,
  "android": 59481,
  "announcement": 59482,
  "apps": 58819,
  "archive": 57673,
  "arrow-back": 58820,
  "arrow-downward": 58843,
  "arrow-drop-down": 58821,
  "arrow-drop-down-circle": 58822,
  "arrow-drop-up": 58823,
  "arrow-forward": 58824,
  "arrow-upward": 58840,
  "art-track": 57440,
  "aspect-ratio": 59483,
  "assessment": 59484,
  "assignment": 59485,
  "assignment-ind": 59486,
  "assignment-late": 59487,
  "assignment-return": 59488,
  "assignment-returned": 59489,
  "assignment-turned-in": 59490,
  "assistant": 58271,
  "assistant-photo": 58272,
  "attach-file": 57894,
  "attach-money": 57895,
  "attachment": 58044,
  "audiotrack": 58273,
  "autorenew": 59491,
  "av-timer": 57371,
  "backspace": 57674,
  "backup": 59492,
  "battery-alert": 57756,
  "battery-charging-full": 57763,
  "battery-full": 57764,
  "battery-std": 57765,
  "battery-unknown": 57766,
  "beach-access": 60222,
  "beenhere": 58669,
  "block": 57675,
  "bluetooth": 57767,
  "bluetooth-audio": 58895,
  "bluetooth-connected": 57768,
  "bluetooth-disabled": 57769,
  "bluetooth-searching": 57770,
  "blur-circular": 58274,
  "blur-linear": 58275,
  "blur-off": 58276,
  "blur-on": 58277,
  "book": 59493,
  "bookmark": 59494,
  "bookmark-border": 59495,
  "border-all": 57896,
  "border-bottom": 57897,
  "border-clear": 57898,
  "border-color": 57899,
  "border-horizontal": 57900,
  "border-inner": 57901,
  "border-left": 57902,
  "border-outer": 57903,
  "border-right": 57904,
  "border-style": 57905,
  "border-top": 57906,
  "border-vertical": 57907,
  "branding-watermark": 57451,
  "brightness-1": 58278,
  "brightness-2": 58279,
  "brightness-3": 58280,
  "brightness-4": 58281,
  "brightness-5": 58282,
  "brightness-6": 58283,
  "brightness-7": 58284,
  "brightness-auto": 57771,
  "brightness-high": 57772,
  "brightness-low": 57773,
  "brightness-medium": 57774,
  "broken-image": 58285,
  "brush": 58286,
  "bubble-chart": 59101,
  "bug-report": 59496,
  "build": 59497,
  "burst-mode": 58428,
  "business": 57519,
  "business-center": 60223,
  "cached": 59498,
  "cake": 59369,
  "call": 57520,
  "call-end": 57521,
  "call-made": 57522,
  "call-merge": 57523,
  "call-missed": 57524,
  "call-missed-outgoing": 57572,
  "call-received": 57525,
  "call-split": 57526,
  "call-to-action": 57452,
  "camera": 58287,
  "camera-alt": 58288,
  "camera-enhance": 59644,
  "camera-front": 58289,
  "camera-rear": 58290,
  "camera-roll": 58291,
  "cancel": 58825,
  "card-giftcard": 59638,
  "card-membership": 59639,
  "card-travel": 59640,
  "casino": 60224,
  "cast": 58119,
  "cast-connected": 58120,
  "center-focus-strong": 58292,
  "center-focus-weak": 58293,
  "change-history": 59499,
  "chat": 57527,
  "chat-bubble": 57546,
  "chat-bubble-outline": 57547,
  "check": 58826,
  "check-box": 59444,
  "check-box-outline-blank": 59445,
  "check-circle": 59500,
  "chevron-left": 58827,
  "chevron-right": 58828,
  "child-care": 60225,
  "child-friendly": 60226,
  "chrome-reader-mode": 59501,
  "class": 59502,
  "clear": 57676,
  "clear-all": 57528,
  "close": 58829,
  "closed-caption": 57372,
  "cloud": 58045,
  "cloud-circle": 58046,
  "cloud-done": 58047,
  "cloud-download": 58048,
  "cloud-off": 58049,
  "cloud-queue": 58050,
  "cloud-upload": 58051,
  "code": 59503,
  "collections": 58294,
  "collections-bookmark": 58417,
  "color-lens": 58295,
  "colorize": 58296,
  "comment": 57529,
  "compare": 58297,
  "compare-arrows": 59669,
  "computer": 58122,
  "confirmation-number": 58936,
  "contact-mail": 57552,
  "contact-phone": 57551,
  "contacts": 57530,
  "content-copy": 57677,
  "content-cut": 57678,
  "content-paste": 57679,
  "control-point": 58298,
  "control-point-duplicate": 58299,
  "copyright": 59660,
  "create": 57680,
  "create-new-folder": 58060,
  "credit-card": 59504,
  "crop": 58302,
  "crop-16-9": 58300,
  "crop-3-2": 58301,
  "crop-5-4": 58303,
  "crop-7-5": 58304,
  "crop-din": 58305,
  "crop-free": 58306,
  "crop-landscape": 58307,
  "crop-original": 58308,
  "crop-portrait": 58309,
  "crop-rotate": 58423,
  "crop-square": 58310,
  "dashboard": 59505,
  "data-usage": 57775,
  "date-range": 59670,
  "dehaze": 58311,
  "delete": 59506,
  "delete-forever": 59691,
  "delete-sweep": 57708,
  "description": 59507,
  "desktop-mac": 58123,
  "desktop-windows": 58124,
  "details": 58312,
  "developer-board": 58125,
  "developer-mode": 57776,
  "device-hub": 58165,
  "devices": 57777,
  "devices-other": 58167,
  "dialer-sip": 57531,
  "dialpad": 57532,
  "directions": 58670,
  "directions-bike": 58671,
  "directions-boat": 58674,
  "directions-bus": 58672,
  "directions-car": 58673,
  "directions-railway": 58676,
  "directions-run": 58726,
  "directions-subway": 58675,
  "directions-transit": 58677,
  "directions-walk": 58678,
  "disc-full": 58896,
  "dns": 59509,
  "do-not-disturb": 58898,
  "do-not-disturb-alt": 58897,
  "do-not-disturb-off": 58947,
  "do-not-disturb-on": 58948,
  "dock": 58126,
  "domain": 59374,
  "done": 59510,
  "done-all": 59511,
  "donut-large": 59671,
  "donut-small": 59672,
  "drafts": 57681,
  "drag-handle": 57949,
  "drive-eta": 58899,
  "dvr": 57778,
  "edit": 58313,
  "edit-location": 58728,
  "eject": 59643,
  "email": 57534,
  "enhanced-encryption": 58943,
  "equalizer": 57373,
  "error": 57344,
  "error-outline": 57345,
  "euro-symbol": 59686,
  "ev-station": 58733,
  "event": 59512,
  "event-available": 58900,
  "event-busy": 58901,
  "event-note": 58902,
  "event-seat": 59651,
  "exit-to-app": 59513,
  "expand-less": 58830,
  "expand-more": 58831,
  "explicit": 57374,
  "explore": 59514,
  "exposure": 58314,
  "exposure-neg-1": 58315,
  "exposure-neg-2": 58316,
  "exposure-plus-1": 58317,
  "exposure-plus-2": 58318,
  "exposure-zero": 58319,
  "extension": 59515,
  "face": 59516,
  "fast-forward": 57375,
  "fast-rewind": 57376,
  "favorite": 59517,
  "favorite-border": 59518,
  "featured-play-list": 57453,
  "featured-video": 57454,
  "feedback": 59519,
  "fiber-dvr": 57437,
  "fiber-manual-record": 57441,
  "fiber-new": 57438,
  "fiber-pin": 57450,
  "fiber-smart-record": 57442,
  "file-download": 58052,
  "file-upload": 58054,
  "filter": 58323,
  "filter-1": 58320,
  "filter-2": 58321,
  "filter-3": 58322,
  "filter-4": 58324,
  "filter-5": 58325,
  "filter-6": 58326,
  "filter-7": 58327,
  "filter-8": 58328,
  "filter-9": 58329,
  "filter-9-plus": 58330,
  "filter-b-and-w": 58331,
  "filter-center-focus": 58332,
  "filter-drama": 58333,
  "filter-frames": 58334,
  "filter-hdr": 58335,
  "filter-list": 57682,
  "filter-none": 58336,
  "filter-tilt-shift": 58338,
  "filter-vintage": 58339,
  "find-in-page": 59520,
  "find-replace": 59521,
  "fingerprint": 59661,
  "first-page": 58844,
  "fitness-center": 60227,
  "flag": 57683,
  "flare": 58340,
  "flash-auto": 58341,
  "flash-off": 58342,
  "flash-on": 58343,
  "flight": 58681,
  "flight-land": 59652,
  "flight-takeoff": 59653,
  "flip": 58344,
  "flip-to-back": 59522,
  "flip-to-front": 59523,
  "folder": 58055,
  "folder-open": 58056,
  "folder-shared": 58057,
  "folder-special": 58903,
  "font-download": 57703,
  "format-align-center": 57908,
  "format-align-justify": 57909,
  "format-align-left": 57910,
  "format-align-right": 57911,
  "format-bold": 57912,
  "format-clear": 57913,
  "format-color-fill": 57914,
  "format-color-reset": 57915,
  "format-color-text": 57916,
  "format-indent-decrease": 57917,
  "format-indent-increase": 57918,
  "format-italic": 57919,
  "format-line-spacing": 57920,
  "format-list-bulleted": 57921,
  "format-list-numbered": 57922,
  "format-paint": 57923,
  "format-quote": 57924,
  "format-shapes": 57950,
  "format-size": 57925,
  "format-strikethrough": 57926,
  "format-textdirection-l-to-r": 57927,
  "format-textdirection-r-to-l": 57928,
  "format-underlined": 57929,
  "forum": 57535,
  "forward": 57684,
  "forward-10": 57430,
  "forward-30": 57431,
  "forward-5": 57432,
  "free-breakfast": 60228,
  "fullscreen": 58832,
  "fullscreen-exit": 58833,
  "functions": 57930,
  "g-translate": 59687,
  "gamepad": 58127,
  "games": 57377,
  "gavel": 59662,
  "gesture": 57685,
  "get-app": 59524,
  "gif": 59656,
  "golf-course": 60229,
  "gps-fixed": 57779,
  "gps-not-fixed": 57780,
  "gps-off": 57781,
  "grade": 59525,
  "gradient": 58345,
  "grain": 58346,
  "graphic-eq": 57784,
  "grid-off": 58347,
  "grid-on": 58348,
  "group": 59375,
  "group-add": 59376,
  "group-work": 59526,
  "hd": 57426,
  "hdr-off": 58349,
  "hdr-on": 58350,
  "hdr-strong": 58353,
  "hdr-weak": 58354,
  "headset": 58128,
  "headset-mic": 58129,
  "healing": 58355,
  "hearing": 57379,
  "help": 59527,
  "help-outline": 59645,
  "high-quality": 57380,
  "highlight": 57951,
  "highlight-off": 59528,
  "history": 59529,
  "home": 59530,
  "hot-tub": 60230,
  "hotel": 58682,
  "hourglass-empty": 59531,
  "hourglass-full": 59532,
  "http": 59650,
  "https": 59533,
  "image": 58356,
  "image-aspect-ratio": 58357,
  "import-contacts": 57568,
  "import-export": 57539,
  "important-devices": 59666,
  "inbox": 57686,
  "indeterminate-check-box": 59657,
  "info": 59534,
  "info-outline": 59535,
  "input": 59536,
  "insert-chart": 57931,
  "insert-comment": 57932,
  "insert-drive-file": 57933,
  "insert-emoticon": 57934,
  "insert-invitation": 57935,
  "insert-link": 57936,
  "insert-photo": 57937,
  "invert-colors": 59537,
  "invert-colors-off": 57540,
  "iso": 58358,
  "keyboard": 58130,
  "keyboard-arrow-down": 58131,
  "keyboard-arrow-left": 58132,
  "keyboard-arrow-right": 58133,
  "keyboard-arrow-up": 58134,
  "keyboard-backspace": 58135,
  "keyboard-capslock": 58136,
  "keyboard-hide": 58138,
  "keyboard-return": 58139,
  "keyboard-tab": 58140,
  "keyboard-voice": 58141,
  "kitchen": 60231,
  "label": 59538,
  "label-outline": 59539,
  "landscape": 58359,
  "language": 59540,
  "laptop": 58142,
  "laptop-chromebook": 58143,
  "laptop-mac": 58144,
  "laptop-windows": 58145,
  "last-page": 58845,
  "launch": 59541,
  "layers": 58683,
  "layers-clear": 58684,
  "leak-add": 58360,
  "leak-remove": 58361,
  "lens": 58362,
  "library-add": 57390,
  "library-books": 57391,
  "library-music": 57392,
  "lightbulb-outline": 59663,
  "line-style": 59673,
  "line-weight": 59674,
  "linear-scale": 57952,
  "link": 57687,
  "linked-camera": 58424,
  "list": 59542,
  "live-help": 57542,
  "live-tv": 58937,
  "local-activity": 58687,
  "local-airport": 58685,
  "local-atm": 58686,
  "local-bar": 58688,
  "local-cafe": 58689,
  "local-car-wash": 58690,
  "local-convenience-store": 58691,
  "local-dining": 58710,
  "local-drink": 58692,
  "local-florist": 58693,
  "local-gas-station": 58694,
  "local-grocery-store": 58695,
  "local-hospital": 58696,
  "local-hotel": 58697,
  "local-laundry-service": 58698,
  "local-library": 58699,
  "local-mall": 58700,
  "local-movies": 58701,
  "local-offer": 58702,
  "local-parking": 58703,
  "local-pharmacy": 58704,
  "local-phone": 58705,
  "local-pizza": 58706,
  "local-play": 58707,
  "local-post-office": 58708,
  "local-printshop": 58709,
  "local-see": 58711,
  "local-shipping": 58712,
  "local-taxi": 58713,
  "location-city": 59377,
  "location-disabled": 57782,
  "location-off": 57543,
  "location-on": 57544,
  "location-searching": 57783,
  "lock": 59543,
  "lock-open": 59544,
  "lock-outline": 59545,
  "looks": 58364,
  "looks-3": 58363,
  "looks-4": 58365,
  "looks-5": 58366,
  "looks-6": 58367,
  "looks-one": 58368,
  "looks-two": 58369,
  "loop": 57384,
  "loupe": 58370,
  "low-priority": 57709,
  "loyalty": 59546,
  "mail": 57688,
  "mail-outline": 57569,
  "map": 58715,
  "markunread": 57689,
  "markunread-mailbox": 59547,
  "memory": 58146,
  "menu": 58834,
  "merge-type": 57938,
  "message": 57545,
  "mic": 57385,
  "mic-none": 57386,
  "mic-off": 57387,
  "mms": 58904,
  "mode-comment": 57939,
  "mode-edit": 57940,
  "monetization-on": 57955,
  "money-off": 57948,
  "monochrome-photos": 58371,
  "mood": 59378,
  "mood-bad": 59379,
  "more": 58905,
  "more-horiz": 58835,
  "more-vert": 58836,
  "motorcycle": 59675,
  "mouse": 58147,
  "move-to-inbox": 57704,
  "movie": 57388,
  "movie-creation": 58372,
  "movie-filter": 58426,
  "multiline-chart": 59103,
  "music-note": 58373,
  "music-video": 57443,
  "my-location": 58716,
  "nature": 58374,
  "nature-people": 58375,
  "navigate-before": 58376,
  "navigate-next": 58377,
  "navigation": 58717,
  "near-me": 58729,
  "network-cell": 57785,
  "network-check": 58944,
  "network-locked": 58906,
  "network-wifi": 57786,
  "new-releases": 57393,
  "next-week": 57706,
  "nfc": 57787,
  "no-encryption": 58945,
  "no-sim": 57548,
  "not-interested": 57395,
  "note": 57455,
  "note-add": 59548,
  "notifications": 59380,
  "notifications-active": 59383,
  "notifications-none": 59381,
  "notifications-off": 59382,
  "notifications-paused": 59384,
  "offline-pin": 59658,
  "ondemand-video": 58938,
  "opacity": 59676,
  "open-in-browser": 59549,
  "open-in-new": 59550,
  "open-with": 59551,
  "pages": 59385,
  "pageview": 59552,
  "palette": 58378,
  "pan-tool": 59685,
  "panorama": 58379,
  "panorama-fish-eye": 58380,
  "panorama-horizontal": 58381,
  "panorama-vertical": 58382,
  "panorama-wide-angle": 58383,
  "party-mode": 59386,
  "pause": 57396,
  "pause-circle-filled": 57397,
  "pause-circle-outline": 57398,
  "payment": 59553,
  "people": 59387,
  "people-outline": 59388,
  "perm-camera-mic": 59554,
  "perm-contact-calendar": 59555,
  "perm-data-setting": 59556,
  "perm-device-information": 59557,
  "perm-identity": 59558,
  "perm-media": 59559,
  "perm-phone-msg": 59560,
  "perm-scan-wifi": 59561,
  "person": 59389,
  "person-add": 59390,
  "person-outline": 59391,
  "person-pin": 58714,
  "person-pin-circle": 58730,
  "personal-video": 58939,
  "pets": 59677,
  "phone": 57549,
  "phone-android": 58148,
  "phone-bluetooth-speaker": 58907,
  "phone-forwarded": 58908,
  "phone-in-talk": 58909,
  "phone-iphone": 58149,
  "phone-locked": 58910,
  "phone-missed": 58911,
  "phone-paused": 58912,
  "phonelink": 58150,
  "phonelink-erase": 57563,
  "phonelink-lock": 57564,
  "phonelink-off": 58151,
  "phonelink-ring": 57565,
  "phonelink-setup": 57566,
  "photo": 58384,
  "photo-album": 58385,
  "photo-camera": 58386,
  "photo-filter": 58427,
  "photo-library": 58387,
  "photo-size-select-actual": 58418,
  "photo-size-select-large": 58419,
  "photo-size-select-small": 58420,
  "picture-as-pdf": 58389,
  "picture-in-picture": 59562,
  "picture-in-picture-alt": 59665,
  "pie-chart": 59076,
  "pie-chart-outlined": 59077,
  "pin-drop": 58718,
  "place": 58719,
  "play-arrow": 57399,
  "play-circle-filled": 57400,
  "play-circle-outline": 57401,
  "play-for-work": 59654,
  "playlist-add": 57403,
  "playlist-add-check": 57445,
  "playlist-play": 57439,
  "plus-one": 59392,
  "poll": 59393,
  "polymer": 59563,
  "pool": 60232,
  "portable-wifi-off": 57550,
  "portrait": 58390,
  "power": 58940,
  "power-input": 58166,
  "power-settings-new": 59564,
  "pregnant-woman": 59678,
  "present-to-all": 57567,
  "print": 59565,
  "priority-high": 58949,
  "public": 59403,
  "publish": 57941,
  "query-builder": 59566,
  "question-answer": 59567,
  "queue": 57404,
  "queue-music": 57405,
  "queue-play-next": 57446,
  "radio": 57406,
  "radio-button-checked": 59447,
  "radio-button-unchecked": 59446,
  "rate-review": 58720,
  "receipt": 59568,
  "recent-actors": 57407,
  "record-voice-over": 59679,
  "redeem": 59569,
  "redo": 57690,
  "refresh": 58837,
  "remove": 57691,
  "remove-circle": 57692,
  "remove-circle-outline": 57693,
  "remove-from-queue": 57447,
  "remove-red-eye": 58391,
  "remove-shopping-cart": 59688,
  "reorder": 59646,
  "repeat": 57408,
  "repeat-one": 57409,
  "replay": 57410,
  "replay-10": 57433,
  "replay-30": 57434,
  "replay-5": 57435,
  "reply": 57694,
  "reply-all": 57695,
  "report": 57696,
  "report-problem": 59570,
  "restaurant": 58732,
  "restaurant-menu": 58721,
  "restore": 59571,
  "restore-page": 59689,
  "ring-volume": 57553,
  "room": 59572,
  "room-service": 60233,
  "rotate-90-degrees-ccw": 58392,
  "rotate-left": 58393,
  "rotate-right": 58394,
  "rounded-corner": 59680,
  "router": 58152,
  "rowing": 59681,
  "rss-feed": 57573,
  "rv-hookup": 58946,
  "satellite": 58722,
  "save": 57697,
  "scanner": 58153,
  "schedule": 59573,
  "school": 59404,
  "screen-lock-landscape": 57790,
  "screen-lock-portrait": 57791,
  "screen-lock-rotation": 57792,
  "screen-rotation": 57793,
  "screen-share": 57570,
  "sd-card": 58915,
  "sd-storage": 57794,
  "search": 59574,
  "security": 58154,
  "select-all": 57698,
  "send": 57699,
  "sentiment-dissatisfied": 59409,
  "sentiment-neutral": 59410,
  "sentiment-satisfied": 59411,
  "sentiment-very-dissatisfied": 59412,
  "sentiment-very-satisfied": 59413,
  "settings": 59576,
  "settings-applications": 59577,
  "settings-backup-restore": 59578,
  "settings-bluetooth": 59579,
  "settings-brightness": 59581,
  "settings-cell": 59580,
  "settings-ethernet": 59582,
  "settings-input-antenna": 59583,
  "settings-input-component": 59584,
  "settings-input-composite": 59585,
  "settings-input-hdmi": 59586,
  "settings-input-svideo": 59587,
  "settings-overscan": 59588,
  "settings-phone": 59589,
  "settings-power": 59590,
  "settings-remote": 59591,
  "settings-system-daydream": 57795,
  "settings-voice": 59592,
  "share": 59405,
  "shop": 59593,
  "shop-two": 59594,
  "shopping-basket": 59595,
  "shopping-cart": 59596,
  "short-text": 57953,
  "show-chart": 59105,
  "shuffle": 57411,
  "signal-cellular-4-bar": 57800,
  "signal-cellular-connected-no-internet-4-bar": 57805,
  "signal-cellular-no-sim": 57806,
  "signal-cellular-null": 57807,
  "signal-cellular-off": 57808,
  "signal-wifi-4-bar": 57816,
  "signal-wifi-4-bar-lock": 57817,
  "signal-wifi-off": 57818,
  "sim-card": 58155,
  "sim-card-alert": 58916,
  "skip-next": 57412,
  "skip-previous": 57413,
  "slideshow": 58395,
  "slow-motion-video": 57448,
  "smartphone": 58156,
  "smoke-free": 60234,
  "smoking-rooms": 60235,
  "sms": 58917,
  "sms-failed": 58918,
  "snooze": 57414,
  "sort": 57700,
  "sort-by-alpha": 57427,
  "spa": 60236,
  "space-bar": 57942,
  "speaker": 58157,
  "speaker-group": 58158,
  "speaker-notes": 59597,
  "speaker-notes-off": 59690,
  "speaker-phone": 57554,
  "spellcheck": 59598,
  "star": 59448,
  "star-border": 59450,
  "star-half": 59449,
  "stars": 59600,
  "stay-current-landscape": 57555,
  "stay-current-portrait": 57556,
  "stay-primary-landscape": 57557,
  "stay-primary-portrait": 57558,
  "stop": 57415,
  "stop-screen-share": 57571,
  "storage": 57819,
  "store": 59601,
  "store-mall-directory": 58723,
  "straighten": 58396,
  "streetview": 58734,
  "strikethrough-s": 57943,
  "style": 58397,
  "subdirectory-arrow-left": 58841,
  "subdirectory-arrow-right": 58842,
  "subject": 59602,
  "subscriptions": 57444,
  "subtitles": 57416,
  "subway": 58735,
  "supervisor-account": 59603,
  "surround-sound": 57417,
  "swap-calls": 57559,
  "swap-horiz": 59604,
  "swap-vert": 59605,
  "swap-vertical-circle": 59606,
  "switch-camera": 58398,
  "switch-video": 58399,
  "sync": 58919,
  "sync-disabled": 58920,
  "sync-problem": 58921,
  "system-update": 58922,
  "system-update-alt": 59607,
  "tab": 59608,
  "tab-unselected": 59609,
  "tablet": 58159,
  "tablet-android": 58160,
  "tablet-mac": 58161,
  "tag-faces": 58400,
  "tap-and-play": 58923,
  "terrain": 58724,
  "text-fields": 57954,
  "text-format": 57701,
  "textsms": 57560,
  "texture": 58401,
  "theaters": 59610,
  "thumb-down": 59611,
  "thumb-up": 59612,
  "thumbs-up-down": 59613,
  "time-to-leave": 58924,
  "timelapse": 58402,
  "timeline": 59682,
  "timer": 58405,
  "timer-10": 58403,
  "timer-3": 58404,
  "timer-off": 58406,
  "title": 57956,
  "toc": 59614,
  "today": 59615,
  "toll": 59616,
  "tonality": 58407,
  "touch-app": 59667,
  "toys": 58162,
  "track-changes": 59617,
  "traffic": 58725,
  "train": 58736,
  "tram": 58737,
  "transfer-within-a-station": 58738,
  "transform": 58408,
  "translate": 59618,
  "trending-down": 59619,
  "trending-flat": 59620,
  "trending-up": 59621,
  "tune": 58409,
  "turned-in": 59622,
  "turned-in-not": 59623,
  "tv": 58163,
  "unarchive": 57705,
  "undo": 57702,
  "unfold-less": 58838,
  "unfold-more": 58839,
  "update": 59683,
  "usb": 57824,
  "verified-user": 59624,
  "vertical-align-bottom": 57944,
  "vertical-align-center": 57945,
  "vertical-align-top": 57946,
  "vibration": 58925,
  "video-call": 57456,
  "video-label": 57457,
  "video-library": 57418,
  "videocam": 57419,
  "videocam-off": 57420,
  "videogame-asset": 58168,
  "view-agenda": 59625,
  "view-array": 59626,
  "view-carousel": 59627,
  "view-column": 59628,
  "view-comfy": 58410,
  "view-compact": 58411,
  "view-day": 59629,
  "view-headline": 59630,
  "view-list": 59631,
  "view-module": 59632,
  "view-quilt": 59633,
  "view-stream": 59634,
  "view-week": 59635,
  "vignette": 58421,
  "visibility": 59636,
  "visibility-off": 59637,
  "voice-chat": 58926,
  "voicemail": 57561,
  "volume-down": 57421,
  "volume-mute": 57422,
  "volume-off": 57423,
  "volume-up": 57424,
  "vpn-key": 57562,
  "vpn-lock": 58927,
  "wallpaper": 57788,
  "warning": 57346,
  "watch": 58164,
  "watch-later": 59684,
  "wb-auto": 58412,
  "wb-cloudy": 58413,
  "wb-incandescent": 58414,
  "wb-iridescent": 58422,
  "wb-sunny": 58416,
  "wc": 58941,
  "web": 57425,
  "web-asset": 57449,
  "weekend": 57707,
  "whatshot": 59406,
  "widgets": 57789,
  "wifi": 58942,
  "wifi-lock": 57825,
  "wifi-tethering": 57826,
  "work": 59641,
  "wrap-text": 57947,
  "youtube-searched-for": 59642,
  "zoom-in": 59647,
  "zoom-out": 59648,
  "zoom-out-map": 58731
};
}, 725, null, "react-native-vector-icons/glyphmaps/MaterialIcons.json");
__d(/* react-native-elements/src/helpers/getIconType.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Zocial = require(727                               ); // 727 = react-native-vector-icons/Zocial

var _Zocial2 = babelHelpers.interopRequireDefault(_Zocial);

var _Octicons = require(729                                 ); // 729 = react-native-vector-icons/Octicons

var _Octicons2 = babelHelpers.interopRequireDefault(_Octicons);

var _MaterialIcons = require(561                                      ); // 561 = react-native-vector-icons/MaterialIcons

var _MaterialIcons2 = babelHelpers.interopRequireDefault(_MaterialIcons);

var _MaterialCommunityIcons = require(731                                               ); // 731 = react-native-vector-icons/MaterialCommunityIcons

var _MaterialCommunityIcons2 = babelHelpers.interopRequireDefault(_MaterialCommunityIcons);

var _Ionicons = require(733                                 ); // 733 = react-native-vector-icons/Ionicons

var _Ionicons2 = babelHelpers.interopRequireDefault(_Ionicons);

var _Foundation = require(735                                   ); // 735 = react-native-vector-icons/Foundation

var _Foundation2 = babelHelpers.interopRequireDefault(_Foundation);

var _EvilIcons = require(737                                  ); // 737 = react-native-vector-icons/EvilIcons

var _EvilIcons2 = babelHelpers.interopRequireDefault(_EvilIcons);

var _Entypo = require(739                               ); // 739 = react-native-vector-icons/Entypo

var _Entypo2 = babelHelpers.interopRequireDefault(_Entypo);

var _FontAwesome = require(741                                    ); // 741 = react-native-vector-icons/FontAwesome

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var _SimpleLineIcons = require(743                                        ); // 743 = react-native-vector-icons/SimpleLineIcons

var _SimpleLineIcons2 = babelHelpers.interopRequireDefault(_SimpleLineIcons);

exports.default = function (type) {
  switch (type) {
    case 'zocial':
      return _Zocial2.default;
    case 'octicon':
      return _Octicons2.default;
    case 'material':
      return _MaterialIcons2.default;
    case 'material-community':
      return _MaterialCommunityIcons2.default;
    case 'ionicon':
      return _Ionicons2.default;
    case 'foundation':
      return _Foundation2.default;
    case 'evilicon':
      return _EvilIcons2.default;
    case 'entypo':
      return _Entypo2.default;
    case 'font-awesome':
      return _FontAwesome2.default;
    case 'simple-line-icon':
      return _SimpleLineIcons2.default;
    default:
      return _MaterialIcons2.default;
  }
};
}, 726, null, "react-native-elements/src/helpers/getIconType.js");
__d(/* react-native-vector-icons/Zocial.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _Zocial = require(728                      ); // 728 = ./glyphmaps/Zocial.json

var _Zocial2 = babelHelpers.interopRequireDefault(_Zocial);

var iconSet = (0, _createIconSet2.default)(_Zocial2.default, 'zocial', 'Zocial.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 727, null, "react-native-vector-icons/Zocial.js");
__d(/* react-native-vector-icons/glyphmaps/Zocial.json */function(global, require, module, exports) {module.exports = module.exports = {
  "acrobat": 61696,
  "amazon": 61697,
  "android": 61698,
  "angellist": 61699,
  "aol": 61700,
  "appnet": 61701,
  "appstore": 61702,
  "bitbucket": 61703,
  "bitcoin": 61704,
  "blogger": 61705,
  "buffer": 61706,
  "cal": 61707,
  "call": 61708,
  "cart": 61709,
  "chrome": 61710,
  "cloudapp": 61711,
  "creativecommons": 61712,
  "delicious": 61713,
  "digg": 61714,
  "disqus": 61715,
  "dribbble": 61716,
  "dropbox": 61717,
  "drupal": 61718,
  "dwolla": 61720,
  "email": 61721,
  "eventasaurus": 61722,
  "eventbrite": 61723,
  "eventful": 61724,
  "evernote": 61725,
  "facebook": 61726,
  "fivehundredpx": 61727,
  "flattr": 61728,
  "flickr": 61729,
  "forrst": 61730,
  "foursquare": 61731,
  "github": 61732,
  "gmail": 61733,
  "google": 61734,
  "googleplay": 61735,
  "googleplus": 61736,
  "gowalla": 61737,
  "grooveshark": 61738,
  "guest": 61739,
  "html5": 61740,
  "ie": 61741,
  "instagram": 61742,
  "instapaper": 61743,
  "intensedebate": 61744,
  "itunes": 61745,
  "klout": 61746,
  "lanyrd": 61747,
  "lastfm": 61748,
  "lego": 61749,
  "linkedin": 61750,
  "lkdto": 61751,
  "logmein": 61752,
  "macstore": 61753,
  "meetup": 61754,
  "myspace": 61755,
  "ninetyninedesigns": 61756,
  "openid": 61757,
  "opentable": 61758,
  "paypal": 61759,
  "persona": 61796,
  "pinboard": 61760,
  "pinterest": 61761,
  "plancast": 61762,
  "plurk": 61763,
  "pocket": 61764,
  "podcast": 61765,
  "posterous": 61766,
  "print": 61767,
  "quora": 61768,
  "reddit": 61769,
  "rss": 61770,
  "scribd": 61771,
  "skype": 61772,
  "smashing": 61773,
  "songkick": 61774,
  "soundcloud": 61775,
  "spotify": 61776,
  "stackoverflow": 61777,
  "statusnet": 61778,
  "steam": 61779,
  "stripe": 61780,
  "stumbleupon": 61781,
  "tumblr": 61782,
  "twitter": 61783,
  "viadeo": 61784,
  "vimeo": 61785,
  "vk": 61786,
  "weibo": 61787,
  "wikipedia": 61788,
  "windows": 61789,
  "wordpress": 61790,
  "xing": 61791,
  "yahoo": 61792,
  "ycombinator": 61793,
  "yelp": 61794,
  "youtube": 61795
};
}, 728, null, "react-native-vector-icons/glyphmaps/Zocial.json");
__d(/* react-native-vector-icons/Octicons.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _Octicons = require(730                        ); // 730 = ./glyphmaps/Octicons.json

var _Octicons2 = babelHelpers.interopRequireDefault(_Octicons);

var iconSet = (0, _createIconSet2.default)(_Octicons2.default, 'Octicons', 'Octicons.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 729, null, "react-native-vector-icons/Octicons.js");
__d(/* react-native-vector-icons/glyphmaps/Octicons.json */function(global, require, module, exports) {module.exports = module.exports = {
  "alert": 61696,
  "arrow-down": 61697,
  "arrow-left": 61698,
  "arrow-right": 61699,
  "arrow-small-down": 61700,
  "arrow-small-left": 61701,
  "arrow-small-right": 61702,
  "arrow-small-up": 61703,
  "arrow-up": 61704,
  "beaker": 61705,
  "bell": 61706,
  "bold": 61707,
  "book": 61708,
  "bookmark": 61709,
  "briefcase": 61710,
  "broadcast": 61711,
  "browser": 61712,
  "bug": 61713,
  "calendar": 61714,
  "check": 61715,
  "checklist": 61716,
  "chevron-down": 61717,
  "chevron-left": 61718,
  "chevron-right": 61719,
  "chevron-up": 61720,
  "circle-slash": 61721,
  "circuit-board": 61722,
  "clippy": 61723,
  "clock": 61724,
  "cloud-download": 61725,
  "cloud-upload": 61726,
  "code": 61727,
  "comment": 61728,
  "comment-discussion": 61729,
  "credit-card": 61730,
  "dash": 61731,
  "dashboard": 61732,
  "database": 61733,
  "desktop-download": 61734,
  "device-camera": 61735,
  "device-camera-video": 61736,
  "device-desktop": 61737,
  "device-mobile": 61738,
  "diff": 61739,
  "diff-added": 61740,
  "diff-ignored": 61741,
  "diff-modified": 61742,
  "diff-removed": 61743,
  "diff-renamed": 61744,
  "ellipses": 61745,
  "ellipsis": 61746,
  "eye": 61747,
  "file": 61748,
  "file-binary": 61749,
  "file-code": 61750,
  "file-directory": 61751,
  "file-media": 61752,
  "file-pdf": 61753,
  "file-submodule": 61754,
  "file-symlink-directory": 61755,
  "file-symlink-file": 61756,
  "file-text": 61757,
  "file-zip": 61758,
  "flame": 61759,
  "fold": 61760,
  "gear": 61761,
  "gift": 61762,
  "gist": 61763,
  "gist-secret": 61764,
  "git-branch": 61765,
  "git-commit": 61766,
  "git-compare": 61767,
  "git-merge": 61768,
  "git-pull-request": 61769,
  "globe": 61770,
  "grabber": 61771,
  "graph": 61772,
  "heart": 61773,
  "history": 61774,
  "home": 61775,
  "horizontal-rule": 61776,
  "hubot": 61777,
  "inbox": 61778,
  "info": 61779,
  "issue-closed": 61780,
  "issue-opened": 61781,
  "issue-reopened": 61782,
  "italic": 61783,
  "jersey": 61784,
  "key": 61785,
  "keyboard": 61786,
  "law": 61787,
  "light-bulb": 61788,
  "link": 61789,
  "link-external": 61790,
  "list-ordered": 61791,
  "list-unordered": 61792,
  "location": 61793,
  "lock": 61794,
  "logo-gist": 61795,
  "logo-github": 61796,
  "mail": 61797,
  "mail-read": 61798,
  "mail-reply": 61799,
  "mark-github": 61800,
  "markdown": 61801,
  "megaphone": 61802,
  "mention": 61803,
  "milestone": 61804,
  "mirror": 61805,
  "mortar-board": 61806,
  "mute": 61807,
  "no-newline": 61808,
  "note": 61809,
  "octoface": 61810,
  "organization": 61811,
  "package": 61812,
  "paintcan": 61813,
  "pencil": 61814,
  "person": 61815,
  "pin": 61816,
  "plug": 61817,
  "plus": 61818,
  "plus-small": 61819,
  "primitive-dot": 61820,
  "primitive-square": 61821,
  "project": 61822,
  "pulse": 61823,
  "question": 61824,
  "quote": 61825,
  "radio-tower": 61826,
  "reply": 61827,
  "repo": 61828,
  "repo-clone": 61829,
  "repo-force-push": 61830,
  "repo-forked": 61831,
  "repo-pull": 61832,
  "repo-push": 61833,
  "rocket": 61834,
  "rss": 61835,
  "ruby": 61836,
  "screen-full": 61837,
  "screen-normal": 61838,
  "search": 61839,
  "server": 61840,
  "settings": 61841,
  "shield": 61842,
  "sign-in": 61843,
  "sign-out": 61844,
  "smiley": 61845,
  "squirrel": 61846,
  "star": 61847,
  "stop": 61848,
  "sync": 61849,
  "tag": 61850,
  "tasklist": 61851,
  "telescope": 61852,
  "terminal": 61853,
  "text-size": 61854,
  "three-bars": 61855,
  "thumbsdown": 61856,
  "thumbsup": 61857,
  "tools": 61858,
  "trashcan": 61859,
  "triangle-down": 61860,
  "triangle-left": 61861,
  "triangle-right": 61862,
  "triangle-up": 61863,
  "unfold": 61864,
  "unmute": 61865,
  "unverified": 61866,
  "verified": 61867,
  "versions": 61868,
  "watch": 61869,
  "x": 61870,
  "zap": 61871
};
}, 730, null, "react-native-vector-icons/glyphmaps/Octicons.json");
__d(/* react-native-vector-icons/MaterialCommunityIcons.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _MaterialCommunityIcons = require(732                                      ); // 732 = ./glyphmaps/MaterialCommunityIcons.json

var _MaterialCommunityIcons2 = babelHelpers.interopRequireDefault(_MaterialCommunityIcons);

var iconSet = (0, _createIconSet2.default)(_MaterialCommunityIcons2.default, 'Material Design Icons', 'MaterialCommunityIcons.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 731, null, "react-native-vector-icons/MaterialCommunityIcons.js");
__d(/* react-native-vector-icons/glyphmaps/MaterialCommunityIcons.json */function(global, require, module, exports) {module.exports = module.exports = {
  "access-point": 61442,
  "access-point-network": 61443,
  "account": 61444,
  "account-alert": 61445,
  "account-box": 61446,
  "account-box-outline": 61447,
  "account-card-details": 62930,
  "account-check": 61448,
  "account-circle": 61449,
  "account-convert": 61450,
  "account-edit": 63163,
  "account-key": 61451,
  "account-location": 61452,
  "account-minus": 61453,
  "account-multiple": 61454,
  "account-multiple-minus": 62931,
  "account-multiple-outline": 61455,
  "account-multiple-plus": 61456,
  "account-network": 61457,
  "account-off": 61458,
  "account-outline": 61459,
  "account-plus": 61460,
  "account-remove": 61461,
  "account-search": 61462,
  "account-settings": 63024,
  "account-settings-variant": 63025,
  "account-star": 61463,
  "account-switch": 61465,
  "adjust": 61466,
  "air-conditioner": 61467,
  "airballoon": 61468,
  "airplane": 61469,
  "airplane-landing": 62932,
  "airplane-off": 61470,
  "airplane-takeoff": 62933,
  "airplay": 61471,
  "alarm": 61472,
  "alarm-check": 61473,
  "alarm-multiple": 61474,
  "alarm-off": 61475,
  "alarm-plus": 61476,
  "alarm-snooze": 63117,
  "album": 61477,
  "alert": 61478,
  "alert-box": 61479,
  "alert-circle": 61480,
  "alert-circle-outline": 62934,
  "alert-decagram": 63164,
  "alert-octagon": 61481,
  "alert-octagram": 63334,
  "alert-outline": 61482,
  "all-inclusive": 63165,
  "alpha": 61483,
  "alphabetical": 61484,
  "altimeter": 62935,
  "amazon": 61485,
  "amazon-clouddrive": 61486,
  "ambulance": 61487,
  "amplifier": 61488,
  "anchor": 61489,
  "android": 61490,
  "android-debug-bridge": 61491,
  "android-studio": 61492,
  "angular": 63153,
  "angularjs": 63166,
  "animation": 62936,
  "apple": 61493,
  "apple-finder": 61494,
  "apple-ios": 61495,
  "apple-keyboard-caps": 63026,
  "apple-keyboard-command": 63027,
  "apple-keyboard-control": 63028,
  "apple-keyboard-option": 63029,
  "apple-keyboard-shift": 63030,
  "apple-mobileme": 61496,
  "apple-safari": 61497,
  "application": 62996,
  "apps": 61499,
  "archive": 61500,
  "arrange-bring-forward": 61501,
  "arrange-bring-to-front": 61502,
  "arrange-send-backward": 61503,
  "arrange-send-to-back": 61504,
  "arrow-all": 61505,
  "arrow-bottom-left": 61506,
  "arrow-bottom-right": 61507,
  "arrow-compress": 62997,
  "arrow-compress-all": 61508,
  "arrow-down": 61509,
  "arrow-down-bold": 63277,
  "arrow-down-bold-box": 63278,
  "arrow-down-bold-box-outline": 63279,
  "arrow-down-bold-circle": 61511,
  "arrow-down-bold-circle-outline": 61512,
  "arrow-down-bold-hexagon-outline": 61513,
  "arrow-down-box": 63167,
  "arrow-down-drop-circle": 61514,
  "arrow-down-drop-circle-outline": 61515,
  "arrow-down-thick": 61510,
  "arrow-expand": 62998,
  "arrow-expand-all": 61516,
  "arrow-left": 61517,
  "arrow-left-bold": 63280,
  "arrow-left-bold-box": 63281,
  "arrow-left-bold-box-outline": 63282,
  "arrow-left-bold-circle": 61519,
  "arrow-left-bold-circle-outline": 61520,
  "arrow-left-bold-hexagon-outline": 61521,
  "arrow-left-box": 63168,
  "arrow-left-drop-circle": 61522,
  "arrow-left-drop-circle-outline": 61523,
  "arrow-left-thick": 61518,
  "arrow-right": 61524,
  "arrow-right-bold": 63283,
  "arrow-right-bold-box": 63284,
  "arrow-right-bold-box-outline": 63285,
  "arrow-right-bold-circle": 61526,
  "arrow-right-bold-circle-outline": 61527,
  "arrow-right-bold-hexagon-outline": 61528,
  "arrow-right-box": 63169,
  "arrow-right-drop-circle": 61529,
  "arrow-right-drop-circle-outline": 61530,
  "arrow-right-thick": 61525,
  "arrow-top-left": 61531,
  "arrow-top-right": 61532,
  "arrow-up": 61533,
  "arrow-up-bold": 63286,
  "arrow-up-bold-box": 63287,
  "arrow-up-bold-box-outline": 63288,
  "arrow-up-bold-circle": 61535,
  "arrow-up-bold-circle-outline": 61536,
  "arrow-up-bold-hexagon-outline": 61537,
  "arrow-up-box": 63170,
  "arrow-up-drop-circle": 61538,
  "arrow-up-drop-circle-outline": 61539,
  "arrow-up-thick": 61534,
  "assistant": 61540,
  "asterisk": 63171,
  "at": 61541,
  "atom": 63335,
  "attachment": 61542,
  "audiobook": 61543,
  "auto-fix": 61544,
  "auto-upload": 61545,
  "autorenew": 61546,
  "av-timer": 61547,
  "baby": 61548,
  "baby-buggy": 63118,
  "backburger": 61549,
  "backspace": 61550,
  "backup-restore": 61551,
  "bandcamp": 63092,
  "bank": 61552,
  "barcode": 61553,
  "barcode-scan": 61554,
  "barley": 61555,
  "barrel": 61556,
  "basecamp": 61557,
  "basket": 61558,
  "basket-fill": 61559,
  "basket-unfill": 61560,
  "battery": 61561,
  "battery-10": 61562,
  "battery-20": 61563,
  "battery-30": 61564,
  "battery-40": 61565,
  "battery-50": 61566,
  "battery-60": 61567,
  "battery-70": 61568,
  "battery-80": 61569,
  "battery-90": 61570,
  "battery-alert": 61571,
  "battery-charging": 61572,
  "battery-charging-100": 61573,
  "battery-charging-20": 61574,
  "battery-charging-30": 61575,
  "battery-charging-40": 61576,
  "battery-charging-60": 61577,
  "battery-charging-80": 61578,
  "battery-charging-90": 61579,
  "battery-minus": 61580,
  "battery-negative": 61581,
  "battery-outline": 61582,
  "battery-plus": 61583,
  "battery-positive": 61584,
  "battery-unknown": 61585,
  "beach": 61586,
  "beaker": 63119,
  "beats": 61591,
  "beer": 61592,
  "behance": 61593,
  "bell": 61594,
  "bell-off": 61595,
  "bell-outline": 61596,
  "bell-plus": 61597,
  "bell-ring": 61598,
  "bell-ring-outline": 61599,
  "bell-sleep": 61600,
  "beta": 61601,
  "bible": 61602,
  "bike": 61603,
  "bing": 61604,
  "binoculars": 61605,
  "bio": 61606,
  "biohazard": 61607,
  "bitbucket": 61608,
  "black-mesa": 61609,
  "blackberry": 61610,
  "blender": 61611,
  "blinds": 61612,
  "block-helper": 61613,
  "blogger": 61614,
  "bluetooth": 61615,
  "bluetooth-audio": 61616,
  "bluetooth-connect": 61617,
  "bluetooth-off": 61618,
  "bluetooth-settings": 61619,
  "bluetooth-transfer": 61620,
  "blur": 61621,
  "blur-linear": 61622,
  "blur-off": 61623,
  "blur-radial": 61624,
  "bomb": 63120,
  "bomb-off": 63172,
  "bone": 61625,
  "book": 61626,
  "book-minus": 62937,
  "book-multiple": 61627,
  "book-multiple-variant": 61628,
  "book-open": 61629,
  "book-open-page-variant": 62938,
  "book-open-variant": 61630,
  "book-plus": 62939,
  "book-variant": 61631,
  "bookmark": 61632,
  "bookmark-check": 61633,
  "bookmark-music": 61634,
  "bookmark-outline": 61635,
  "bookmark-plus": 61637,
  "bookmark-plus-outline": 61636,
  "bookmark-remove": 61638,
  "boombox": 62940,
  "bootstrap": 63173,
  "border-all": 61639,
  "border-bottom": 61640,
  "border-color": 61641,
  "border-horizontal": 61642,
  "border-inside": 61643,
  "border-left": 61644,
  "border-none": 61645,
  "border-outside": 61646,
  "border-right": 61647,
  "border-style": 61648,
  "border-top": 61649,
  "border-vertical": 61650,
  "bow-tie": 63095,
  "bowl": 62999,
  "bowling": 61651,
  "box": 61652,
  "box-cutter": 61653,
  "box-shadow": 63031,
  "bridge": 63000,
  "briefcase": 61654,
  "briefcase-check": 61655,
  "briefcase-download": 61656,
  "briefcase-upload": 61657,
  "brightness-1": 61658,
  "brightness-2": 61659,
  "brightness-3": 61660,
  "brightness-4": 61661,
  "brightness-5": 61662,
  "brightness-6": 61663,
  "brightness-7": 61664,
  "brightness-auto": 61665,
  "broom": 61666,
  "brush": 61667,
  "buffer": 63001,
  "bug": 61668,
  "bulletin-board": 61669,
  "bullhorn": 61670,
  "bullseye": 62941,
  "burst-mode": 62942,
  "bus": 61671,
  "cached": 61672,
  "cake": 61673,
  "cake-layered": 61674,
  "cake-variant": 61675,
  "calculator": 61676,
  "calendar": 61677,
  "calendar-blank": 61678,
  "calendar-check": 61679,
  "calendar-clock": 61680,
  "calendar-multiple": 61681,
  "calendar-multiple-check": 61682,
  "calendar-plus": 61683,
  "calendar-question": 63121,
  "calendar-range": 63096,
  "calendar-remove": 61684,
  "calendar-text": 61685,
  "calendar-today": 61686,
  "call-made": 61687,
  "call-merge": 61688,
  "call-missed": 61689,
  "call-received": 61690,
  "call-split": 61691,
  "camcorder": 61692,
  "camcorder-box": 61693,
  "camcorder-box-off": 61694,
  "camcorder-off": 61695,
  "camera": 61696,
  "camera-burst": 63122,
  "camera-enhance": 61697,
  "camera-front": 61698,
  "camera-front-variant": 61699,
  "camera-iris": 61700,
  "camera-off": 62943,
  "camera-party-mode": 61701,
  "camera-rear": 61702,
  "camera-rear-variant": 61703,
  "camera-switch": 61704,
  "camera-timer": 61705,
  "cancel": 63289,
  "candle": 62946,
  "candycane": 61706,
  "car": 61707,
  "car-battery": 61708,
  "car-connected": 61709,
  "car-wash": 61710,
  "cards": 63032,
  "cards-outline": 63033,
  "cards-playing-outline": 63034,
  "cards-variant": 63174,
  "carrot": 61711,
  "cart": 61712,
  "cart-off": 63083,
  "cart-outline": 61713,
  "cart-plus": 61714,
  "case-sensitive-alt": 61715,
  "cash": 61716,
  "cash-100": 61717,
  "cash-multiple": 61718,
  "cash-usd": 61719,
  "cast": 61720,
  "cast-connected": 61721,
  "cast-off": 63369,
  "castle": 61722,
  "cat": 61723,
  "ceiling-light": 63336,
  "cellphone": 61724,
  "cellphone-android": 61725,
  "cellphone-basic": 61726,
  "cellphone-dock": 61727,
  "cellphone-iphone": 61728,
  "cellphone-link": 61729,
  "cellphone-link-off": 61730,
  "cellphone-settings": 61731,
  "certificate": 61732,
  "chair-school": 61733,
  "chart-arc": 61734,
  "chart-areaspline": 61735,
  "chart-bar": 61736,
  "chart-bar-stacked": 63337,
  "chart-bubble": 62947,
  "chart-gantt": 63084,
  "chart-histogram": 61737,
  "chart-line": 61738,
  "chart-line-stacked": 63338,
  "chart-pie": 61739,
  "chart-scatterplot-hexbin": 63085,
  "chart-timeline": 63086,
  "check": 61740,
  "check-all": 61741,
  "check-circle": 62944,
  "check-circle-outline": 62945,
  "checkbox-blank": 61742,
  "checkbox-blank-circle": 61743,
  "checkbox-blank-circle-outline": 61744,
  "checkbox-blank-outline": 61745,
  "checkbox-marked": 61746,
  "checkbox-marked-circle": 61747,
  "checkbox-marked-circle-outline": 61748,
  "checkbox-marked-outline": 61749,
  "checkbox-multiple-blank": 61750,
  "checkbox-multiple-blank-circle": 63035,
  "checkbox-multiple-blank-circle-outline": 63036,
  "checkbox-multiple-blank-outline": 61751,
  "checkbox-multiple-marked": 61752,
  "checkbox-multiple-marked-circle": 63037,
  "checkbox-multiple-marked-circle-outline": 63038,
  "checkbox-multiple-marked-outline": 61753,
  "checkerboard": 61754,
  "chemical-weapon": 61755,
  "chevron-double-down": 61756,
  "chevron-double-left": 61757,
  "chevron-double-right": 61758,
  "chevron-double-up": 61759,
  "chevron-down": 61760,
  "chevron-left": 61761,
  "chevron-right": 61762,
  "chevron-up": 61763,
  "chip": 63002,
  "church": 61764,
  "circle": 63332,
  "circle-outline": 63333,
  "cisco-webex": 61765,
  "city": 61766,
  "clipboard": 61767,
  "clipboard-account": 61768,
  "clipboard-alert": 61769,
  "clipboard-arrow-down": 61770,
  "clipboard-arrow-left": 61771,
  "clipboard-check": 61772,
  "clipboard-flow": 63175,
  "clipboard-outline": 61773,
  "clipboard-plus": 63312,
  "clipboard-text": 61774,
  "clippy": 61775,
  "clock": 61776,
  "clock-alert": 62926,
  "clock-end": 61777,
  "clock-fast": 61778,
  "clock-in": 61779,
  "clock-out": 61780,
  "clock-start": 61781,
  "close": 61782,
  "close-box": 61783,
  "close-box-outline": 61784,
  "close-circle": 61785,
  "close-circle-outline": 61786,
  "close-network": 61787,
  "close-octagon": 61788,
  "close-octagon-outline": 61789,
  "close-outline": 63176,
  "closed-caption": 61790,
  "cloud": 61791,
  "cloud-check": 61792,
  "cloud-circle": 61793,
  "cloud-download": 61794,
  "cloud-off-outline": 61796,
  "cloud-outline": 61795,
  "cloud-print": 61797,
  "cloud-print-outline": 61798,
  "cloud-sync": 63039,
  "cloud-upload": 61799,
  "code-array": 61800,
  "code-braces": 61801,
  "code-brackets": 61802,
  "code-equal": 61803,
  "code-greater-than": 61804,
  "code-greater-than-or-equal": 61805,
  "code-less-than": 61806,
  "code-less-than-or-equal": 61807,
  "code-not-equal": 61808,
  "code-not-equal-variant": 61809,
  "code-parentheses": 61810,
  "code-string": 61811,
  "code-tags": 61812,
  "code-tags-check": 63123,
  "codepen": 61813,
  "coffee": 61814,
  "coffee-outline": 63177,
  "coffee-to-go": 61815,
  "coin": 61816,
  "coins": 63124,
  "collage": 63040,
  "color-helper": 61817,
  "comment": 61818,
  "comment-account": 61819,
  "comment-account-outline": 61820,
  "comment-alert": 61821,
  "comment-alert-outline": 61822,
  "comment-check": 61823,
  "comment-check-outline": 61824,
  "comment-multiple-outline": 61825,
  "comment-outline": 61826,
  "comment-plus-outline": 61827,
  "comment-processing": 61828,
  "comment-processing-outline": 61829,
  "comment-question-outline": 61830,
  "comment-remove-outline": 61831,
  "comment-text": 61832,
  "comment-text-outline": 61833,
  "compare": 61834,
  "compass": 61835,
  "compass-outline": 61836,
  "console": 61837,
  "contact-mail": 61838,
  "contacts": 63178,
  "content-copy": 61839,
  "content-cut": 61840,
  "content-duplicate": 61841,
  "content-paste": 61842,
  "content-save": 61843,
  "content-save-all": 61844,
  "content-save-settings": 63003,
  "contrast": 61845,
  "contrast-box": 61846,
  "contrast-circle": 61847,
  "cookie": 61848,
  "copyright": 62950,
  "counter": 61849,
  "cow": 61850,
  "creation": 61897,
  "credit-card": 61851,
  "credit-card-multiple": 61852,
  "credit-card-off": 62948,
  "credit-card-plus": 63093,
  "credit-card-scan": 61853,
  "crop": 61854,
  "crop-free": 61855,
  "crop-landscape": 61856,
  "crop-portrait": 61857,
  "crop-rotate": 63125,
  "crop-square": 61858,
  "crosshairs": 61859,
  "crosshairs-gps": 61860,
  "crown": 61861,
  "cube": 61862,
  "cube-outline": 61863,
  "cube-send": 61864,
  "cube-unfolded": 61865,
  "cup": 61866,
  "cup-off": 62949,
  "cup-water": 61867,
  "currency-btc": 61868,
  "currency-eur": 61869,
  "currency-gbp": 61870,
  "currency-inr": 61871,
  "currency-ngn": 61872,
  "currency-rub": 61873,
  "currency-try": 61874,
  "currency-usd": 61875,
  "currency-usd-off": 63097,
  "cursor-default": 61876,
  "cursor-default-outline": 61877,
  "cursor-move": 61878,
  "cursor-pointer": 61879,
  "cursor-text": 62951,
  "database": 61880,
  "database-minus": 61881,
  "database-plus": 61882,
  "debug-step-into": 61883,
  "debug-step-out": 61884,
  "debug-step-over": 61885,
  "decagram": 63339,
  "decagram-outline": 63340,
  "decimal-decrease": 61886,
  "decimal-increase": 61887,
  "delete": 61888,
  "delete-circle": 63106,
  "delete-empty": 63179,
  "delete-forever": 62952,
  "delete-sweep": 62953,
  "delete-variant": 61889,
  "delta": 61890,
  "deskphone": 61891,
  "desktop-mac": 61892,
  "desktop-tower": 61893,
  "details": 61894,
  "developer-board": 63126,
  "deviantart": 61895,
  "dialpad": 63004,
  "diamond": 61896,
  "dice-1": 61898,
  "dice-2": 61899,
  "dice-3": 61900,
  "dice-4": 61901,
  "dice-5": 61902,
  "dice-6": 61903,
  "dice-d10": 63342,
  "dice-d20": 62954,
  "dice-d4": 62955,
  "dice-d6": 62956,
  "dice-d8": 62957,
  "dice-multiple": 63341,
  "dictionary": 63005,
  "directions": 61904,
  "directions-fork": 63041,
  "discord": 63087,
  "disk": 62958,
  "disk-alert": 61905,
  "disqus": 61906,
  "disqus-outline": 61907,
  "division": 61908,
  "division-box": 61909,
  "dna": 63107,
  "dns": 61910,
  "do-not-disturb": 63127,
  "do-not-disturb-off": 63128,
  "dolby": 63154,
  "domain": 61911,
  "dots-horizontal": 61912,
  "dots-vertical": 61913,
  "douban": 63129,
  "download": 61914,
  "download-network": 63219,
  "drag": 61915,
  "drag-horizontal": 61916,
  "drag-vertical": 61917,
  "drawing": 61918,
  "drawing-box": 61919,
  "dribbble": 61920,
  "dribbble-box": 61921,
  "drone": 61922,
  "dropbox": 61923,
  "drupal": 61924,
  "duck": 61925,
  "dumbbell": 61926,
  "earth": 61927,
  "earth-box": 63180,
  "earth-box-off": 63181,
  "earth-off": 61928,
  "edge": 61929,
  "eject": 61930,
  "elevation-decline": 61931,
  "elevation-rise": 61932,
  "elevator": 61933,
  "email": 61934,
  "email-alert": 63182,
  "email-open": 61935,
  "email-open-outline": 62959,
  "email-outline": 61936,
  "email-secure": 61937,
  "email-variant": 62960,
  "emby": 63155,
  "emoticon": 61938,
  "emoticon-cool": 61939,
  "emoticon-dead": 63130,
  "emoticon-devil": 61940,
  "emoticon-excited": 63131,
  "emoticon-happy": 61941,
  "emoticon-neutral": 61942,
  "emoticon-poop": 61943,
  "emoticon-sad": 61944,
  "emoticon-tongue": 61945,
  "engine": 61946,
  "engine-outline": 61947,
  "equal": 61948,
  "equal-box": 61949,
  "eraser": 61950,
  "eraser-variant": 63042,
  "escalator": 61951,
  "ethernet": 61952,
  "ethernet-cable": 61953,
  "ethernet-cable-off": 61954,
  "etsy": 61955,
  "ev-station": 62961,
  "evernote": 61956,
  "exclamation": 61957,
  "exit-to-app": 61958,
  "export": 61959,
  "eye": 61960,
  "eye-off": 61961,
  "eye-off-outline": 63184,
  "eye-outline": 63183,
  "eyedropper": 61962,
  "eyedropper-variant": 61963,
  "face": 63043,
  "face-profile": 63044,
  "facebook": 61964,
  "facebook-box": 61965,
  "facebook-messenger": 61966,
  "factory": 61967,
  "fan": 61968,
  "fast-forward": 61969,
  "fast-forward-outline": 63185,
  "fax": 61970,
  "feather": 63186,
  "ferry": 61971,
  "file": 61972,
  "file-account": 63290,
  "file-chart": 61973,
  "file-check": 61974,
  "file-cloud": 61975,
  "file-delimited": 61976,
  "file-document": 61977,
  "file-document-box": 61978,
  "file-excel": 61979,
  "file-excel-box": 61980,
  "file-export": 61981,
  "file-find": 61982,
  "file-hidden": 62995,
  "file-image": 61983,
  "file-import": 61984,
  "file-lock": 61985,
  "file-multiple": 61986,
  "file-music": 61987,
  "file-outline": 61988,
  "file-pdf": 61989,
  "file-pdf-box": 61990,
  "file-plus": 63313,
  "file-powerpoint": 61991,
  "file-powerpoint-box": 61992,
  "file-presentation-box": 61993,
  "file-restore": 63088,
  "file-send": 61994,
  "file-tree": 63045,
  "file-video": 61995,
  "file-word": 61996,
  "file-word-box": 61997,
  "file-xml": 61998,
  "film": 61999,
  "filmstrip": 62000,
  "filmstrip-off": 62001,
  "filter": 62002,
  "filter-outline": 62003,
  "filter-remove": 62004,
  "filter-remove-outline": 62005,
  "filter-variant": 62006,
  "find-replace": 63187,
  "fingerprint": 62007,
  "fire": 62008,
  "firefox": 62009,
  "fish": 62010,
  "flag": 62011,
  "flag-checkered": 62012,
  "flag-outline": 62013,
  "flag-outline-variant": 62014,
  "flag-triangle": 62015,
  "flag-variant": 62016,
  "flash": 62017,
  "flash-auto": 62018,
  "flash-off": 62019,
  "flash-outline": 63188,
  "flash-red-eye": 63098,
  "flashlight": 62020,
  "flashlight-off": 62021,
  "flask": 61587,
  "flask-empty": 61588,
  "flask-empty-outline": 61589,
  "flask-outline": 61590,
  "flattr": 62022,
  "flip-to-back": 62023,
  "flip-to-front": 62024,
  "floppy": 62025,
  "flower": 62026,
  "folder": 62027,
  "folder-account": 62028,
  "folder-download": 62029,
  "folder-google-drive": 62030,
  "folder-image": 62031,
  "folder-lock": 62032,
  "folder-lock-open": 62033,
  "folder-move": 62034,
  "folder-multiple": 62035,
  "folder-multiple-image": 62036,
  "folder-multiple-outline": 62037,
  "folder-open": 63343,
  "folder-outline": 62038,
  "folder-plus": 62039,
  "folder-remove": 62040,
  "folder-star": 63132,
  "folder-upload": 62041,
  "font-awesome": 61498,
  "food": 62042,
  "food-apple": 62043,
  "food-fork-drink": 62962,
  "food-off": 62963,
  "food-variant": 62044,
  "football": 62045,
  "football-australian": 62046,
  "football-helmet": 62047,
  "format-align-bottom": 63314,
  "format-align-center": 62048,
  "format-align-justify": 62049,
  "format-align-left": 62050,
  "format-align-middle": 63315,
  "format-align-right": 62051,
  "format-align-top": 63316,
  "format-annotation-plus": 63046,
  "format-bold": 62052,
  "format-clear": 62053,
  "format-color-fill": 62054,
  "format-color-text": 63133,
  "format-float-center": 62055,
  "format-float-left": 62056,
  "format-float-none": 62057,
  "format-float-right": 62058,
  "format-font": 63189,
  "format-header-1": 62059,
  "format-header-2": 62060,
  "format-header-3": 62061,
  "format-header-4": 62062,
  "format-header-5": 62063,
  "format-header-6": 62064,
  "format-header-decrease": 62065,
  "format-header-equal": 62066,
  "format-header-increase": 62067,
  "format-header-pound": 62068,
  "format-horizontal-align-center": 63006,
  "format-horizontal-align-left": 63007,
  "format-horizontal-align-right": 63008,
  "format-indent-decrease": 62069,
  "format-indent-increase": 62070,
  "format-italic": 62071,
  "format-line-spacing": 62072,
  "format-line-style": 62920,
  "format-line-weight": 62921,
  "format-list-bulleted": 62073,
  "format-list-bulleted-type": 62074,
  "format-list-checks": 63317,
  "format-list-numbers": 62075,
  "format-page-break": 63190,
  "format-paint": 62076,
  "format-paragraph": 62077,
  "format-pilcrow": 63191,
  "format-quote-close": 62078,
  "format-quote-open": 63318,
  "format-rotate-90": 63145,
  "format-section": 63134,
  "format-size": 62079,
  "format-strikethrough": 62080,
  "format-strikethrough-variant": 62081,
  "format-subscript": 62082,
  "format-superscript": 62083,
  "format-text": 62084,
  "format-textdirection-l-to-r": 62085,
  "format-textdirection-r-to-l": 62086,
  "format-title": 62964,
  "format-underline": 62087,
  "format-vertical-align-bottom": 63009,
  "format-vertical-align-center": 63010,
  "format-vertical-align-top": 63011,
  "format-wrap-inline": 62088,
  "format-wrap-square": 62089,
  "format-wrap-tight": 62090,
  "format-wrap-top-bottom": 62091,
  "forum": 62092,
  "forward": 62093,
  "foursquare": 62094,
  "fridge": 62095,
  "fridge-filled": 62096,
  "fridge-filled-bottom": 62097,
  "fridge-filled-top": 62098,
  "fullscreen": 62099,
  "fullscreen-exit": 62100,
  "function": 62101,
  "gamepad": 62102,
  "gamepad-variant": 62103,
  "garage": 63192,
  "garage-open": 63193,
  "gas-cylinder": 63047,
  "gas-station": 62104,
  "gate": 62105,
  "gauge": 62106,
  "gavel": 62107,
  "gender-female": 62108,
  "gender-male": 62109,
  "gender-male-female": 62110,
  "gender-transgender": 62111,
  "gesture-double-tap": 63291,
  "gesture-swipe-down": 63292,
  "gesture-swipe-left": 63293,
  "gesture-swipe-right": 63294,
  "gesture-swipe-up": 63295,
  "gesture-tap": 63296,
  "gesture-two-double-tap": 63297,
  "gesture-two-tap": 63298,
  "ghost": 62112,
  "gift": 62113,
  "git": 62114,
  "github-box": 62115,
  "github-circle": 62116,
  "github-face": 63194,
  "glass-flute": 62117,
  "glass-mug": 62118,
  "glass-stange": 62119,
  "glass-tulip": 62120,
  "glassdoor": 62121,
  "glasses": 62122,
  "gmail": 62123,
  "gnome": 62124,
  "gondola": 63109,
  "google": 62125,
  "google-cardboard": 62126,
  "google-chrome": 62127,
  "google-circles": 62128,
  "google-circles-communities": 62129,
  "google-circles-extended": 62130,
  "google-circles-group": 62131,
  "google-controller": 62132,
  "google-controller-off": 62133,
  "google-drive": 62134,
  "google-earth": 62135,
  "google-glass": 62136,
  "google-keep": 63195,
  "google-maps": 62965,
  "google-nearby": 62137,
  "google-pages": 62138,
  "google-photos": 63196,
  "google-physical-web": 62139,
  "google-play": 62140,
  "google-plus": 62141,
  "google-plus-box": 62142,
  "google-translate": 62143,
  "google-wallet": 62144,
  "gradient": 63135,
  "grease-pencil": 63048,
  "grid": 62145,
  "grid-large": 63319,
  "grid-off": 62146,
  "group": 62147,
  "guitar-acoustic": 63344,
  "guitar-electric": 62148,
  "guitar-pick": 62149,
  "guitar-pick-outline": 62150,
  "hackernews": 63012,
  "hamburger": 63108,
  "hand-pointing-right": 62151,
  "hanger": 62152,
  "hangouts": 62153,
  "harddisk": 62154,
  "headphones": 62155,
  "headphones-box": 62156,
  "headphones-settings": 62157,
  "headset": 62158,
  "headset-dock": 62159,
  "headset-off": 62160,
  "heart": 62161,
  "heart-box": 62162,
  "heart-box-outline": 62163,
  "heart-broken": 62164,
  "heart-half": 63198,
  "heart-half-full": 63197,
  "heart-half-outline": 63199,
  "heart-off": 63320,
  "heart-outline": 62165,
  "heart-pulse": 62966,
  "help": 62166,
  "help-box": 63370,
  "help-circle": 62167,
  "help-circle-outline": 63013,
  "help-network": 63220,
  "hexagon": 62168,
  "hexagon-multiple": 63200,
  "hexagon-outline": 62169,
  "highway": 62967,
  "history": 62170,
  "hololens": 62171,
  "home": 62172,
  "home-map-marker": 62968,
  "home-modern": 62173,
  "home-outline": 63136,
  "home-variant": 62174,
  "hook": 63201,
  "hook-off": 63202,
  "hops": 62175,
  "hospital": 62176,
  "hospital-building": 62177,
  "hospital-marker": 62178,
  "hotel": 62179,
  "houzz": 62180,
  "houzz-box": 62181,
  "human": 62182,
  "human-child": 62183,
  "human-female": 63049,
  "human-greeting": 63050,
  "human-handsdown": 63051,
  "human-handsup": 63052,
  "human-male": 63053,
  "human-male-female": 62184,
  "human-pregnant": 62927,
  "humble-bundle": 63299,
  "image": 62185,
  "image-album": 62186,
  "image-area": 62187,
  "image-area-close": 62188,
  "image-broken": 62189,
  "image-broken-variant": 62190,
  "image-filter": 62191,
  "image-filter-black-white": 62192,
  "image-filter-center-focus": 62193,
  "image-filter-center-focus-weak": 62194,
  "image-filter-drama": 62195,
  "image-filter-frames": 62196,
  "image-filter-hdr": 62197,
  "image-filter-none": 62198,
  "image-filter-tilt-shift": 62199,
  "image-filter-vintage": 62200,
  "image-multiple": 62201,
  "import": 62202,
  "inbox": 63110,
  "inbox-arrow-down": 62203,
  "inbox-arrow-up": 62417,
  "incognito": 62969,
  "infinity": 63203,
  "information": 62204,
  "information-outline": 62205,
  "information-variant": 63054,
  "instagram": 62206,
  "instapaper": 62207,
  "internet-explorer": 62208,
  "invert-colors": 62209,
  "itunes": 63094,
  "jeepney": 62210,
  "jira": 62211,
  "jsfiddle": 62212,
  "json": 63014,
  "keg": 62213,
  "kettle": 62970,
  "key": 62214,
  "key-change": 62215,
  "key-minus": 62216,
  "key-plus": 62217,
  "key-remove": 62218,
  "key-variant": 62219,
  "keyboard": 62220,
  "keyboard-backspace": 62221,
  "keyboard-caps": 62222,
  "keyboard-close": 62223,
  "keyboard-off": 62224,
  "keyboard-return": 62225,
  "keyboard-tab": 62226,
  "keyboard-variant": 62227,
  "kickstarter": 63300,
  "kodi": 62228,
  "label": 62229,
  "label-outline": 62230,
  "lambda": 63015,
  "lamp": 63156,
  "lan": 62231,
  "lan-connect": 62232,
  "lan-disconnect": 62233,
  "lan-pending": 62234,
  "language-c": 63089,
  "language-cpp": 63090,
  "language-csharp": 62235,
  "language-css3": 62236,
  "language-html5": 62237,
  "language-javascript": 62238,
  "language-php": 62239,
  "language-python": 62240,
  "language-python-text": 62241,
  "language-swift": 63204,
  "language-typescript": 63205,
  "laptop": 62242,
  "laptop-chromebook": 62243,
  "laptop-mac": 62244,
  "laptop-off": 63206,
  "laptop-windows": 62245,
  "lastfm": 62246,
  "launch": 62247,
  "layers": 62248,
  "layers-off": 62249,
  "lead-pencil": 63055,
  "leaf": 62250,
  "led-off": 62251,
  "led-on": 62252,
  "led-outline": 62253,
  "led-variant-off": 62254,
  "led-variant-on": 62255,
  "led-variant-outline": 62256,
  "library": 62257,
  "library-books": 62258,
  "library-music": 62259,
  "library-plus": 62260,
  "lightbulb": 62261,
  "lightbulb-on": 63207,
  "lightbulb-on-outline": 63208,
  "lightbulb-outline": 62262,
  "link": 62263,
  "link-off": 62264,
  "link-variant": 62265,
  "link-variant-off": 62266,
  "linkedin": 62267,
  "linkedin-box": 62268,
  "linux": 62269,
  "loading": 63345,
  "lock": 62270,
  "lock-open": 62271,
  "lock-open-outline": 62272,
  "lock-outline": 62273,
  "lock-pattern": 63209,
  "lock-plus": 62971,
  "lock-reset": 63346,
  "login": 62274,
  "login-variant": 62972,
  "logout": 62275,
  "logout-variant": 62973,
  "looks": 62276,
  "loop": 63210,
  "loupe": 62277,
  "lumx": 62278,
  "magnet": 62279,
  "magnet-on": 62280,
  "magnify": 62281,
  "magnify-minus": 62282,
  "magnify-minus-outline": 63211,
  "magnify-plus": 62283,
  "magnify-plus-outline": 63212,
  "mail-ru": 62284,
  "mailbox": 63213,
  "map": 62285,
  "map-marker": 62286,
  "map-marker-circle": 62287,
  "map-marker-minus": 63056,
  "map-marker-multiple": 62288,
  "map-marker-off": 62289,
  "map-marker-plus": 63057,
  "map-marker-radius": 62290,
  "margin": 62291,
  "markdown": 62292,
  "marker": 63058,
  "marker-check": 62293,
  "martini": 62294,
  "material-ui": 62295,
  "math-compass": 62296,
  "matrix": 63016,
  "maxcdn": 62297,
  "medical-bag": 63214,
  "medium": 62298,
  "memory": 62299,
  "menu": 62300,
  "menu-down": 62301,
  "menu-down-outline": 63157,
  "menu-left": 62302,
  "menu-right": 62303,
  "menu-up": 62304,
  "menu-up-outline": 63158,
  "message": 62305,
  "message-alert": 62306,
  "message-bulleted": 63137,
  "message-bulleted-off": 63138,
  "message-draw": 62307,
  "message-image": 62308,
  "message-outline": 62309,
  "message-plus": 63059,
  "message-processing": 62310,
  "message-reply": 62311,
  "message-reply-text": 62312,
  "message-settings": 63215,
  "message-settings-variant": 63216,
  "message-text": 62313,
  "message-text-outline": 62314,
  "message-video": 62315,
  "meteor": 63017,
  "microphone": 62316,
  "microphone-off": 62317,
  "microphone-outline": 62318,
  "microphone-settings": 62319,
  "microphone-variant": 62320,
  "microphone-variant-off": 62321,
  "microscope": 63060,
  "microsoft": 62322,
  "minecraft": 62323,
  "minus": 62324,
  "minus-box": 62325,
  "minus-box-outline": 63217,
  "minus-circle": 62326,
  "minus-circle-outline": 62327,
  "minus-network": 62328,
  "mixcloud": 63018,
  "monitor": 62329,
  "monitor-multiple": 62330,
  "more": 62331,
  "motorbike": 62332,
  "mouse": 62333,
  "mouse-off": 62334,
  "mouse-variant": 62335,
  "mouse-variant-off": 62336,
  "move-resize": 63061,
  "move-resize-variant": 63062,
  "movie": 62337,
  "multiplication": 62338,
  "multiplication-box": 62339,
  "music": 63321,
  "music-box": 62340,
  "music-box-outline": 62341,
  "music-circle": 62342,
  "music-note": 62343,
  "music-note-bluetooth": 62974,
  "music-note-bluetooth-off": 62975,
  "music-note-eighth": 62344,
  "music-note-half": 62345,
  "music-note-off": 62346,
  "music-note-quarter": 62347,
  "music-note-sixteenth": 62348,
  "music-note-whole": 62349,
  "music-off": 63322,
  "nature": 62350,
  "nature-people": 62351,
  "navigation": 62352,
  "near-me": 62925,
  "needle": 62353,
  "nest-protect": 62354,
  "nest-thermostat": 62355,
  "netflix": 63301,
  "network": 63218,
  "new-box": 62356,
  "newspaper": 62357,
  "nfc": 62358,
  "nfc-tap": 62359,
  "nfc-variant": 62360,
  "ninja": 63347,
  "nodejs": 62361,
  "note": 62362,
  "note-multiple": 63159,
  "note-multiple-outline": 63160,
  "note-outline": 62363,
  "note-plus": 62364,
  "note-plus-outline": 62365,
  "note-text": 62366,
  "notification-clear-all": 62367,
  "npm": 63222,
  "nuke": 63139,
  "numeric": 62368,
  "numeric-0-box": 62369,
  "numeric-0-box-multiple-outline": 62370,
  "numeric-0-box-outline": 62371,
  "numeric-1-box": 62372,
  "numeric-1-box-multiple-outline": 62373,
  "numeric-1-box-outline": 62374,
  "numeric-2-box": 62375,
  "numeric-2-box-multiple-outline": 62376,
  "numeric-2-box-outline": 62377,
  "numeric-3-box": 62378,
  "numeric-3-box-multiple-outline": 62379,
  "numeric-3-box-outline": 62380,
  "numeric-4-box": 62381,
  "numeric-4-box-multiple-outline": 62382,
  "numeric-4-box-outline": 62383,
  "numeric-5-box": 62384,
  "numeric-5-box-multiple-outline": 62385,
  "numeric-5-box-outline": 62386,
  "numeric-6-box": 62387,
  "numeric-6-box-multiple-outline": 62388,
  "numeric-6-box-outline": 62389,
  "numeric-7-box": 62390,
  "numeric-7-box-multiple-outline": 62391,
  "numeric-7-box-outline": 62392,
  "numeric-8-box": 62393,
  "numeric-8-box-multiple-outline": 62394,
  "numeric-8-box-outline": 62395,
  "numeric-9-box": 62396,
  "numeric-9-box-multiple-outline": 62397,
  "numeric-9-box-outline": 62398,
  "numeric-9-plus-box": 62399,
  "numeric-9-plus-box-multiple-outline": 62400,
  "numeric-9-plus-box-outline": 62401,
  "nut": 63223,
  "nutrition": 62402,
  "oar": 63099,
  "octagon": 62403,
  "octagon-outline": 62404,
  "octagram": 63224,
  "octagram-outline": 63348,
  "odnoklassniki": 62405,
  "office": 62406,
  "oil": 62407,
  "oil-temperature": 62408,
  "omega": 62409,
  "onedrive": 62410,
  "onenote": 63302,
  "opacity": 62924,
  "open-in-app": 62411,
  "open-in-new": 62412,
  "openid": 62413,
  "opera": 62414,
  "orbit": 61464,
  "ornament": 62415,
  "ornament-variant": 62416,
  "owl": 62418,
  "package": 62419,
  "package-down": 62420,
  "package-up": 62421,
  "package-variant": 62422,
  "package-variant-closed": 62423,
  "page-first": 62976,
  "page-last": 62977,
  "page-layout-body": 63225,
  "page-layout-footer": 63226,
  "page-layout-header": 63227,
  "page-layout-sidebar-left": 63228,
  "page-layout-sidebar-right": 63229,
  "palette": 62424,
  "palette-advanced": 62425,
  "panda": 62426,
  "pandora": 62427,
  "panorama": 62428,
  "panorama-fisheye": 62429,
  "panorama-horizontal": 62430,
  "panorama-vertical": 62431,
  "panorama-wide-angle": 62432,
  "paper-cut-vertical": 62433,
  "paperclip": 62434,
  "parking": 62435,
  "pause": 62436,
  "pause-circle": 62437,
  "pause-circle-outline": 62438,
  "pause-octagon": 62439,
  "pause-octagon-outline": 62440,
  "paw": 62441,
  "paw-off": 63063,
  "pen": 62442,
  "pencil": 62443,
  "pencil-box": 62444,
  "pencil-box-outline": 62445,
  "pencil-circle": 63230,
  "pencil-circle-outline": 63349,
  "pencil-lock": 62446,
  "pencil-off": 62447,
  "pentagon": 63231,
  "pentagon-outline": 63232,
  "percent": 62448,
  "periscope": 63303,
  "pharmacy": 62449,
  "phone": 62450,
  "phone-bluetooth": 62451,
  "phone-classic": 62978,
  "phone-forward": 62452,
  "phone-hangup": 62453,
  "phone-in-talk": 62454,
  "phone-incoming": 62455,
  "phone-locked": 62456,
  "phone-log": 62457,
  "phone-minus": 63064,
  "phone-missed": 62458,
  "phone-outgoing": 62459,
  "phone-paused": 62460,
  "phone-plus": 63065,
  "phone-settings": 62461,
  "phone-voip": 62462,
  "pi": 62463,
  "pi-box": 62464,
  "piano": 63100,
  "pig": 62465,
  "pill": 62466,
  "pillar": 63233,
  "pin": 62467,
  "pin-off": 62468,
  "pine-tree": 62469,
  "pine-tree-box": 62470,
  "pinterest": 62471,
  "pinterest-box": 62472,
  "pistol": 63234,
  "pizza": 62473,
  "plane-shield": 63162,
  "play": 62474,
  "play-box-outline": 62475,
  "play-circle": 62476,
  "play-circle-outline": 62477,
  "play-pause": 62478,
  "play-protected-content": 62479,
  "playlist-check": 62919,
  "playlist-minus": 62480,
  "playlist-play": 62481,
  "playlist-plus": 62482,
  "playlist-remove": 62483,
  "playstation": 62484,
  "plex": 63161,
  "plus": 62485,
  "plus-box": 62486,
  "plus-box-outline": 63235,
  "plus-circle": 62487,
  "plus-circle-multiple-outline": 62488,
  "plus-circle-outline": 62489,
  "plus-network": 62490,
  "plus-one": 62491,
  "plus-outline": 63236,
  "pocket": 62492,
  "pokeball": 62493,
  "polaroid": 62494,
  "poll": 62495,
  "poll-box": 62496,
  "polymer": 62497,
  "pool": 62982,
  "popcorn": 62498,
  "pot": 63066,
  "pot-mix": 63067,
  "pound": 62499,
  "pound-box": 62500,
  "power": 62501,
  "power-plug": 63140,
  "power-plug-off": 63141,
  "power-settings": 62502,
  "power-socket": 62503,
  "prescription": 63237,
  "presentation": 62504,
  "presentation-play": 62505,
  "printer": 62506,
  "printer-3d": 62507,
  "printer-alert": 62508,
  "printer-settings": 63238,
  "priority-high": 62979,
  "priority-low": 62980,
  "professional-hexagon": 62509,
  "projector": 62510,
  "projector-screen": 62511,
  "publish": 63142,
  "pulse": 62512,
  "puzzle": 62513,
  "qqchat": 62981,
  "qrcode": 62514,
  "qrcode-scan": 62515,
  "quadcopter": 62516,
  "quality-high": 62517,
  "quicktime": 62518,
  "radar": 62519,
  "radiator": 62520,
  "radio": 62521,
  "radio-handheld": 62522,
  "radio-tower": 62523,
  "radioactive": 62524,
  "radiobox-blank": 62525,
  "radiobox-marked": 62526,
  "raspberrypi": 62527,
  "ray-end": 62528,
  "ray-end-arrow": 62529,
  "ray-start": 62530,
  "ray-start-arrow": 62531,
  "ray-start-end": 62532,
  "ray-vertex": 62533,
  "rdio": 62534,
  "react": 63239,
  "read": 62535,
  "readability": 62536,
  "receipt": 62537,
  "record": 62538,
  "record-rec": 62539,
  "recycle": 62540,
  "reddit": 62541,
  "redo": 62542,
  "redo-variant": 62543,
  "refresh": 62544,
  "regex": 62545,
  "relative-scale": 62546,
  "reload": 62547,
  "remote": 62548,
  "rename-box": 62549,
  "reorder-horizontal": 63111,
  "reorder-vertical": 63112,
  "repeat": 62550,
  "repeat-off": 62551,
  "repeat-once": 62552,
  "replay": 62553,
  "reply": 62554,
  "reply-all": 62555,
  "reproduction": 62556,
  "resize-bottom-right": 62557,
  "responsive": 62558,
  "restart": 63240,
  "restore": 63143,
  "rewind": 62559,
  "rewind-outline": 63241,
  "rhombus": 63242,
  "rhombus-outline": 63243,
  "ribbon": 62560,
  "road": 62561,
  "road-variant": 62562,
  "robot": 63144,
  "rocket": 62563,
  "roomba": 63244,
  "rotate-3d": 62564,
  "rotate-left": 62565,
  "rotate-left-variant": 62566,
  "rotate-right": 62567,
  "rotate-right-variant": 62568,
  "rounded-corner": 62983,
  "router-wireless": 62569,
  "routes": 62570,
  "rowing": 62984,
  "rss": 62571,
  "rss-box": 62572,
  "ruler": 62573,
  "run": 63245,
  "run-fast": 62574,
  "sale": 62575,
  "satellite": 62576,
  "satellite-variant": 62577,
  "saxophone": 62985,
  "scale": 62578,
  "scale-balance": 62929,
  "scale-bathroom": 62579,
  "scanner": 63146,
  "school": 62580,
  "screen-rotation": 62581,
  "screen-rotation-lock": 62582,
  "screwdriver": 62583,
  "script": 62584,
  "sd": 62585,
  "seal": 62586,
  "search-web": 63246,
  "seat-flat": 62587,
  "seat-flat-angled": 62588,
  "seat-individual-suite": 62589,
  "seat-legroom-extra": 62590,
  "seat-legroom-normal": 62591,
  "seat-legroom-reduced": 62592,
  "seat-recline-extra": 62593,
  "seat-recline-normal": 62594,
  "security": 62595,
  "security-home": 63113,
  "security-network": 62596,
  "select": 62597,
  "select-all": 62598,
  "select-inverse": 62599,
  "select-off": 62600,
  "selection": 62601,
  "selection-off": 63350,
  "send": 62602,
  "serial-port": 63068,
  "server": 62603,
  "server-minus": 62604,
  "server-network": 62605,
  "server-network-off": 62606,
  "server-off": 62607,
  "server-plus": 62608,
  "server-remove": 62609,
  "server-security": 62610,
  "set-all": 63351,
  "set-center": 63352,
  "set-center-right": 63353,
  "set-left": 63354,
  "set-left-center": 63355,
  "set-left-right": 63356,
  "set-none": 63357,
  "set-right": 63358,
  "settings": 62611,
  "settings-box": 62612,
  "shape-circle-plus": 63069,
  "shape-plus": 62613,
  "shape-polygon-plus": 63070,
  "shape-rectangle-plus": 63071,
  "shape-square-plus": 63072,
  "share": 62614,
  "share-variant": 62615,
  "shield": 62616,
  "shield-half-full": 63359,
  "shield-outline": 62617,
  "shopping": 62618,
  "shopping-music": 62619,
  "shovel": 63247,
  "shovel-off": 63248,
  "shredder": 62620,
  "shuffle": 62621,
  "shuffle-disabled": 62622,
  "shuffle-variant": 62623,
  "sigma": 62624,
  "sigma-lower": 63019,
  "sign-caution": 62625,
  "sign-direction": 63360,
  "sign-text": 63361,
  "signal": 62626,
  "signal-2g": 63249,
  "signal-3g": 63250,
  "signal-4g": 63251,
  "signal-hspa": 63252,
  "signal-hspa-plus": 63253,
  "signal-off": 63362,
  "signal-variant": 62986,
  "silverware": 62627,
  "silverware-fork": 62628,
  "silverware-spoon": 62629,
  "silverware-variant": 62630,
  "sim": 62631,
  "sim-alert": 62632,
  "sim-off": 62633,
  "sitemap": 62634,
  "skip-backward": 62635,
  "skip-forward": 62636,
  "skip-next": 62637,
  "skip-next-circle": 63073,
  "skip-next-circle-outline": 63074,
  "skip-previous": 62638,
  "skip-previous-circle": 63075,
  "skip-previous-circle-outline": 63076,
  "skull": 63115,
  "skype": 62639,
  "skype-business": 62640,
  "slack": 62641,
  "sleep": 62642,
  "sleep-off": 62643,
  "smoking": 62644,
  "smoking-off": 62645,
  "snapchat": 62646,
  "snowflake": 63254,
  "snowman": 62647,
  "soccer": 62648,
  "sofa": 62649,
  "solid": 63116,
  "sort": 62650,
  "sort-alphabetical": 62651,
  "sort-ascending": 62652,
  "sort-descending": 62653,
  "sort-numeric": 62654,
  "sort-variant": 62655,
  "soundcloud": 62656,
  "source-branch": 63020,
  "source-commit": 63255,
  "source-commit-end": 63256,
  "source-commit-end-local": 63257,
  "source-commit-local": 63258,
  "source-commit-next-local": 63259,
  "source-commit-start": 63260,
  "source-commit-start-next-local": 63261,
  "source-fork": 62657,
  "source-merge": 63021,
  "source-pull": 62658,
  "speaker": 62659,
  "speaker-off": 62660,
  "speaker-wireless": 63262,
  "speedometer": 62661,
  "spellcheck": 62662,
  "spotify": 62663,
  "spotlight": 62664,
  "spotlight-beam": 62665,
  "spray": 63077,
  "square": 63331,
  "square-inc": 62666,
  "square-inc-cash": 62667,
  "square-outline": 63330,
  "square-root": 63363,
  "stackexchange": 62987,
  "stackoverflow": 62668,
  "stadium": 63263,
  "stairs": 62669,
  "star": 62670,
  "star-circle": 62671,
  "star-half": 62672,
  "star-off": 62673,
  "star-outline": 62674,
  "steam": 62675,
  "steering": 62676,
  "step-backward": 62677,
  "step-backward-2": 62678,
  "step-forward": 62679,
  "step-forward-2": 62680,
  "stethoscope": 62681,
  "sticker": 62928,
  "sticker-emoji": 63364,
  "stocking": 62682,
  "stop": 62683,
  "stop-circle": 63078,
  "stop-circle-outline": 63079,
  "store": 62684,
  "store-24-hour": 62685,
  "stove": 62686,
  "subdirectory-arrow-left": 62988,
  "subdirectory-arrow-right": 62989,
  "subway": 63147,
  "subway-variant": 62687,
  "summit": 63365,
  "sunglasses": 62688,
  "surround-sound": 62917,
  "svg": 63264,
  "swap-horizontal": 62689,
  "swap-vertical": 62690,
  "swim": 62691,
  "switch": 62692,
  "sword": 62693,
  "sword-cross": 63366,
  "sync": 62694,
  "sync-alert": 62695,
  "sync-off": 62696,
  "tab": 62697,
  "tab-plus": 63323,
  "tab-unselected": 62698,
  "table": 62699,
  "table-column-plus-after": 62700,
  "table-column-plus-before": 62701,
  "table-column-remove": 62702,
  "table-column-width": 62703,
  "table-edit": 62704,
  "table-large": 62705,
  "table-row-height": 62706,
  "table-row-plus-after": 62707,
  "table-row-plus-before": 62708,
  "table-row-remove": 62709,
  "tablet": 62710,
  "tablet-android": 62711,
  "tablet-ipad": 62712,
  "taco": 63329,
  "tag": 62713,
  "tag-faces": 62714,
  "tag-heart": 63114,
  "tag-multiple": 62715,
  "tag-outline": 62716,
  "tag-plus": 63265,
  "tag-remove": 63266,
  "tag-text-outline": 62717,
  "target": 62718,
  "taxi": 62719,
  "teamviewer": 62720,
  "telegram": 62721,
  "television": 62722,
  "television-guide": 62723,
  "temperature-celsius": 62724,
  "temperature-fahrenheit": 62725,
  "temperature-kelvin": 62726,
  "tennis": 62727,
  "tent": 62728,
  "terrain": 62729,
  "test-tube": 63080,
  "text-shadow": 63081,
  "text-to-speech": 62730,
  "text-to-speech-off": 62731,
  "textbox": 62990,
  "texture": 62732,
  "theater": 62733,
  "theme-light-dark": 62734,
  "thermometer": 62735,
  "thermometer-lines": 62736,
  "thumb-down": 62737,
  "thumb-down-outline": 62738,
  "thumb-up": 62739,
  "thumb-up-outline": 62740,
  "thumbs-up-down": 62741,
  "ticket": 62742,
  "ticket-account": 62743,
  "ticket-confirmation": 62744,
  "ticket-percent": 63267,
  "tie": 62745,
  "tilde": 63268,
  "timelapse": 62746,
  "timer": 62747,
  "timer-10": 62748,
  "timer-3": 62749,
  "timer-off": 62750,
  "timer-sand": 62751,
  "timer-sand-empty": 63148,
  "timer-sand-full": 63371,
  "timetable": 62752,
  "toggle-switch": 62753,
  "toggle-switch-off": 62754,
  "tooltip": 62755,
  "tooltip-edit": 62756,
  "tooltip-image": 62757,
  "tooltip-outline": 62758,
  "tooltip-outline-plus": 62759,
  "tooltip-text": 62760,
  "tooth": 62761,
  "tor": 62762,
  "tower-beach": 63104,
  "tower-fire": 63105,
  "traffic-light": 62763,
  "train": 62764,
  "tram": 62765,
  "transcribe": 62766,
  "transcribe-close": 62767,
  "transfer": 62768,
  "transit-transfer": 63149,
  "translate": 62922,
  "treasure-chest": 63269,
  "tree": 62769,
  "trello": 62770,
  "trending-down": 62771,
  "trending-neutral": 62772,
  "trending-up": 62773,
  "triangle": 62774,
  "triangle-outline": 62775,
  "trophy": 62776,
  "trophy-award": 62777,
  "trophy-outline": 62778,
  "trophy-variant": 62779,
  "trophy-variant-outline": 62780,
  "truck": 62781,
  "truck-delivery": 62782,
  "truck-fast": 63367,
  "truck-trailer": 63270,
  "tshirt-crew": 62783,
  "tshirt-v": 62784,
  "tumblr": 62785,
  "tumblr-reblog": 62786,
  "tune": 63022,
  "tune-vertical": 63082,
  "twitch": 62787,
  "twitter": 62788,
  "twitter-box": 62789,
  "twitter-circle": 62790,
  "twitter-retweet": 62791,
  "uber": 63304,
  "ubuntu": 62792,
  "umbraco": 62793,
  "umbrella": 62794,
  "umbrella-outline": 62795,
  "undo": 62796,
  "undo-variant": 62797,
  "unfold-less-horizontal": 62798,
  "unfold-less-vertical": 63327,
  "unfold-more-horizontal": 62799,
  "unfold-more-vertical": 63328,
  "ungroup": 62800,
  "unity": 63150,
  "untappd": 62801,
  "update": 63151,
  "upload": 62802,
  "upload-network": 63221,
  "usb": 62803,
  "vector-arrange-above": 62804,
  "vector-arrange-below": 62805,
  "vector-circle": 62806,
  "vector-circle-variant": 62807,
  "vector-combine": 62808,
  "vector-curve": 62809,
  "vector-difference": 62810,
  "vector-difference-ab": 62811,
  "vector-difference-ba": 62812,
  "vector-intersection": 62813,
  "vector-line": 62814,
  "vector-point": 62815,
  "vector-polygon": 62816,
  "vector-polyline": 62817,
  "vector-radius": 63305,
  "vector-rectangle": 62918,
  "vector-selection": 62818,
  "vector-square": 61441,
  "vector-triangle": 62819,
  "vector-union": 62820,
  "verified": 62821,
  "vibrate": 62822,
  "video": 62823,
  "video-off": 62824,
  "video-switch": 62825,
  "view-agenda": 62826,
  "view-array": 62827,
  "view-carousel": 62828,
  "view-column": 62829,
  "view-dashboard": 62830,
  "view-day": 62831,
  "view-grid": 62832,
  "view-headline": 62833,
  "view-list": 62834,
  "view-module": 62835,
  "view-parallel": 63271,
  "view-quilt": 62836,
  "view-sequential": 63272,
  "view-stream": 62837,
  "view-week": 62838,
  "vimeo": 62839,
  "vine": 62840,
  "violin": 62991,
  "visualstudio": 62992,
  "vk": 62841,
  "vk-box": 62842,
  "vk-circle": 62843,
  "vlc": 62844,
  "voice": 62923,
  "voicemail": 62845,
  "volume-high": 62846,
  "volume-low": 62847,
  "volume-medium": 62848,
  "volume-minus": 63325,
  "volume-mute": 63326,
  "volume-off": 62849,
  "volume-plus": 63324,
  "vpn": 62850,
  "walk": 62851,
  "wallet": 62852,
  "wallet-giftcard": 62853,
  "wallet-membership": 62854,
  "wallet-travel": 62855,
  "wan": 62856,
  "washing-machine": 63273,
  "watch": 62857,
  "watch-export": 62858,
  "watch-import": 62859,
  "watch-vibrate": 63152,
  "water": 62860,
  "water-off": 62861,
  "water-percent": 62862,
  "water-pump": 62863,
  "watermark": 62994,
  "waves": 63372,
  "weather-cloudy": 62864,
  "weather-fog": 62865,
  "weather-hail": 62866,
  "weather-lightning": 62867,
  "weather-lightning-rainy": 63101,
  "weather-night": 62868,
  "weather-partlycloudy": 62869,
  "weather-pouring": 62870,
  "weather-rainy": 62871,
  "weather-snowy": 62872,
  "weather-snowy-rainy": 63102,
  "weather-sunny": 62873,
  "weather-sunset": 62874,
  "weather-sunset-down": 62875,
  "weather-sunset-up": 62876,
  "weather-windy": 62877,
  "weather-windy-variant": 62878,
  "web": 62879,
  "webcam": 62880,
  "webhook": 63023,
  "webpack": 63274,
  "wechat": 62993,
  "weight": 62881,
  "weight-kilogram": 62882,
  "whatsapp": 62883,
  "wheelchair-accessibility": 62884,
  "white-balance-auto": 62885,
  "white-balance-incandescent": 62886,
  "white-balance-iridescent": 62887,
  "white-balance-sunny": 62888,
  "widgets": 63275,
  "wifi": 62889,
  "wifi-off": 62890,
  "wii": 62891,
  "wiiu": 63276,
  "wikipedia": 62892,
  "window-close": 62893,
  "window-closed": 62894,
  "window-maximize": 62895,
  "window-minimize": 62896,
  "window-open": 62897,
  "window-restore": 62898,
  "windows": 62899,
  "wordpress": 62900,
  "worker": 62901,
  "wrap": 62902,
  "wrench": 62903,
  "wunderlist": 62904,
  "xaml": 63091,
  "xbox": 62905,
  "xbox-controller": 62906,
  "xbox-controller-battery-alert": 63306,
  "xbox-controller-battery-empty": 63307,
  "xbox-controller-battery-full": 63308,
  "xbox-controller-battery-low": 63309,
  "xbox-controller-battery-medium": 63310,
  "xbox-controller-battery-unknown": 63311,
  "xbox-controller-off": 62907,
  "xda": 62908,
  "xing": 62909,
  "xing-box": 62910,
  "xing-circle": 62911,
  "xml": 62912,
  "yammer": 63368,
  "yeast": 62913,
  "yelp": 62914,
  "yin-yang": 63103,
  "youtube-play": 62915,
  "zip-box": 62916
};
}, 732, null, "react-native-vector-icons/glyphmaps/MaterialCommunityIcons.json");
__d(/* react-native-vector-icons/Ionicons.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _Ionicons = require(734                        ); // 734 = ./glyphmaps/Ionicons.json

var _Ionicons2 = babelHelpers.interopRequireDefault(_Ionicons);

var iconSet = (0, _createIconSet2.default)(_Ionicons2.default, 'Ionicons', 'Ionicons.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 733, null, "react-native-vector-icons/Ionicons.js");
__d(/* react-native-vector-icons/glyphmaps/Ionicons.json */function(global, require, module, exports) {module.exports = module.exports = {
  "ios-add": 61698,
  "ios-add-circle": 61697,
  "ios-add-circle-outline": 61696,
  "ios-add-outline": 61698,
  "ios-alarm": 62408,
  "ios-alarm-outline": 62407,
  "ios-albums": 62410,
  "ios-albums-outline": 62409,
  "ios-alert": 61700,
  "ios-alert-outline": 61699,
  "ios-american-football": 61702,
  "ios-american-football-outline": 61701,
  "ios-analytics": 62414,
  "ios-analytics-outline": 62413,
  "ios-aperture": 61704,
  "ios-aperture-outline": 61703,
  "ios-apps": 61706,
  "ios-apps-outline": 61705,
  "ios-appstore": 61708,
  "ios-appstore-outline": 61707,
  "ios-archive": 61710,
  "ios-archive-outline": 61709,
  "ios-arrow-back": 62415,
  "ios-arrow-back-outline": 62415,
  "ios-arrow-down": 62416,
  "ios-arrow-down-outline": 62416,
  "ios-arrow-dropdown": 61712,
  "ios-arrow-dropdown-circle": 61711,
  "ios-arrow-dropdown-circle-outline": 61711,
  "ios-arrow-dropdown-outline": 61712,
  "ios-arrow-dropleft": 61714,
  "ios-arrow-dropleft-circle": 61713,
  "ios-arrow-dropleft-circle-outline": 61713,
  "ios-arrow-dropleft-outline": 61714,
  "ios-arrow-dropright": 61716,
  "ios-arrow-dropright-circle": 61715,
  "ios-arrow-dropright-circle-outline": 61715,
  "ios-arrow-dropright-outline": 61716,
  "ios-arrow-dropup": 61718,
  "ios-arrow-dropup-circle": 61717,
  "ios-arrow-dropup-circle-outline": 61717,
  "ios-arrow-dropup-outline": 61718,
  "ios-arrow-forward": 62417,
  "ios-arrow-forward-outline": 62417,
  "ios-arrow-round-back": 61719,
  "ios-arrow-round-back-outline": 61719,
  "ios-arrow-round-down": 61720,
  "ios-arrow-round-down-outline": 61720,
  "ios-arrow-round-forward": 61721,
  "ios-arrow-round-forward-outline": 61721,
  "ios-arrow-round-up": 61722,
  "ios-arrow-round-up-outline": 61722,
  "ios-arrow-up": 62424,
  "ios-arrow-up-outline": 62424,
  "ios-at": 62426,
  "ios-at-outline": 62425,
  "ios-attach": 61723,
  "ios-attach-outline": 61723,
  "ios-backspace": 61725,
  "ios-backspace-outline": 61724,
  "ios-barcode": 62428,
  "ios-barcode-outline": 62427,
  "ios-baseball": 62430,
  "ios-baseball-outline": 62429,
  "ios-basket": 61727,
  "ios-basket-outline": 61726,
  "ios-basketball": 62432,
  "ios-basketball-outline": 62431,
  "ios-battery-charging": 61728,
  "ios-battery-charging-outline": 61728,
  "ios-battery-dead": 61729,
  "ios-battery-dead-outline": 61729,
  "ios-battery-full": 61730,
  "ios-battery-full-outline": 61730,
  "ios-beaker": 61732,
  "ios-beaker-outline": 61731,
  "ios-beer": 61734,
  "ios-beer-outline": 61733,
  "ios-bicycle": 61735,
  "ios-bicycle-outline": 61735,
  "ios-bluetooth": 61736,
  "ios-bluetooth-outline": 61736,
  "ios-boat": 61738,
  "ios-boat-outline": 61737,
  "ios-body": 62436,
  "ios-body-outline": 62435,
  "ios-bonfire": 61740,
  "ios-bonfire-outline": 61739,
  "ios-book": 62440,
  "ios-book-outline": 62439,
  "ios-bookmark": 61742,
  "ios-bookmark-outline": 61741,
  "ios-bookmarks": 62442,
  "ios-bookmarks-outline": 62441,
  "ios-bowtie": 61744,
  "ios-bowtie-outline": 61743,
  "ios-briefcase": 62446,
  "ios-briefcase-outline": 62445,
  "ios-browsers": 62448,
  "ios-browsers-outline": 62447,
  "ios-brush": 61746,
  "ios-brush-outline": 61745,
  "ios-bug": 61748,
  "ios-bug-outline": 61747,
  "ios-build": 61750,
  "ios-build-outline": 61749,
  "ios-bulb": 61752,
  "ios-bulb-outline": 61751,
  "ios-bus": 61754,
  "ios-bus-outline": 61753,
  "ios-cafe": 61756,
  "ios-cafe-outline": 61755,
  "ios-calculator": 62450,
  "ios-calculator-outline": 62449,
  "ios-calendar": 62452,
  "ios-calendar-outline": 62451,
  "ios-call": 61758,
  "ios-call-outline": 61757,
  "ios-camera": 62454,
  "ios-camera-outline": 62453,
  "ios-car": 61760,
  "ios-car-outline": 61759,
  "ios-card": 61762,
  "ios-card-outline": 61761,
  "ios-cart": 62456,
  "ios-cart-outline": 62455,
  "ios-cash": 61764,
  "ios-cash-outline": 61763,
  "ios-chatboxes": 62458,
  "ios-chatboxes-outline": 62457,
  "ios-chatbubbles": 61766,
  "ios-chatbubbles-outline": 61765,
  "ios-checkbox": 61768,
  "ios-checkbox-outline": 61767,
  "ios-checkmark": 62463,
  "ios-checkmark-circle": 61770,
  "ios-checkmark-circle-outline": 61769,
  "ios-checkmark-outline": 62463,
  "ios-clipboard": 61772,
  "ios-clipboard-outline": 61771,
  "ios-clock": 62467,
  "ios-clock-outline": 62466,
  "ios-close": 62470,
  "ios-close-circle": 61774,
  "ios-close-circle-outline": 61773,
  "ios-close-outline": 62470,
  "ios-closed-captioning": 61776,
  "ios-closed-captioning-outline": 61775,
  "ios-cloud": 62476,
  "ios-cloud-circle": 61778,
  "ios-cloud-circle-outline": 61777,
  "ios-cloud-done": 61780,
  "ios-cloud-done-outline": 61779,
  "ios-cloud-download": 62472,
  "ios-cloud-download-outline": 62471,
  "ios-cloud-outline": 62473,
  "ios-cloud-upload": 62475,
  "ios-cloud-upload-outline": 62474,
  "ios-cloudy": 62480,
  "ios-cloudy-night": 62478,
  "ios-cloudy-night-outline": 62477,
  "ios-cloudy-outline": 62479,
  "ios-code": 61783,
  "ios-code-download": 61781,
  "ios-code-download-outline": 61781,
  "ios-code-outline": 61783,
  "ios-code-working": 61782,
  "ios-code-working-outline": 61782,
  "ios-cog": 62482,
  "ios-cog-outline": 62481,
  "ios-color-fill": 61785,
  "ios-color-fill-outline": 61784,
  "ios-color-filter": 62484,
  "ios-color-filter-outline": 62483,
  "ios-color-palette": 61787,
  "ios-color-palette-outline": 61786,
  "ios-color-wand": 62486,
  "ios-color-wand-outline": 62485,
  "ios-compass": 61789,
  "ios-compass-outline": 61788,
  "ios-construct": 61791,
  "ios-construct-outline": 61790,
  "ios-contact": 62490,
  "ios-contact-outline": 62489,
  "ios-contacts": 61793,
  "ios-contacts-outline": 61792,
  "ios-contract": 61794,
  "ios-contract-outline": 61794,
  "ios-contrast": 61795,
  "ios-contrast-outline": 61795,
  "ios-copy": 62492,
  "ios-copy-outline": 62491,
  "ios-create": 61797,
  "ios-create-outline": 61796,
  "ios-crop": 62494,
  "ios-crop-outline": 61798,
  "ios-cube": 61800,
  "ios-cube-outline": 61799,
  "ios-cut": 61802,
  "ios-cut-outline": 61801,
  "ios-desktop": 61804,
  "ios-desktop-outline": 61803,
  "ios-disc": 61806,
  "ios-disc-outline": 61805,
  "ios-document": 61808,
  "ios-document-outline": 61807,
  "ios-done-all": 61809,
  "ios-done-all-outline": 61809,
  "ios-download": 62496,
  "ios-download-outline": 62495,
  "ios-easel": 61811,
  "ios-easel-outline": 61810,
  "ios-egg": 61813,
  "ios-egg-outline": 61812,
  "ios-exit": 61815,
  "ios-exit-outline": 61814,
  "ios-expand": 61816,
  "ios-expand-outline": 61816,
  "ios-eye": 62501,
  "ios-eye-off": 61818,
  "ios-eye-off-outline": 61817,
  "ios-eye-outline": 62500,
  "ios-fastforward": 62503,
  "ios-fastforward-outline": 62502,
  "ios-female": 61819,
  "ios-female-outline": 61819,
  "ios-filing": 62505,
  "ios-filing-outline": 62504,
  "ios-film": 62507,
  "ios-film-outline": 62506,
  "ios-finger-print": 61820,
  "ios-finger-print-outline": 61820,
  "ios-flag": 62509,
  "ios-flag-outline": 62508,
  "ios-flame": 62511,
  "ios-flame-outline": 62510,
  "ios-flash": 61822,
  "ios-flash-outline": 61821,
  "ios-flask": 62513,
  "ios-flask-outline": 62512,
  "ios-flower": 62515,
  "ios-flower-outline": 62514,
  "ios-folder": 62517,
  "ios-folder-open": 61824,
  "ios-folder-open-outline": 61823,
  "ios-folder-outline": 62516,
  "ios-football": 62519,
  "ios-football-outline": 62518,
  "ios-funnel": 61826,
  "ios-funnel-outline": 61825,
  "ios-game-controller-a": 62521,
  "ios-game-controller-a-outline": 62520,
  "ios-game-controller-b": 62523,
  "ios-game-controller-b-outline": 62522,
  "ios-git-branch": 61827,
  "ios-git-branch-outline": 61827,
  "ios-git-commit": 61828,
  "ios-git-commit-outline": 61828,
  "ios-git-compare": 61829,
  "ios-git-compare-outline": 61829,
  "ios-git-merge": 61830,
  "ios-git-merge-outline": 61830,
  "ios-git-network": 61831,
  "ios-git-network-outline": 61831,
  "ios-git-pull-request": 61832,
  "ios-git-pull-request-outline": 61832,
  "ios-glasses": 62527,
  "ios-glasses-outline": 62526,
  "ios-globe": 61834,
  "ios-globe-outline": 61833,
  "ios-grid": 61836,
  "ios-grid-outline": 61835,
  "ios-hammer": 61838,
  "ios-hammer-outline": 61837,
  "ios-hand": 61840,
  "ios-hand-outline": 61839,
  "ios-happy": 61842,
  "ios-happy-outline": 61841,
  "ios-headset": 61844,
  "ios-headset-outline": 61843,
  "ios-heart": 62531,
  "ios-heart-outline": 62530,
  "ios-help": 62534,
  "ios-help-buoy": 61846,
  "ios-help-buoy-outline": 61845,
  "ios-help-circle": 61848,
  "ios-help-circle-outline": 61847,
  "ios-help-outline": 62534,
  "ios-home": 62536,
  "ios-home-outline": 62535,
  "ios-ice-cream": 61850,
  "ios-ice-cream-outline": 61849,
  "ios-image": 61852,
  "ios-image-outline": 61851,
  "ios-images": 61854,
  "ios-images-outline": 61853,
  "ios-infinite": 62538,
  "ios-infinite-outline": 62537,
  "ios-information": 62541,
  "ios-information-circle": 61856,
  "ios-information-circle-outline": 61855,
  "ios-information-outline": 62541,
  "ios-ionic": 61857,
  "ios-ionic-outline": 62542,
  "ios-ionitron": 61859,
  "ios-ionitron-outline": 61858,
  "ios-jet": 61861,
  "ios-jet-outline": 61860,
  "ios-key": 61863,
  "ios-key-outline": 61862,
  "ios-keypad": 62544,
  "ios-keypad-outline": 62543,
  "ios-laptop": 61864,
  "ios-laptop-outline": 61864,
  "ios-leaf": 61866,
  "ios-leaf-outline": 61865,
  "ios-link": 61994,
  "ios-link-outline": 61898,
  "ios-list": 62548,
  "ios-list-box": 61868,
  "ios-list-box-outline": 61867,
  "ios-list-outline": 62548,
  "ios-locate": 61870,
  "ios-locate-outline": 61869,
  "ios-lock": 61872,
  "ios-lock-outline": 61871,
  "ios-log-in": 61873,
  "ios-log-in-outline": 61873,
  "ios-log-out": 61874,
  "ios-log-out-outline": 61874,
  "ios-magnet": 61876,
  "ios-magnet-outline": 61875,
  "ios-mail": 61880,
  "ios-mail-open": 61878,
  "ios-mail-open-outline": 61877,
  "ios-mail-outline": 61879,
  "ios-male": 61881,
  "ios-male-outline": 61881,
  "ios-man": 61883,
  "ios-man-outline": 61882,
  "ios-map": 61885,
  "ios-map-outline": 61884,
  "ios-medal": 61887,
  "ios-medal-outline": 61886,
  "ios-medical": 62556,
  "ios-medical-outline": 62555,
  "ios-medkit": 62558,
  "ios-medkit-outline": 62557,
  "ios-megaphone": 61889,
  "ios-megaphone-outline": 61888,
  "ios-menu": 61891,
  "ios-menu-outline": 61890,
  "ios-mic": 62561,
  "ios-mic-off": 62559,
  "ios-mic-off-outline": 61892,
  "ios-mic-outline": 62560,
  "ios-microphone": 61894,
  "ios-microphone-outline": 61893,
  "ios-moon": 62568,
  "ios-moon-outline": 62567,
  "ios-more": 61896,
  "ios-more-outline": 61895,
  "ios-move": 61899,
  "ios-move-outline": 61899,
  "ios-musical-note": 62571,
  "ios-musical-note-outline": 61900,
  "ios-musical-notes": 62572,
  "ios-musical-notes-outline": 61901,
  "ios-navigate": 62574,
  "ios-navigate-outline": 62573,
  "ios-no-smoking": 61903,
  "ios-no-smoking-outline": 61902,
  "ios-notifications": 61907,
  "ios-notifications-off": 61905,
  "ios-notifications-off-outline": 61904,
  "ios-notifications-outline": 61906,
  "ios-nuclear": 61909,
  "ios-nuclear-outline": 61908,
  "ios-nutrition": 62576,
  "ios-nutrition-outline": 62575,
  "ios-open": 61911,
  "ios-open-outline": 61910,
  "ios-options": 61913,
  "ios-options-outline": 61912,
  "ios-outlet": 61915,
  "ios-outlet-outline": 61914,
  "ios-paper": 62578,
  "ios-paper-outline": 62577,
  "ios-paper-plane": 61917,
  "ios-paper-plane-outline": 61916,
  "ios-partly-sunny": 61919,
  "ios-partly-sunny-outline": 61918,
  "ios-pause": 62584,
  "ios-pause-outline": 62583,
  "ios-paw": 62586,
  "ios-paw-outline": 62585,
  "ios-people": 62588,
  "ios-people-outline": 62587,
  "ios-person": 62590,
  "ios-person-add": 61921,
  "ios-person-add-outline": 61920,
  "ios-person-outline": 62589,
  "ios-phone-landscape": 61922,
  "ios-phone-landscape-outline": 61922,
  "ios-phone-portrait": 61923,
  "ios-phone-portrait-outline": 61923,
  "ios-photos": 62594,
  "ios-photos-outline": 62593,
  "ios-pie": 62596,
  "ios-pie-outline": 62595,
  "ios-pin": 61925,
  "ios-pin-outline": 61924,
  "ios-pint": 62598,
  "ios-pint-outline": 62597,
  "ios-pizza": 61927,
  "ios-pizza-outline": 61926,
  "ios-plane": 61929,
  "ios-plane-outline": 61928,
  "ios-planet": 61931,
  "ios-planet-outline": 61930,
  "ios-play": 62600,
  "ios-play-outline": 62599,
  "ios-podium": 61933,
  "ios-podium-outline": 61932,
  "ios-power": 61935,
  "ios-power-outline": 61934,
  "ios-pricetag": 62605,
  "ios-pricetag-outline": 62604,
  "ios-pricetags": 62607,
  "ios-pricetags-outline": 62606,
  "ios-print": 61937,
  "ios-print-outline": 61936,
  "ios-pulse": 62611,
  "ios-pulse-outline": 61938,
  "ios-qr-scanner": 61939,
  "ios-qr-scanner-outline": 61939,
  "ios-quote": 61941,
  "ios-quote-outline": 61940,
  "ios-radio": 61945,
  "ios-radio-button-off": 61942,
  "ios-radio-button-off-outline": 61942,
  "ios-radio-button-on": 61943,
  "ios-radio-button-on-outline": 61943,
  "ios-radio-outline": 61944,
  "ios-rainy": 62613,
  "ios-rainy-outline": 62612,
  "ios-recording": 62615,
  "ios-recording-outline": 62614,
  "ios-redo": 62617,
  "ios-redo-outline": 62616,
  "ios-refresh": 62620,
  "ios-refresh-circle": 61990,
  "ios-refresh-circle-outline": 61988,
  "ios-refresh-outline": 62620,
  "ios-remove": 61948,
  "ios-remove-circle": 61947,
  "ios-remove-circle-outline": 61946,
  "ios-remove-outline": 61948,
  "ios-reorder": 61949,
  "ios-reorder-outline": 61949,
  "ios-repeat": 61950,
  "ios-repeat-outline": 61950,
  "ios-resize": 61951,
  "ios-resize-outline": 61951,
  "ios-restaurant": 61953,
  "ios-restaurant-outline": 61952,
  "ios-return-left": 61954,
  "ios-return-left-outline": 61954,
  "ios-return-right": 61955,
  "ios-return-right-outline": 61955,
  "ios-reverse-camera": 62623,
  "ios-reverse-camera-outline": 62622,
  "ios-rewind": 62625,
  "ios-rewind-outline": 62624,
  "ios-ribbon": 61957,
  "ios-ribbon-outline": 61956,
  "ios-rose": 62627,
  "ios-rose-outline": 62626,
  "ios-sad": 61959,
  "ios-sad-outline": 61958,
  "ios-school": 61961,
  "ios-school-outline": 61960,
  "ios-search": 62629,
  "ios-search-outline": 61962,
  "ios-send": 61964,
  "ios-send-outline": 61963,
  "ios-settings": 62631,
  "ios-settings-outline": 61965,
  "ios-share": 61969,
  "ios-share-alt": 61967,
  "ios-share-alt-outline": 61966,
  "ios-share-outline": 61968,
  "ios-shirt": 61971,
  "ios-shirt-outline": 61970,
  "ios-shuffle": 62633,
  "ios-shuffle-outline": 62633,
  "ios-skip-backward": 61973,
  "ios-skip-backward-outline": 61972,
  "ios-skip-forward": 61975,
  "ios-skip-forward-outline": 61974,
  "ios-snow": 61976,
  "ios-snow-outline": 61996,
  "ios-speedometer": 62640,
  "ios-speedometer-outline": 62639,
  "ios-square": 61978,
  "ios-square-outline": 61977,
  "ios-star": 62643,
  "ios-star-half": 62641,
  "ios-star-half-outline": 62641,
  "ios-star-outline": 62642,
  "ios-stats": 61980,
  "ios-stats-outline": 61979,
  "ios-stopwatch": 62645,
  "ios-stopwatch-outline": 62644,
  "ios-subway": 61982,
  "ios-subway-outline": 61981,
  "ios-sunny": 62647,
  "ios-sunny-outline": 62646,
  "ios-swap": 61983,
  "ios-swap-outline": 61983,
  "ios-switch": 61985,
  "ios-switch-outline": 61984,
  "ios-sync": 61986,
  "ios-sync-outline": 61986,
  "ios-tablet-landscape": 61987,
  "ios-tablet-landscape-outline": 61987,
  "ios-tablet-portrait": 62030,
  "ios-tablet-portrait-outline": 62030,
  "ios-tennisball": 62651,
  "ios-tennisball-outline": 62650,
  "ios-text": 62032,
  "ios-text-outline": 62031,
  "ios-thermometer": 62034,
  "ios-thermometer-outline": 62033,
  "ios-thumbs-down": 62036,
  "ios-thumbs-down-outline": 62035,
  "ios-thumbs-up": 62038,
  "ios-thumbs-up-outline": 62037,
  "ios-thunderstorm": 62653,
  "ios-thunderstorm-outline": 62652,
  "ios-time": 62655,
  "ios-time-outline": 62654,
  "ios-timer": 62657,
  "ios-timer-outline": 62656,
  "ios-train": 62040,
  "ios-train-outline": 62039,
  "ios-transgender": 62041,
  "ios-transgender-outline": 62041,
  "ios-trash": 62661,
  "ios-trash-outline": 62660,
  "ios-trending-down": 62042,
  "ios-trending-down-outline": 62042,
  "ios-trending-up": 62043,
  "ios-trending-up-outline": 62043,
  "ios-trophy": 62045,
  "ios-trophy-outline": 62044,
  "ios-umbrella": 62047,
  "ios-umbrella-outline": 62046,
  "ios-undo": 62663,
  "ios-undo-outline": 62662,
  "ios-unlock": 62049,
  "ios-unlock-outline": 62048,
  "ios-videocam": 62669,
  "ios-videocam-outline": 62668,
  "ios-volume-down": 62050,
  "ios-volume-down-outline": 62050,
  "ios-volume-mute": 62051,
  "ios-volume-mute-outline": 62051,
  "ios-volume-off": 62052,
  "ios-volume-off-outline": 62052,
  "ios-volume-up": 62053,
  "ios-volume-up-outline": 62053,
  "ios-walk": 62054,
  "ios-walk-outline": 62054,
  "ios-warning": 62056,
  "ios-warning-outline": 62055,
  "ios-watch": 62057,
  "ios-watch-outline": 62057,
  "ios-water": 62059,
  "ios-water-outline": 62058,
  "ios-wifi": 62061,
  "ios-wifi-outline": 62060,
  "ios-wine": 62063,
  "ios-wine-outline": 62062,
  "ios-woman": 62065,
  "ios-woman-outline": 62064,
  "logo-android": 61989,
  "logo-angular": 61991,
  "logo-apple": 61993,
  "logo-bitcoin": 61995,
  "logo-buffer": 61997,
  "logo-chrome": 61999,
  "logo-codepen": 62000,
  "logo-css3": 62001,
  "logo-designernews": 62002,
  "logo-dribbble": 62003,
  "logo-dropbox": 62004,
  "logo-euro": 62005,
  "logo-facebook": 62006,
  "logo-foursquare": 62007,
  "logo-freebsd-devil": 62008,
  "logo-github": 62009,
  "logo-google": 62010,
  "logo-googleplus": 62011,
  "logo-hackernews": 62012,
  "logo-html5": 62013,
  "logo-instagram": 62014,
  "logo-javascript": 62015,
  "logo-linkedin": 62016,
  "logo-markdown": 62017,
  "logo-nodejs": 62018,
  "logo-octocat": 62019,
  "logo-pinterest": 62020,
  "logo-playstation": 62021,
  "logo-python": 62022,
  "logo-reddit": 62023,
  "logo-rss": 62024,
  "logo-sass": 62025,
  "logo-skype": 62026,
  "logo-snapchat": 62027,
  "logo-steam": 62028,
  "logo-tumblr": 62029,
  "logo-tux": 62126,
  "logo-twitch": 62127,
  "logo-twitter": 62128,
  "logo-usd": 62129,
  "logo-vimeo": 62148,
  "logo-whatsapp": 62149,
  "logo-windows": 62255,
  "logo-wordpress": 62256,
  "logo-xbox": 62284,
  "logo-yahoo": 62285,
  "logo-yen": 62286,
  "logo-youtube": 62287,
  "md-add": 62067,
  "md-add-circle": 62066,
  "md-alarm": 62068,
  "md-albums": 62069,
  "md-alert": 62070,
  "md-american-football": 62071,
  "md-analytics": 62072,
  "md-aperture": 62073,
  "md-apps": 62074,
  "md-appstore": 62075,
  "md-archive": 62076,
  "md-arrow-back": 62077,
  "md-arrow-down": 62078,
  "md-arrow-dropdown": 62080,
  "md-arrow-dropdown-circle": 62079,
  "md-arrow-dropleft": 62082,
  "md-arrow-dropleft-circle": 62081,
  "md-arrow-dropright": 62084,
  "md-arrow-dropright-circle": 62083,
  "md-arrow-dropup": 62086,
  "md-arrow-dropup-circle": 62085,
  "md-arrow-forward": 62087,
  "md-arrow-round-back": 62088,
  "md-arrow-round-down": 62089,
  "md-arrow-round-forward": 62090,
  "md-arrow-round-up": 62091,
  "md-arrow-up": 62092,
  "md-at": 62093,
  "md-attach": 62094,
  "md-backspace": 62095,
  "md-barcode": 62096,
  "md-baseball": 62097,
  "md-basket": 62098,
  "md-basketball": 62099,
  "md-battery-charging": 62100,
  "md-battery-dead": 62101,
  "md-battery-full": 62102,
  "md-beaker": 62103,
  "md-beer": 62104,
  "md-bicycle": 62105,
  "md-bluetooth": 62106,
  "md-boat": 62107,
  "md-body": 62108,
  "md-bonfire": 62109,
  "md-book": 62110,
  "md-bookmark": 62111,
  "md-bookmarks": 62112,
  "md-bowtie": 62113,
  "md-briefcase": 62114,
  "md-browsers": 62115,
  "md-brush": 62116,
  "md-bug": 62117,
  "md-build": 62118,
  "md-bulb": 62119,
  "md-bus": 62120,
  "md-cafe": 62121,
  "md-calculator": 62122,
  "md-calendar": 62123,
  "md-call": 62124,
  "md-camera": 62125,
  "md-car": 62130,
  "md-card": 62131,
  "md-cart": 62132,
  "md-cash": 62133,
  "md-chatboxes": 62134,
  "md-chatbubbles": 62135,
  "md-checkbox": 62137,
  "md-checkbox-outline": 62136,
  "md-checkmark": 62140,
  "md-checkmark-circle": 62139,
  "md-checkmark-circle-outline": 62138,
  "md-clipboard": 62141,
  "md-clock": 62142,
  "md-close": 62144,
  "md-close-circle": 62143,
  "md-closed-captioning": 62145,
  "md-cloud": 62153,
  "md-cloud-circle": 62146,
  "md-cloud-done": 62147,
  "md-cloud-download": 62150,
  "md-cloud-outline": 62151,
  "md-cloud-upload": 62152,
  "md-cloudy": 62155,
  "md-cloudy-night": 62154,
  "md-code": 62158,
  "md-code-download": 62156,
  "md-code-working": 62157,
  "md-cog": 62159,
  "md-color-fill": 62160,
  "md-color-filter": 62161,
  "md-color-palette": 62162,
  "md-color-wand": 62163,
  "md-compass": 62164,
  "md-construct": 62165,
  "md-contact": 62166,
  "md-contacts": 62167,
  "md-contract": 62168,
  "md-contrast": 62169,
  "md-copy": 62170,
  "md-create": 62171,
  "md-crop": 62172,
  "md-cube": 62173,
  "md-cut": 62174,
  "md-desktop": 62175,
  "md-disc": 62176,
  "md-document": 62177,
  "md-done-all": 62178,
  "md-download": 62179,
  "md-easel": 62180,
  "md-egg": 62181,
  "md-exit": 62182,
  "md-expand": 62183,
  "md-eye": 62185,
  "md-eye-off": 62184,
  "md-fastforward": 62186,
  "md-female": 62187,
  "md-filing": 62188,
  "md-film": 62189,
  "md-finger-print": 62190,
  "md-flag": 62191,
  "md-flame": 62192,
  "md-flash": 62193,
  "md-flask": 62194,
  "md-flower": 62195,
  "md-folder": 62197,
  "md-folder-open": 62196,
  "md-football": 62198,
  "md-funnel": 62199,
  "md-game-controller-a": 62200,
  "md-game-controller-b": 62201,
  "md-git-branch": 62202,
  "md-git-commit": 62203,
  "md-git-compare": 62204,
  "md-git-merge": 62205,
  "md-git-network": 62206,
  "md-git-pull-request": 62207,
  "md-glasses": 62208,
  "md-globe": 62209,
  "md-grid": 62210,
  "md-hammer": 62211,
  "md-hand": 62212,
  "md-happy": 62213,
  "md-headset": 62214,
  "md-heart": 62216,
  "md-heart-outline": 62215,
  "md-help": 62219,
  "md-help-buoy": 62217,
  "md-help-circle": 62218,
  "md-home": 62220,
  "md-ice-cream": 62221,
  "md-image": 62222,
  "md-images": 62223,
  "md-infinite": 62224,
  "md-information": 62226,
  "md-information-circle": 62225,
  "md-ionic": 62227,
  "md-ionitron": 62228,
  "md-jet": 62229,
  "md-key": 62230,
  "md-keypad": 62231,
  "md-laptop": 62232,
  "md-leaf": 62233,
  "md-link": 61998,
  "md-list": 62235,
  "md-list-box": 62234,
  "md-locate": 62236,
  "md-lock": 62237,
  "md-log-in": 62238,
  "md-log-out": 62239,
  "md-magnet": 62240,
  "md-mail": 62242,
  "md-mail-open": 62241,
  "md-male": 62243,
  "md-man": 62244,
  "md-map": 62245,
  "md-medal": 62246,
  "md-medical": 62247,
  "md-medkit": 62248,
  "md-megaphone": 62249,
  "md-menu": 62250,
  "md-mic": 62252,
  "md-mic-off": 62251,
  "md-microphone": 62253,
  "md-moon": 62254,
  "md-more": 61897,
  "md-move": 62257,
  "md-musical-note": 62258,
  "md-musical-notes": 62259,
  "md-navigate": 62260,
  "md-no-smoking": 62261,
  "md-notifications": 62264,
  "md-notifications-off": 62262,
  "md-notifications-outline": 62263,
  "md-nuclear": 62265,
  "md-nutrition": 62266,
  "md-open": 62267,
  "md-options": 62268,
  "md-outlet": 62269,
  "md-paper": 62271,
  "md-paper-plane": 62270,
  "md-partly-sunny": 62272,
  "md-pause": 62273,
  "md-paw": 62274,
  "md-people": 62275,
  "md-person": 62277,
  "md-person-add": 62276,
  "md-phone-landscape": 62278,
  "md-phone-portrait": 62279,
  "md-photos": 62280,
  "md-pie": 62281,
  "md-pin": 62282,
  "md-pint": 62283,
  "md-pizza": 62292,
  "md-plane": 62293,
  "md-planet": 62294,
  "md-play": 62295,
  "md-podium": 62296,
  "md-power": 62297,
  "md-pricetag": 62298,
  "md-pricetags": 62299,
  "md-print": 62300,
  "md-pulse": 62301,
  "md-qr-scanner": 62302,
  "md-quote": 62303,
  "md-radio": 62306,
  "md-radio-button-off": 62304,
  "md-radio-button-on": 62305,
  "md-rainy": 62307,
  "md-recording": 62308,
  "md-redo": 62309,
  "md-refresh": 62310,
  "md-refresh-circle": 61992,
  "md-remove": 62312,
  "md-remove-circle": 62311,
  "md-reorder": 62313,
  "md-repeat": 62314,
  "md-resize": 62315,
  "md-restaurant": 62316,
  "md-return-left": 62317,
  "md-return-right": 62318,
  "md-reverse-camera": 62319,
  "md-rewind": 62320,
  "md-ribbon": 62321,
  "md-rose": 62322,
  "md-sad": 62323,
  "md-school": 62324,
  "md-search": 62325,
  "md-send": 62326,
  "md-settings": 62327,
  "md-share": 62329,
  "md-share-alt": 62328,
  "md-shirt": 62330,
  "md-shuffle": 62331,
  "md-skip-backward": 62332,
  "md-skip-forward": 62333,
  "md-snow": 62334,
  "md-speedometer": 62335,
  "md-square": 62337,
  "md-square-outline": 62336,
  "md-star": 62340,
  "md-star-half": 62338,
  "md-star-outline": 62339,
  "md-stats": 62341,
  "md-stopwatch": 62342,
  "md-subway": 62343,
  "md-sunny": 62344,
  "md-swap": 62345,
  "md-switch": 62346,
  "md-sync": 62347,
  "md-tablet-landscape": 62348,
  "md-tablet-portrait": 62349,
  "md-tennisball": 62350,
  "md-text": 62351,
  "md-thermometer": 62352,
  "md-thumbs-down": 62353,
  "md-thumbs-up": 62354,
  "md-thunderstorm": 62355,
  "md-time": 62356,
  "md-timer": 62357,
  "md-train": 62358,
  "md-transgender": 62359,
  "md-trash": 62360,
  "md-trending-down": 62361,
  "md-trending-up": 62362,
  "md-trophy": 62363,
  "md-umbrella": 62364,
  "md-undo": 62365,
  "md-unlock": 62366,
  "md-videocam": 62367,
  "md-volume-down": 62368,
  "md-volume-mute": 62369,
  "md-volume-off": 62370,
  "md-volume-up": 62371,
  "md-walk": 62372,
  "md-warning": 62373,
  "md-watch": 62374,
  "md-water": 62375,
  "md-wifi": 62376,
  "md-wine": 62377,
  "md-woman": 62378
};
}, 734, null, "react-native-vector-icons/glyphmaps/Ionicons.json");
__d(/* react-native-vector-icons/Foundation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _Foundation = require(736                          ); // 736 = ./glyphmaps/Foundation.json

var _Foundation2 = babelHelpers.interopRequireDefault(_Foundation);

var iconSet = (0, _createIconSet2.default)(_Foundation2.default, 'fontcustom', 'Foundation.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 735, null, "react-native-vector-icons/Foundation.js");
__d(/* react-native-vector-icons/glyphmaps/Foundation.json */function(global, require, module, exports) {module.exports = module.exports = {
  "address-book": 61696,
  "alert": 61697,
  "align-center": 61698,
  "align-justify": 61699,
  "align-left": 61700,
  "align-right": 61701,
  "anchor": 61702,
  "annotate": 61703,
  "archive": 61704,
  "arrow-down": 61705,
  "arrow-left": 61706,
  "arrow-right": 61707,
  "arrow-up": 61708,
  "arrows-compress": 61709,
  "arrows-expand": 61710,
  "arrows-in": 61711,
  "arrows-out": 61712,
  "asl": 61713,
  "asterisk": 61714,
  "at-sign": 61715,
  "background-color": 61716,
  "battery-empty": 61717,
  "battery-full": 61718,
  "battery-half": 61719,
  "bitcoin-circle": 61720,
  "bitcoin": 61721,
  "blind": 61722,
  "bluetooth": 61723,
  "bold": 61724,
  "book-bookmark": 61725,
  "book": 61726,
  "bookmark": 61727,
  "braille": 61728,
  "burst-new": 61729,
  "burst-sale": 61730,
  "burst": 61731,
  "calendar": 61732,
  "camera": 61733,
  "check": 61734,
  "checkbox": 61735,
  "clipboard-notes": 61736,
  "clipboard-pencil": 61737,
  "clipboard": 61738,
  "clock": 61739,
  "closed-caption": 61740,
  "cloud": 61741,
  "comment-minus": 61742,
  "comment-quotes": 61743,
  "comment-video": 61744,
  "comment": 61745,
  "comments": 61746,
  "compass": 61747,
  "contrast": 61748,
  "credit-card": 61749,
  "crop": 61750,
  "crown": 61751,
  "css3": 61752,
  "database": 61753,
  "die-five": 61754,
  "die-four": 61755,
  "die-one": 61756,
  "die-six": 61757,
  "die-three": 61758,
  "die-two": 61759,
  "dislike": 61760,
  "dollar-bill": 61761,
  "dollar": 61762,
  "download": 61763,
  "eject": 61764,
  "elevator": 61765,
  "euro": 61766,
  "eye": 61767,
  "fast-forward": 61768,
  "female-symbol": 61769,
  "female": 61770,
  "filter": 61771,
  "first-aid": 61772,
  "flag": 61773,
  "folder-add": 61774,
  "folder-lock": 61775,
  "folder": 61776,
  "foot": 61777,
  "foundation": 61778,
  "graph-bar": 61779,
  "graph-horizontal": 61780,
  "graph-pie": 61781,
  "graph-trend": 61782,
  "guide-dog": 61783,
  "hearing-aid": 61784,
  "heart": 61785,
  "home": 61786,
  "html5": 61787,
  "indent-less": 61788,
  "indent-more": 61789,
  "info": 61790,
  "italic": 61791,
  "key": 61792,
  "laptop": 61793,
  "layout": 61794,
  "lightbulb": 61795,
  "like": 61796,
  "link": 61797,
  "list-bullet": 61798,
  "list-number": 61799,
  "list-thumbnails": 61800,
  "list": 61801,
  "lock": 61802,
  "loop": 61803,
  "magnifying-glass": 61804,
  "mail": 61805,
  "male-female": 61806,
  "male-symbol": 61807,
  "male": 61808,
  "map": 61809,
  "marker": 61810,
  "megaphone": 61811,
  "microphone": 61812,
  "minus-circle": 61813,
  "minus": 61814,
  "mobile-signal": 61815,
  "mobile": 61816,
  "monitor": 61817,
  "mountains": 61818,
  "music": 61819,
  "next": 61820,
  "no-dogs": 61821,
  "no-smoking": 61822,
  "page-add": 61823,
  "page-copy": 61824,
  "page-csv": 61825,
  "page-delete": 61826,
  "page-doc": 61827,
  "page-edit": 61828,
  "page-export-csv": 61829,
  "page-export-doc": 61830,
  "page-export-pdf": 61831,
  "page-export": 61832,
  "page-filled": 61833,
  "page-multiple": 61834,
  "page-pdf": 61835,
  "page-remove": 61836,
  "page-search": 61837,
  "page": 61838,
  "paint-bucket": 61839,
  "paperclip": 61840,
  "pause": 61841,
  "paw": 61842,
  "paypal": 61843,
  "pencil": 61844,
  "photo": 61845,
  "play-circle": 61846,
  "play-video": 61847,
  "play": 61848,
  "plus": 61849,
  "pound": 61850,
  "power": 61851,
  "previous": 61852,
  "price-tag": 61853,
  "pricetag-multiple": 61854,
  "print": 61855,
  "prohibited": 61856,
  "projection-screen": 61857,
  "puzzle": 61858,
  "quote": 61859,
  "record": 61860,
  "refresh": 61861,
  "results-demographics": 61862,
  "results": 61863,
  "rewind-ten": 61864,
  "rewind": 61865,
  "rss": 61866,
  "safety-cone": 61867,
  "save": 61868,
  "share": 61869,
  "sheriff-badge": 61870,
  "shield": 61871,
  "shopping-bag": 61872,
  "shopping-cart": 61873,
  "shuffle": 61874,
  "skull": 61875,
  "social-500px": 61876,
  "social-adobe": 61877,
  "social-amazon": 61878,
  "social-android": 61879,
  "social-apple": 61880,
  "social-behance": 61881,
  "social-bing": 61882,
  "social-blogger": 61883,
  "social-delicious": 61884,
  "social-designer-news": 61885,
  "social-deviant-art": 61886,
  "social-digg": 61887,
  "social-dribbble": 61888,
  "social-drive": 61889,
  "social-dropbox": 61890,
  "social-evernote": 61891,
  "social-facebook": 61892,
  "social-flickr": 61893,
  "social-forrst": 61894,
  "social-foursquare": 61895,
  "social-game-center": 61896,
  "social-github": 61897,
  "social-google-plus": 61898,
  "social-hacker-news": 61899,
  "social-hi5": 61900,
  "social-instagram": 61901,
  "social-joomla": 61902,
  "social-lastfm": 61903,
  "social-linkedin": 61904,
  "social-medium": 61905,
  "social-myspace": 61906,
  "social-orkut": 61907,
  "social-path": 61908,
  "social-picasa": 61909,
  "social-pinterest": 61910,
  "social-rdio": 61911,
  "social-reddit": 61912,
  "social-skillshare": 61913,
  "social-skype": 61914,
  "social-smashing-mag": 61915,
  "social-snapchat": 61916,
  "social-spotify": 61917,
  "social-squidoo": 61918,
  "social-stack-overflow": 61919,
  "social-steam": 61920,
  "social-stumbleupon": 61921,
  "social-treehouse": 61922,
  "social-tumblr": 61923,
  "social-twitter": 61924,
  "social-vimeo": 61925,
  "social-windows": 61926,
  "social-xbox": 61927,
  "social-yahoo": 61928,
  "social-yelp": 61929,
  "social-youtube": 61930,
  "social-zerply": 61931,
  "social-zurb": 61932,
  "sound": 61933,
  "star": 61934,
  "stop": 61935,
  "strikethrough": 61936,
  "subscript": 61937,
  "superscript": 61938,
  "tablet-landscape": 61939,
  "tablet-portrait": 61940,
  "target-two": 61941,
  "target": 61942,
  "telephone-accessible": 61943,
  "telephone": 61944,
  "text-color": 61945,
  "thumbnails": 61946,
  "ticket": 61947,
  "torso-business": 61948,
  "torso-female": 61949,
  "torso": 61950,
  "torsos-all-female": 61951,
  "torsos-all": 61952,
  "torsos-female-male": 61953,
  "torsos-male-female": 61954,
  "torsos": 61955,
  "trash": 61956,
  "trees": 61957,
  "trophy": 61958,
  "underline": 61959,
  "universal-access": 61960,
  "unlink": 61961,
  "unlock": 61962,
  "upload-cloud": 61963,
  "upload": 61964,
  "usb": 61965,
  "video": 61966,
  "volume-none": 61967,
  "volume-strike": 61968,
  "volume": 61969,
  "web": 61970,
  "wheelchair": 61971,
  "widget": 61972,
  "wrench": 61973,
  "x-circle": 61974,
  "x": 61975,
  "yen": 61976,
  "zoom-in": 61977,
  "zoom-out": 61978
};
}, 736, null, "react-native-vector-icons/glyphmaps/Foundation.json");
__d(/* react-native-vector-icons/EvilIcons.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _EvilIcons = require(738                         ); // 738 = ./glyphmaps/EvilIcons.json

var _EvilIcons2 = babelHelpers.interopRequireDefault(_EvilIcons);

var iconSet = (0, _createIconSet2.default)(_EvilIcons2.default, 'EvilIcons', 'EvilIcons.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 737, null, "react-native-vector-icons/EvilIcons.js");
__d(/* react-native-vector-icons/glyphmaps/EvilIcons.json */function(global, require, module, exports) {module.exports = module.exports = {
  "archive": 61696,
  "arrow-down": 61697,
  "arrow-left": 61698,
  "arrow-right": 61699,
  "arrow-up": 61700,
  "bell": 61701,
  "calendar": 61702,
  "camera": 61703,
  "cart": 61704,
  "chart": 61705,
  "check": 61706,
  "chevron-down": 61707,
  "chevron-left": 61708,
  "chevron-right": 61709,
  "chevron-up": 61710,
  "clock": 61711,
  "close": 61712,
  "close-o": 61713,
  "comment": 61714,
  "credit-card": 61715,
  "envelope": 61716,
  "exclamation": 61717,
  "external-link": 61718,
  "eye": 61719,
  "gear": 61720,
  "heart": 61721,
  "image": 61722,
  "like": 61723,
  "link": 61724,
  "location": 61725,
  "lock": 61726,
  "minus": 61727,
  "navicon": 61728,
  "paperclip": 61729,
  "pencil": 61730,
  "play": 61731,
  "plus": 61732,
  "pointer": 61733,
  "question": 61734,
  "redo": 61735,
  "refresh": 61736,
  "retweet": 61737,
  "sc-facebook": 61738,
  "sc-github": 61739,
  "sc-google-plus": 61740,
  "sc-instagram": 61741,
  "sc-linkedin": 61742,
  "sc-odnoklassniki": 61743,
  "sc-pinterest": 61744,
  "sc-skype": 61745,
  "sc-soundcloud": 61746,
  "sc-telegram": 61747,
  "sc-tumblr": 61748,
  "sc-twitter": 61749,
  "sc-vimeo": 61750,
  "sc-vk": 61751,
  "sc-youtube": 61752,
  "search": 61753,
  "share-apple": 61754,
  "share-google": 61755,
  "spinner": 61756,
  "spinner-2": 61757,
  "spinner-3": 61758,
  "star": 61759,
  "tag": 61760,
  "trash": 61761,
  "trophy": 61762,
  "undo": 61763,
  "unlock": 61764,
  "user": 61765
};
}, 738, null, "react-native-vector-icons/glyphmaps/EvilIcons.json");
__d(/* react-native-vector-icons/Entypo.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _Entypo = require(740                      ); // 740 = ./glyphmaps/Entypo.json

var _Entypo2 = babelHelpers.interopRequireDefault(_Entypo);

var iconSet = (0, _createIconSet2.default)(_Entypo2.default, 'Entypo', 'Entypo.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 739, null, "react-native-vector-icons/Entypo.js");
__d(/* react-native-vector-icons/glyphmaps/Entypo.json */function(global, require, module, exports) {module.exports = module.exports = {
  "500px": 61696,
  "500px-with-circle": 61697,
  "add-to-list": 61698,
  "add-user": 61699,
  "address": 61700,
  "adjust": 61701,
  "air": 61702,
  "aircraft": 61703,
  "aircraft-landing": 61704,
  "aircraft-take-off": 61705,
  "align-bottom": 61706,
  "align-horizontal-middle": 61707,
  "align-left": 61708,
  "align-right": 61709,
  "align-top": 61710,
  "align-vertical-middle": 61711,
  "app-store": 61712,
  "archive": 61713,
  "area-graph": 61714,
  "arrow-bold-down": 61715,
  "arrow-bold-left": 61716,
  "arrow-bold-right": 61717,
  "arrow-bold-up": 61718,
  "arrow-down": 61719,
  "arrow-left": 61720,
  "arrow-long-down": 61721,
  "arrow-long-left": 61722,
  "arrow-long-right": 61723,
  "arrow-long-up": 61724,
  "arrow-right": 61725,
  "arrow-up": 61726,
  "arrow-with-circle-down": 61727,
  "arrow-with-circle-left": 61728,
  "arrow-with-circle-right": 61729,
  "arrow-with-circle-up": 61730,
  "attachment": 61731,
  "awareness-ribbon": 61732,
  "back": 61733,
  "back-in-time": 61734,
  "baidu": 61735,
  "bar-graph": 61736,
  "basecamp": 61737,
  "battery": 61738,
  "beamed-note": 61739,
  "behance": 61740,
  "bell": 61741,
  "blackboard": 61742,
  "block": 61743,
  "book": 61744,
  "bookmark": 61745,
  "bookmarks": 61746,
  "bowl": 61747,
  "box": 61748,
  "briefcase": 61749,
  "browser": 61750,
  "brush": 61751,
  "bucket": 61752,
  "bug": 61753,
  "cake": 61754,
  "calculator": 61755,
  "calendar": 61756,
  "camera": 61757,
  "ccw": 61758,
  "chat": 61759,
  "check": 61760,
  "chevron-down": 61761,
  "chevron-left": 61762,
  "chevron-right": 61763,
  "chevron-small-down": 61764,
  "chevron-small-left": 61765,
  "chevron-small-right": 61766,
  "chevron-small-up": 61767,
  "chevron-thin-down": 61768,
  "chevron-thin-left": 61769,
  "chevron-thin-right": 61770,
  "chevron-thin-up": 61771,
  "chevron-up": 61772,
  "chevron-with-circle-down": 61773,
  "chevron-with-circle-left": 61774,
  "chevron-with-circle-right": 61775,
  "chevron-with-circle-up": 61776,
  "circle": 61777,
  "circle-with-cross": 61778,
  "circle-with-minus": 61779,
  "circle-with-plus": 61780,
  "circular-graph": 61781,
  "clapperboard": 61782,
  "classic-computer": 61783,
  "clipboard": 61784,
  "clock": 61785,
  "cloud": 61786,
  "code": 61787,
  "cog": 61788,
  "colours": 61789,
  "compass": 61790,
  "controller-fast-backward": 61791,
  "controller-fast-forward": 61792,
  "controller-jump-to-start": 61793,
  "controller-next": 61794,
  "controller-paus": 61795,
  "controller-play": 61796,
  "controller-record": 61797,
  "controller-stop": 61798,
  "controller-volume": 61799,
  "copy": 61800,
  "creative-cloud": 61801,
  "creative-commons": 61802,
  "creative-commons-attribution": 61803,
  "creative-commons-noderivs": 61804,
  "creative-commons-noncommercial-eu": 61805,
  "creative-commons-noncommercial-us": 61806,
  "creative-commons-public-domain": 61807,
  "creative-commons-remix": 61808,
  "creative-commons-share": 61809,
  "creative-commons-sharealike": 61810,
  "credit": 61811,
  "credit-card": 61812,
  "crop": 61813,
  "cross": 61814,
  "cup": 61815,
  "cw": 61816,
  "cycle": 61817,
  "database": 61818,
  "dial-pad": 61819,
  "direction": 61820,
  "document": 61821,
  "document-landscape": 61822,
  "documents": 61823,
  "dot-single": 61824,
  "dots-three-horizontal": 61825,
  "dots-three-vertical": 61826,
  "dots-two-horizontal": 61827,
  "dots-two-vertical": 61828,
  "download": 61829,
  "dribbble": 61830,
  "dribbble-with-circle": 61831,
  "drink": 61832,
  "drive": 61833,
  "drop": 61834,
  "dropbox": 61835,
  "edit": 61836,
  "email": 61837,
  "emoji-flirt": 61838,
  "emoji-happy": 61839,
  "emoji-neutral": 61840,
  "emoji-sad": 61841,
  "erase": 61842,
  "eraser": 61843,
  "evernote": 61844,
  "export": 61845,
  "eye": 61846,
  "eye-with-line": 61847,
  "facebook": 61848,
  "facebook-with-circle": 61849,
  "feather": 61850,
  "fingerprint": 61851,
  "flag": 61852,
  "flash": 61853,
  "flashlight": 61854,
  "flat-brush": 61855,
  "flattr": 61856,
  "flickr": 61857,
  "flickr-with-circle": 61858,
  "flow-branch": 61859,
  "flow-cascade": 61860,
  "flow-line": 61861,
  "flow-parallel": 61862,
  "flow-tree": 61863,
  "flower": 61864,
  "folder": 61865,
  "folder-images": 61866,
  "folder-music": 61867,
  "folder-video": 61868,
  "forward": 61869,
  "foursquare": 61870,
  "funnel": 61871,
  "game-controller": 61872,
  "gauge": 61873,
  "github": 61874,
  "github-with-circle": 61875,
  "globe": 61876,
  "google-": 61877,
  "google--with-circle": 61878,
  "google-drive": 61879,
  "google-hangouts": 61880,
  "google-play": 61881,
  "graduation-cap": 61882,
  "grid": 61883,
  "grooveshark": 61884,
  "hair-cross": 61885,
  "hand": 61886,
  "heart": 61887,
  "heart-outlined": 61888,
  "help": 61889,
  "help-with-circle": 61890,
  "home": 61891,
  "hour-glass": 61892,
  "houzz": 61893,
  "icloud": 61894,
  "image": 61895,
  "image-inverted": 61896,
  "images": 61897,
  "inbox": 61898,
  "infinity": 61899,
  "info": 61900,
  "info-with-circle": 61901,
  "instagram": 61902,
  "instagram-with-circle": 61903,
  "install": 61904,
  "key": 61905,
  "keyboard": 61906,
  "lab-flask": 61907,
  "landline": 61908,
  "language": 61909,
  "laptop": 61910,
  "lastfm": 61911,
  "lastfm-with-circle": 61912,
  "layers": 61913,
  "leaf": 61914,
  "level-down": 61915,
  "level-up": 61916,
  "lifebuoy": 61917,
  "light-bulb": 61918,
  "light-down": 61919,
  "light-up": 61920,
  "line-graph": 61921,
  "link": 61922,
  "linkedin": 61923,
  "linkedin-with-circle": 61924,
  "list": 61925,
  "location": 61926,
  "location-pin": 61927,
  "lock": 61928,
  "lock-open": 61929,
  "log-out": 61930,
  "login": 61931,
  "loop": 61932,
  "magnet": 61933,
  "magnifying-glass": 61934,
  "mail": 61935,
  "mail-with-circle": 61936,
  "man": 61937,
  "map": 61938,
  "mask": 61939,
  "medal": 61940,
  "medium": 61941,
  "medium-with-circle": 61942,
  "megaphone": 61943,
  "menu": 61944,
  "merge": 61945,
  "message": 61946,
  "mic": 61947,
  "minus": 61948,
  "mixi": 61949,
  "mobile": 61950,
  "modern-mic": 61951,
  "moon": 61952,
  "mouse": 61953,
  "mouse-pointer": 61954,
  "music": 61955,
  "network": 61956,
  "new": 61957,
  "new-message": 61958,
  "news": 61959,
  "newsletter": 61960,
  "note": 61961,
  "notification": 61962,
  "notifications-off": 61963,
  "old-mobile": 61964,
  "old-phone": 61965,
  "onedrive": 61966,
  "open-book": 61967,
  "palette": 61968,
  "paper-plane": 61969,
  "paypal": 61970,
  "pencil": 61971,
  "phone": 61972,
  "picasa": 61973,
  "pie-chart": 61974,
  "pin": 61975,
  "pinterest": 61976,
  "pinterest-with-circle": 61977,
  "plus": 61978,
  "popup": 61979,
  "power-plug": 61980,
  "price-ribbon": 61981,
  "price-tag": 61982,
  "print": 61983,
  "progress-empty": 61984,
  "progress-full": 61985,
  "progress-one": 61986,
  "progress-two": 61987,
  "publish": 61988,
  "qq": 61989,
  "qq-with-circle": 61990,
  "quote": 61991,
  "radio": 61992,
  "raft": 61993,
  "raft-with-circle": 61994,
  "rainbow": 61995,
  "rdio": 61996,
  "rdio-with-circle": 61997,
  "remove-user": 61998,
  "renren": 61999,
  "reply": 62000,
  "reply-all": 62001,
  "resize-100-": 62002,
  "resize-full-screen": 62003,
  "retweet": 62004,
  "rocket": 62005,
  "round-brush": 62006,
  "rss": 62007,
  "ruler": 62008,
  "save": 62009,
  "scissors": 62010,
  "scribd": 62011,
  "select-arrows": 62012,
  "share": 62013,
  "share-alternative": 62014,
  "shareable": 62015,
  "shield": 62016,
  "shop": 62017,
  "shopping-bag": 62018,
  "shopping-basket": 62019,
  "shopping-cart": 62020,
  "shuffle": 62021,
  "signal": 62022,
  "sina-weibo": 62023,
  "skype": 62024,
  "skype-with-circle": 62025,
  "slideshare": 62026,
  "smashing": 62027,
  "sound": 62028,
  "sound-mix": 62029,
  "sound-mute": 62030,
  "soundcloud": 62031,
  "sports-club": 62032,
  "spotify": 62033,
  "spotify-with-circle": 62034,
  "spreadsheet": 62035,
  "squared-cross": 62036,
  "squared-minus": 62037,
  "squared-plus": 62038,
  "star": 62039,
  "star-outlined": 62040,
  "stopwatch": 62041,
  "stumbleupon": 62042,
  "stumbleupon-with-circle": 62043,
  "suitcase": 62044,
  "swap": 62045,
  "swarm": 62046,
  "sweden": 62047,
  "switch": 62048,
  "tablet": 62049,
  "tablet-mobile-combo": 62050,
  "tag": 62051,
  "text": 62052,
  "text-document": 62053,
  "text-document-inverted": 62054,
  "thermometer": 62055,
  "thumbs-down": 62056,
  "thumbs-up": 62057,
  "thunder-cloud": 62058,
  "ticket": 62059,
  "time-slot": 62060,
  "tools": 62061,
  "traffic-cone": 62062,
  "trash": 62063,
  "tree": 62064,
  "triangle-down": 62065,
  "triangle-left": 62066,
  "triangle-right": 62067,
  "triangle-up": 62068,
  "tripadvisor": 62069,
  "trophy": 62070,
  "tumblr": 62071,
  "tumblr-with-circle": 62072,
  "tv": 62073,
  "twitter": 62074,
  "twitter-with-circle": 62075,
  "typing": 62076,
  "uninstall": 62077,
  "unread": 62078,
  "untag": 62079,
  "upload": 62080,
  "upload-to-cloud": 62081,
  "user": 62082,
  "users": 62083,
  "v-card": 62084,
  "video": 62085,
  "video-camera": 62086,
  "vimeo": 62087,
  "vimeo-with-circle": 62088,
  "vine": 62089,
  "vine-with-circle": 62090,
  "vinyl": 62091,
  "vk": 62092,
  "vk-alternitive": 62093,
  "vk-with-circle": 62094,
  "voicemail": 62095,
  "wallet": 62096,
  "warning": 62097,
  "water": 62098,
  "windows-store": 62099,
  "xing": 62100,
  "xing-with-circle": 62101,
  "yelp": 62102,
  "youko": 62103,
  "youko-with-circle": 62104,
  "youtube": 62105,
  "youtube-with-circle": 62106
};
}, 740, null, "react-native-vector-icons/glyphmaps/Entypo.json");
__d(/* react-native-vector-icons/FontAwesome.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _FontAwesome = require(742                           ); // 742 = ./glyphmaps/FontAwesome.json

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var iconSet = (0, _createIconSet2.default)(_FontAwesome2.default, 'FontAwesome', 'FontAwesome.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 741, null, "react-native-vector-icons/FontAwesome.js");
__d(/* react-native-vector-icons/glyphmaps/FontAwesome.json */function(global, require, module, exports) {module.exports = module.exports = {
  "glass": 61440,
  "music": 61441,
  "search": 61442,
  "envelope-o": 61443,
  "heart": 61444,
  "star": 61445,
  "star-o": 61446,
  "user": 61447,
  "film": 61448,
  "th-large": 61449,
  "th": 61450,
  "th-list": 61451,
  "check": 61452,
  "remove": 61453,
  "close": 61453,
  "times": 61453,
  "search-plus": 61454,
  "search-minus": 61456,
  "power-off": 61457,
  "signal": 61458,
  "gear": 61459,
  "cog": 61459,
  "trash-o": 61460,
  "home": 61461,
  "file-o": 61462,
  "clock-o": 61463,
  "road": 61464,
  "download": 61465,
  "arrow-circle-o-down": 61466,
  "arrow-circle-o-up": 61467,
  "inbox": 61468,
  "play-circle-o": 61469,
  "rotate-right": 61470,
  "repeat": 61470,
  "refresh": 61473,
  "list-alt": 61474,
  "lock": 61475,
  "flag": 61476,
  "headphones": 61477,
  "volume-off": 61478,
  "volume-down": 61479,
  "volume-up": 61480,
  "qrcode": 61481,
  "barcode": 61482,
  "tag": 61483,
  "tags": 61484,
  "book": 61485,
  "bookmark": 61486,
  "print": 61487,
  "camera": 61488,
  "font": 61489,
  "bold": 61490,
  "italic": 61491,
  "text-height": 61492,
  "text-width": 61493,
  "align-left": 61494,
  "align-center": 61495,
  "align-right": 61496,
  "align-justify": 61497,
  "list": 61498,
  "dedent": 61499,
  "outdent": 61499,
  "indent": 61500,
  "video-camera": 61501,
  "photo": 61502,
  "image": 61502,
  "picture-o": 61502,
  "pencil": 61504,
  "map-marker": 61505,
  "adjust": 61506,
  "tint": 61507,
  "edit": 61508,
  "pencil-square-o": 61508,
  "share-square-o": 61509,
  "check-square-o": 61510,
  "arrows": 61511,
  "step-backward": 61512,
  "fast-backward": 61513,
  "backward": 61514,
  "play": 61515,
  "pause": 61516,
  "stop": 61517,
  "forward": 61518,
  "fast-forward": 61520,
  "step-forward": 61521,
  "eject": 61522,
  "chevron-left": 61523,
  "chevron-right": 61524,
  "plus-circle": 61525,
  "minus-circle": 61526,
  "times-circle": 61527,
  "check-circle": 61528,
  "question-circle": 61529,
  "info-circle": 61530,
  "crosshairs": 61531,
  "times-circle-o": 61532,
  "check-circle-o": 61533,
  "ban": 61534,
  "arrow-left": 61536,
  "arrow-right": 61537,
  "arrow-up": 61538,
  "arrow-down": 61539,
  "mail-forward": 61540,
  "share": 61540,
  "expand": 61541,
  "compress": 61542,
  "plus": 61543,
  "minus": 61544,
  "asterisk": 61545,
  "exclamation-circle": 61546,
  "gift": 61547,
  "leaf": 61548,
  "fire": 61549,
  "eye": 61550,
  "eye-slash": 61552,
  "warning": 61553,
  "exclamation-triangle": 61553,
  "plane": 61554,
  "calendar": 61555,
  "random": 61556,
  "comment": 61557,
  "magnet": 61558,
  "chevron-up": 61559,
  "chevron-down": 61560,
  "retweet": 61561,
  "shopping-cart": 61562,
  "folder": 61563,
  "folder-open": 61564,
  "arrows-v": 61565,
  "arrows-h": 61566,
  "bar-chart-o": 61568,
  "bar-chart": 61568,
  "twitter-square": 61569,
  "facebook-square": 61570,
  "camera-retro": 61571,
  "key": 61572,
  "gears": 61573,
  "cogs": 61573,
  "comments": 61574,
  "thumbs-o-up": 61575,
  "thumbs-o-down": 61576,
  "star-half": 61577,
  "heart-o": 61578,
  "sign-out": 61579,
  "linkedin-square": 61580,
  "thumb-tack": 61581,
  "external-link": 61582,
  "sign-in": 61584,
  "trophy": 61585,
  "github-square": 61586,
  "upload": 61587,
  "lemon-o": 61588,
  "phone": 61589,
  "square-o": 61590,
  "bookmark-o": 61591,
  "phone-square": 61592,
  "twitter": 61593,
  "facebook-f": 61594,
  "facebook": 61594,
  "github": 61595,
  "unlock": 61596,
  "credit-card": 61597,
  "feed": 61598,
  "rss": 61598,
  "hdd-o": 61600,
  "bullhorn": 61601,
  "bell": 61683,
  "certificate": 61603,
  "hand-o-right": 61604,
  "hand-o-left": 61605,
  "hand-o-up": 61606,
  "hand-o-down": 61607,
  "arrow-circle-left": 61608,
  "arrow-circle-right": 61609,
  "arrow-circle-up": 61610,
  "arrow-circle-down": 61611,
  "globe": 61612,
  "wrench": 61613,
  "tasks": 61614,
  "filter": 61616,
  "briefcase": 61617,
  "arrows-alt": 61618,
  "group": 61632,
  "users": 61632,
  "chain": 61633,
  "link": 61633,
  "cloud": 61634,
  "flask": 61635,
  "cut": 61636,
  "scissors": 61636,
  "copy": 61637,
  "files-o": 61637,
  "paperclip": 61638,
  "save": 61639,
  "floppy-o": 61639,
  "square": 61640,
  "navicon": 61641,
  "reorder": 61641,
  "bars": 61641,
  "list-ul": 61642,
  "list-ol": 61643,
  "strikethrough": 61644,
  "underline": 61645,
  "table": 61646,
  "magic": 61648,
  "truck": 61649,
  "pinterest": 61650,
  "pinterest-square": 61651,
  "google-plus-square": 61652,
  "google-plus": 61653,
  "money": 61654,
  "caret-down": 61655,
  "caret-up": 61656,
  "caret-left": 61657,
  "caret-right": 61658,
  "columns": 61659,
  "unsorted": 61660,
  "sort": 61660,
  "sort-down": 61661,
  "sort-desc": 61661,
  "sort-up": 61662,
  "sort-asc": 61662,
  "envelope": 61664,
  "linkedin": 61665,
  "rotate-left": 61666,
  "undo": 61666,
  "legal": 61667,
  "gavel": 61667,
  "dashboard": 61668,
  "tachometer": 61668,
  "comment-o": 61669,
  "comments-o": 61670,
  "flash": 61671,
  "bolt": 61671,
  "sitemap": 61672,
  "umbrella": 61673,
  "paste": 61674,
  "clipboard": 61674,
  "lightbulb-o": 61675,
  "exchange": 61676,
  "cloud-download": 61677,
  "cloud-upload": 61678,
  "user-md": 61680,
  "stethoscope": 61681,
  "suitcase": 61682,
  "bell-o": 61602,
  "coffee": 61684,
  "cutlery": 61685,
  "file-text-o": 61686,
  "building-o": 61687,
  "hospital-o": 61688,
  "ambulance": 61689,
  "medkit": 61690,
  "fighter-jet": 61691,
  "beer": 61692,
  "h-square": 61693,
  "plus-square": 61694,
  "angle-double-left": 61696,
  "angle-double-right": 61697,
  "angle-double-up": 61698,
  "angle-double-down": 61699,
  "angle-left": 61700,
  "angle-right": 61701,
  "angle-up": 61702,
  "angle-down": 61703,
  "desktop": 61704,
  "laptop": 61705,
  "tablet": 61706,
  "mobile-phone": 61707,
  "mobile": 61707,
  "circle-o": 61708,
  "quote-left": 61709,
  "quote-right": 61710,
  "spinner": 61712,
  "circle": 61713,
  "mail-reply": 61714,
  "reply": 61714,
  "github-alt": 61715,
  "folder-o": 61716,
  "folder-open-o": 61717,
  "smile-o": 61720,
  "frown-o": 61721,
  "meh-o": 61722,
  "gamepad": 61723,
  "keyboard-o": 61724,
  "flag-o": 61725,
  "flag-checkered": 61726,
  "terminal": 61728,
  "code": 61729,
  "mail-reply-all": 61730,
  "reply-all": 61730,
  "star-half-empty": 61731,
  "star-half-full": 61731,
  "star-half-o": 61731,
  "location-arrow": 61732,
  "crop": 61733,
  "code-fork": 61734,
  "unlink": 61735,
  "chain-broken": 61735,
  "question": 61736,
  "info": 61737,
  "exclamation": 61738,
  "superscript": 61739,
  "subscript": 61740,
  "eraser": 61741,
  "puzzle-piece": 61742,
  "microphone": 61744,
  "microphone-slash": 61745,
  "shield": 61746,
  "calendar-o": 61747,
  "fire-extinguisher": 61748,
  "rocket": 61749,
  "maxcdn": 61750,
  "chevron-circle-left": 61751,
  "chevron-circle-right": 61752,
  "chevron-circle-up": 61753,
  "chevron-circle-down": 61754,
  "html5": 61755,
  "css3": 61756,
  "anchor": 61757,
  "unlock-alt": 61758,
  "bullseye": 61760,
  "ellipsis-h": 61761,
  "ellipsis-v": 61762,
  "rss-square": 61763,
  "play-circle": 61764,
  "ticket": 61765,
  "minus-square": 61766,
  "minus-square-o": 61767,
  "level-up": 61768,
  "level-down": 61769,
  "check-square": 61770,
  "pencil-square": 61771,
  "external-link-square": 61772,
  "share-square": 61773,
  "compass": 61774,
  "toggle-down": 61776,
  "caret-square-o-down": 61776,
  "toggle-up": 61777,
  "caret-square-o-up": 61777,
  "toggle-right": 61778,
  "caret-square-o-right": 61778,
  "euro": 61779,
  "eur": 61779,
  "gbp": 61780,
  "dollar": 61781,
  "usd": 61781,
  "rupee": 61782,
  "inr": 61782,
  "cny": 61783,
  "rmb": 61783,
  "yen": 61783,
  "jpy": 61783,
  "ruble": 61784,
  "rouble": 61784,
  "rub": 61784,
  "won": 61785,
  "krw": 61785,
  "bitcoin": 61786,
  "btc": 61786,
  "file": 61787,
  "file-text": 61788,
  "sort-alpha-asc": 61789,
  "sort-alpha-desc": 61790,
  "sort-amount-asc": 61792,
  "sort-amount-desc": 61793,
  "sort-numeric-asc": 61794,
  "sort-numeric-desc": 61795,
  "thumbs-up": 61796,
  "thumbs-down": 61797,
  "youtube-square": 61798,
  "youtube": 61799,
  "xing": 61800,
  "xing-square": 61801,
  "youtube-play": 61802,
  "dropbox": 61803,
  "stack-overflow": 61804,
  "instagram": 61805,
  "flickr": 61806,
  "adn": 61808,
  "bitbucket": 61809,
  "bitbucket-square": 61810,
  "tumblr": 61811,
  "tumblr-square": 61812,
  "long-arrow-down": 61813,
  "long-arrow-up": 61814,
  "long-arrow-left": 61815,
  "long-arrow-right": 61816,
  "apple": 61817,
  "windows": 61818,
  "android": 61819,
  "linux": 61820,
  "dribbble": 61821,
  "skype": 61822,
  "foursquare": 61824,
  "trello": 61825,
  "female": 61826,
  "male": 61827,
  "gittip": 61828,
  "gratipay": 61828,
  "sun-o": 61829,
  "moon-o": 61830,
  "archive": 61831,
  "bug": 61832,
  "vk": 61833,
  "weibo": 61834,
  "renren": 61835,
  "pagelines": 61836,
  "stack-exchange": 61837,
  "arrow-circle-o-right": 61838,
  "arrow-circle-o-left": 61840,
  "toggle-left": 61841,
  "caret-square-o-left": 61841,
  "dot-circle-o": 61842,
  "wheelchair": 61843,
  "vimeo-square": 61844,
  "turkish-lira": 61845,
  "try": 61845,
  "plus-square-o": 61846,
  "space-shuttle": 61847,
  "slack": 61848,
  "envelope-square": 61849,
  "wordpress": 61850,
  "openid": 61851,
  "institution": 61852,
  "bank": 61852,
  "university": 61852,
  "mortar-board": 61853,
  "graduation-cap": 61853,
  "yahoo": 61854,
  "google": 61856,
  "reddit": 61857,
  "reddit-square": 61858,
  "stumbleupon-circle": 61859,
  "stumbleupon": 61860,
  "delicious": 61861,
  "digg": 61862,
  "pied-piper-pp": 61863,
  "pied-piper-alt": 61864,
  "drupal": 61865,
  "joomla": 61866,
  "language": 61867,
  "fax": 61868,
  "building": 61869,
  "child": 61870,
  "paw": 61872,
  "spoon": 61873,
  "cube": 61874,
  "cubes": 61875,
  "behance": 61876,
  "behance-square": 61877,
  "steam": 61878,
  "steam-square": 61879,
  "recycle": 61880,
  "automobile": 61881,
  "car": 61881,
  "cab": 61882,
  "taxi": 61882,
  "tree": 61883,
  "spotify": 61884,
  "deviantart": 61885,
  "soundcloud": 61886,
  "database": 61888,
  "file-pdf-o": 61889,
  "file-word-o": 61890,
  "file-excel-o": 61891,
  "file-powerpoint-o": 61892,
  "file-photo-o": 61893,
  "file-picture-o": 61893,
  "file-image-o": 61893,
  "file-zip-o": 61894,
  "file-archive-o": 61894,
  "file-sound-o": 61895,
  "file-audio-o": 61895,
  "file-movie-o": 61896,
  "file-video-o": 61896,
  "file-code-o": 61897,
  "vine": 61898,
  "codepen": 61899,
  "jsfiddle": 61900,
  "life-bouy": 61901,
  "life-buoy": 61901,
  "life-saver": 61901,
  "support": 61901,
  "life-ring": 61901,
  "circle-o-notch": 61902,
  "ra": 61904,
  "resistance": 61904,
  "rebel": 61904,
  "ge": 61905,
  "empire": 61905,
  "git-square": 61906,
  "git": 61907,
  "y-combinator-square": 61908,
  "yc-square": 61908,
  "hacker-news": 61908,
  "tencent-weibo": 61909,
  "qq": 61910,
  "wechat": 61911,
  "weixin": 61911,
  "send": 61912,
  "paper-plane": 61912,
  "send-o": 61913,
  "paper-plane-o": 61913,
  "history": 61914,
  "circle-thin": 61915,
  "header": 61916,
  "paragraph": 61917,
  "sliders": 61918,
  "share-alt": 61920,
  "share-alt-square": 61921,
  "bomb": 61922,
  "soccer-ball-o": 61923,
  "futbol-o": 61923,
  "tty": 61924,
  "binoculars": 61925,
  "plug": 61926,
  "slideshare": 61927,
  "twitch": 61928,
  "yelp": 61929,
  "newspaper-o": 61930,
  "wifi": 61931,
  "calculator": 61932,
  "paypal": 61933,
  "google-wallet": 61934,
  "cc-visa": 61936,
  "cc-mastercard": 61937,
  "cc-discover": 61938,
  "cc-amex": 61939,
  "cc-paypal": 61940,
  "cc-stripe": 61941,
  "bell-slash": 61942,
  "bell-slash-o": 61943,
  "trash": 61944,
  "copyright": 61945,
  "at": 61946,
  "eyedropper": 61947,
  "paint-brush": 61948,
  "birthday-cake": 61949,
  "area-chart": 61950,
  "pie-chart": 61952,
  "line-chart": 61953,
  "lastfm": 61954,
  "lastfm-square": 61955,
  "toggle-off": 61956,
  "toggle-on": 61957,
  "bicycle": 61958,
  "bus": 61959,
  "ioxhost": 61960,
  "angellist": 61961,
  "cc": 61962,
  "shekel": 61963,
  "sheqel": 61963,
  "ils": 61963,
  "meanpath": 61964,
  "buysellads": 61965,
  "connectdevelop": 61966,
  "dashcube": 61968,
  "forumbee": 61969,
  "leanpub": 61970,
  "sellsy": 61971,
  "shirtsinbulk": 61972,
  "simplybuilt": 61973,
  "skyatlas": 61974,
  "cart-plus": 61975,
  "cart-arrow-down": 61976,
  "diamond": 61977,
  "ship": 61978,
  "user-secret": 61979,
  "motorcycle": 61980,
  "street-view": 61981,
  "heartbeat": 61982,
  "venus": 61985,
  "mars": 61986,
  "mercury": 61987,
  "intersex": 61988,
  "transgender": 61988,
  "transgender-alt": 61989,
  "venus-double": 61990,
  "mars-double": 61991,
  "venus-mars": 61992,
  "mars-stroke": 61993,
  "mars-stroke-v": 61994,
  "mars-stroke-h": 61995,
  "neuter": 61996,
  "genderless": 61997,
  "facebook-official": 62000,
  "pinterest-p": 62001,
  "whatsapp": 62002,
  "server": 62003,
  "user-plus": 62004,
  "user-times": 62005,
  "hotel": 62006,
  "bed": 62006,
  "viacoin": 62007,
  "train": 62008,
  "subway": 62009,
  "medium": 62010,
  "yc": 62011,
  "y-combinator": 62011,
  "optin-monster": 62012,
  "opencart": 62013,
  "expeditedssl": 62014,
  "battery-4": 62016,
  "battery": 62016,
  "battery-full": 62016,
  "battery-3": 62017,
  "battery-three-quarters": 62017,
  "battery-2": 62018,
  "battery-half": 62018,
  "battery-1": 62019,
  "battery-quarter": 62019,
  "battery-0": 62020,
  "battery-empty": 62020,
  "mouse-pointer": 62021,
  "i-cursor": 62022,
  "object-group": 62023,
  "object-ungroup": 62024,
  "sticky-note": 62025,
  "sticky-note-o": 62026,
  "cc-jcb": 62027,
  "cc-diners-club": 62028,
  "clone": 62029,
  "balance-scale": 62030,
  "hourglass-o": 62032,
  "hourglass-1": 62033,
  "hourglass-start": 62033,
  "hourglass-2": 62034,
  "hourglass-half": 62034,
  "hourglass-3": 62035,
  "hourglass-end": 62035,
  "hourglass": 62036,
  "hand-grab-o": 62037,
  "hand-rock-o": 62037,
  "hand-stop-o": 62038,
  "hand-paper-o": 62038,
  "hand-scissors-o": 62039,
  "hand-lizard-o": 62040,
  "hand-spock-o": 62041,
  "hand-pointer-o": 62042,
  "hand-peace-o": 62043,
  "trademark": 62044,
  "registered": 62045,
  "creative-commons": 62046,
  "gg": 62048,
  "gg-circle": 62049,
  "tripadvisor": 62050,
  "odnoklassniki": 62051,
  "odnoklassniki-square": 62052,
  "get-pocket": 62053,
  "wikipedia-w": 62054,
  "safari": 62055,
  "chrome": 62056,
  "firefox": 62057,
  "opera": 62058,
  "internet-explorer": 62059,
  "tv": 62060,
  "television": 62060,
  "contao": 62061,
  "500px": 62062,
  "amazon": 62064,
  "calendar-plus-o": 62065,
  "calendar-minus-o": 62066,
  "calendar-times-o": 62067,
  "calendar-check-o": 62068,
  "industry": 62069,
  "map-pin": 62070,
  "map-signs": 62071,
  "map-o": 62072,
  "map": 62073,
  "commenting": 62074,
  "commenting-o": 62075,
  "houzz": 62076,
  "vimeo": 62077,
  "black-tie": 62078,
  "fonticons": 62080,
  "reddit-alien": 62081,
  "edge": 62082,
  "credit-card-alt": 62083,
  "codiepie": 62084,
  "modx": 62085,
  "fort-awesome": 62086,
  "usb": 62087,
  "product-hunt": 62088,
  "mixcloud": 62089,
  "scribd": 62090,
  "pause-circle": 62091,
  "pause-circle-o": 62092,
  "stop-circle": 62093,
  "stop-circle-o": 62094,
  "shopping-bag": 62096,
  "shopping-basket": 62097,
  "hashtag": 62098,
  "bluetooth": 62099,
  "bluetooth-b": 62100,
  "percent": 62101,
  "gitlab": 62102,
  "wpbeginner": 62103,
  "wpforms": 62104,
  "envira": 62105,
  "universal-access": 62106,
  "wheelchair-alt": 62107,
  "question-circle-o": 62108,
  "blind": 62109,
  "audio-description": 62110,
  "volume-control-phone": 62112,
  "braille": 62113,
  "assistive-listening-systems": 62114,
  "asl-interpreting": 62115,
  "american-sign-language-interpreting": 62115,
  "deafness": 62116,
  "hard-of-hearing": 62116,
  "deaf": 62116,
  "glide": 62117,
  "glide-g": 62118,
  "signing": 62119,
  "sign-language": 62119,
  "low-vision": 62120,
  "viadeo": 62121,
  "viadeo-square": 62122,
  "snapchat": 62123,
  "snapchat-ghost": 62124,
  "snapchat-square": 62125,
  "pied-piper": 62126,
  "first-order": 62128,
  "yoast": 62129,
  "themeisle": 62130,
  "google-plus-circle": 62131,
  "google-plus-official": 62131,
  "fa": 62132,
  "font-awesome": 62132,
  "handshake-o": 62133,
  "envelope-open": 62134,
  "envelope-open-o": 62135,
  "linode": 62136,
  "address-book": 62137,
  "address-book-o": 62138,
  "vcard": 62139,
  "address-card": 62139,
  "vcard-o": 62140,
  "address-card-o": 62140,
  "user-circle": 62141,
  "user-circle-o": 62142,
  "user-o": 62144,
  "id-badge": 62145,
  "drivers-license": 62146,
  "id-card": 62146,
  "drivers-license-o": 62147,
  "id-card-o": 62147,
  "quora": 62148,
  "free-code-camp": 62149,
  "telegram": 62150,
  "thermometer-4": 62151,
  "thermometer": 62151,
  "thermometer-full": 62151,
  "thermometer-3": 62152,
  "thermometer-three-quarters": 62152,
  "thermometer-2": 62153,
  "thermometer-half": 62153,
  "thermometer-1": 62154,
  "thermometer-quarter": 62154,
  "thermometer-0": 62155,
  "thermometer-empty": 62155,
  "shower": 62156,
  "bathtub": 62157,
  "s15": 62157,
  "bath": 62157,
  "podcast": 62158,
  "window-maximize": 62160,
  "window-minimize": 62161,
  "window-restore": 62162,
  "times-rectangle": 62163,
  "window-close": 62163,
  "times-rectangle-o": 62164,
  "window-close-o": 62164,
  "bandcamp": 62165,
  "grav": 62166,
  "etsy": 62167,
  "imdb": 62168,
  "ravelry": 62169,
  "eercast": 62170,
  "microchip": 62171,
  "snowflake-o": 62172,
  "superpowers": 62173,
  "wpexplorer": 62174,
  "meetup": 62176
};
}, 742, null, "react-native-vector-icons/glyphmaps/FontAwesome.json");
__d(/* react-native-vector-icons/SimpleLineIcons.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(562                    ); // 562 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _SimpleLineIcons = require(744                               ); // 744 = ./glyphmaps/SimpleLineIcons.json

var _SimpleLineIcons2 = babelHelpers.interopRequireDefault(_SimpleLineIcons);

var iconSet = (0, _createIconSet2.default)(_SimpleLineIcons2.default, 'simple-line-icons', 'SimpleLineIcons.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 743, null, "react-native-vector-icons/SimpleLineIcons.js");
__d(/* react-native-vector-icons/glyphmaps/SimpleLineIcons.json */function(global, require, module, exports) {module.exports = module.exports = {
  "user": 57349,
  "people": 57345,
  "user-female": 57344,
  "user-follow": 57346,
  "user-following": 57347,
  "user-unfollow": 57348,
  "login": 57446,
  "logout": 57445,
  "emotsmile": 57377,
  "phone": 58880,
  "call-end": 57416,
  "call-in": 57415,
  "call-out": 57414,
  "map": 57395,
  "location-pin": 57494,
  "direction": 57410,
  "directions": 57409,
  "compass": 57413,
  "layers": 57396,
  "menu": 58881,
  "list": 57447,
  "options-vertical": 58882,
  "options": 58883,
  "arrow-down": 58884,
  "arrow-left": 58885,
  "arrow-right": 58886,
  "arrow-up": 58887,
  "arrow-up-circle": 57464,
  "arrow-left-circle": 57466,
  "arrow-right-circle": 57465,
  "arrow-down-circle": 57467,
  "check": 57472,
  "clock": 57473,
  "plus": 57493,
  "minus": 58901,
  "close": 57474,
  "event": 58905,
  "exclamation": 58903,
  "organization": 58902,
  "trophy": 57350,
  "screen-smartphone": 57360,
  "screen-desktop": 57361,
  "plane": 57362,
  "notebook": 57363,
  "mustache": 57364,
  "mouse": 57365,
  "magnet": 57366,
  "energy": 57376,
  "disc": 57378,
  "cursor": 57454,
  "cursor-move": 57379,
  "crop": 57380,
  "chemistry": 57382,
  "speedometer": 57351,
  "shield": 57358,
  "screen-tablet": 57359,
  "magic-wand": 57367,
  "hourglass": 57368,
  "graduation": 57369,
  "ghost": 57370,
  "game-controller": 57371,
  "fire": 57372,
  "eyeglass": 57373,
  "envelope-open": 57374,
  "envelope-letter": 57375,
  "bell": 57383,
  "badge": 57384,
  "anchor": 57385,
  "wallet": 57386,
  "vector": 57387,
  "speech": 57388,
  "puzzle": 57389,
  "printer": 57390,
  "present": 57391,
  "playlist": 57392,
  "pin": 57393,
  "picture": 57394,
  "handbag": 57397,
  "globe-alt": 57398,
  "globe": 57399,
  "folder-alt": 57401,
  "folder": 57481,
  "film": 57402,
  "feed": 57403,
  "drop": 57406,
  "drawer": 57407,
  "docs": 57408,
  "doc": 57477,
  "diamond": 57411,
  "cup": 57412,
  "calculator": 57417,
  "bubbles": 57418,
  "briefcase": 57419,
  "book-open": 57420,
  "basket-loaded": 57421,
  "basket": 57422,
  "bag": 57423,
  "action-undo": 57424,
  "action-redo": 57425,
  "wrench": 57426,
  "umbrella": 57427,
  "trash": 57428,
  "tag": 57429,
  "support": 57430,
  "frame": 57400,
  "size-fullscreen": 57431,
  "size-actual": 57432,
  "shuffle": 57433,
  "share-alt": 57434,
  "share": 57435,
  "rocket": 57436,
  "question": 57437,
  "pie-chart": 57438,
  "pencil": 57439,
  "note": 57440,
  "loop": 57444,
  "home": 57449,
  "grid": 57450,
  "graph": 57451,
  "microphone": 57443,
  "music-tone-alt": 57441,
  "music-tone": 57442,
  "earphones-alt": 57404,
  "earphones": 57405,
  "equalizer": 57452,
  "like": 57448,
  "dislike": 57453,
  "control-start": 57455,
  "control-rewind": 57456,
  "control-play": 57457,
  "control-pause": 57458,
  "control-forward": 57459,
  "control-end": 57460,
  "volume-1": 57503,
  "volume-2": 57504,
  "volume-off": 57505,
  "calendar": 57461,
  "bulb": 57462,
  "chart": 57463,
  "ban": 57468,
  "bubble": 57469,
  "camrecorder": 57470,
  "camera": 57471,
  "cloud-download": 57475,
  "cloud-upload": 57476,
  "envelope": 57478,
  "eye": 57479,
  "flag": 57480,
  "heart": 57482,
  "info": 57483,
  "key": 57484,
  "link": 57485,
  "lock": 57486,
  "lock-open": 57487,
  "magnifier": 57488,
  "magnifier-add": 57489,
  "magnifier-remove": 57490,
  "paper-clip": 57491,
  "paper-plane": 57492,
  "power": 57495,
  "refresh": 57496,
  "reload": 57497,
  "settings": 57498,
  "star": 57499,
  "symbol-female": 57500,
  "symbol-male": 57501,
  "target": 57502,
  "credit-card": 57381,
  "paypal": 58888,
  "social-tumblr": 57354,
  "social-twitter": 57353,
  "social-facebook": 57355,
  "social-instagram": 58889,
  "social-linkedin": 58890,
  "social-pinterest": 58891,
  "social-github": 58892,
  "social-google": 58893,
  "social-reddit": 58894,
  "social-skype": 58895,
  "social-dribbble": 57357,
  "social-behance": 58896,
  "social-foursqare": 58897,
  "social-soundcloud": 58898,
  "social-spotify": 58899,
  "social-stumbleupon": 58900,
  "social-youtube": 57352,
  "social-dropbox": 57356,
  "social-vkontakte": 58904,
  "social-steam": 58912
};
}, 744, null, "react-native-vector-icons/glyphmaps/SimpleLineIcons.json");
__d(/* react-native-elements/src/buttons/ButtonGroup.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\buttons\\ButtonGroup.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var ButtonGroup = function ButtonGroup(props) {
  var component = props.component,
      buttons = props.buttons,
      onPress = props.onPress,
      selectedIndex = props.selectedIndex,
      containerStyle = props.containerStyle,
      innerBorderStyle = props.innerBorderStyle,
      lastBorderStyle = props.lastBorderStyle,
      buttonStyle = props.buttonStyle,
      textStyle = props.textStyle,
      selectedTextStyle = props.selectedTextStyle,
      selectedBackgroundColor = props.selectedBackgroundColor,
      underlayColor = props.underlayColor,
      activeOpacity = props.activeOpacity,
      onHideUnderlay = props.onHideUnderlay,
      onShowUnderlay = props.onShowUnderlay,
      setOpacityTo = props.setOpacityTo,
      containerBorderRadius = props.containerBorderRadius,
      attributes = babelHelpers.objectWithoutProperties(props, ['component', 'buttons', 'onPress', 'selectedIndex', 'containerStyle', 'innerBorderStyle', 'lastBorderStyle', 'buttonStyle', 'textStyle', 'selectedTextStyle', 'selectedBackgroundColor', 'underlayColor', 'activeOpacity', 'onHideUnderlay', 'onShowUnderlay', 'setOpacityTo', 'containerBorderRadius']);


  var Component = component || _reactNative.TouchableHighlight;
  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38
      }
    }),
    buttons.map(function (button, i) {
      return _react2.default.createElement(
        Component,
        {
          activeOpacity: activeOpacity,
          setOpacityTo: setOpacityTo,
          onHideUnderlay: onHideUnderlay,
          onShowUnderlay: onShowUnderlay,
          underlayColor: underlayColor || '#ffffff',
          onPress: onPress ? function () {
            return onPress(i);
          } : function () {},
          key: i,
          style: [styles.button, i < buttons.length - 1 && {
            borderRightWidth: innerBorderStyle && innerBorderStyle.width || 1,
            borderRightColor: innerBorderStyle && innerBorderStyle.color || _colors2.default.grey4
          }, i === buttons.length - 1 && babelHelpers.extends({}, lastBorderStyle, {
            borderTopRightRadius: containerBorderRadius || 0,
            borderBottomRightRadius: containerBorderRadius || 0
          }), i === 0 && {
            borderTopLeftRadius: containerBorderRadius || 0,
            borderBottomLeftRadius: containerBorderRadius || 0
          }, selectedIndex === i && {
            backgroundColor: selectedBackgroundColor || 'white'
          }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 44
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: [styles.textContainer, buttonStyle && buttonStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          },
          button.element ? _react2.default.createElement(button.element, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 78
            }
          }) : _react2.default.createElement(
            _Text2.default,
            {
              style: [styles.buttonText, textStyle && textStyle, selectedIndex === i && { color: _colors2.default.grey1 }, selectedIndex === i && selectedTextStyle],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 79
              }
            },
            button
          )
        )
      );
    })
  );
};

var styles = _reactNative.StyleSheet.create({
  button: {
    flex: 1
  },
  textContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  container: {
    marginLeft: 10,
    marginRight: 10,
    marginBottom: 5,
    marginTop: 5,
    borderColor: '#e3e3e3',
    borderWidth: 1,
    flexDirection: 'row',
    borderRadius: 3,
    overflow: 'hidden',
    backgroundColor: '#f5f5f5',
    height: 40
  },
  buttonText: babelHelpers.extends({
    fontSize: (0, _normalizeText2.default)(13),
    color: _colors2.default.grey2
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: '500'
    }
  }))
});

ButtonGroup.propTypes = {
  button: _propTypes2.default.object,
  component: _propTypes2.default.any,
  onPress: _propTypes2.default.func,
  buttons: _propTypes2.default.array,
  containerStyle: _reactNative.View.propTypes.style,
  textStyle: _reactNative.Text.propTypes.style,
  selectedTextStyle: _reactNative.Text.propTypes.style,
  underlayColor: _propTypes2.default.string,
  selectedIndex: _propTypes2.default.number,
  activeOpacity: _propTypes2.default.number,
  onHideUnderlay: _propTypes2.default.func,
  onShowUnderlay: _propTypes2.default.func,
  setOpacityTo: _propTypes2.default.any,
  innerBorderStyle: _propTypes2.default.shape({
    color: _propTypes2.default.string,
    width: _propTypes2.default.number
  }),
  lastBorderStyle: _propTypes2.default.oneOfType([_reactNative.View.propTypes.style, _reactNative.Text.propTypes.style]),
  buttonStyle: _reactNative.View.propTypes.style,
  selectedBackgroundColor: _propTypes2.default.string,
  containerBorderRadius: _propTypes2.default.number
};

exports.default = ButtonGroup;
}, 745, null, "react-native-elements/src/buttons/ButtonGroup.js");
__d(/* react-native-elements/src/containers/Card.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\containers\\Card.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _fonts = require(559              ); // 559 = ../config/fonts

var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _Divider = require(747                 ); // 747 = ../divider/Divider

var _Divider2 = babelHelpers.interopRequireDefault(_Divider);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var Card = function Card(props) {
  var children = props.children,
      flexDirection = props.flexDirection,
      containerStyle = props.containerStyle,
      wrapperStyle = props.wrapperStyle,
      imageWrapperStyle = props.imageWrapperStyle,
      title = props.title,
      titleStyle = props.titleStyle,
      featuredTitle = props.featuredTitle,
      featuredTitleStyle = props.featuredTitleStyle,
      featuredSubtitle = props.featuredSubtitle,
      featuredSubtitleStyle = props.featuredSubtitleStyle,
      dividerStyle = props.dividerStyle,
      image = props.image,
      imageStyle = props.imageStyle,
      fontFamily = props.fontFamily,
      attributes = babelHelpers.objectWithoutProperties(props, ['children', 'flexDirection', 'containerStyle', 'wrapperStyle', 'imageWrapperStyle', 'title', 'titleStyle', 'featuredTitle', 'featuredTitleStyle', 'featuredSubtitle', 'featuredSubtitleStyle', 'dividerStyle', 'image', 'imageStyle', 'fontFamily']);


  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.container, image && { padding: 0 }, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 37
      }
    }),
    _react2.default.createElement(
      _reactNative.View,
      {
        style: [styles.wrapper, wrapperStyle && wrapperStyle, flexDirection && { flexDirection: flexDirection }],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      },
      title && _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 53
          }
        },
        _react2.default.createElement(
          _Text2.default,
          {
            style: [styles.cardTitle, image && styles.imageCardTitle, titleStyle && titleStyle, fontFamily && { fontFamily: fontFamily }],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          },
          title
        ),
        !image && _react2.default.createElement(_Divider2.default, {
          style: [styles.divider, dividerStyle && dividerStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 65
          }
        })
      ),
      image && _react2.default.createElement(
        _reactNative.View,
        { style: imageWrapperStyle && imageWrapperStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 70
          }
        },
        _react2.default.createElement(
          _reactNative.Image,
          {
            resizeMode: 'cover',
            style: [{ width: null, height: 150 }, imageStyle && imageStyle],
            source: image,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 71
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: styles.overlayContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 76
              }
            },
            featuredTitle && _react2.default.createElement(
              _Text2.default,
              {
                style: [styles.featuredTitle, featuredTitleStyle && featuredTitleStyle],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 78
                }
              },
              featuredTitle
            ),
            featuredSubtitle && _react2.default.createElement(
              _Text2.default,
              {
                style: [styles.featuredSubtitle, featuredSubtitleStyle && featuredSubtitleStyle],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 87
                }
              },
              featuredSubtitle
            )
          )
        ),
        _react2.default.createElement(
          _reactNative.View,
          { style: [{ padding: 10 }, wrapperStyle && wrapperStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 97
            }
          },
          children
        )
      ),
      !image && children
    )
  );
};

Card.propTypes = {
  children: _propTypes2.default.any,
  flexDirection: _propTypes2.default.string,
  containerStyle: _reactNative.View.propTypes.style,
  wrapperStyle: _reactNative.View.propTypes.style,
  title: _propTypes2.default.string,
  titleStyle: _reactNative.Text.propTypes.style,
  featuredTitle: _propTypes2.default.string,
  featuredTitleStyle: _Text2.default.propTypes.style,
  featuredSubtitle: _propTypes2.default.string,
  featuredSubtitleStyle: _Text2.default.propTypes.style,
  dividerStyle: _reactNative.View.propTypes.style,
  image: _reactNative.Image.propTypes.source,
  imageStyle: _reactNative.View.propTypes.style,
  imageWrapperStyle: _reactNative.View.propTypes.style,
  fontFamily: _propTypes2.default.string
};

var styles = _reactNative.StyleSheet.create({
  container: babelHelpers.extends({
    backgroundColor: 'white',
    borderColor: _colors2.default.grey5,
    borderWidth: 1,
    padding: 15,
    margin: 15,
    marginBottom: 0
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: 'rgba(0,0,0, .2)',
      shadowOffset: { height: 0, width: 0 },
      shadowOpacity: 1,
      shadowRadius: 1
    },
    android: {
      elevation: 1
    }
  })),
  featuredTitle: babelHelpers.extends({
    fontSize: (0, _normalizeText2.default)(18),
    marginBottom: 8,
    color: 'white'
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: '800'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.black)
  })),
  featuredSubtitle: babelHelpers.extends({
    fontSize: (0, _normalizeText2.default)(13),
    marginBottom: 8,
    color: 'white'
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: '400'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.black)
  })),
  wrapper: {
    backgroundColor: 'transparent'
  },
  divider: {
    marginBottom: 15
  },
  cardTitle: babelHelpers.extends({
    fontSize: (0, _normalizeText2.default)(14)
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: 'bold'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.black)
  }), {
    textAlign: 'center',
    marginBottom: 15,
    color: _colors2.default.grey1
  }),
  imageCardTitle: {
    marginTop: 15
  },
  overlayContainer: {
    flex: 1,
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.2)',
    alignSelf: 'stretch',
    justifyContent: 'center',
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  }
});

exports.default = Card;
}, 746, null, "react-native-elements/src/containers/Card.js");
__d(/* react-native-elements/src/divider/Divider.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\divider\\Divider.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var styles = {};

var Divider = function Divider(_ref) {
  var style = _ref.style;
  return _react2.default.createElement(_reactNative.View, { style: [styles.container, style && style], __source: {
      fileName: _jsxFileName,
      lineNumber: 8
    }
  });
};

Divider.propTypes = {
  style: _reactNative.View.propTypes.style
};

styles = _reactNative.StyleSheet.create({
  container: {
    height: 1,
    backgroundColor: _colors2.default.grey5
  }
});

exports.default = Divider;
}, 747, null, "react-native-elements/src/divider/Divider.js");
__d(/* react-native-elements/src/form/FormInput.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\form\\FormInput.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width;

var FormInput = function (_Component) {
  babelHelpers.inherits(FormInput, _Component);

  function FormInput() {
    babelHelpers.classCallCheck(this, FormInput);
    return babelHelpers.possibleConstructorReturn(this, (FormInput.__proto__ || Object.getPrototypeOf(FormInput)).apply(this, arguments));
  }

  babelHelpers.createClass(FormInput, [{
    key: 'focus',
    value: function focus() {
      var ref = this.props.textInputRef;
      this.refs[ref].focus();
    }
  }, {
    key: 'blur',
    value: function blur() {
      var ref = this.props.textInputRef;
      this.refs[ref].blur();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          containerStyle = _props.containerStyle,
          inputStyle = _props.inputStyle,
          textInputRef = _props.textInputRef,
          containerRef = _props.containerRef,
          selectionColor = _props.selectionColor,
          attributes = babelHelpers.objectWithoutProperties(_props, ['containerStyle', 'inputStyle', 'textInputRef', 'containerRef', 'selectionColor']);

      return _react2.default.createElement(
        _reactNative.View,
        {
          ref: containerRef,
          style: [styles.container, containerStyle && containerStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 35
          }
        },
        _react2.default.createElement(_reactNative.TextInput, babelHelpers.extends({
          ref: textInputRef,
          selectionColor: selectionColor || _colors2.default.grey3,
          style: [styles.input, inputStyle && inputStyle]
        }, attributes, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 39
          }
        }))
      );
    }
  }]);
  return FormInput;
}(_react.Component);

FormInput.propTypes = {
  containerStyle: _reactNative.View.propTypes.style,
  inputStyle: _reactNative.Text.propTypes.style,
  selectionColor: _propTypes2.default.string,
  textInputRef: _propTypes2.default.string,
  containerRef: _propTypes2.default.string
};

var styles = _reactNative.StyleSheet.create({
  container: babelHelpers.extends({
    marginLeft: 15,
    marginRight: 15
  }, _reactNative.Platform.select({
    ios: {
      borderBottomColor: _colors2.default.grey4,
      borderBottomWidth: 1,
      marginLeft: 20,
      marginRight: 20
    }
  })),
  input: babelHelpers.extends({}, _reactNative.Platform.select({
    android: {
      height: 46
    },
    ios: {
      height: 36
    }
  }), {
    width: width,
    color: _colors2.default.grey3,
    fontSize: (0, _normalizeText2.default)(14)
  })
});

exports.default = FormInput;
}, 748, null, "react-native-elements/src/form/FormInput.js");
__d(/* react-native-elements/src/form/FormLabel.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\form\\FormLabel.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _fonts = require(559              ); // 559 = ../config/fonts

var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var FormLabel = function FormLabel(props) {
  var containerStyle = props.containerStyle,
      labelStyle = props.labelStyle,
      children = props.children,
      fontFamily = props.fontFamily,
      attributes = babelHelpers.objectWithoutProperties(props, ['containerStyle', 'labelStyle', 'children', 'fontFamily']);

  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 18
      }
    }),
    _react2.default.createElement(
      _Text2.default,
      {
        style: [styles.label, labelStyle && labelStyle, fontFamily && { fontFamily: fontFamily }],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 22
        }
      },
      children
    )
  );
};

FormLabel.propTypes = {
  containerStyle: _reactNative.View.propTypes.style,
  labelStyle: _reactNative.Text.propTypes.style,
  children: _propTypes2.default.any,
  fontFamily: _propTypes2.default.string
};

var styles = _reactNative.StyleSheet.create({
  container: {},
  label: babelHelpers.extends({
    marginLeft: 20,
    marginRight: 20,
    marginTop: 15,
    marginBottom: 1,
    color: _colors2.default.grey3,
    fontSize: (0, _normalizeText2.default)(12)
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: 'bold'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.bold)
  }))
});

exports.default = FormLabel;
}, 749, null, "react-native-elements/src/form/FormLabel.js");
__d(/* react-native-elements/src/form/FormValidationMessage.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\form\\FormValidationMessage.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var FormValidationMessage = function FormValidationMessage(props) {
  var containerStyle = props.containerStyle,
      labelStyle = props.labelStyle,
      children = props.children,
      fontFamily = props.fontFamily,
      attributes = babelHelpers.objectWithoutProperties(props, ['containerStyle', 'labelStyle', 'children', 'fontFamily']);

  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 17
      }
    }),
    _react2.default.createElement(
      _Text2.default,
      {
        style: [styles.label, labelStyle && labelStyle, fontFamily && { fontFamily: fontFamily }],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 21
        }
      },
      children
    )
  );
};

FormValidationMessage.propTypes = {
  containerStyle: _reactNative.View.propTypes.style,
  labelStyle: _reactNative.Text.propTypes.style,
  children: _propTypes2.default.any,
  fontFamily: _propTypes2.default.string
};

var styles = _reactNative.StyleSheet.create({
  container: {},
  label: {
    marginLeft: 20,
    marginRight: 20,
    marginTop: 5,
    marginBottom: 1,
    color: _colors2.default.error,
    fontSize: (0, _normalizeText2.default)(12)
  }
});

exports.default = FormValidationMessage;
}, 750, null, "react-native-elements/src/form/FormValidationMessage.js");
__d(/* react-native-elements/src/list/List.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\list\\List.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var List = function List(props) {
  var children = props.children,
      containerStyle = props.containerStyle,
      attributes = babelHelpers.objectWithoutProperties(props, ['children', 'containerStyle']);

  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.listContainer, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 9
      }
    }),
    children
  );
};

List.propTypes = {
  children: _propTypes2.default.any,
  containerStyle: _reactNative.View.propTypes.style
};

var styles = _reactNative.StyleSheet.create({
  listContainer: {
    marginTop: 20,
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: _colors2.default.greyOutline,
    backgroundColor: _colors2.default.white
  }
});

exports.default = List;
}, 751, null, "react-native-elements/src/list/List.js");
__d(/* react-native-elements/src/list/ListItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\list\\ListItem.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _badge = require(555             ); // 555 = ../badge/badge

var _badge2 = babelHelpers.interopRequireDefault(_badge);

var _Icon = require(753            ); // 753 = ../icons/Icon

var _Icon2 = babelHelpers.interopRequireDefault(_Icon);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _fonts = require(559              ); // 559 = ../config/fonts

var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var ListItem = function ListItem(props) {
  var onPress = props.onPress,
      title = props.title,
      leftIcon = props.leftIcon,
      rightIcon = props.rightIcon,
      leftIconContainerStyle = props.leftIconContainerStyle,
      avatarStyle = props.avatarStyle,
      underlayColor = props.underlayColor,
      subtitle = props.subtitle,
      subtitleStyle = props.subtitleStyle,
      containerStyle = props.containerStyle,
      wrapperStyle = props.wrapperStyle,
      titleStyle = props.titleStyle,
      titleContainerStyle = props.titleContainerStyle,
      hideChevron = props.hideChevron,
      chevronColor = props.chevronColor,
      roundAvatar = props.roundAvatar,
      component = props.component,
      fontFamily = props.fontFamily,
      rightTitle = props.rightTitle,
      rightTitleContainerStyle = props.rightTitleContainerStyle,
      rightTitleStyle = props.rightTitleStyle,
      subtitleContainerStyle = props.subtitleContainerStyle,
      badge = props.badge,
      label = props.label,
      onLongPress = props.onLongPress,
      switchButton = props.switchButton,
      onSwitch = props.onSwitch,
      switchDisabled = props.switchDisabled,
      switchOnTintColor = props.switchOnTintColor,
      switchThumbTintColor = props.switchThumbTintColor,
      switchTintColor = props.switchTintColor,
      switched = props.switched,
      textInput = props.textInput,
      textInputAutoCapitalize = props.textInputAutoCapitalize,
      textInputAutoCorrect = props.textInputAutoCorrect,
      textInputAutoFocus = props.textInputAutoFocus,
      textInputEditable = props.textInputEditable,
      textInputKeyboardType = props.textInputKeyboardType,
      textInputMaxLength = props.textInputMaxLength,
      textInputMultiline = props.textInputMultiline,
      textInputOnChangeText = props.textInputOnChangeText,
      textInputOnFocus = props.textInputOnFocus,
      textInputOnBlur = props.textInputOnBlur,
      textInputSelectTextOnFocus = props.textInputSelectTextOnFocus,
      textInputReturnKeyType = props.textInputReturnKeyType,
      textInputValue = props.textInputValue,
      textInputSecure = props.textInputSecure,
      textInputStyle = props.textInputStyle,
      textInputContainerStyle = props.textInputContainerStyle,
      attributes = babelHelpers.objectWithoutProperties(props, ['onPress', 'title', 'leftIcon', 'rightIcon', 'leftIconContainerStyle', 'avatarStyle', 'underlayColor', 'subtitle', 'subtitleStyle', 'containerStyle', 'wrapperStyle', 'titleStyle', 'titleContainerStyle', 'hideChevron', 'chevronColor', 'roundAvatar', 'component', 'fontFamily', 'rightTitle', 'rightTitleContainerStyle', 'rightTitleStyle', 'subtitleContainerStyle', 'badge', 'label', 'onLongPress', 'switchButton', 'onSwitch', 'switchDisabled', 'switchOnTintColor', 'switchThumbTintColor', 'switchTintColor', 'switched', 'textInput', 'textInputAutoCapitalize', 'textInputAutoCorrect', 'textInputAutoFocus', 'textInputEditable', 'textInputKeyboardType', 'textInputMaxLength', 'textInputMultiline', 'textInputOnChangeText', 'textInputOnFocus', 'textInputOnBlur', 'textInputSelectTextOnFocus', 'textInputReturnKeyType', 'textInputValue', 'textInputSecure', 'textInputStyle', 'textInputContainerStyle']);
  var avatar = props.avatar;


  var Component = onPress || onLongPress ? _reactNative.TouchableHighlight : _reactNative.View;
  if (component) {
    Component = component;
  }
  if (typeof avatar === 'string') {
    avatar = { uri: avatar };
  }
  return _react2.default.createElement(
    Component,
    babelHelpers.extends({
      onLongPress: onLongPress,
      onPress: onPress,
      underlayColor: underlayColor,
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 83
      }
    }),
    _react2.default.createElement(
      _reactNative.View,
      { style: [styles.wrapper, wrapperStyle && wrapperStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 90
        }
      },
      _react2.default.isValidElement(leftIcon) ? leftIcon : leftIcon && leftIcon.name && _react2.default.createElement(
        _reactNative.View,
        {
          style: [styles.iconStyle, leftIconContainerStyle && leftIconContainerStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 95
          }
        },
        _react2.default.createElement(_Icon2.default, {
          type: leftIcon.type,
          iconStyle: [styles.icon, leftIcon.style && leftIcon.style],
          name: leftIcon.name,
          color: leftIcon.color || _colors2.default.grey4,
          size: leftIcon.size || 24,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 101
          }
        })
      ),
      avatar && _react2.default.createElement(_reactNative.Image, {
        style: [styles.avatar, roundAvatar && { borderRadius: 17 }, avatarStyle && avatarStyle],
        source: avatar,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 110
        }
      }),
      _react2.default.createElement(
        _reactNative.View,
        { style: styles.titleSubtitleContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 118
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: titleContainerStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          },
          title && (typeof title === 'string' || typeof title === 'number') ? _react2.default.createElement(
            _Text2.default,
            {
              style: [styles.title, !leftIcon && { marginLeft: 10 }, titleStyle && titleStyle, fontFamily && { fontFamily: fontFamily }],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 121
              }
            },
            title
          ) : _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 131
              }
            },
            title
          )
        ),
        _react2.default.createElement(
          _reactNative.View,
          { style: subtitleContainerStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 135
            }
          },
          subtitle && (typeof subtitle === 'string' || typeof subtitle === 'number') ? _react2.default.createElement(
            _Text2.default,
            {
              style: [styles.subtitle, !leftIcon && { marginLeft: 10 }, subtitleStyle && subtitleStyle, fontFamily && { fontFamily: fontFamily }],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 138
              }
            },
            subtitle
          ) : _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 148
              }
            },
            subtitle
          )
        )
      ),
      rightTitle && rightTitle !== '' && !textInput && _react2.default.createElement(
        _reactNative.View,
        { style: [styles.rightTitleContainer, rightTitleContainerStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 156
          }
        },
        _react2.default.createElement(
          _Text2.default,
          { style: [styles.rightTitleStyle, rightTitleStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 157
            }
          },
          rightTitle
        )
      ),
      textInput && _react2.default.createElement(
        _reactNative.View,
        { style: [styles.rightTitleContainer, textInputContainerStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 162
          }
        },
        _react2.default.createElement(_reactNative.TextInput, {
          style: [styles.textInputStyle, textInputStyle],
          defaultValue: rightTitle,
          value: textInputValue,
          autoCapitalize: textInputAutoCapitalize,
          autoCorrect: textInputAutoCorrect,
          autoFocus: textInputAutoFocus,
          editable: textInputEditable,
          keyboardType: textInputKeyboardType,
          maxLength: textInputMaxLength,
          multiline: textInputMultiline,
          onChangeText: textInputOnChangeText,
          onFocus: textInputOnFocus,
          onBlur: textInputOnBlur,
          secureTextEntry: textInputSecure,
          selectTextOnFocus: textInputSelectTextOnFocus,
          returnKeyType: textInputReturnKeyType,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 163
          }
        })
      ),
      !hideChevron && (_react2.default.isValidElement(rightIcon) ? rightIcon : _react2.default.createElement(
        _reactNative.View,
        { style: styles.chevronContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 185
          }
        },
        _react2.default.createElement(_Icon2.default, {
          type: rightIcon.type,
          iconStyle: rightIcon.style,
          size: 28,
          name: rightIcon.name || 'chevron-right',
          color: rightIcon.color || chevronColor,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 186
          }
        })
      )),
      switchButton && hideChevron && _react2.default.createElement(
        _reactNative.View,
        { style: styles.switchContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 196
          }
        },
        _react2.default.createElement(_reactNative.Switch, {
          onValueChange: onSwitch,
          disabled: switchDisabled,
          onTintColor: switchOnTintColor,
          thumbTintColor: switchThumbTintColor,
          tintColor: switchTintColor,
          value: switched,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 197
          }
        })
      ),
      badge && !rightTitle && _react2.default.createElement(_badge2.default, babelHelpers.extends({}, badge, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 206
        }
      })),
      label && label
    )
  );
};

ListItem.defaultProps = {
  underlayColor: 'white',
  chevronColor: _colors2.default.grey4,
  rightIcon: { name: 'chevron-right' },
  hideChevron: false,
  roundAvatar: false,
  switchButton: false,
  textInputEditable: true
};

ListItem.propTypes = {
  title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.object]),
  avatar: _propTypes2.default.any,
  icon: _propTypes2.default.any,
  onPress: _propTypes2.default.func,
  rightIcon: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.object]),
  underlayColor: _propTypes2.default.string,
  subtitle: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.object]),
  subtitleStyle: _propTypes2.default.any,
  containerStyle: _propTypes2.default.any,
  wrapperStyle: _propTypes2.default.any,
  titleStyle: _propTypes2.default.any,
  titleContainerStyle: _propTypes2.default.any,
  hideChevron: _propTypes2.default.bool,
  chevronColor: _propTypes2.default.string,
  roundAvatar: _propTypes2.default.bool,
  badge: _propTypes2.default.any,
  switchButton: _propTypes2.default.bool,
  onSwitch: _propTypes2.default.func,
  switchDisabled: _propTypes2.default.bool,
  switchOnTintColor: _propTypes2.default.string,
  switchThumbTintColor: _propTypes2.default.string,
  switchTintColor: _propTypes2.default.string,
  switched: _propTypes2.default.bool,
  textInput: _propTypes2.default.bool,
  textInputAutoCapitalize: _propTypes2.default.bool,
  textInputAutoCorrect: _propTypes2.default.bool,
  textInputAutoFocus: _propTypes2.default.bool,
  textInputEditable: _propTypes2.default.bool,
  textInputKeyboardType: _propTypes2.default.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search']),
  textInputMaxLength: _propTypes2.default.number,
  textInputMultiline: _propTypes2.default.bool,
  textInputOnChangeText: _propTypes2.default.func,
  textInputOnFocus: _propTypes2.default.func,
  textInputOnBlur: _propTypes2.default.func,
  textInputSelectTextOnFocus: _propTypes2.default.bool,
  textInputReturnKeyType: _propTypes2.default.string,
  textInputValue: _propTypes2.default.string,
  textInputSecure: _propTypes2.default.bool,
  textInputStyle: _propTypes2.default.any,
  textInputContainerStyle: _propTypes2.default.any,
  component: _propTypes2.default.any,
  fontFamily: _propTypes2.default.string,
  rightTitle: _propTypes2.default.string,
  rightTitleContainerStyle: _reactNative.View.propTypes.style,
  rightTitleStyle: _Text2.default.propTypes.style,
  subtitleContainerStyle: _reactNative.View.propTypes.style,
  label: _propTypes2.default.any,
  onLongPress: _propTypes2.default.func,
  leftIcon: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.object]),
  leftIconContainerStyle: _reactNative.View.propTypes.style,
  avatarStyle: _reactNative.View.propTypes.style
};

var styles = _reactNative.StyleSheet.create({
  avatar: {
    width: 34,
    height: 34
  },
  container: {
    paddingTop: 10,
    paddingRight: 10,
    paddingBottom: 10,
    borderBottomColor: '#ededed',
    borderBottomWidth: 1,
    backgroundColor: 'transparent'
  },
  wrapper: {
    flexDirection: 'row',
    marginLeft: 10
  },
  iconStyle: {
    flex: 0.15,
    justifyContent: 'center',
    alignItems: 'center'
  },
  icon: {
    marginRight: 8
  },
  title: {
    fontSize: (0, _normalizeText2.default)(14),
    color: _colors2.default.grey1
  },
  subtitle: babelHelpers.extends({
    color: _colors2.default.grey3,
    fontSize: (0, _normalizeText2.default)(12),
    marginTop: 1
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: '600'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.bold)
  })),
  titleSubtitleContainer: {
    justifyContent: 'center',
    flex: 1
  },
  chevronContainer: {
    flex: 0.15,
    alignItems: 'flex-end',
    justifyContent: 'center'
  },
  switchContainer: {
    flex: 0.15,
    alignItems: 'flex-end',
    justifyContent: 'center',
    marginRight: 5
  },
  rightTitleContainer: {
    flex: 1,
    alignItems: 'flex-end',
    justifyContent: 'center'
  },
  rightTitleStyle: {
    marginRight: 5,
    color: _colors2.default.grey4
  },
  textInputStyle: {
    height: 20,
    textAlign: 'right'
  }
});

exports.default = ListItem;
}, 752, null, "react-native-elements/src/list/ListItem.js");
__d(/* react-native-elements/src/icons/Icon.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\icons\\Icon.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _getIconType = require(726                     ); // 726 = ../helpers/getIconType

var _getIconType2 = babelHelpers.interopRequireDefault(_getIconType);

var Icon = function Icon(props) {
  var type = props.type,
      name = props.name,
      size = props.size,
      color = props.color,
      iconStyle = props.iconStyle,
      component = props.component,
      underlayColor = props.underlayColor,
      reverse = props.reverse,
      raised = props.raised,
      containerStyle = props.containerStyle,
      reverseColor = props.reverseColor,
      onPress = props.onPress,
      attributes = babelHelpers.objectWithoutProperties(props, ['type', 'name', 'size', 'color', 'iconStyle', 'component', 'underlayColor', 'reverse', 'raised', 'containerStyle', 'reverseColor', 'onPress']);


  var Component = _reactNative.View;
  if (onPress) {
    Component = _reactNative.TouchableHighlight;
  }
  if (component) {
    Component = component;
  }
  var Icon = void 0;
  if (!type) {
    Icon = (0, _getIconType2.default)('material');
  } else {
    Icon = (0, _getIconType2.default)(type);
  }
  return _react2.default.createElement(
    Component,
    babelHelpers.extends({
      underlayColor: reverse ? color : underlayColor || color,
      style: [(reverse || raised) && styles.button, (reverse || raised) && {
        borderRadius: size + 4,
        height: size * 2 + 4,
        width: size * 2 + 4
      }, raised && styles.raised, {
        backgroundColor: reverse ? color : raised ? 'white' : 'transparent',
        alignItems: 'center',
        justifyContent: 'center'
      }, containerStyle && containerStyle],
      onPress: onPress
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 43
      }
    }),
    _react2.default.createElement(Icon, {
      style: [{ backgroundColor: 'transparent' }, iconStyle && iconStyle],
      size: size,
      name: name,
      color: reverse ? reverseColor : color,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 63
      }
    })
  );
};

Icon.propTypes = {
  type: _propTypes2.default.string,
  name: _propTypes2.default.string,
  size: _propTypes2.default.number,
  color: _propTypes2.default.string,
  component: _propTypes2.default.element,
  underlayColor: _propTypes2.default.string,
  reverse: _propTypes2.default.bool,
  raised: _propTypes2.default.bool,
  containerStyle: _reactNative.View.propTypes.style,
  iconStyle: _reactNative.Text.propTypes.style,
  onPress: _propTypes2.default.func,
  reverseColor: _propTypes2.default.string
};

Icon.defaultProps = {
  underlayColor: 'white',
  reverse: false,
  raised: false,
  size: 24,
  color: 'black',
  reverseColor: 'white'
};

var styles = _reactNative.StyleSheet.create({
  button: {
    margin: 7
  },
  raised: babelHelpers.extends({}, _reactNative.Platform.select({
    ios: {
      shadowColor: 'rgba(0,0,0, .4)',
      shadowOffset: { height: 1, width: 1 },
      shadowOpacity: 1,
      shadowRadius: 1
    },
    android: {
      elevation: 2
    }
  }))
});

exports.default = Icon;
}, 753, null, "react-native-elements/src/icons/Icon.js");
__d(/* react-native-elements/src/pricing/PricingCard.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\pricing\\PricingCard.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _fonts = require(559              ); // 559 = ../config/fonts

var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _Button = require(557                ); // 557 = ../buttons/Button

var _Button2 = babelHelpers.interopRequireDefault(_Button);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var PricingCard = function PricingCard(props) {
  var containerStyle = props.containerStyle,
      wrapperStyle = props.wrapperStyle,
      title = props.title,
      price = props.price,
      info = props.info,
      button = props.button,
      color = props.color,
      titleFont = props.titleFont,
      pricingFont = props.pricingFont,
      infoFont = props.infoFont,
      buttonFont = props.buttonFont,
      onButtonPress = props.onButtonPress,
      attributes = babelHelpers.objectWithoutProperties(props, ['containerStyle', 'wrapperStyle', 'title', 'price', 'info', 'button', 'color', 'titleFont', 'pricingFont', 'infoFont', 'buttonFont', 'onButtonPress']);

  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 27
      }
    }),
    _react2.default.createElement(
      _reactNative.View,
      { style: [styles.wrapper, wrapperStyle && wrapperStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 31
        }
      },
      _react2.default.createElement(
        _Text2.default,
        {
          style: [styles.pricingTitle, { color: color }, titleFont && { fontFamily: titleFont }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 32
          }
        },
        title
      ),
      _react2.default.createElement(
        _Text2.default,
        {
          style: [styles.pricingPrice, pricingFont && { fontFamily: pricingFont }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 41
          }
        },
        price
      ),
      info.map(function (item, i) {
        return _react2.default.createElement(
          _Text2.default,
          {
            key: i,
            style: [styles.pricingInfo, infoFont && { fontFamily: infoFont }],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 51
            }
          },
          item
        );
      }),
      _react2.default.createElement(_Button2.default, {
        icon: { name: button.icon },
        buttonStyle: [styles.button, button.buttonStyle, { backgroundColor: color }],
        fontFamily: buttonFont && buttonFont,
        title: button.title,
        onPress: onButtonPress,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59
        }
      })
    )
  );
};

PricingCard.propTypes = {
  containerStyle: _reactNative.View.propTypes.style,
  wrapperStyle: _reactNative.View.propTypes.style,
  title: _propTypes2.default.string,
  price: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  info: _propTypes2.default.array,
  button: _propTypes2.default.object,
  color: _propTypes2.default.string,
  onButtonPress: _propTypes2.default.any,
  titleFont: _propTypes2.default.string,
  pricingFont: _propTypes2.default.string,
  infoFont: _propTypes2.default.string,
  buttonFont: _propTypes2.default.string
};

PricingCard.defaultProps = {
  color: _colors2.default.primary
};

var styles = _reactNative.StyleSheet.create({
  container: babelHelpers.extends({
    margin: 15,
    marginBottom: 15,
    backgroundColor: 'white',
    borderColor: _colors2.default.grey5,
    borderWidth: 1,
    padding: 15
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: 'rgba(0,0,0, .2)',
      shadowOffset: { height: 1, width: 0 },
      shadowOpacity: 0.5,
      shadowRadius: 0.5
    },
    android: {
      elevation: 1
    }
  })),
  wrapper: {
    backgroundColor: 'transparent'
  },
  pricingTitle: babelHelpers.extends({
    textAlign: 'center',
    color: _colors2.default.primary,
    fontSize: (0, _normalizeText2.default)(30)
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: '800'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.black)
  })),
  pricingPrice: babelHelpers.extends({
    textAlign: 'center',
    marginTop: 10,
    marginBottom: 10,
    fontSize: (0, _normalizeText2.default)(40)
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: '700'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.bold)
  })),
  pricingInfo: babelHelpers.extends({
    textAlign: 'center',
    marginTop: 5,
    marginBottom: 5,
    color: _colors2.default.grey3
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: '600'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.bold)
  })),
  button: {
    marginTop: 15,
    marginBottom: 10
  }
});

exports.default = PricingCard;
}, 754, null, "react-native-elements/src/pricing/PricingCard.js");
__d(/* react-native-elements/src/social/SocialIcon.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _colors,
    _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\social\\SocialIcon.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _FontAwesome = require(741                                    ); // 741 = react-native-vector-icons/FontAwesome

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _fonts = require(559              ); // 559 = ../config/fonts

var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

var log = function log() {
  console.log('please attach method to this component');
};

var colors = (_colors = {
  facebook: '#3b5998',
  twitter: '#00aced'
}, babelHelpers.defineProperty(_colors, 'google-plus-official', '#dd4b39'), babelHelpers.defineProperty(_colors, 'pinterest', '#cb2027'), babelHelpers.defineProperty(_colors, 'linkedin', '#007bb6'), babelHelpers.defineProperty(_colors, 'youtube', '#bb0000'), babelHelpers.defineProperty(_colors, 'vimeo', '#aad450'), babelHelpers.defineProperty(_colors, 'tumblr', '#32506d'), babelHelpers.defineProperty(_colors, 'instagram', '#517fa4'), babelHelpers.defineProperty(_colors, 'quora', '#a82400'), babelHelpers.defineProperty(_colors, 'foursquare', '#0072b1'), babelHelpers.defineProperty(_colors, 'wordpress', '#21759b'), babelHelpers.defineProperty(_colors, 'stumbleupon', '#EB4823'), babelHelpers.defineProperty(_colors, 'github', '#000000'), babelHelpers.defineProperty(_colors, 'github-alt', '#000000'), babelHelpers.defineProperty(_colors, 'twitch', '#6441A5'), babelHelpers.defineProperty(_colors, 'medium', '#02b875'), babelHelpers.defineProperty(_colors, 'soundcloud', '#f50'), babelHelpers.defineProperty(_colors, 'gitlab', '#e14329'), babelHelpers.defineProperty(_colors, 'angellist', '#1c4082'), babelHelpers.defineProperty(_colors, 'codepen', '#000000'), _colors);

var SocialIcon = function SocialIcon(props) {
  var component = props.component,
      type = props.type,
      button = props.button,
      disabled = props.disabled,
      loading = props.loading,
      activityIndicatorStyle = props.activityIndicatorStyle,
      small = props.small,
      onPress = props.onPress,
      iconStyle = props.iconStyle,
      style = props.style,
      iconColor = props.iconColor,
      title = props.title,
      raised = props.raised,
      light = props.light,
      fontFamily = props.fontFamily,
      fontStyle = props.fontStyle,
      iconSize = props.iconSize,
      onLongPress = props.onLongPress,
      fontWeight = props.fontWeight,
      attributes = babelHelpers.objectWithoutProperties(props, ['component', 'type', 'button', 'disabled', 'loading', 'activityIndicatorStyle', 'small', 'onPress', 'iconStyle', 'style', 'iconColor', 'title', 'raised', 'light', 'fontFamily', 'fontStyle', 'iconSize', 'onLongPress', 'fontWeight']);


  var Component = onPress || onLongPress ? component || _reactNative.TouchableHighlight : _reactNative.View;
  var loadingElement = void 0;
  if (loading) {
    loadingElement = _react2.default.createElement(_reactNative.ActivityIndicator, {
      animating: true,
      style: [styles.activityIndicatorStyle, activityIndicatorStyle],
      color: iconColor || 'white',
      size: small && 'small' || 'large',
      __source: {
        fileName: _jsxFileName,
        lineNumber: 72
      }
    });
  }
  return _react2.default.createElement(
    Component,
    babelHelpers.extends({
      underlayColor: light ? 'white' : colors[type],
      onLongPress: !disabled && (onLongPress || log),
      onPress: (!disabled || log) && (onPress || log),
      disabled: disabled || false,
      style: [raised && styles.raised, styles.container, button && styles.button, !button && raised && styles.icon, !button && !light && !raised && {
        width: iconSize * 2 + 4,
        height: iconSize * 2 + 4,
        borderRadius: iconSize * 2
      }, { backgroundColor: colors[type] }, light && { backgroundColor: 'white' }, style && style]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 81
      }
    }),
    _react2.default.createElement(
      _reactNative.View,
      { style: styles.wrapper, __source: {
          fileName: _jsxFileName,
          lineNumber: 104
        }
      },
      _react2.default.createElement(_FontAwesome2.default, {
        style: [iconStyle && iconStyle],
        color: light ? colors[type] : iconColor,
        name: type,
        size: iconSize,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 105
        }
      }),
      button && title && _react2.default.createElement(
        _Text2.default,
        {
          style: [styles.title, light && { color: colors[type] }, fontFamily && { fontFamily: fontFamily }, fontWeight && { fontWeight: fontWeight }, fontStyle && fontStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 113
          }
        },
        title
      ),
      loading && loadingElement
    )
  );
};

SocialIcon.propTypes = {
  component: _propTypes2.default.element,
  type: _propTypes2.default.string,
  button: _propTypes2.default.bool,
  onPress: _propTypes2.default.func,
  onLongPress: _propTypes2.default.func,
  iconStyle: _reactNative.View.propTypes.style,
  style: _reactNative.View.propTypes.style,
  iconColor: _propTypes2.default.string,
  title: _propTypes2.default.string,
  raised: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  loading: _propTypes2.default.bool,
  activityIndicatorStyle: _reactNative.View.propTypes.style,
  small: _propTypes2.default.string,
  iconSize: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  light: _propTypes2.default.bool,
  fontWeight: _propTypes2.default.string,
  fontStyle: _reactNative.View.propTypes.style,
  fontFamily: _propTypes2.default.string
};

SocialIcon.defaultProps = {
  raised: true,
  iconColor: 'white',
  iconSize: 24,
  button: false
};

var styles = _reactNative.StyleSheet.create({
  container: {
    margin: 7,
    borderRadius: 30,
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center'
  },
  button: {
    paddingTop: 14,
    paddingBottom: 14
  },
  raised: babelHelpers.extends({}, _reactNative.Platform.select({
    ios: {
      shadowColor: 'rgba(0,0,0, .4)',
      shadowOffset: { height: 1, width: 1 },
      shadowOpacity: 1,
      shadowRadius: 1
    },
    android: {
      elevation: 2
    }
  })),
  wrapper: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center'
  },
  title: babelHelpers.extends({
    color: 'white',
    marginLeft: 15
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: 'bold'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.black)
  })),
  icon: {
    height: 52,
    width: 52
  },
  activityIndicatorStyle: {
    marginHorizontal: 10,
    height: 0
  }
});

exports.default = SocialIcon;
}, 755, null, "react-native-elements/src/social/SocialIcon.js");
__d(/* react-native-elements/src/sidemenu/SideMenu.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNativeSideMenu = require(757                     ); // 757 = react-native-side-menu

var _reactNativeSideMenu2 = babelHelpers.interopRequireDefault(_reactNativeSideMenu);

exports.default = _reactNativeSideMenu2.default;
}, 756, null, "react-native-elements/src/sidemenu/SideMenu.js");
__d(/* react-native-side-menu/index.js */function(global, require, module, exports) {var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-side-menu\\index.js';

var styles = require(758       ); // 758 = ./styles
var ReactNative = require(46            ); // 46 = react-native
var React = require(13     ); // 13 = react
var Dimensions = ReactNative.Dimensions,
    Animated = ReactNative.Animated;

var deviceScreen = Dimensions.get('window');

var PanResponder = ReactNative.PanResponder,
    View = ReactNative.View,
    TouchableWithoutFeedback = ReactNative.TouchableWithoutFeedback;

var barrierForward = deviceScreen.width / 4;

function shouldOpenMenu(dx) {
  return dx > barrierForward;
}

var SideMenu = function (_React$Component) {
  babelHelpers.inherits(SideMenu, _React$Component);

  function SideMenu(props) {
    babelHelpers.classCallCheck(this, SideMenu);

    var _this = babelHelpers.possibleConstructorReturn(this, (SideMenu.__proto__ || Object.getPrototypeOf(SideMenu)).call(this, props));

    _this.prevLeft = 0;
    _this.isOpen = props.isOpen;

    var initialMenuPositionMultiplier = props.menuPosition === 'right' ? -1 : 1;
    var openOffsetMenuPercentage = props.openMenuOffset / deviceScreen.width;
    var hiddenMenuOffsetPercentage = props.hiddenMenuOffset / deviceScreen.width;

    _this.state = {
      width: deviceScreen.width,
      height: deviceScreen.height,
      openOffsetMenuPercentage: openOffsetMenuPercentage,
      openMenuOffset: deviceScreen.width * openOffsetMenuPercentage,
      hiddenMenuOffsetPercentage: hiddenMenuOffsetPercentage,
      hiddenMenuOffset: deviceScreen.width * hiddenMenuOffsetPercentage,
      left: new Animated.Value(props.isOpen ? props.openMenuOffset * initialMenuPositionMultiplier : props.hiddenMenuOffset)
    };
    return _this;
  }

  babelHelpers.createClass(SideMenu, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.responder = PanResponder.create({
        onStartShouldSetResponderCapture: this.props.onStartShouldSetResponderCapture.bind(this),
        onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder.bind(this),
        onPanResponderMove: this.handlePanResponderMove.bind(this),
        onPanResponderRelease: this.handlePanResponderEnd.bind(this)
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      if (this.isOpen !== props.isOpen) {
        this.openMenu(props.isOpen);
      }
    }
  }, {
    key: 'gesturesAreEnabled',
    value: function gesturesAreEnabled() {
      var disableGestures = this.props.disableGestures;


      if (typeof disableGestures === 'function') {
        return !disableGestures();
      }

      return !disableGestures;
    }
  }, {
    key: 'handleMoveShouldSetPanResponder',
    value: function handleMoveShouldSetPanResponder(e, gestureState) {
      if (this.gesturesAreEnabled()) {
        var x = Math.round(Math.abs(gestureState.dx));
        var y = Math.round(Math.abs(gestureState.dy));

        var touchMoved = x > this.props.toleranceX && y < this.props.toleranceY;

        if (this.isOpen) {
          return touchMoved;
        }

        var withinEdgeHitWidth = this.props.menuPosition === 'right' ? gestureState.moveX > deviceScreen.width - this.props.edgeHitWidth : gestureState.moveX < this.props.edgeHitWidth;

        var swipingToOpen = this.menuPositionMultiplier() * gestureState.dx > 0;
        return withinEdgeHitWidth && touchMoved && swipingToOpen;
      }

      return false;
    }
  }, {
    key: 'handlePanResponderMove',
    value: function handlePanResponderMove(e, gestureState) {
      if (this.state.left.__getValue() * this.menuPositionMultiplier() >= 0) {
        var newLeft = this.prevLeft + gestureState.dx;

        if (!this.props.bounceBackOnOverdraw && Math.abs(newLeft) > this.state.openMenuOffset) {
          newLeft = this.menuPositionMultiplier() * this.state.openMenuOffset;
        }

        this.props.onMove(newLeft);
        this.state.left.setValue(newLeft);
      }
    }
  }, {
    key: 'handlePanResponderEnd',
    value: function handlePanResponderEnd(e, gestureState) {
      var offsetLeft = this.menuPositionMultiplier() * (this.state.left.__getValue() + gestureState.dx);

      this.openMenu(shouldOpenMenu(offsetLeft));
    }
  }, {
    key: 'menuPositionMultiplier',
    value: function menuPositionMultiplier() {
      return this.props.menuPosition === 'right' ? -1 : 1;
    }
  }, {
    key: 'moveLeft',
    value: function moveLeft(offset) {
      var newOffset = this.menuPositionMultiplier() * offset;

      this.props.animationFunction(this.state.left, newOffset).start();

      this.prevLeft = newOffset;
    }
  }, {
    key: 'openMenu',
    value: function openMenu(isOpen) {
      var _state = this.state,
          hiddenMenuOffset = _state.hiddenMenuOffset,
          openMenuOffset = _state.openMenuOffset;

      this.moveLeft(isOpen ? openMenuOffset : hiddenMenuOffset);
      this.isOpen = isOpen;

      this.forceUpdate();
      this.props.onChange(isOpen);
    }
  }, {
    key: 'getContentView',
    value: function getContentView() {
      var _this2 = this;

      var overlay = null;

      if (this.isOpen) {
        overlay = React.createElement(
          TouchableWithoutFeedback,
          { onPress: function onPress() {
              return _this2.openMenu(false);
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 191
            }
          },
          React.createElement(View, { style: styles.overlay, __source: {
              fileName: _jsxFileName,
              lineNumber: 192
            }
          })
        );
      }

      var _state2 = this.state,
          width = _state2.width,
          height = _state2.height;

      var ref = function ref(sideMenu) {
        return _this2.sideMenu = sideMenu;
      };
      var style = [styles.frontView, { width: width, height: height }, this.props.animationStyle(this.state.left)];

      return React.createElement(
        Animated.View,
        babelHelpers.extends({ style: style, ref: ref }, this.responder.panHandlers, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 206
          }
        }),
        this.props.children,
        overlay
      );
    }
  }, {
    key: 'onLayoutChange',
    value: function onLayoutChange(e) {
      var _e$nativeEvent$layout = e.nativeEvent.layout,
          width = _e$nativeEvent$layout.width,
          height = _e$nativeEvent$layout.height;

      var openMenuOffset = width * this.state.openOffsetMenuPercentage;
      var hiddenMenuOffset = width * this.state.hiddenMenuOffsetPercentage;
      this.setState({ width: width, height: height, openMenuOffset: openMenuOffset, hiddenMenuOffset: hiddenMenuOffset });
    }
  }, {
    key: 'render',
    value: function render() {

      var boundryStyle = this.props.menuPosition == 'right' ? { left: this.state.width - this.state.openMenuOffset } : { right: this.state.width - this.state.openMenuOffset };

      var menu = React.createElement(
        View,
        { style: [styles.menu, boundryStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 230
          }
        },
        this.props.menu
      );

      return React.createElement(
        View,
        { style: styles.container, onLayout: this.onLayoutChange.bind(this), __source: {
            fileName: _jsxFileName,
            lineNumber: 233
          }
        },
        menu,
        this.getContentView()
      );
    }
  }]);
  return SideMenu;
}(React.Component);

SideMenu.propTypes = {
  edgeHitWidth: React.PropTypes.number,
  toleranceX: React.PropTypes.number,
  toleranceY: React.PropTypes.number,
  menuPosition: React.PropTypes.oneOf(['left', 'right']),
  onChange: React.PropTypes.func,
  onMove: React.PropTypes.func,
  openMenuOffset: React.PropTypes.number,
  hiddenMenuOffset: React.PropTypes.number,
  disableGestures: React.PropTypes.oneOfType([React.PropTypes.func, React.PropTypes.bool]),
  animationFunction: React.PropTypes.func,
  onStartShouldSetResponderCapture: React.PropTypes.func,
  isOpen: React.PropTypes.bool,
  bounceBackOnOverdraw: React.PropTypes.bool
};

SideMenu.defaultProps = {
  toleranceY: 10,
  toleranceX: 10,
  edgeHitWidth: 60,
  openMenuOffset: deviceScreen.width * 2 / 3,
  hiddenMenuOffset: 0,
  onMove: function onMove() {},
  onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture() {
    return true;
  },
  onChange: function onChange() {},
  animationStyle: function animationStyle(value) {
    return {
      transform: [{
        translateX: value
      }]
    };
  },
  animationFunction: function animationFunction(prop, value) {
    return Animated.spring(prop, {
      toValue: value,
      friction: 8
    });
  },
  isOpen: false,
  bounceBackOnOverdraw: true
};

module.exports = SideMenu;
}, 757, null, "react-native-side-menu/index.js");
__d(/* react-native-side-menu/styles.js */function(global, require, module, exports) {var React = require(46            ); // 46 = react-native

var StyleSheet = React.StyleSheet;


var absoluteStretch = {
  position: 'absolute',
  top: 0,
  left: 0,
  bottom: 0,
  right: 0
};

module.exports = StyleSheet.create({
  container: babelHelpers.extends({}, absoluteStretch, {
    justifyContent: 'center'
  }),
  menu: babelHelpers.extends({}, absoluteStretch),
  frontView: {
    flex: 1,
    position: 'absolute',
    left: 0,
    top: 0,
    backgroundColor: 'transparent'
  },
  overlay: babelHelpers.extends({}, absoluteStretch, {
    backgroundColor: 'transparent'
  })
});
}, 758, null, "react-native-side-menu/styles.js");
__d(/* react-native-elements/src/checkbox/CheckBox.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\checkbox\\CheckBox.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _fonts = require(559              ); // 559 = ../config/fonts

var _fonts2 = babelHelpers.interopRequireDefault(_fonts);

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _FontAwesome = require(741                                    ); // 741 = react-native-vector-icons/FontAwesome

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var _getIconType = require(726                     ); // 726 = ../helpers/getIconType

var _getIconType2 = babelHelpers.interopRequireDefault(_getIconType);

var CheckBox = function CheckBox(props) {
  var component = props.component,
      checked = props.checked,
      iconRight = props.iconRight,
      title = props.title,
      center = props.center,
      right = props.right,
      containerStyle = props.containerStyle,
      textStyle = props.textStyle,
      onIconPress = props.onIconPress,
      onLongIconPress = props.onLongIconPress,
      checkedIcon = props.checkedIcon,
      uncheckedIcon = props.uncheckedIcon,
      iconType = props.iconType,
      checkedColor = props.checkedColor,
      uncheckedColor = props.uncheckedColor,
      checkedTitle = props.checkedTitle,
      fontFamily = props.fontFamily,
      attributes = babelHelpers.objectWithoutProperties(props, ['component', 'checked', 'iconRight', 'title', 'center', 'right', 'containerStyle', 'textStyle', 'onIconPress', 'onLongIconPress', 'checkedIcon', 'uncheckedIcon', 'iconType', 'checkedColor', 'uncheckedColor', 'checkedTitle', 'fontFamily']);


  var Icon = _FontAwesome2.default;
  if (iconType) {
    Icon = (0, _getIconType2.default)(iconType);
  }
  var Component = component || _reactNative.TouchableOpacity;
  var iconName = uncheckedIcon;
  if (checked) {
    iconName = checkedIcon;
  }
  return _react2.default.createElement(
    Component,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48
      }
    }),
    _react2.default.createElement(
      _reactNative.View,
      {
        style: [styles.wrapper, right && { justifyContent: 'flex-end' }, center && { justifyContent: 'center' }],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52
        }
      },
      !iconRight && _react2.default.createElement(Icon, {
        color: checked ? checkedColor : uncheckedColor,
        name: iconName,
        size: 24,
        onLongPress: onLongIconPress,
        onPress: onIconPress,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60
        }
      }),
      _react2.default.createElement(
        _Text2.default,
        {
          style: [styles.text, textStyle && textStyle, fontFamily && { fontFamily: fontFamily }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 67
          }
        },
        checked ? checkedTitle || title : title
      ),
      iconRight && _react2.default.createElement(Icon, {
        color: checked ? checkedColor : uncheckedColor,
        name: iconName,
        size: 24,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 77
        }
      })
    )
  );
};

CheckBox.defaultProps = {
  checked: false,
  iconRight: false,
  right: false,
  center: false,
  checkedColor: 'green',
  uncheckedColor: '#bfbfbf',
  checkedIcon: 'check-square-o',
  uncheckedIcon: 'square-o'
};

CheckBox.propTypes = {
  component: _propTypes2.default.any,
  checked: _propTypes2.default.bool,
  iconRight: _propTypes2.default.bool,
  title: _propTypes2.default.string,
  center: _propTypes2.default.bool,
  right: _propTypes2.default.bool,
  containerStyle: _reactNative.View.propTypes.style,
  textStyle: _reactNative.Text.propTypes.style,
  checkedIcon: _propTypes2.default.string,
  uncheckedIcon: _propTypes2.default.string,
  iconType: _propTypes2.default.string,
  checkedColor: _propTypes2.default.string,
  uncheckedColor: _propTypes2.default.string,
  checkedTitle: _propTypes2.default.string,
  onIconPress: _propTypes2.default.func,
  onLongIconPress: _propTypes2.default.func,
  fontFamily: _propTypes2.default.string
};

var styles = _reactNative.StyleSheet.create({
  wrapper: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  container: {
    margin: 5,
    marginLeft: 10,
    marginRight: 10,
    backgroundColor: '#fafafa',
    borderColor: '#ededed',
    borderWidth: 1,
    padding: 10,
    borderRadius: 3
  },
  text: babelHelpers.extends({
    marginLeft: 10,
    marginRight: 10,
    color: _colors2.default.grey1
  }, _reactNative.Platform.select({
    ios: {
      fontWeight: 'bold'
    },
    android: babelHelpers.extends({}, _fonts2.default.android.bold)
  }))
});

exports.default = CheckBox;
}, 759, null, "react-native-elements/src/checkbox/CheckBox.js");
__d(/* react-native-elements/src/input/Search.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\input\\Search.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _MaterialIcons = require(561                                      ); // 561 = react-native-vector-icons/MaterialIcons

var _MaterialIcons2 = babelHelpers.interopRequireDefault(_MaterialIcons);

var _colors = require(556               ); // 556 = ../config/colors

var _colors2 = babelHelpers.interopRequireDefault(_colors);

var _normalizeText = require(560                       ); // 560 = ../helpers/normalizeText

var _normalizeText2 = babelHelpers.interopRequireDefault(_normalizeText);

var Search = function (_Component) {
  babelHelpers.inherits(Search, _Component);

  function Search() {
    babelHelpers.classCallCheck(this, Search);
    return babelHelpers.possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).apply(this, arguments));
  }

  babelHelpers.createClass(Search, [{
    key: 'focus',
    value: function focus() {
      var ref = this.props.textInputRef;
      this.refs[ref].focus();
    }
  }, {
    key: 'clearText',
    value: function clearText() {
      if (this.props.onChangeText) {
        this.props.onChangeText('');
      }
      try {
        var ref = this.props.textInputRef;
        this.refs[ref].clear();
      } catch (e) {
        if (__DEV__) console.warn('Could not access textInput reference, make sure you supplied the textInputRef');
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          containerStyle = _props.containerStyle,
          inputStyle = _props.inputStyle,
          icon = _props.icon,
          noIcon = _props.noIcon,
          lightTheme = _props.lightTheme,
          round = _props.round,
          showLoadingIcon = _props.showLoadingIcon,
          loadingIcon = _props.loadingIcon,
          clearIcon = _props.clearIcon,
          containerRef = _props.containerRef,
          textInputRef = _props.textInputRef,
          selectionColor = _props.selectionColor,
          underlineColorAndroid = _props.underlineColorAndroid,
          attributes = babelHelpers.objectWithoutProperties(_props, ['containerStyle', 'inputStyle', 'icon', 'noIcon', 'lightTheme', 'round', 'showLoadingIcon', 'loadingIcon', 'clearIcon', 'containerRef', 'textInputRef', 'selectionColor', 'underlineColorAndroid']);

      return _react2.default.createElement(
        _reactNative.View,
        {
          ref: containerRef,
          style: [styles.container, lightTheme && styles.containerLight, containerStyle && containerStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        },
        _react2.default.createElement(_reactNative.TextInput, babelHelpers.extends({
          ref: textInputRef,
          selectionColor: selectionColor || _colors2.default.grey3,
          underlineColorAndroid: underlineColorAndroid ? underlineColorAndroid : 'transparent',
          style: [styles.input, lightTheme && styles.inputLight, noIcon && { paddingLeft: 9 }, round && { borderRadius: _reactNative.Platform.OS === 'ios' ? 15 : 20 }, inputStyle && inputStyle]
        }, attributes, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 62
          }
        })),
        !noIcon && _react2.default.createElement(_MaterialIcons2.default, {
          size: 16,
          style: [styles.icon, icon.style && icon.style],
          name: icon.name || 'search',
          color: icon.color || _colors2.default.grey3,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 78
          }
        }),
        clearIcon && _react2.default.createElement(_MaterialIcons2.default, {
          size: 16,
          style: [styles.clearIcon, clearIcon.style && clearIcon.style],
          name: clearIcon.name || 'close',
          onPress: this.clearText.bind(this),
          color: clearIcon.color || _colors2.default.grey3,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 85
          }
        }),
        showLoadingIcon && _react2.default.createElement(_reactNative.ActivityIndicator, {
          style: [styles.loadingIcon, loadingIcon.style && loadingIcon.style],
          color: icon.color || _colors2.default.grey3,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 93
          }
        })
      );
    }
  }]);
  return Search;
}(_react.Component);

Search.propTypes = {
  icon: _propTypes2.default.object,
  noIcon: _propTypes2.default.bool,
  lightTheme: _propTypes2.default.bool,
  containerStyle: _reactNative.View.propTypes.style,
  inputStyle: _reactNative.Text.propTypes.style,
  round: _propTypes2.default.bool,
  showLoadingIcon: _propTypes2.default.bool,
  loadingIcon: _propTypes2.default.object,
  clearIcon: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.bool]),
  textInputRef: _propTypes2.default.string,
  containerRef: _propTypes2.default.string,
  selectionColor: _propTypes2.default.string,
  underlineColorAndroid: _propTypes2.default.string,
  onChangeText: _propTypes2.default.func
};

Search.defaultProps = {
  placeholderTextColor: _colors2.default.grey3,
  lightTheme: false,
  noIcon: false,
  round: false,
  icon: {},
  showLoadingIcon: false,
  loadingIcon: {}
};

var styles = _reactNative.StyleSheet.create({
  container: {
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderBottomColor: '#000',
    borderTopColor: '#000',
    backgroundColor: _colors2.default.grey0
  },
  containerLight: {
    backgroundColor: _colors2.default.grey5,
    borderTopColor: '#e1e1e1',
    borderBottomColor: '#e1e1e1'
  },
  icon: babelHelpers.extends({
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 16,
    top: 15.5
  }, _reactNative.Platform.select({
    android: {
      top: 20
    }
  })),
  loadingIcon: babelHelpers.extends({
    backgroundColor: 'transparent',
    position: 'absolute',
    right: 16,
    top: 13
  }, _reactNative.Platform.select({
    android: {
      top: 17
    }
  })),
  input: babelHelpers.extends({
    paddingLeft: 26,
    paddingRight: 19,
    margin: 8,
    borderRadius: 3,
    overflow: 'hidden',
    backgroundColor: _colors2.default.searchBg,
    fontSize: (0, _normalizeText2.default)(14),
    color: _colors2.default.grey3,
    height: 40
  }, _reactNative.Platform.select({
    ios: {
      height: 30
    },
    android: {
      borderWidth: 0
    }
  })),
  inputLight: {
    backgroundColor: _colors2.default.grey4
  },
  clearIcon: babelHelpers.extends({
    backgroundColor: 'transparent',
    position: 'absolute',
    right: 16,
    top: 15.5
  }, _reactNative.Platform.select({
    android: {
      top: 17
    }
  }))
});

exports.default = Search;
}, 760, null, "react-native-elements/src/input/Search.js");
__d(/* react-native-elements/src/tabs/Tabs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNativeTabNavigator = require(762                         ); // 762 = react-native-tab-navigator

var _reactNativeTabNavigator2 = babelHelpers.interopRequireDefault(_reactNativeTabNavigator);

exports.default = _reactNativeTabNavigator2.default;
}, 761, null, "react-native-elements/src/tabs/Tabs.js");
__d(/* react-native-tab-navigator/TabNavigator.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-navigator\\TabNavigator.js';

var _immutable = require(763        ); // 763 = immutable

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Badge = require(764      ); // 764 = ./Badge

var _Badge2 = babelHelpers.interopRequireDefault(_Badge);

var _Layout = require(765       ); // 765 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var _StaticContainer = require(766                ); // 766 = ./StaticContainer

var _StaticContainer2 = babelHelpers.interopRequireDefault(_StaticContainer);

var _Tab = require(767    ); // 767 = ./Tab

var _Tab2 = babelHelpers.interopRequireDefault(_Tab);

var _TabBar = require(768       ); // 768 = ./TabBar

var _TabBar2 = babelHelpers.interopRequireDefault(_TabBar);

var _TabNavigatorItem = require(769                 ); // 769 = ./TabNavigatorItem

var _TabNavigatorItem2 = babelHelpers.interopRequireDefault(_TabNavigatorItem);

var TabNavigator = function (_React$Component) {
  babelHelpers.inherits(TabNavigator, _React$Component);

  function TabNavigator(props, context) {
    babelHelpers.classCallCheck(this, TabNavigator);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabNavigator.__proto__ || Object.getPrototypeOf(TabNavigator)).call(this, props, context));

    _this.state = {
      renderedSceneKeys: _this._updateRenderedSceneKeys(props.children)
    };

    _this._renderTab = _this._renderTab.bind(_this);
    return _this;
  }

  babelHelpers.createClass(TabNavigator, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var renderedSceneKeys = this.state.renderedSceneKeys;

      this.setState({
        renderedSceneKeys: this._updateRenderedSceneKeys(nextProps.children, renderedSceneKeys)
      });
    }
  }, {
    key: '_getSceneKey',
    value: function _getSceneKey(item, index) {
      return 'scene-' + (item.key !== null ? item.key : index);
    }
  }, {
    key: '_updateRenderedSceneKeys',
    value: function _updateRenderedSceneKeys(children) {
      var _this2 = this;

      var oldSceneKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _immutable.Set)();

      var newSceneKeys = (0, _immutable.Set)().asMutable();
      _react2.default.Children.forEach(children, function (item, index) {
        if (item === null) {
          return;
        }
        var key = _this2._getSceneKey(item, index);
        if (oldSceneKeys.has(key) || item.props.selected) {
          newSceneKeys.add(key);
        }
      });
      return newSceneKeys.asImmutable();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          style = _props.style,
          children = _props.children,
          tabBarStyle = _props.tabBarStyle,
          tabBarShadowStyle = _props.tabBarShadowStyle,
          sceneStyle = _props.sceneStyle,
          props = babelHelpers.objectWithoutProperties(_props, ['style', 'children', 'tabBarStyle', 'tabBarShadowStyle', 'sceneStyle']);

      var scenes = [];

      _react2.default.Children.forEach(children, function (item, index) {
        if (item === null) {
          return;
        }
        var sceneKey = _this3._getSceneKey(item, index);
        if (!_this3.state.renderedSceneKeys.has(sceneKey)) {
          return;
        }

        var selected = item.props.selected;

        var scene = _react2.default.createElement(
          SceneContainer,
          { key: sceneKey, selected: selected, style: sceneStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 80
            }
          },
          item
        );

        scenes.push(scene);
      });

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, props, { style: [styles.container, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        }),
        scenes,
        _react2.default.createElement(
          _TabBar2.default,
          { style: tabBarStyle, shadowStyle: tabBarShadowStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 90
            }
          },
          _react2.default.Children.map(children, this._renderTab)
        )
      );
    }
  }, {
    key: '_renderTab',
    value: function _renderTab(item) {
      var icon = void 0;
      if (item === null) {
        return;
      }
      if (item.props.selected) {
        if (item.props.renderSelectedIcon) {
          icon = item.props.renderSelectedIcon();
        } else if (item.props.renderIcon) {
          var defaultIcon = item.props.renderIcon();
          icon = _react2.default.cloneElement(defaultIcon, {
            style: [defaultIcon.props.style, styles.defaultSelectedIcon]
          });
        }
      } else if (item.props.renderIcon) {
        icon = item.props.renderIcon();
      }

      var badge = void 0;
      if (item.props.renderBadge) {
        badge = item.props.renderBadge();
      } else if (item.props.badgeText) {
        badge = _react2.default.createElement(
          _Badge2.default,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          },
          item.props.badgeText
        );
      }

      return _react2.default.createElement(
        _Tab2.default,
        {
          testID: item.props.testID,
          title: item.props.title,
          allowFontScaling: item.props.allowFontScaling,
          titleStyle: [item.props.titleStyle, item.props.selected ? [styles.defaultSelectedTitle, item.props.selectedTitleStyle] : null],
          badge: badge,
          onPress: item.props.onPress,
          hidesTabTouch: this.props.hidesTabTouch,
          style: item.props.tabStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 123
          }
        },
        icon
      );
    }
  }]);
  return TabNavigator;
}(_react2.default.Component);

TabNavigator.propTypes = babelHelpers.extends({}, _reactNative.View.propTypes, {
  sceneStyle: _reactNative.View.propTypes.style,
  tabBarStyle: _TabBar2.default.propTypes.style,
  tabBarShadowStyle: _TabBar2.default.propTypes.shadowStyle,
  hidesTabTouch: _react.PropTypes.bool
});
exports.default = TabNavigator;

var SceneContainer = function (_React$Component2) {
  babelHelpers.inherits(SceneContainer, _React$Component2);

  function SceneContainer() {
    babelHelpers.classCallCheck(this, SceneContainer);
    return babelHelpers.possibleConstructorReturn(this, (SceneContainer.__proto__ || Object.getPrototypeOf(SceneContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(SceneContainer, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          selected = _props2.selected,
          props = babelHelpers.objectWithoutProperties(_props2, ['selected']);

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, props, {
          pointerEvents: selected ? 'auto' : 'none',
          removeClippedSubviews: !selected,
          style: [styles.sceneContainer, selected ? null : styles.hiddenSceneContainer, props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 153
          }
        }),
        _react2.default.createElement(
          _StaticContainer2.default,
          { shouldUpdate: selected, __source: {
              fileName: _jsxFileName,
              lineNumber: 162
            }
          },
          this.props.children
        )
      );
    }
  }]);
  return SceneContainer;
}(_react2.default.Component);

SceneContainer.propTypes = babelHelpers.extends({}, _reactNative.View.propTypes, {
  selected: _react.PropTypes.bool
});


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  sceneContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    paddingBottom: _Layout2.default.tabBarHeight
  },
  hiddenSceneContainer: {
    overflow: 'hidden',
    opacity: 0
  },
  defaultSelectedTitle: {
    color: 'rgb(0, 122, 255)'
  },
  defaultSelectedIcon: {
    tintColor: 'rgb(0, 122, 255)'
  }
});

TabNavigator.Item = _TabNavigatorItem2.default;
}, 762, null, "react-native-tab-navigator/TabNavigator.js");
__d(/* immutable/dist/immutable.js */function(global, require, module, exports) {

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();
})(this, function () {
  'use strict';
  var SLICE$0 = Array.prototype.slice;

  function createClass(ctor, superClass) {
    if (superClass) {
      ctor.prototype = Object.create(superClass.prototype);
    }
    ctor.prototype.constructor = ctor;
  }

  function Iterable(value) {
    return isIterable(value) ? value : Seq(value);
  }

  createClass(KeyedIterable, Iterable);
  function KeyedIterable(value) {
    return isKeyed(value) ? value : KeyedSeq(value);
  }

  createClass(IndexedIterable, Iterable);
  function IndexedIterable(value) {
    return isIndexed(value) ? value : IndexedSeq(value);
  }

  createClass(SetIterable, Iterable);
  function SetIterable(value) {
    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
  }

  function isIterable(maybeIterable) {
    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
  }

  function isKeyed(maybeKeyed) {
    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
  }

  function isIndexed(maybeIndexed) {
    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
  }

  function isAssociative(maybeAssociative) {
    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
  }

  function isOrdered(maybeOrdered) {
    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
  }

  Iterable.isIterable = isIterable;
  Iterable.isKeyed = isKeyed;
  Iterable.isIndexed = isIndexed;
  Iterable.isAssociative = isAssociative;
  Iterable.isOrdered = isOrdered;

  Iterable.Keyed = KeyedIterable;
  Iterable.Indexed = IndexedIterable;
  Iterable.Set = SetIterable;

  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  var DELETE = 'delete';

  var SHIFT = 5;
  var SIZE = 1 << SHIFT;
  var MASK = SIZE - 1;

  var NOT_SET = {};

  var CHANGE_LENGTH = { value: false };
  var DID_ALTER = { value: false };

  function MakeRef(ref) {
    ref.value = false;
    return ref;
  }

  function SetRef(ref) {
    ref && (ref.value = true);
  }

  function OwnerID() {}

  function arrCopy(arr, offset) {
    offset = offset || 0;
    var len = Math.max(0, arr.length - offset);
    var newArr = new Array(len);
    for (var ii = 0; ii < len; ii++) {
      newArr[ii] = arr[ii + offset];
    }
    return newArr;
  }

  function ensureSize(iter) {
    if (iter.size === undefined) {
      iter.size = iter.__iterate(returnTrue);
    }
    return iter.size;
  }

  function wrapIndex(iter, index) {
    if (typeof index !== 'number') {
      var uint32Index = index >>> 0;
      if ('' + uint32Index !== index || uint32Index === 4294967295) {
        return NaN;
      }
      index = uint32Index;
    }
    return index < 0 ? ensureSize(iter) + index : index;
  }

  function returnTrue() {
    return true;
  }

  function wholeSlice(begin, end, size) {
    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);
  }

  function resolveBegin(begin, size) {
    return resolveIndex(begin, size, 0);
  }

  function resolveEnd(end, size) {
    return resolveIndex(end, size, size);
  }

  function resolveIndex(index, size, defaultIndex) {
    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);
  }

  var ITERATE_KEYS = 0;
  var ITERATE_VALUES = 1;
  var ITERATE_ENTRIES = 2;

  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

  function Iterator(next) {
    this.next = next;
  }

  Iterator.prototype.toString = function () {
    return '[Iterator]';
  };

  Iterator.KEYS = ITERATE_KEYS;
  Iterator.VALUES = ITERATE_VALUES;
  Iterator.ENTRIES = ITERATE_ENTRIES;

  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {
    return this.toString();
  };
  Iterator.prototype[ITERATOR_SYMBOL] = function () {
    return this;
  };

  function iteratorValue(type, k, v, iteratorResult) {
    var value = type === 0 ? k : type === 1 ? v : [k, v];
    iteratorResult ? iteratorResult.value = value : iteratorResult = {
      value: value, done: false
    };
    return iteratorResult;
  }

  function iteratorDone() {
    return { value: undefined, done: true };
  }

  function hasIterator(maybeIterable) {
    return !!getIteratorFn(maybeIterable);
  }

  function isIterator(maybeIterator) {
    return maybeIterator && typeof maybeIterator.next === 'function';
  }

  function getIterator(iterable) {
    var iteratorFn = getIteratorFn(iterable);
    return iteratorFn && iteratorFn.call(iterable);
  }

  function getIteratorFn(iterable) {
    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  function isArrayLike(value) {
    return value && typeof value.length === 'number';
  }

  createClass(Seq, Iterable);
  function Seq(value) {
    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);
  }

  Seq.of = function () {
    return Seq(arguments);
  };

  Seq.prototype.toSeq = function () {
    return this;
  };

  Seq.prototype.toString = function () {
    return this.__toString('Seq {', '}');
  };

  Seq.prototype.cacheResult = function () {
    if (!this._cache && this.__iterateUncached) {
      this._cache = this.entrySeq().toArray();
      this.size = this._cache.length;
    }
    return this;
  };

  Seq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, true);
  };

  Seq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, true);
  };

  createClass(KeyedSeq, Seq);
  function KeyedSeq(value) {
    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);
  }

  KeyedSeq.prototype.toKeyedSeq = function () {
    return this;
  };

  createClass(IndexedSeq, Seq);
  function IndexedSeq(value) {
    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
  }

  IndexedSeq.of = function () {
    return IndexedSeq(arguments);
  };

  IndexedSeq.prototype.toIndexedSeq = function () {
    return this;
  };

  IndexedSeq.prototype.toString = function () {
    return this.__toString('Seq [', ']');
  };

  IndexedSeq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, false);
  };

  IndexedSeq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, false);
  };

  createClass(SetSeq, Seq);
  function SetSeq(value) {
    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();
  }

  SetSeq.of = function () {
    return SetSeq(arguments);
  };

  SetSeq.prototype.toSetSeq = function () {
    return this;
  };

  Seq.isSeq = isSeq;
  Seq.Keyed = KeyedSeq;
  Seq.Set = SetSeq;
  Seq.Indexed = IndexedSeq;

  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

  Seq.prototype[IS_SEQ_SENTINEL] = true;

  createClass(ArraySeq, IndexedSeq);
  function ArraySeq(array) {
    this._array = array;
    this.size = array.length;
  }

  ArraySeq.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
  };

  ArraySeq.prototype.__iterate = function (fn, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ArraySeq.prototype.__iterator = function (type, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    var ii = 0;
    return new Iterator(function () {
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);
    });
  };

  createClass(ObjectSeq, KeyedSeq);
  function ObjectSeq(object) {
    var keys = Object.keys(object);
    this._object = object;
    this._keys = keys;
    this.size = keys.length;
  }

  ObjectSeq.prototype.get = function (key, notSetValue) {
    if (notSetValue !== undefined && !this.has(key)) {
      return notSetValue;
    }
    return this._object[key];
  };

  ObjectSeq.prototype.has = function (key) {
    return this._object.hasOwnProperty(key);
  };

  ObjectSeq.prototype.__iterate = function (fn, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      var key = keys[reverse ? maxIndex - ii : ii];
      if (fn(object[key], key, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ObjectSeq.prototype.__iterator = function (type, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    var ii = 0;
    return new Iterator(function () {
      var key = keys[reverse ? maxIndex - ii : ii];
      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);
    });
  };

  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(IterableSeq, IndexedSeq);
  function IterableSeq(iterable) {
    this._iterable = iterable;
    this.size = iterable.length || iterable.size;
  }

  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    var iterations = 0;
    if (isIterator(iterator)) {
      var step;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
    }
    return iterations;
  };

  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    if (!isIterator(iterator)) {
      return new Iterator(iteratorDone);
    }
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value);
    });
  };

  createClass(IteratorSeq, IndexedSeq);
  function IteratorSeq(iterator) {
    this._iterator = iterator;
    this._iteratorCache = [];
  }

  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    while (iterations < cache.length) {
      if (fn(cache[iterations], iterations++, this) === false) {
        return iterations;
      }
    }
    var step;
    while (!(step = iterator.next()).done) {
      var val = step.value;
      cache[iterations] = val;
      if (fn(val, iterations++, this) === false) {
        break;
      }
    }
    return iterations;
  };

  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    return new Iterator(function () {
      if (iterations >= cache.length) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        cache[iterations] = step.value;
      }
      return iteratorValue(type, iterations, cache[iterations++]);
    });
  };

  function isSeq(maybeSeq) {
    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
  }

  var EMPTY_SEQ;

  function emptySequence() {
    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
  }

  function keyedSeqFromValue(value) {
    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);
    }
    return seq;
  }

  function indexedSeqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values: ' + value);
    }
    return seq;
  }

  function seqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);
    }
    return seq;
  }

  function maybeIndexedSeqFromValue(value) {
    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;
  }

  function seqIterate(seq, fn, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var entry = cache[reverse ? maxIndex - ii : ii];
        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
          return ii + 1;
        }
      }
      return ii;
    }
    return seq.__iterateUncached(fn, reverse);
  }

  function seqIterator(seq, type, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      var ii = 0;
      return new Iterator(function () {
        var entry = cache[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
      });
    }
    return seq.__iteratorUncached(type, reverse);
  }

  function fromJS(json, converter) {
    return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);
  }

  function fromJSWith(converter, json, key, parentJSON) {
    if (Array.isArray(json)) {
      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    if (isPlainObj(json)) {
      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    return json;
  }

  function fromJSDefault(json) {
    if (Array.isArray(json)) {
      return IndexedSeq(json).map(fromJSDefault).toList();
    }
    if (isPlainObj(json)) {
      return KeyedSeq(json).map(fromJSDefault).toMap();
    }
    return json;
  }

  function isPlainObj(value) {
    return value && (value.constructor === Object || value.constructor === undefined);
  }

  function is(valueA, valueB) {
    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {
      valueA = valueA.valueOf();
      valueB = valueB.valueOf();
      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
    }
    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {
      return true;
    }
    return false;
  }

  function deepEqual(a, b) {
    if (a === b) {
      return true;
    }

    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {
      return false;
    }

    if (a.size === 0 && b.size === 0) {
      return true;
    }

    var notAssociative = !isAssociative(a);

    if (isOrdered(a)) {
      var entries = a.entries();
      return b.every(function (v, k) {
        var entry = entries.next().value;
        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
      }) && entries.next().done;
    }

    var flipped = false;

    if (a.size === undefined) {
      if (b.size === undefined) {
        if (typeof a.cacheResult === 'function') {
          a.cacheResult();
        }
      } else {
        flipped = true;
        var _ = a;
        a = b;
        b = _;
      }
    }

    var allEqual = true;
    var bSize = b.__iterate(function (v, k) {
      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
        allEqual = false;
        return false;
      }
    });

    return allEqual && a.size === bSize;
  }

  createClass(Repeat, IndexedSeq);

  function Repeat(value, times) {
    if (!(this instanceof Repeat)) {
      return new Repeat(value, times);
    }
    this._value = value;
    this.size = times === undefined ? Infinity : Math.max(0, times);
    if (this.size === 0) {
      if (EMPTY_REPEAT) {
        return EMPTY_REPEAT;
      }
      EMPTY_REPEAT = this;
    }
  }

  Repeat.prototype.toString = function () {
    if (this.size === 0) {
      return 'Repeat []';
    }
    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
  };

  Repeat.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._value : notSetValue;
  };

  Repeat.prototype.includes = function (searchValue) {
    return is(this._value, searchValue);
  };

  Repeat.prototype.slice = function (begin, end) {
    var size = this.size;
    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
  };

  Repeat.prototype.reverse = function () {
    return this;
  };

  Repeat.prototype.indexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return 0;
    }
    return -1;
  };

  Repeat.prototype.lastIndexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return this.size;
    }
    return -1;
  };

  Repeat.prototype.__iterate = function (fn, reverse) {
    for (var ii = 0; ii < this.size; ii++) {
      if (fn(this._value, ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  Repeat.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    var ii = 0;
    return new Iterator(function () {
      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();
    });
  };

  Repeat.prototype.equals = function (other) {
    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);
  };

  var EMPTY_REPEAT;

  function invariant(condition, error) {
    if (!condition) throw new Error(error);
  }

  createClass(Range, IndexedSeq);

  function Range(start, end, step) {
    if (!(this instanceof Range)) {
      return new Range(start, end, step);
    }
    invariant(step !== 0, 'Cannot step a Range by 0');
    start = start || 0;
    if (end === undefined) {
      end = Infinity;
    }
    step = step === undefined ? 1 : Math.abs(step);
    if (end < start) {
      step = -step;
    }
    this._start = start;
    this._end = end;
    this._step = step;
    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
    if (this.size === 0) {
      if (EMPTY_RANGE) {
        return EMPTY_RANGE;
      }
      EMPTY_RANGE = this;
    }
  }

  Range.prototype.toString = function () {
    if (this.size === 0) {
      return 'Range []';
    }
    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';
  };

  Range.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;
  };

  Range.prototype.includes = function (searchValue) {
    var possibleIndex = (searchValue - this._start) / this._step;
    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);
  };

  Range.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    begin = resolveBegin(begin, this.size);
    end = resolveEnd(end, this.size);
    if (end <= begin) {
      return new Range(0, 0);
    }
    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
  };

  Range.prototype.indexOf = function (searchValue) {
    var offsetValue = searchValue - this._start;
    if (offsetValue % this._step === 0) {
      var index = offsetValue / this._step;
      if (index >= 0 && index < this.size) {
        return index;
      }
    }
    return -1;
  };

  Range.prototype.lastIndexOf = function (searchValue) {
    return this.indexOf(searchValue);
  };

  Range.prototype.__iterate = function (fn, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(value, ii, this) === false) {
        return ii + 1;
      }
      value += reverse ? -step : step;
    }
    return ii;
  };

  Range.prototype.__iterator = function (type, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    var ii = 0;
    return new Iterator(function () {
      var v = value;
      value += reverse ? -step : step;
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
    });
  };

  Range.prototype.equals = function (other) {
    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);
  };

  var EMPTY_RANGE;

  createClass(Collection, Iterable);
  function Collection() {
    throw TypeError('Abstract');
  }

  createClass(KeyedCollection, Collection);function KeyedCollection() {}

  createClass(IndexedCollection, Collection);function IndexedCollection() {}

  createClass(SetCollection, Collection);function SetCollection() {}

  Collection.Keyed = KeyedCollection;
  Collection.Indexed = IndexedCollection;
  Collection.Set = SetCollection;

  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {
    a = a | 0;
    b = b | 0;
    var c = a & 0xffff;
    var d = b & 0xffff;

    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;
  };

  function smi(i32) {
    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;
  }

  function hash(o) {
    if (o === false || o === null || o === undefined) {
      return 0;
    }
    if (typeof o.valueOf === 'function') {
      o = o.valueOf();
      if (o === false || o === null || o === undefined) {
        return 0;
      }
    }
    if (o === true) {
      return 1;
    }
    var type = typeof o;
    if (type === 'number') {
      if (o !== o || o === Infinity) {
        return 0;
      }
      var h = o | 0;
      if (h !== o) {
        h ^= o * 0xFFFFFFFF;
      }
      while (o > 0xFFFFFFFF) {
        o /= 0xFFFFFFFF;
        h ^= o;
      }
      return smi(h);
    }
    if (type === 'string') {
      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
    }
    if (typeof o.hashCode === 'function') {
      return o.hashCode();
    }
    if (type === 'object') {
      return hashJSObj(o);
    }
    if (typeof o.toString === 'function') {
      return hashString(o.toString());
    }
    throw new Error('Value type ' + type + ' cannot be hashed.');
  }

  function cachedHashString(string) {
    var hash = stringHashCache[string];
    if (hash === undefined) {
      hash = hashString(string);
      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
        STRING_HASH_CACHE_SIZE = 0;
        stringHashCache = {};
      }
      STRING_HASH_CACHE_SIZE++;
      stringHashCache[string] = hash;
    }
    return hash;
  }

  function hashString(string) {
    var hash = 0;
    for (var ii = 0; ii < string.length; ii++) {
      hash = 31 * hash + string.charCodeAt(ii) | 0;
    }
    return smi(hash);
  }

  function hashJSObj(obj) {
    var hash;
    if (usingWeakMap) {
      hash = weakMap.get(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = obj[UID_HASH_KEY];
    if (hash !== undefined) {
      return hash;
    }

    if (!canDefineProperty) {
      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
      if (hash !== undefined) {
        return hash;
      }

      hash = getIENodeHash(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = ++objHashUID;
    if (objHashUID & 0x40000000) {
      objHashUID = 0;
    }

    if (usingWeakMap) {
      weakMap.set(obj, hash);
    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
      throw new Error('Non-extensible objects are not allowed as keys.');
    } else if (canDefineProperty) {
      Object.defineProperty(obj, UID_HASH_KEY, {
        'enumerable': false,
        'configurable': false,
        'writable': false,
        'value': hash
      });
    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
      obj.propertyIsEnumerable = function () {
        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
      };
      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
    } else if (obj.nodeType !== undefined) {
      obj[UID_HASH_KEY] = hash;
    } else {
      throw new Error('Unable to set a non-enumerable property on object.');
    }

    return hash;
  }

  var isExtensible = Object.isExtensible;

  var canDefineProperty = function () {
    try {
      Object.defineProperty({}, '@', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function getIENodeHash(node) {
    if (node && node.nodeType > 0) {
      switch (node.nodeType) {
        case 1:
          return node.uniqueID;
        case 9:
          return node.documentElement && node.documentElement.uniqueID;
      }
    }
  }

  var usingWeakMap = typeof WeakMap === 'function';
  var weakMap;
  if (usingWeakMap) {
    weakMap = new WeakMap();
  }

  var objHashUID = 0;

  var UID_HASH_KEY = '__immutablehash__';
  if (typeof Symbol === 'function') {
    UID_HASH_KEY = Symbol(UID_HASH_KEY);
  }

  var STRING_HASH_CACHE_MIN_STRLEN = 16;
  var STRING_HASH_CACHE_MAX_SIZE = 255;
  var STRING_HASH_CACHE_SIZE = 0;
  var stringHashCache = {};

  function assertNotInfinite(size) {
    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');
  }

  createClass(Map, KeyedCollection);

  function Map(value) {
    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  Map.of = function () {
    var keyValues = SLICE$0.call(arguments, 0);
    return emptyMap().withMutations(function (map) {
      for (var i = 0; i < keyValues.length; i += 2) {
        if (i + 1 >= keyValues.length) {
          throw new Error('Missing value for key: ' + keyValues[i]);
        }
        map.set(keyValues[i], keyValues[i + 1]);
      }
    });
  };

  Map.prototype.toString = function () {
    return this.__toString('Map {', '}');
  };

  Map.prototype.get = function (k, notSetValue) {
    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;
  };

  Map.prototype.set = function (k, v) {
    return updateMap(this, k, v);
  };

  Map.prototype.setIn = function (keyPath, v) {
    return this.updateIn(keyPath, NOT_SET, function () {
      return v;
    });
  };

  Map.prototype.remove = function (k) {
    return updateMap(this, k, NOT_SET);
  };

  Map.prototype.deleteIn = function (keyPath) {
    return this.updateIn(keyPath, function () {
      return NOT_SET;
    });
  };

  Map.prototype.update = function (k, notSetValue, updater) {
    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);
  };

  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {
    if (!updater) {
      updater = notSetValue;
      notSetValue = undefined;
    }
    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);
    return updatedValue === NOT_SET ? undefined : updatedValue;
  };

  Map.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._root = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyMap();
  };

  Map.prototype.merge = function () {
    return mergeIntoMapWith(this, undefined, arguments);
  };

  Map.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, merger, iters);
  };

  Map.prototype.mergeIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.mergeDeep = function () {
    return mergeIntoMapWith(this, deepMerger, arguments);
  };

  Map.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, deepMergerWith(merger), iters);
  };

  Map.prototype.mergeDeepIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.sort = function (comparator) {
    return OrderedMap(sortFactory(this, comparator));
  };

  Map.prototype.sortBy = function (mapper, comparator) {
    return OrderedMap(sortFactory(this, comparator, mapper));
  };

  Map.prototype.withMutations = function (fn) {
    var mutable = this.asMutable();
    fn(mutable);
    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
  };

  Map.prototype.asMutable = function () {
    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
  };

  Map.prototype.asImmutable = function () {
    return this.__ensureOwner();
  };

  Map.prototype.wasAltered = function () {
    return this.__altered;
  };

  Map.prototype.__iterator = function (type, reverse) {
    return new MapIterator(this, type, reverse);
  };

  Map.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    this._root && this._root.iterate(function (entry) {
      iterations++;
      return fn(entry[1], entry[0], this$0);
    }, reverse);
    return iterations;
  };

  Map.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeMap(this.size, this._root, ownerID, this.__hash);
  };

  function isMap(maybeMap) {
    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
  }

  Map.isMap = isMap;

  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

  var MapPrototype = Map.prototype;
  MapPrototype[IS_MAP_SENTINEL] = true;
  MapPrototype[DELETE] = MapPrototype.remove;
  MapPrototype.removeIn = MapPrototype.deleteIn;

  function ArrayMapNode(ownerID, entries) {
    this.ownerID = ownerID;
    this.entries = entries;
  }

  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && entries.length === 1) {
      return;
    }

    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
      return createNodes(ownerID, entries, key, value);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new ArrayMapNode(ownerID, newEntries);
  };

  function BitmapIndexedNode(ownerID, bitmap, nodes) {
    this.ownerID = ownerID;
    this.bitmap = bitmap;
    this.nodes = nodes;
  }

  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
    var bitmap = this.bitmap;
    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);
  };

  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var bit = 1 << keyHashFrag;
    var bitmap = this.bitmap;
    var exists = (bitmap & bit) !== 0;

    if (!exists && value === NOT_SET) {
      return this;
    }

    var idx = popCount(bitmap & bit - 1);
    var nodes = this.nodes;
    var node = exists ? nodes[idx] : undefined;
    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

    if (newNode === node) {
      return this;
    }

    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
    }

    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
      return nodes[idx ^ 1];
    }

    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
      return newNode;
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.bitmap = newBitmap;
      this.nodes = newNodes;
      return this;
    }

    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
  };

  function HashArrayMapNode(ownerID, count, nodes) {
    this.ownerID = ownerID;
    this.count = count;
    this.nodes = nodes;
  }

  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var node = this.nodes[idx];
    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
  };

  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var removed = value === NOT_SET;
    var nodes = this.nodes;
    var node = nodes[idx];

    if (removed && !node) {
      return this;
    }

    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
    if (newNode === node) {
      return this;
    }

    var newCount = this.count;
    if (!node) {
      newCount++;
    } else if (!newNode) {
      newCount--;
      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
        return packNodes(ownerID, nodes, newCount, idx);
      }
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newNodes = setIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.count = newCount;
      this.nodes = newNodes;
      return this;
    }

    return new HashArrayMapNode(ownerID, newCount, newNodes);
  };

  function HashCollisionNode(ownerID, keyHash, entries) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entries = entries;
  }

  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }

    var removed = value === NOT_SET;

    if (keyHash !== this.keyHash) {
      if (removed) {
        return this;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
    }

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && len === 2) {
      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new HashCollisionNode(ownerID, this.keyHash, newEntries);
  };

  function ValueNode(ownerID, keyHash, entry) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entry = entry;
  }

  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
  };

  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;
    var keyMatch = is(key, this.entry[0]);
    if (keyMatch ? value === this.entry[1] : removed) {
      return this;
    }

    SetRef(didAlter);

    if (removed) {
      SetRef(didChangeSize);
      return;
    }

    if (keyMatch) {
      if (ownerID && ownerID === this.ownerID) {
        this.entry[1] = value;
        return this;
      }
      return new ValueNode(ownerID, this.keyHash, [key, value]);
    }

    SetRef(didChangeSize);
    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
  };

  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {
    var entries = this.entries;
    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
        return false;
      }
    }
  };

  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {
    var nodes = this.nodes;
    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
      var node = nodes[reverse ? maxIndex - ii : ii];
      if (node && node.iterate(fn, reverse) === false) {
        return false;
      }
    }
  };

  ValueNode.prototype.iterate = function (fn, reverse) {
    return fn(this.entry);
  };

  createClass(MapIterator, Iterator);

  function MapIterator(map, type, reverse) {
    this._type = type;
    this._reverse = reverse;
    this._stack = map._root && mapIteratorFrame(map._root);
  }

  MapIterator.prototype.next = function () {
    var type = this._type;
    var stack = this._stack;
    while (stack) {
      var node = stack.node;
      var index = stack.index++;
      var maxIndex;
      if (node.entry) {
        if (index === 0) {
          return mapIteratorValue(type, node.entry);
        }
      } else if (node.entries) {
        maxIndex = node.entries.length - 1;
        if (index <= maxIndex) {
          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
        }
      } else {
        maxIndex = node.nodes.length - 1;
        if (index <= maxIndex) {
          var subNode = node.nodes[this._reverse ? maxIndex - index : index];
          if (subNode) {
            if (subNode.entry) {
              return mapIteratorValue(type, subNode.entry);
            }
            stack = this._stack = mapIteratorFrame(subNode, stack);
          }
          continue;
        }
      }
      stack = this._stack = this._stack.__prev;
    }
    return iteratorDone();
  };

  function mapIteratorValue(type, entry) {
    return iteratorValue(type, entry[0], entry[1]);
  }

  function mapIteratorFrame(node, prev) {
    return {
      node: node,
      index: 0,
      __prev: prev
    };
  }

  function makeMap(size, root, ownerID, hash) {
    var map = Object.create(MapPrototype);
    map.size = size;
    map._root = root;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_MAP;
  function emptyMap() {
    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
  }

  function updateMap(map, k, v) {
    var newRoot;
    var newSize;
    if (!map._root) {
      if (v === NOT_SET) {
        return map;
      }
      newSize = 1;
      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
    } else {
      var didChangeSize = MakeRef(CHANGE_LENGTH);
      var didAlter = MakeRef(DID_ALTER);
      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
      if (!didAlter.value) {
        return map;
      }
      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
    }
    if (map.__ownerID) {
      map.size = newSize;
      map._root = newRoot;
      map.__hash = undefined;
      map.__altered = true;
      return map;
    }
    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
  }

  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (!node) {
      if (value === NOT_SET) {
        return node;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return new ValueNode(ownerID, keyHash, [key, value]);
    }
    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
  }

  function isLeafNode(node) {
    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
  }

  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
    if (node.keyHash === keyHash) {
      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
    }

    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

    var newNode;
    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);

    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);
  }

  function createNodes(ownerID, entries, key, value) {
    if (!ownerID) {
      ownerID = new OwnerID();
    }
    var node = new ValueNode(ownerID, hash(key), [key, value]);
    for (var ii = 0; ii < entries.length; ii++) {
      var entry = entries[ii];
      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
    }
    return node;
  }

  function packNodes(ownerID, nodes, count, excluding) {
    var bitmap = 0;
    var packedII = 0;
    var packedNodes = new Array(count);
    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
      var node = nodes[ii];
      if (node !== undefined && ii !== excluding) {
        bitmap |= bit;
        packedNodes[packedII++] = node;
      }
    }
    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
  }

  function expandNodes(ownerID, nodes, bitmap, including, node) {
    var count = 0;
    var expandedNodes = new Array(SIZE);
    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
    }
    expandedNodes[including] = node;
    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
  }

  function mergeIntoMapWith(map, merger, iterables) {
    var iters = [];
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = KeyedIterable(value);
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    return mergeIntoCollectionWith(map, merger, iters);
  }

  function deepMerger(existing, value, key) {
    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;
  }

  function deepMergerWith(merger) {
    return function (existing, value, key) {
      if (existing && existing.mergeDeepWith && isIterable(value)) {
        return existing.mergeDeepWith(merger, value);
      }
      var nextValue = merger(existing, value, key);
      return is(existing, nextValue) ? existing : nextValue;
    };
  }

  function mergeIntoCollectionWith(collection, merger, iters) {
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return collection;
    }
    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
      return collection.constructor(iters[0]);
    }
    return collection.withMutations(function (collection) {
      var mergeIntoMap = merger ? function (value, key) {
        collection.update(key, NOT_SET, function (existing) {
          return existing === NOT_SET ? value : merger(existing, value, key);
        });
      } : function (value, key) {
        collection.set(key, value);
      };
      for (var ii = 0; ii < iters.length; ii++) {
        iters[ii].forEach(mergeIntoMap);
      }
    });
  }

  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
    var isNotSet = existing === NOT_SET;
    var step = keyPathIter.next();
    if (step.done) {
      var existingValue = isNotSet ? notSetValue : existing;
      var newValue = updater(existingValue);
      return newValue === existingValue ? existing : newValue;
    }
    invariant(isNotSet || existing && existing.set, 'invalid keyPath');
    var key = step.value;
    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);
    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
  }

  function popCount(x) {
    x = x - (x >> 1 & 0x55555555);
    x = (x & 0x33333333) + (x >> 2 & 0x33333333);
    x = x + (x >> 4) & 0x0f0f0f0f;
    x = x + (x >> 8);
    x = x + (x >> 16);
    return x & 0x7f;
  }

  function setIn(array, idx, val, canEdit) {
    var newArray = canEdit ? array : arrCopy(array);
    newArray[idx] = val;
    return newArray;
  }

  function spliceIn(array, idx, val, canEdit) {
    var newLen = array.length + 1;
    if (canEdit && idx + 1 === newLen) {
      array[idx] = val;
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        newArray[ii] = val;
        after = -1;
      } else {
        newArray[ii] = array[ii + after];
      }
    }
    return newArray;
  }

  function spliceOut(array, idx, canEdit) {
    var newLen = array.length - 1;
    if (canEdit && idx === newLen) {
      array.pop();
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        after = 1;
      }
      newArray[ii] = array[ii + after];
    }
    return newArray;
  }

  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

  createClass(List, IndexedCollection);

  function List(value) {
    var empty = emptyList();
    if (value === null || value === undefined) {
      return empty;
    }
    if (isList(value)) {
      return value;
    }
    var iter = IndexedIterable(value);
    var size = iter.size;
    if (size === 0) {
      return empty;
    }
    assertNotInfinite(size);
    if (size > 0 && size < SIZE) {
      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
    }
    return empty.withMutations(function (list) {
      list.setSize(size);
      iter.forEach(function (v, i) {
        return list.set(i, v);
      });
    });
  }

  List.of = function () {
    return this(arguments);
  };

  List.prototype.toString = function () {
    return this.__toString('List [', ']');
  };

  List.prototype.get = function (index, notSetValue) {
    index = wrapIndex(this, index);
    if (index >= 0 && index < this.size) {
      index += this._origin;
      var node = listNodeFor(this, index);
      return node && node.array[index & MASK];
    }
    return notSetValue;
  };

  List.prototype.set = function (index, value) {
    return updateList(this, index, value);
  };

  List.prototype.remove = function (index) {
    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);
  };

  List.prototype.insert = function (index, value) {
    return this.splice(index, 0, value);
  };

  List.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = this._origin = this._capacity = 0;
      this._level = SHIFT;
      this._root = this._tail = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyList();
  };

  List.prototype.push = function () {
    var values = arguments;
    var oldSize = this.size;
    return this.withMutations(function (list) {
      setListBounds(list, 0, oldSize + values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(oldSize + ii, values[ii]);
      }
    });
  };

  List.prototype.pop = function () {
    return setListBounds(this, 0, -1);
  };

  List.prototype.unshift = function () {
    var values = arguments;
    return this.withMutations(function (list) {
      setListBounds(list, -values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(ii, values[ii]);
      }
    });
  };

  List.prototype.shift = function () {
    return setListBounds(this, 1);
  };

  List.prototype.merge = function () {
    return mergeIntoListWith(this, undefined, arguments);
  };

  List.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, merger, iters);
  };

  List.prototype.mergeDeep = function () {
    return mergeIntoListWith(this, deepMerger, arguments);
  };

  List.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, deepMergerWith(merger), iters);
  };

  List.prototype.setSize = function (size) {
    return setListBounds(this, 0, size);
  };

  List.prototype.slice = function (begin, end) {
    var size = this.size;
    if (wholeSlice(begin, end, size)) {
      return this;
    }
    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));
  };

  List.prototype.__iterator = function (type, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    return new Iterator(function () {
      var value = values();
      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);
    });
  };

  List.prototype.__iterate = function (fn, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    var value;
    while ((value = values()) !== DONE) {
      if (fn(value, index++, this) === false) {
        break;
      }
    }
    return index;
  };

  List.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      return this;
    }
    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
  };

  function isList(maybeList) {
    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
  }

  List.isList = isList;

  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

  var ListPrototype = List.prototype;
  ListPrototype[IS_LIST_SENTINEL] = true;
  ListPrototype[DELETE] = ListPrototype.remove;
  ListPrototype.setIn = MapPrototype.setIn;
  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;
  ListPrototype.update = MapPrototype.update;
  ListPrototype.updateIn = MapPrototype.updateIn;
  ListPrototype.mergeIn = MapPrototype.mergeIn;
  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  ListPrototype.withMutations = MapPrototype.withMutations;
  ListPrototype.asMutable = MapPrototype.asMutable;
  ListPrototype.asImmutable = MapPrototype.asImmutable;
  ListPrototype.wasAltered = MapPrototype.wasAltered;

  function VNode(array, ownerID) {
    this.array = array;
    this.ownerID = ownerID;
  }

  VNode.prototype.removeBefore = function (ownerID, level, index) {
    if (index === level ? 1 << level : 0 || this.array.length === 0) {
      return this;
    }
    var originIndex = index >>> level & MASK;
    if (originIndex >= this.array.length) {
      return new VNode([], ownerID);
    }
    var removingFirst = originIndex === 0;
    var newChild;
    if (level > 0) {
      var oldChild = this.array[originIndex];
      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
      if (newChild === oldChild && removingFirst) {
        return this;
      }
    }
    if (removingFirst && !newChild) {
      return this;
    }
    var editable = editableVNode(this, ownerID);
    if (!removingFirst) {
      for (var ii = 0; ii < originIndex; ii++) {
        editable.array[ii] = undefined;
      }
    }
    if (newChild) {
      editable.array[originIndex] = newChild;
    }
    return editable;
  };

  VNode.prototype.removeAfter = function (ownerID, level, index) {
    if (index === (level ? 1 << level : 0) || this.array.length === 0) {
      return this;
    }
    var sizeIndex = index - 1 >>> level & MASK;
    if (sizeIndex >= this.array.length) {
      return this;
    }

    var newChild;
    if (level > 0) {
      var oldChild = this.array[sizeIndex];
      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
      if (newChild === oldChild && sizeIndex === this.array.length - 1) {
        return this;
      }
    }

    var editable = editableVNode(this, ownerID);
    editable.array.splice(sizeIndex + 1);
    if (newChild) {
      editable.array[sizeIndex] = newChild;
    }
    return editable;
  };

  var DONE = {};

  function iterateList(list, reverse) {
    var left = list._origin;
    var right = list._capacity;
    var tailPos = getTailOffset(right);
    var tail = list._tail;

    return iterateNodeOrLeaf(list._root, list._level, 0);

    function iterateNodeOrLeaf(node, level, offset) {
      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);
    }

    function iterateLeaf(node, offset) {
      var array = offset === tailPos ? tail && tail.array : node && node.array;
      var from = offset > left ? 0 : left - offset;
      var to = right - offset;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        return array && array[idx];
      };
    }

    function iterateNode(node, level, offset) {
      var values;
      var array = node && node.array;
      var from = offset > left ? 0 : left - offset >> level;
      var to = (right - offset >> level) + 1;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        do {
          if (values) {
            var value = values();
            if (value !== DONE) {
              return value;
            }
            values = null;
          }
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));
        } while (true);
      };
    }
  }

  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
    var list = Object.create(ListPrototype);
    list.size = capacity - origin;
    list._origin = origin;
    list._capacity = capacity;
    list._level = level;
    list._root = root;
    list._tail = tail;
    list.__ownerID = ownerID;
    list.__hash = hash;
    list.__altered = false;
    return list;
  }

  var EMPTY_LIST;
  function emptyList() {
    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
  }

  function updateList(list, index, value) {
    index = wrapIndex(list, index);

    if (index !== index) {
      return list;
    }

    if (index >= list.size || index < 0) {
      return list.withMutations(function (list) {
        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);
      });
    }

    index += list._origin;

    var newTail = list._tail;
    var newRoot = list._root;
    var didAlter = MakeRef(DID_ALTER);
    if (index >= getTailOffset(list._capacity)) {
      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
    } else {
      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
    }

    if (!didAlter.value) {
      return list;
    }

    if (list.__ownerID) {
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
  }

  function updateVNode(node, ownerID, level, index, value, didAlter) {
    var idx = index >>> level & MASK;
    var nodeHas = node && idx < node.array.length;
    if (!nodeHas && value === undefined) {
      return node;
    }

    var newNode;

    if (level > 0) {
      var lowerNode = node && node.array[idx];
      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
      if (newLowerNode === lowerNode) {
        return node;
      }
      newNode = editableVNode(node, ownerID);
      newNode.array[idx] = newLowerNode;
      return newNode;
    }

    if (nodeHas && node.array[idx] === value) {
      return node;
    }

    SetRef(didAlter);

    newNode = editableVNode(node, ownerID);
    if (value === undefined && idx === newNode.array.length - 1) {
      newNode.array.pop();
    } else {
      newNode.array[idx] = value;
    }
    return newNode;
  }

  function editableVNode(node, ownerID) {
    if (ownerID && node && ownerID === node.ownerID) {
      return node;
    }
    return new VNode(node ? node.array.slice() : [], ownerID);
  }

  function listNodeFor(list, rawIndex) {
    if (rawIndex >= getTailOffset(list._capacity)) {
      return list._tail;
    }
    if (rawIndex < 1 << list._level + SHIFT) {
      var node = list._root;
      var level = list._level;
      while (node && level > 0) {
        node = node.array[rawIndex >>> level & MASK];
        level -= SHIFT;
      }
      return node;
    }
  }

  function setListBounds(list, begin, end) {
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }
    var owner = list.__ownerID || new OwnerID();
    var oldOrigin = list._origin;
    var oldCapacity = list._capacity;
    var newOrigin = oldOrigin + begin;
    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
      return list;
    }

    if (newOrigin >= newCapacity) {
      return list.clear();
    }

    var newLevel = list._level;
    var newRoot = list._root;

    var offsetShift = 0;
    while (newOrigin + offsetShift < 0) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
      newLevel += SHIFT;
      offsetShift += 1 << newLevel;
    }
    if (offsetShift) {
      newOrigin += offsetShift;
      oldOrigin += offsetShift;
      newCapacity += offsetShift;
      oldCapacity += offsetShift;
    }

    var oldTailOffset = getTailOffset(oldCapacity);
    var newTailOffset = getTailOffset(newCapacity);

    while (newTailOffset >= 1 << newLevel + SHIFT) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
      newLevel += SHIFT;
    }

    var oldTail = list._tail;
    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
      newRoot = editableVNode(newRoot, owner);
      var node = newRoot;
      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
        var idx = oldTailOffset >>> level & MASK;
        node = node.array[idx] = editableVNode(node.array[idx], owner);
      }
      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;
    }

    if (newCapacity < oldCapacity) {
      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
    }

    if (newOrigin >= newTailOffset) {
      newOrigin -= newTailOffset;
      newCapacity -= newTailOffset;
      newLevel = SHIFT;
      newRoot = null;
      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);
    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
      offsetShift = 0;

      while (newRoot) {
        var beginIndex = newOrigin >>> newLevel & MASK;
        if (beginIndex !== newTailOffset >>> newLevel & MASK) {
          break;
        }
        if (beginIndex) {
          offsetShift += (1 << newLevel) * beginIndex;
        }
        newLevel -= SHIFT;
        newRoot = newRoot.array[beginIndex];
      }

      if (newRoot && newOrigin > oldOrigin) {
        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
      }
      if (newRoot && newTailOffset < oldTailOffset) {
        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
      }
      if (offsetShift) {
        newOrigin -= offsetShift;
        newCapacity -= offsetShift;
      }
    }

    if (list.__ownerID) {
      list.size = newCapacity - newOrigin;
      list._origin = newOrigin;
      list._capacity = newCapacity;
      list._level = newLevel;
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
  }

  function mergeIntoListWith(list, merger, iterables) {
    var iters = [];
    var maxSize = 0;
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = IndexedIterable(value);
      if (iter.size > maxSize) {
        maxSize = iter.size;
      }
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    if (maxSize > list.size) {
      list = list.setSize(maxSize);
    }
    return mergeIntoCollectionWith(list, merger, iters);
  }

  function getTailOffset(size) {
    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;
  }

  createClass(OrderedMap, Map);

  function OrderedMap(value) {
    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  OrderedMap.of = function () {
    return this(arguments);
  };

  OrderedMap.prototype.toString = function () {
    return this.__toString('OrderedMap {', '}');
  };

  OrderedMap.prototype.get = function (k, notSetValue) {
    var index = this._map.get(k);
    return index !== undefined ? this._list.get(index)[1] : notSetValue;
  };

  OrderedMap.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._map.clear();
      this._list.clear();
      return this;
    }
    return emptyOrderedMap();
  };

  OrderedMap.prototype.set = function (k, v) {
    return updateOrderedMap(this, k, v);
  };

  OrderedMap.prototype.remove = function (k) {
    return updateOrderedMap(this, k, NOT_SET);
  };

  OrderedMap.prototype.wasAltered = function () {
    return this._map.wasAltered() || this._list.wasAltered();
  };

  OrderedMap.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._list.__iterate(function (entry) {
      return entry && fn(entry[1], entry[0], this$0);
    }, reverse);
  };

  OrderedMap.prototype.__iterator = function (type, reverse) {
    return this._list.fromEntrySeq().__iterator(type, reverse);
  };

  OrderedMap.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    var newList = this._list.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      this._list = newList;
      return this;
    }
    return makeOrderedMap(newMap, newList, ownerID, this.__hash);
  };

  function isOrderedMap(maybeOrderedMap) {
    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
  }

  OrderedMap.isOrderedMap = isOrderedMap;

  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

  function makeOrderedMap(map, list, ownerID, hash) {
    var omap = Object.create(OrderedMap.prototype);
    omap.size = map ? map.size : 0;
    omap._map = map;
    omap._list = list;
    omap.__ownerID = ownerID;
    omap.__hash = hash;
    return omap;
  }

  var EMPTY_ORDERED_MAP;
  function emptyOrderedMap() {
    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
  }

  function updateOrderedMap(omap, k, v) {
    var map = omap._map;
    var list = omap._list;
    var i = map.get(k);
    var has = i !== undefined;
    var newMap;
    var newList;
    if (v === NOT_SET) {
      if (!has) {
        return omap;
      }
      if (list.size >= SIZE && list.size >= map.size * 2) {
        newList = list.filter(function (entry, idx) {
          return entry !== undefined && i !== idx;
        });
        newMap = newList.toKeyedSeq().map(function (entry) {
          return entry[0];
        }).flip().toMap();
        if (omap.__ownerID) {
          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
        }
      } else {
        newMap = map.remove(k);
        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
      }
    } else {
      if (has) {
        if (v === list.get(i)[1]) {
          return omap;
        }
        newMap = map;
        newList = list.set(i, [k, v]);
      } else {
        newMap = map.set(k, list.size);
        newList = list.set(list.size, [k, v]);
      }
    }
    if (omap.__ownerID) {
      omap.size = newMap.size;
      omap._map = newMap;
      omap._list = newList;
      omap.__hash = undefined;
      return omap;
    }
    return makeOrderedMap(newMap, newList);
  }

  createClass(ToKeyedSequence, KeyedSeq);
  function ToKeyedSequence(indexed, useKeys) {
    this._iter = indexed;
    this._useKeys = useKeys;
    this.size = indexed.size;
  }

  ToKeyedSequence.prototype.get = function (key, notSetValue) {
    return this._iter.get(key, notSetValue);
  };

  ToKeyedSequence.prototype.has = function (key) {
    return this._iter.has(key);
  };

  ToKeyedSequence.prototype.valueSeq = function () {
    return this._iter.valueSeq();
  };

  ToKeyedSequence.prototype.reverse = function () {
    var this$0 = this;
    var reversedSequence = reverseFactory(this, true);
    if (!this._useKeys) {
      reversedSequence.valueSeq = function () {
        return this$0._iter.toSeq().reverse();
      };
    }
    return reversedSequence;
  };

  ToKeyedSequence.prototype.map = function (mapper, context) {
    var this$0 = this;
    var mappedSequence = mapFactory(this, mapper, context);
    if (!this._useKeys) {
      mappedSequence.valueSeq = function () {
        return this$0._iter.toSeq().map(mapper, context);
      };
    }
    return mappedSequence;
  };

  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var ii;
    return this._iter.__iterate(this._useKeys ? function (v, k) {
      return fn(v, k, this$0);
    } : (ii = reverse ? resolveSize(this) : 0, function (v) {
      return fn(v, reverse ? --ii : ii++, this$0);
    }), reverse);
  };

  ToKeyedSequence.prototype.__iterator = function (type, reverse) {
    if (this._useKeys) {
      return this._iter.__iterator(type, reverse);
    }
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var ii = reverse ? resolveSize(this) : 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);
    });
  };

  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(ToIndexedSequence, IndexedSeq);
  function ToIndexedSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToIndexedSequence.prototype.includes = function (value) {
    return this._iter.includes(value);
  };

  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    return this._iter.__iterate(function (v) {
      return fn(v, iterations++, this$0);
    }, reverse);
  };

  ToIndexedSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value, step);
    });
  };

  createClass(ToSetSequence, SetSeq);
  function ToSetSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToSetSequence.prototype.has = function (key) {
    return this._iter.includes(key);
  };

  ToSetSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (v) {
      return fn(v, v, this$0);
    }, reverse);
  };

  ToSetSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, step.value, step.value, step);
    });
  };

  createClass(FromEntriesSequence, KeyedSeq);
  function FromEntriesSequence(entries) {
    this._iter = entries;
    this.size = entries.size;
  }

  FromEntriesSequence.prototype.entrySeq = function () {
    return this._iter.toSeq();
  };

  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (entry) {
      if (entry) {
        validateEntry(entry);
        var indexedIterable = isIterable(entry);
        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);
      }
    }, reverse);
  };

  FromEntriesSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      while (true) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;

        if (entry) {
          validateEntry(entry);
          var indexedIterable = isIterable(entry);
          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);
        }
      }
    });
  };

  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

  function flipFactory(iterable) {
    var flipSequence = makeSequence(iterable);
    flipSequence._iter = iterable;
    flipSequence.size = iterable.size;
    flipSequence.flip = function () {
      return iterable;
    };
    flipSequence.reverse = function () {
      var reversedSequence = iterable.reverse.apply(this);
      reversedSequence.flip = function () {
        return iterable.reverse();
      };
      return reversedSequence;
    };
    flipSequence.has = function (key) {
      return iterable.includes(key);
    };
    flipSequence.includes = function (key) {
      return iterable.has(key);
    };
    flipSequence.cacheResult = cacheResultThrough;
    flipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(k, v, this$0) !== false;
      }, reverse);
    };
    flipSequence.__iteratorUncached = function (type, reverse) {
      if (type === ITERATE_ENTRIES) {
        var iterator = iterable.__iterator(type, reverse);
        return new Iterator(function () {
          var step = iterator.next();
          if (!step.done) {
            var k = step.value[0];
            step.value[0] = step.value[1];
            step.value[1] = k;
          }
          return step;
        });
      }
      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);
    };
    return flipSequence;
  }

  function mapFactory(iterable, mapper, context) {
    var mappedSequence = makeSequence(iterable);
    mappedSequence.size = iterable.size;
    mappedSequence.has = function (key) {
      return iterable.has(key);
    };
    mappedSequence.get = function (key, notSetValue) {
      var v = iterable.get(key, NOT_SET);
      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);
    };
    mappedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k, c) {
        return fn(mapper.call(context, v, k, c), k, this$0) !== false;
      }, reverse);
    };
    mappedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);
      });
    };
    return mappedSequence;
  }

  function reverseFactory(iterable, useKeys) {
    var reversedSequence = makeSequence(iterable);
    reversedSequence._iter = iterable;
    reversedSequence.size = iterable.size;
    reversedSequence.reverse = function () {
      return iterable;
    };
    if (iterable.flip) {
      reversedSequence.flip = function () {
        var flipSequence = flipFactory(iterable);
        flipSequence.reverse = function () {
          return iterable.flip();
        };
        return flipSequence;
      };
    }
    reversedSequence.get = function (key, notSetValue) {
      return iterable.get(useKeys ? key : -1 - key, notSetValue);
    };
    reversedSequence.has = function (key) {
      return iterable.has(useKeys ? key : -1 - key);
    };
    reversedSequence.includes = function (value) {
      return iterable.includes(value);
    };
    reversedSequence.cacheResult = cacheResultThrough;
    reversedSequence.__iterate = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(v, k, this$0);
      }, !reverse);
    };
    reversedSequence.__iterator = function (type, reverse) {
      return iterable.__iterator(type, !reverse);
    };
    return reversedSequence;
  }

  function filterFactory(iterable, predicate, context, useKeys) {
    var filterSequence = makeSequence(iterable);
    if (useKeys) {
      filterSequence.has = function (key) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
      };
      filterSequence.get = function (key, notSetValue) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;
      };
    }
    filterSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      }, reverse);
      return iterations;
    };
    filterSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterations = 0;
      return new Iterator(function () {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          var value = entry[1];
          if (predicate.call(context, value, key, iterable)) {
            return iteratorValue(type, useKeys ? key : iterations++, value, step);
          }
        }
      });
    };
    return filterSequence;
  }

  function countByFactory(iterable, grouper, context) {
    var groups = Map().asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {
        return a + 1;
      });
    });
    return groups.asImmutable();
  }

  function groupByFactory(iterable, grouper, context) {
    var isKeyedIter = isKeyed(iterable);
    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), function (a) {
        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;
      });
    });
    var coerce = iterableClass(iterable);
    return groups.map(function (arr) {
      return reify(iterable, coerce(arr));
    });
  }

  function sliceFactory(iterable, begin, end, useKeys) {
    var originalSize = iterable.size;

    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      if (end === Infinity) {
        end = originalSize;
      } else {
        end = end | 0;
      }
    }

    if (wholeSlice(begin, end, originalSize)) {
      return iterable;
    }

    var resolvedBegin = resolveBegin(begin, originalSize);
    var resolvedEnd = resolveEnd(end, originalSize);

    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
    }

    var resolvedSize = resolvedEnd - resolvedBegin;
    var sliceSize;
    if (resolvedSize === resolvedSize) {
      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
    }

    var sliceSeq = makeSequence(iterable);

    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
      sliceSeq.get = function (index, notSetValue) {
        index = wrapIndex(this, index);
        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;
      };
    }

    sliceSeq.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (sliceSize === 0) {
        return 0;
      }
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var skipped = 0;
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;
        }
      });
      return iterations;
    };

    sliceSeq.__iteratorUncached = function (type, reverse) {
      if (sliceSize !== 0 && reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }

      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
      var skipped = 0;
      var iterations = 0;
      return new Iterator(function () {
        while (skipped++ < resolvedBegin) {
          iterator.next();
        }
        if (++iterations > sliceSize) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (useKeys || type === ITERATE_VALUES) {
          return step;
        } else if (type === ITERATE_KEYS) {
          return iteratorValue(type, iterations - 1, undefined, step);
        } else {
          return iteratorValue(type, iterations - 1, step.value[1], step);
        }
      });
    };

    return sliceSeq;
  }

  function takeWhileFactory(iterable, predicate, context) {
    var takeSequence = makeSequence(iterable);
    takeSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);
      });
      return iterations;
    };
    takeSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterating = true;
      return new Iterator(function () {
        if (!iterating) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var k = entry[0];
        var v = entry[1];
        if (!predicate.call(context, v, k, this$0)) {
          iterating = false;
          return iteratorDone();
        }
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return takeSequence;
  }

  function skipWhileFactory(iterable, predicate, context, useKeys) {
    var skipSequence = makeSequence(iterable);
    skipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      });
      return iterations;
    };
    skipSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var skipping = true;
      var iterations = 0;
      return new Iterator(function () {
        var step, k, v;
        do {
          step = iterator.next();
          if (step.done) {
            if (useKeys || type === ITERATE_VALUES) {
              return step;
            } else if (type === ITERATE_KEYS) {
              return iteratorValue(type, iterations++, undefined, step);
            } else {
              return iteratorValue(type, iterations++, step.value[1], step);
            }
          }
          var entry = step.value;
          k = entry[0];
          v = entry[1];
          skipping && (skipping = predicate.call(context, v, k, this$0));
        } while (skipping);
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return skipSequence;
  }

  function concatFactory(iterable, values) {
    var isKeyedIterable = isKeyed(iterable);
    var iters = [iterable].concat(values).map(function (v) {
      if (!isIterable(v)) {
        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
      } else if (isKeyedIterable) {
        v = KeyedIterable(v);
      }
      return v;
    }).filter(function (v) {
      return v.size !== 0;
    });

    if (iters.length === 0) {
      return iterable;
    }

    if (iters.length === 1) {
      var singleton = iters[0];
      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {
        return singleton;
      }
    }

    var concatSeq = new ArraySeq(iters);
    if (isKeyedIterable) {
      concatSeq = concatSeq.toKeyedSeq();
    } else if (!isIndexed(iterable)) {
      concatSeq = concatSeq.toSetSeq();
    }
    concatSeq = concatSeq.flatten(true);
    concatSeq.size = iters.reduce(function (sum, seq) {
      if (sum !== undefined) {
        var size = seq.size;
        if (size !== undefined) {
          return sum + size;
        }
      }
    }, 0);
    return concatSeq;
  }

  function flattenFactory(iterable, depth, useKeys) {
    var flatSequence = makeSequence(iterable);
    flatSequence.__iterateUncached = function (fn, reverse) {
      var iterations = 0;
      var stopped = false;
      function flatDeep(iter, currentDepth) {
        var this$0 = this;
        iter.__iterate(function (v, k) {
          if ((!depth || currentDepth < depth) && isIterable(v)) {
            flatDeep(v, currentDepth + 1);
          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
            stopped = true;
          }
          return !stopped;
        }, reverse);
      }
      flatDeep(iterable, 0);
      return iterations;
    };
    flatSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(type, reverse);
      var stack = [];
      var iterations = 0;
      return new Iterator(function () {
        while (iterator) {
          var step = iterator.next();
          if (step.done !== false) {
            iterator = stack.pop();
            continue;
          }
          var v = step.value;
          if (type === ITERATE_ENTRIES) {
            v = v[1];
          }
          if ((!depth || stack.length < depth) && isIterable(v)) {
            stack.push(iterator);
            iterator = v.__iterator(type, reverse);
          } else {
            return useKeys ? step : iteratorValue(type, iterations++, v, step);
          }
        }
        return iteratorDone();
      });
    };
    return flatSequence;
  }

  function flatMapFactory(iterable, mapper, context) {
    var coerce = iterableClass(iterable);
    return iterable.toSeq().map(function (v, k) {
      return coerce(mapper.call(context, v, k, iterable));
    }).flatten(true);
  }

  function interposeFactory(iterable, separator) {
    var interposedSequence = makeSequence(iterable);
    interposedSequence.size = iterable.size && iterable.size * 2 - 1;
    interposedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;
      }, reverse);
      return iterations;
    };
    interposedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      var step;
      return new Iterator(function () {
        if (!step || iterations % 2) {
          step = iterator.next();
          if (step.done) {
            return step;
          }
        }
        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);
      });
    };
    return interposedSequence;
  }

  function sortFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    var isKeyedIterable = isKeyed(iterable);
    var index = 0;
    var entries = iterable.toSeq().map(function (v, k) {
      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];
    }).toArray();
    entries.sort(function (a, b) {
      return comparator(a[3], b[3]) || a[2] - b[2];
    }).forEach(isKeyedIterable ? function (v, i) {
      entries[i].length = 2;
    } : function (v, i) {
      entries[i] = v[1];
    });
    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);
  }

  function maxFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    if (mapper) {
      var entry = iterable.toSeq().map(function (v, k) {
        return [v, mapper(v, k, iterable)];
      }).reduce(function (a, b) {
        return maxCompare(comparator, a[1], b[1]) ? b : a;
      });
      return entry && entry[0];
    } else {
      return iterable.reduce(function (a, b) {
        return maxCompare(comparator, a, b) ? b : a;
      });
    }
  }

  function maxCompare(comparator, a, b) {
    var comp = comparator(b, a);

    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;
  }

  function zipWithFactory(keyIter, zipper, iters) {
    var zipSequence = makeSequence(keyIter);
    zipSequence.size = new ArraySeq(iters).map(function (i) {
      return i.size;
    }).min();

    zipSequence.__iterate = function (fn, reverse) {
      var iterator = this.__iterator(ITERATE_VALUES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };
    zipSequence.__iteratorUncached = function (type, reverse) {
      var iterators = iters.map(function (i) {
        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);
      });
      var iterations = 0;
      var isDone = false;
      return new Iterator(function () {
        var steps;
        if (!isDone) {
          steps = iterators.map(function (i) {
            return i.next();
          });
          isDone = steps.some(function (s) {
            return s.done;
          });
        }
        if (isDone) {
          return iteratorDone();
        }
        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {
          return s.value;
        })));
      });
    };
    return zipSequence;
  }

  function reify(iter, seq) {
    return isSeq(iter) ? seq : iter.constructor(seq);
  }

  function validateEntry(entry) {
    if (entry !== Object(entry)) {
      throw new TypeError('Expected [K, V] tuple: ' + entry);
    }
  }

  function resolveSize(iter) {
    assertNotInfinite(iter.size);
    return ensureSize(iter);
  }

  function iterableClass(iterable) {
    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;
  }

  function makeSequence(iterable) {
    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);
  }

  function cacheResultThrough() {
    if (this._iter.cacheResult) {
      this._iter.cacheResult();
      this.size = this._iter.size;
      return this;
    } else {
      return Seq.prototype.cacheResult.call(this);
    }
  }

  function defaultComparator(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }

  function forceIterator(keyPath) {
    var iter = getIterator(keyPath);
    if (!iter) {
      if (!isArrayLike(keyPath)) {
        throw new TypeError('Expected iterable or array-like: ' + keyPath);
      }
      iter = getIterator(Iterable(keyPath));
    }
    return iter;
  }

  createClass(Record, KeyedCollection);

  function Record(defaultValues, name) {
    var hasInitialized;

    var RecordType = function Record(values) {
      if (values instanceof RecordType) {
        return values;
      }
      if (!(this instanceof RecordType)) {
        return new RecordType(values);
      }
      if (!hasInitialized) {
        hasInitialized = true;
        var keys = Object.keys(defaultValues);
        setProps(RecordTypePrototype, keys);
        RecordTypePrototype.size = keys.length;
        RecordTypePrototype._name = name;
        RecordTypePrototype._keys = keys;
        RecordTypePrototype._defaultValues = defaultValues;
      }
      this._map = Map(values);
    };

    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
    RecordTypePrototype.constructor = RecordType;

    return RecordType;
  }

  Record.prototype.toString = function () {
    return this.__toString(recordName(this) + ' {', '}');
  };

  Record.prototype.has = function (k) {
    return this._defaultValues.hasOwnProperty(k);
  };

  Record.prototype.get = function (k, notSetValue) {
    if (!this.has(k)) {
      return notSetValue;
    }
    var defaultVal = this._defaultValues[k];
    return this._map ? this._map.get(k, defaultVal) : defaultVal;
  };

  Record.prototype.clear = function () {
    if (this.__ownerID) {
      this._map && this._map.clear();
      return this;
    }
    var RecordType = this.constructor;
    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
  };

  Record.prototype.set = function (k, v) {
    if (!this.has(k)) {
      throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
    }
    if (this._map && !this._map.has(k)) {
      var defaultVal = this._defaultValues[k];
      if (v === defaultVal) {
        return this;
      }
    }
    var newMap = this._map && this._map.set(k, v);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.remove = function (k) {
    if (!this.has(k)) {
      return this;
    }
    var newMap = this._map && this._map.remove(k);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Record.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterator(type, reverse);
  };

  Record.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterate(fn, reverse);
  };

  Record.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map && this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return makeRecord(this, newMap, ownerID);
  };

  var RecordPrototype = Record.prototype;
  RecordPrototype[DELETE] = RecordPrototype.remove;
  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;
  RecordPrototype.merge = MapPrototype.merge;
  RecordPrototype.mergeWith = MapPrototype.mergeWith;
  RecordPrototype.mergeIn = MapPrototype.mergeIn;
  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  RecordPrototype.setIn = MapPrototype.setIn;
  RecordPrototype.update = MapPrototype.update;
  RecordPrototype.updateIn = MapPrototype.updateIn;
  RecordPrototype.withMutations = MapPrototype.withMutations;
  RecordPrototype.asMutable = MapPrototype.asMutable;
  RecordPrototype.asImmutable = MapPrototype.asImmutable;

  function makeRecord(likeRecord, map, ownerID) {
    var record = Object.create(Object.getPrototypeOf(likeRecord));
    record._map = map;
    record.__ownerID = ownerID;
    return record;
  }

  function recordName(record) {
    return record._name || record.constructor.name || 'Record';
  }

  function setProps(prototype, names) {
    try {
      names.forEach(setProp.bind(undefined, prototype));
    } catch (error) {}
  }

  function setProp(prototype, name) {
    Object.defineProperty(prototype, name, {
      get: function get() {
        return this.get(name);
      },
      set: function set(value) {
        invariant(this.__ownerID, 'Cannot set on an immutable record.');
        this.set(name, value);
      }
    });
  }

  createClass(Set, SetCollection);

  function Set(value) {
    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  Set.of = function () {
    return this(arguments);
  };

  Set.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  Set.prototype.toString = function () {
    return this.__toString('Set {', '}');
  };

  Set.prototype.has = function (value) {
    return this._map.has(value);
  };

  Set.prototype.add = function (value) {
    return updateSet(this, this._map.set(value, true));
  };

  Set.prototype.remove = function (value) {
    return updateSet(this, this._map.remove(value));
  };

  Set.prototype.clear = function () {
    return updateSet(this, this._map.clear());
  };

  Set.prototype.union = function () {
    var iters = SLICE$0.call(arguments, 0);
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return this;
    }
    if (this.size === 0 && !this.__ownerID && iters.length === 1) {
      return this.constructor(iters[0]);
    }
    return this.withMutations(function (set) {
      for (var ii = 0; ii < iters.length; ii++) {
        SetIterable(iters[ii]).forEach(function (value) {
          return set.add(value);
        });
      }
    });
  };

  Set.prototype.intersect = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (!iters.every(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.subtract = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (iters.some(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.merge = function () {
    return this.union.apply(this, arguments);
  };

  Set.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return this.union.apply(this, iters);
  };

  Set.prototype.sort = function (comparator) {
    return OrderedSet(sortFactory(this, comparator));
  };

  Set.prototype.sortBy = function (mapper, comparator) {
    return OrderedSet(sortFactory(this, comparator, mapper));
  };

  Set.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Set.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._map.__iterate(function (_, k) {
      return fn(k, k, this$0);
    }, reverse);
  };

  Set.prototype.__iterator = function (type, reverse) {
    return this._map.map(function (_, k) {
      return k;
    }).__iterator(type, reverse);
  };

  Set.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return this.__make(newMap, ownerID);
  };

  function isSet(maybeSet) {
    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
  }

  Set.isSet = isSet;

  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

  var SetPrototype = Set.prototype;
  SetPrototype[IS_SET_SENTINEL] = true;
  SetPrototype[DELETE] = SetPrototype.remove;
  SetPrototype.mergeDeep = SetPrototype.merge;
  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
  SetPrototype.withMutations = MapPrototype.withMutations;
  SetPrototype.asMutable = MapPrototype.asMutable;
  SetPrototype.asImmutable = MapPrototype.asImmutable;

  SetPrototype.__empty = emptySet;
  SetPrototype.__make = makeSet;

  function updateSet(set, newMap) {
    if (set.__ownerID) {
      set.size = newMap.size;
      set._map = newMap;
      return set;
    }
    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);
  }

  function makeSet(map, ownerID) {
    var set = Object.create(SetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_SET;
  function emptySet() {
    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
  }

  createClass(OrderedSet, Set);

  function OrderedSet(value) {
    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  OrderedSet.of = function () {
    return this(arguments);
  };

  OrderedSet.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  OrderedSet.prototype.toString = function () {
    return this.__toString('OrderedSet {', '}');
  };

  function isOrderedSet(maybeOrderedSet) {
    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
  }

  OrderedSet.isOrderedSet = isOrderedSet;

  var OrderedSetPrototype = OrderedSet.prototype;
  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

  OrderedSetPrototype.__empty = emptyOrderedSet;
  OrderedSetPrototype.__make = makeOrderedSet;

  function makeOrderedSet(map, ownerID) {
    var set = Object.create(OrderedSetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_ORDERED_SET;
  function emptyOrderedSet() {
    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
  }

  createClass(Stack, IndexedCollection);

  function Stack(value) {
    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);
  }

  Stack.of = function () {
    return this(arguments);
  };

  Stack.prototype.toString = function () {
    return this.__toString('Stack [', ']');
  };

  Stack.prototype.get = function (index, notSetValue) {
    var head = this._head;
    index = wrapIndex(this, index);
    while (head && index--) {
      head = head.next;
    }
    return head ? head.value : notSetValue;
  };

  Stack.prototype.peek = function () {
    return this._head && this._head.value;
  };

  Stack.prototype.push = function () {
    if (arguments.length === 0) {
      return this;
    }
    var newSize = this.size + arguments.length;
    var head = this._head;
    for (var ii = arguments.length - 1; ii >= 0; ii--) {
      head = {
        value: arguments[ii],
        next: head
      };
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pushAll = function (iter) {
    iter = IndexedIterable(iter);
    if (iter.size === 0) {
      return this;
    }
    assertNotInfinite(iter.size);
    var newSize = this.size;
    var head = this._head;
    iter.reverse().forEach(function (value) {
      newSize++;
      head = {
        value: value,
        next: head
      };
    });
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pop = function () {
    return this.slice(1);
  };

  Stack.prototype.unshift = function () {
    return this.push.apply(this, arguments);
  };

  Stack.prototype.unshiftAll = function (iter) {
    return this.pushAll(iter);
  };

  Stack.prototype.shift = function () {
    return this.pop.apply(this, arguments);
  };

  Stack.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._head = undefined;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyStack();
  };

  Stack.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    var resolvedBegin = resolveBegin(begin, this.size);
    var resolvedEnd = resolveEnd(end, this.size);
    if (resolvedEnd !== this.size) {
      return IndexedCollection.prototype.slice.call(this, begin, end);
    }
    var newSize = this.size - resolvedBegin;
    var head = this._head;
    while (resolvedBegin--) {
      head = head.next;
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeStack(this.size, this._head, ownerID, this.__hash);
  };

  Stack.prototype.__iterate = function (fn, reverse) {
    if (reverse) {
      return this.reverse().__iterate(fn);
    }
    var iterations = 0;
    var node = this._head;
    while (node) {
      if (fn(node.value, iterations++, this) === false) {
        break;
      }
      node = node.next;
    }
    return iterations;
  };

  Stack.prototype.__iterator = function (type, reverse) {
    if (reverse) {
      return this.reverse().__iterator(type);
    }
    var iterations = 0;
    var node = this._head;
    return new Iterator(function () {
      if (node) {
        var value = node.value;
        node = node.next;
        return iteratorValue(type, iterations++, value);
      }
      return iteratorDone();
    });
  };

  function isStack(maybeStack) {
    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
  }

  Stack.isStack = isStack;

  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

  var StackPrototype = Stack.prototype;
  StackPrototype[IS_STACK_SENTINEL] = true;
  StackPrototype.withMutations = MapPrototype.withMutations;
  StackPrototype.asMutable = MapPrototype.asMutable;
  StackPrototype.asImmutable = MapPrototype.asImmutable;
  StackPrototype.wasAltered = MapPrototype.wasAltered;

  function makeStack(size, head, ownerID, hash) {
    var map = Object.create(StackPrototype);
    map.size = size;
    map._head = head;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_STACK;
  function emptyStack() {
    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
  }

  function mixin(ctor, methods) {
    var keyCopier = function keyCopier(key) {
      ctor.prototype[key] = methods[key];
    };
    Object.keys(methods).forEach(keyCopier);
    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);
    return ctor;
  }

  Iterable.Iterator = Iterator;

  mixin(Iterable, {

    toArray: function toArray() {
      assertNotInfinite(this.size);
      var array = new Array(this.size || 0);
      this.valueSeq().__iterate(function (v, i) {
        array[i] = v;
      });
      return array;
    },

    toIndexedSeq: function toIndexedSeq() {
      return new ToIndexedSequence(this);
    },

    toJS: function toJS() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJS === 'function' ? value.toJS() : value;
      }).__toJS();
    },

    toJSON: function toJSON() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;
      }).__toJS();
    },

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, true);
    },

    toMap: function toMap() {
      return Map(this.toKeyedSeq());
    },

    toObject: function toObject() {
      assertNotInfinite(this.size);
      var object = {};
      this.__iterate(function (v, k) {
        object[k] = v;
      });
      return object;
    },

    toOrderedMap: function toOrderedMap() {
      return OrderedMap(this.toKeyedSeq());
    },

    toOrderedSet: function toOrderedSet() {
      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
    },

    toSet: function toSet() {
      return Set(isKeyed(this) ? this.valueSeq() : this);
    },

    toSetSeq: function toSetSeq() {
      return new ToSetSequence(this);
    },

    toSeq: function toSeq() {
      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();
    },

    toStack: function toStack() {
      return Stack(isKeyed(this) ? this.valueSeq() : this);
    },

    toList: function toList() {
      return List(isKeyed(this) ? this.valueSeq() : this);
    },

    toString: function toString() {
      return '[Iterable]';
    },

    __toString: function __toString(head, tail) {
      if (this.size === 0) {
        return head + tail;
      }
      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
    },

    concat: function concat() {
      var values = SLICE$0.call(arguments, 0);
      return reify(this, concatFactory(this, values));
    },

    includes: function includes(searchValue) {
      return this.some(function (value) {
        return is(value, searchValue);
      });
    },

    entries: function entries() {
      return this.__iterator(ITERATE_ENTRIES);
    },

    every: function every(predicate, context) {
      assertNotInfinite(this.size);
      var returnValue = true;
      this.__iterate(function (v, k, c) {
        if (!predicate.call(context, v, k, c)) {
          returnValue = false;
          return false;
        }
      });
      return returnValue;
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, true));
    },

    find: function find(predicate, context, notSetValue) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[1] : notSetValue;
    },

    forEach: function forEach(sideEffect, context) {
      assertNotInfinite(this.size);
      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
    },

    join: function join(separator) {
      assertNotInfinite(this.size);
      separator = separator !== undefined ? '' + separator : ',';
      var joined = '';
      var isFirst = true;
      this.__iterate(function (v) {
        isFirst ? isFirst = false : joined += separator;
        joined += v !== null && v !== undefined ? v.toString() : '';
      });
      return joined;
    },

    keys: function keys() {
      return this.__iterator(ITERATE_KEYS);
    },

    map: function map(mapper, context) {
      return reify(this, mapFactory(this, mapper, context));
    },

    reduce: function reduce(reducer, initialReduction, context) {
      assertNotInfinite(this.size);
      var reduction;
      var useFirst;
      if (arguments.length < 2) {
        useFirst = true;
      } else {
        reduction = initialReduction;
      }
      this.__iterate(function (v, k, c) {
        if (useFirst) {
          useFirst = false;
          reduction = v;
        } else {
          reduction = reducer.call(context, reduction, v, k, c);
        }
      });
      return reduction;
    },

    reduceRight: function reduceRight(reducer, initialReduction, context) {
      var reversed = this.toKeyedSeq().reverse();
      return reversed.reduce.apply(reversed, arguments);
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, true));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, true));
    },

    some: function some(predicate, context) {
      return !this.every(not(predicate), context);
    },

    sort: function sort(comparator) {
      return reify(this, sortFactory(this, comparator));
    },

    values: function values() {
      return this.__iterator(ITERATE_VALUES);
    },

    butLast: function butLast() {
      return this.slice(0, -1);
    },

    isEmpty: function isEmpty() {
      return this.size !== undefined ? this.size === 0 : !this.some(function () {
        return true;
      });
    },

    count: function count(predicate, context) {
      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);
    },

    countBy: function countBy(grouper, context) {
      return countByFactory(this, grouper, context);
    },

    equals: function equals(other) {
      return deepEqual(this, other);
    },

    entrySeq: function entrySeq() {
      var iterable = this;
      if (iterable._cache) {
        return new ArraySeq(iterable._cache);
      }
      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
      entriesSequence.fromEntrySeq = function () {
        return iterable.toSeq();
      };
      return entriesSequence;
    },

    filterNot: function filterNot(predicate, context) {
      return this.filter(not(predicate), context);
    },

    findEntry: function findEntry(predicate, context, notSetValue) {
      var found = notSetValue;
      this.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          found = [k, v];
          return false;
        }
      });
      return found;
    },

    findKey: function findKey(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry && entry[0];
    },

    findLast: function findLast(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
    },

    findLastEntry: function findLastEntry(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
    },

    findLastKey: function findLastKey(predicate, context) {
      return this.toKeyedSeq().reverse().findKey(predicate, context);
    },

    first: function first() {
      return this.find(returnTrue);
    },

    flatMap: function flatMap(mapper, context) {
      return reify(this, flatMapFactory(this, mapper, context));
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, true));
    },

    fromEntrySeq: function fromEntrySeq() {
      return new FromEntriesSequence(this);
    },

    get: function get(searchKey, notSetValue) {
      return this.find(function (_, key) {
        return is(key, searchKey);
      }, undefined, notSetValue);
    },

    getIn: function getIn(searchKeyPath, notSetValue) {
      var nested = this;

      var iter = forceIterator(searchKeyPath);
      var step;
      while (!(step = iter.next()).done) {
        var key = step.value;
        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
        if (nested === NOT_SET) {
          return notSetValue;
        }
      }
      return nested;
    },

    groupBy: function groupBy(grouper, context) {
      return groupByFactory(this, grouper, context);
    },

    has: function has(searchKey) {
      return this.get(searchKey, NOT_SET) !== NOT_SET;
    },

    hasIn: function hasIn(searchKeyPath) {
      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
    },

    isSubset: function isSubset(iter) {
      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
      return this.every(function (value) {
        return iter.includes(value);
      });
    },

    isSuperset: function isSuperset(iter) {
      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
      return iter.isSubset(this);
    },

    keyOf: function keyOf(searchValue) {
      return this.findKey(function (value) {
        return is(value, searchValue);
      });
    },

    keySeq: function keySeq() {
      return this.toSeq().map(keyMapper).toIndexedSeq();
    },

    last: function last() {
      return this.toSeq().reverse().first();
    },

    lastKeyOf: function lastKeyOf(searchValue) {
      return this.toKeyedSeq().reverse().keyOf(searchValue);
    },

    max: function max(comparator) {
      return maxFactory(this, comparator);
    },

    maxBy: function maxBy(mapper, comparator) {
      return maxFactory(this, comparator, mapper);
    },

    min: function min(comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
    },

    minBy: function minBy(mapper, comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
    },

    rest: function rest() {
      return this.slice(1);
    },

    skip: function skip(amount) {
      return this.slice(Math.max(0, amount));
    },

    skipLast: function skipLast(amount) {
      return reify(this, this.toSeq().reverse().skip(amount).reverse());
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, true));
    },

    skipUntil: function skipUntil(predicate, context) {
      return this.skipWhile(not(predicate), context);
    },

    sortBy: function sortBy(mapper, comparator) {
      return reify(this, sortFactory(this, comparator, mapper));
    },

    take: function take(amount) {
      return this.slice(0, Math.max(0, amount));
    },

    takeLast: function takeLast(amount) {
      return reify(this, this.toSeq().reverse().take(amount).reverse());
    },

    takeWhile: function takeWhile(predicate, context) {
      return reify(this, takeWhileFactory(this, predicate, context));
    },

    takeUntil: function takeUntil(predicate, context) {
      return this.takeWhile(not(predicate), context);
    },

    valueSeq: function valueSeq() {
      return this.toIndexedSeq();
    },

    hashCode: function hashCode() {
      return this.__hash || (this.__hash = hashIterable(this));
    }

  });

  var IterablePrototype = Iterable.prototype;
  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
  IterablePrototype.__toJS = IterablePrototype.toArray;
  IterablePrototype.__toStringMapper = quoteString;
  IterablePrototype.inspect = IterablePrototype.toSource = function () {
    return this.toString();
  };
  IterablePrototype.chain = IterablePrototype.flatMap;
  IterablePrototype.contains = IterablePrototype.includes;

  mixin(KeyedIterable, {

    flip: function flip() {
      return reify(this, flipFactory(this));
    },

    mapEntries: function mapEntries(mapper, context) {
      var this$0 = this;
      var iterations = 0;
      return reify(this, this.toSeq().map(function (v, k) {
        return mapper.call(context, [k, v], iterations++, this$0);
      }).fromEntrySeq());
    },

    mapKeys: function mapKeys(mapper, context) {
      var this$0 = this;
      return reify(this, this.toSeq().flip().map(function (k, v) {
        return mapper.call(context, k, v, this$0);
      }).flip());
    }

  });

  var KeyedIterablePrototype = KeyedIterable.prototype;
  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
  KeyedIterablePrototype.__toStringMapper = function (v, k) {
    return JSON.stringify(k) + ': ' + quoteString(v);
  };

  mixin(IndexedIterable, {

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, false);
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, false));
    },

    findIndex: function findIndex(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    indexOf: function indexOf(searchValue) {
      var key = this.keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    lastIndexOf: function lastIndexOf(searchValue) {
      var key = this.lastKeyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, false));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, false));
    },

    splice: function splice(index, removeNum) {
      var numArgs = arguments.length;
      removeNum = Math.max(removeNum | 0, 0);
      if (numArgs === 0 || numArgs === 2 && !removeNum) {
        return this;
      }

      index = resolveBegin(index, index < 0 ? this.count() : this.size);
      var spliced = this.slice(0, index);
      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));
    },

    findLastIndex: function findLastIndex(predicate, context) {
      var entry = this.findLastEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    first: function first() {
      return this.get(0);
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, false));
    },

    get: function get(index, notSetValue) {
      index = wrapIndex(this, index);
      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {
        return key === index;
      }, undefined, notSetValue);
    },

    has: function has(index) {
      index = wrapIndex(this, index);
      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);
    },

    interpose: function interpose(separator) {
      return reify(this, interposeFactory(this, separator));
    },

    interleave: function interleave() {
      var iterables = [this].concat(arrCopy(arguments));
      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
      var interleaved = zipped.flatten(true);
      if (zipped.size) {
        interleaved.size = zipped.size * iterables.length;
      }
      return reify(this, interleaved);
    },

    keySeq: function keySeq() {
      return Range(0, this.size);
    },

    last: function last() {
      return this.get(-1);
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, false));
    },

    zip: function zip() {
      var iterables = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, iterables));
    },

    zipWith: function zipWith(zipper) {
      var iterables = arrCopy(arguments);
      iterables[0] = this;
      return reify(this, zipWithFactory(this, zipper, iterables));
    }

  });

  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;

  mixin(SetIterable, {

    get: function get(value, notSetValue) {
      return this.has(value) ? value : notSetValue;
    },

    includes: function includes(value) {
      return this.has(value);
    },

    keySeq: function keySeq() {
      return this.valueSeq();
    }

  });

  SetIterable.prototype.has = IterablePrototype.includes;
  SetIterable.prototype.contains = SetIterable.prototype.includes;

  mixin(KeyedSeq, KeyedIterable.prototype);
  mixin(IndexedSeq, IndexedIterable.prototype);
  mixin(SetSeq, SetIterable.prototype);

  mixin(KeyedCollection, KeyedIterable.prototype);
  mixin(IndexedCollection, IndexedIterable.prototype);
  mixin(SetCollection, SetIterable.prototype);

  function keyMapper(v, k) {
    return k;
  }

  function entryMapper(v, k) {
    return [k, v];
  }

  function not(predicate) {
    return function () {
      return !predicate.apply(this, arguments);
    };
  }

  function neg(predicate) {
    return function () {
      return -predicate.apply(this, arguments);
    };
  }

  function quoteString(value) {
    return typeof value === 'string' ? JSON.stringify(value) : String(value);
  }

  function defaultZipper() {
    return arrCopy(arguments);
  }

  function defaultNegComparator(a, b) {
    return a < b ? 1 : a > b ? -1 : 0;
  }

  function hashIterable(iterable) {
    if (iterable.size === Infinity) {
      return 0;
    }
    var ordered = isOrdered(iterable);
    var keyed = isKeyed(iterable);
    var h = ordered ? 1 : 0;
    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {
      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;
    } : function (v, k) {
      h = h + hashMerge(hash(v), hash(k)) | 0;
    } : ordered ? function (v) {
      h = 31 * h + hash(v) | 0;
    } : function (v) {
      h = h + hash(v) | 0;
    });
    return murmurHashOfSize(size, h);
  }

  function murmurHashOfSize(size, h) {
    h = imul(h, 0xCC9E2D51);
    h = imul(h << 15 | h >>> -15, 0x1B873593);
    h = imul(h << 13 | h >>> -13, 5);
    h = (h + 0xE6546B64 | 0) ^ size;
    h = imul(h ^ h >>> 16, 0x85EBCA6B);
    h = imul(h ^ h >>> 13, 0xC2B2AE35);
    h = smi(h ^ h >>> 16);
    return h;
  }

  function hashMerge(a, b) {
    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;
  }

  var Immutable = {

    Iterable: Iterable,

    Seq: Seq,
    Collection: Collection,
    Map: Map,
    OrderedMap: OrderedMap,
    List: List,
    Stack: Stack,
    Set: Set,
    OrderedSet: OrderedSet,

    Record: Record,
    Range: Range,
    Repeat: Repeat,

    is: is,
    fromJS: fromJS

  };

  return Immutable;
});
}, 763, null, "immutable/dist/immutable.js");
__d(/* react-native-tab-navigator/Badge.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-navigator\\Badge.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Layout = require(765       ); // 765 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var Badge = function (_React$Component) {
  babelHelpers.inherits(Badge, _React$Component);

  function Badge(props, context) {
    babelHelpers.classCallCheck(this, Badge);

    var _this = babelHelpers.possibleConstructorReturn(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).call(this, props, context));

    _this.state = {
      computedSize: null
    };


    _this._handleLayout = _this._handleLayout.bind(_this);
    return _this;
  }

  babelHelpers.createClass(Badge, [{
    key: 'render',
    value: function render() {
      var computedSize = this.state.computedSize;

      var style = {};
      if (!computedSize) {
        style.opacity = 0;
      } else {
        style.width = Math.max(computedSize.height, computedSize.width);
      }

      return _react2.default.createElement(
        _reactNative.Text,
        babelHelpers.extends({}, this.props, {
          numberOfLines: 1,
          onLayout: this._handleLayout,
          style: [styles.container, this.props.style, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        }),
        this.props.children
      );
    }
  }, {
    key: '_handleLayout',
    value: function _handleLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      var computedSize = this.state.computedSize;

      if (computedSize && computedSize.height === height && computedSize.width === width) {
        return;
      }

      this.setState({
        computedSize: { width: width, height: height }
      });

      if (this.props.onLayout) {
        this.props.onLayout(event);
      }
    }
  }]);
  return Badge;
}(_react2.default.Component);

Badge.propTypes = _reactNative.Text.propTypes;
exports.default = Badge;


var styles = _reactNative.StyleSheet.create({
  container: {
    fontSize: 12,
    color: '#fff',
    backgroundColor: 'rgb(0, 122, 255)',
    lineHeight: 15,
    textAlign: 'center',
    borderWidth: 1 + _Layout2.default.pixel,
    borderColor: '#fefefe',
    borderRadius: 17 / 2,
    overflow: 'hidden'
  }
});
}, 764, null, "react-native-tab-navigator/Badge.js");
__d(/* react-native-tab-navigator/Layout.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(46            ); // 46 = react-native

exports.default = {
  pixel: 1 / _reactNative.PixelRatio.get(),
  tabBarHeight: 49
};
}, 765, null, "react-native-tab-navigator/Layout.js");
__d(/* react-native-tab-navigator/StaticContainer.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var StaticContainer = function (_React$Component) {
  babelHelpers.inherits(StaticContainer, _React$Component);

  function StaticContainer() {
    babelHelpers.classCallCheck(this, StaticContainer);
    return babelHelpers.possibleConstructorReturn(this, (StaticContainer.__proto__ || Object.getPrototypeOf(StaticContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticContainer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return !!nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;

      return children ? _react2.default.Children.only(children) : null;
    }
  }]);
  return StaticContainer;
}(_react2.default.Component);

StaticContainer.propTypes = {
  shouldUpdate: _react.PropTypes.bool
};
exports.default = StaticContainer;
}, 766, null, "react-native-tab-navigator/StaticContainer.js");
__d(/* react-native-tab-navigator/Tab.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-navigator\\Tab.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Layout = require(765       ); // 765 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var Tab = function (_React$Component) {
  babelHelpers.inherits(Tab, _React$Component);

  function Tab(props, context) {
    babelHelpers.classCallCheck(this, Tab);

    var _this = babelHelpers.possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).call(this, props, context));

    _this._handlePress = _this._handlePress.bind(_this);
    return _this;
  }

  babelHelpers.createClass(Tab, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          title = _props.title,
          badge = _props.badge;

      var icon = null;
      if (_react2.default.Children.count(this.props.children) > 0) {
        icon = _react2.default.Children.only(this.props.children);
      }

      if (title) {
        title = _react2.default.createElement(
          _reactNative.Text,
          {
            numberOfLines: 1,
            allowFontScaling: !!this.props.allowFontScaling,
            style: [styles.title, this.props.titleStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          },
          title
        );
      }

      if (badge) {
        badge = _react2.default.cloneElement(badge, {
          style: [styles.badge, badge.props.style]
        });
      }

      var tabStyle = [styles.container, title ? null : styles.untitledContainer, this.props.style];
      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        {
          testID: this.props.testID,
          activeOpacity: this.props.hidesTabTouch ? 1.0 : 0.8,
          onPress: this._handlePress,
          style: tabStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 61
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 66
            }
          },
          icon,
          badge
        ),
        title
      );
    }
  }, {
    key: '_handlePress',
    value: function _handlePress(event) {
      if (this.props.onPress) {
        this.props.onPress(event);
      }
    }
  }]);
  return Tab;
}(_react2.default.Component);

Tab.propTypes = {
  testID: _react.PropTypes.string,
  title: _react.PropTypes.string,
  titleStyle: _reactNative.Text.propTypes.style,
  badge: _react.PropTypes.element,
  onPress: _react.PropTypes.func,
  hidesTabTouch: _react.PropTypes.bool,
  allowFontScaling: _react.PropTypes.bool,
  style: _reactNative.View.propTypes.style
};
exports.default = Tab;


var styles = _reactNative.StyleSheet.create({
  badge: {
    position: 'absolute',
    top: -6,
    right: -10
  },
  container: {
    flex: 1,
    flexDirection: 'column',
    justifyContent: 'flex-end',
    alignItems: 'center'
  },
  untitledContainer: {
    paddingBottom: 13
  },
  title: {
    color: '#929292',
    fontSize: 10,
    textAlign: 'center',
    alignSelf: 'stretch',
    marginTop: 4,
    marginBottom: 1 + _Layout2.default.pixel
  }
});
}, 767, null, "react-native-tab-navigator/Tab.js");
__d(/* react-native-tab-navigator/TabBar.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-tab-navigator\\TabBar.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Layout = require(765       ); // 765 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var TabBar = function (_React$Component) {
  babelHelpers.inherits(TabBar, _React$Component);

  function TabBar() {
    babelHelpers.classCallCheck(this, TabBar);
    return babelHelpers.possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).apply(this, arguments));
  }

  babelHelpers.createClass(TabBar, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({}, this.props, { style: [styles.container, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        }),
        this.props.children,
        _react2.default.createElement(_reactNative.View, { style: [styles.shadow, this.props.shadowStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        })
      );
    }
  }]);
  return TabBar;
}(_react2.default.Component);

TabBar.propTypes = babelHelpers.extends({}, _reactNative.Animated.View.propTypes, {
  shadowStyle: _reactNative.View.propTypes.style
});
exports.default = TabBar;


var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: '#f8f8f8',
    flexDirection: 'row',
    justifyContent: 'space-around',
    height: _Layout2.default.tabBarHeight,
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0
  },
  shadow: {
    backgroundColor: 'rgba(0, 0, 0, 0.25)',
    height: _Layout2.default.pixel,
    position: 'absolute',
    left: 0,
    right: 0,
    top: _reactNative.Platform.OS === 'android' ? 0 : -_Layout2.default.pixel
  }
});
}, 768, null, "react-native-tab-navigator/TabBar.js");
__d(/* react-native-tab-navigator/TabNavigatorItem.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var TabNavigatorItem = function (_React$Component) {
  babelHelpers.inherits(TabNavigatorItem, _React$Component);

  function TabNavigatorItem() {
    babelHelpers.classCallCheck(this, TabNavigatorItem);
    return babelHelpers.possibleConstructorReturn(this, (TabNavigatorItem.__proto__ || Object.getPrototypeOf(TabNavigatorItem)).apply(this, arguments));
  }

  babelHelpers.createClass(TabNavigatorItem, [{
    key: 'render',
    value: function render() {
      var child = _react2.default.Children.only(this.props.children);
      return _react2.default.cloneElement(child, {
        style: [child.props.style, this.props.style]
      });
    }
  }]);
  return TabNavigatorItem;
}(_react2.default.Component);

TabNavigatorItem.propTypes = {
  renderIcon: _react.PropTypes.func,
  renderSelectedIcon: _react.PropTypes.func,
  badgeText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  renderBadge: _react.PropTypes.func,
  title: _react.PropTypes.string,
  titleStyle: _reactNative.Text.propTypes.style,
  selectedTitleStyle: _reactNative.Text.propTypes.style,
  tabStyle: _reactNative.View.propTypes.style,
  selected: _react.PropTypes.bool,
  onPress: _react.PropTypes.func,
  allowFontScaling: _react.PropTypes.bool
};
TabNavigatorItem.defaultProps = {};
exports.default = TabNavigatorItem;
}, 769, null, "react-native-tab-navigator/TabNavigatorItem.js");
__d(/* react-native-elements/src/tabs/Tab.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNativeTabNavigator = require(762                         ); // 762 = react-native-tab-navigator

var _reactNativeTabNavigator2 = babelHelpers.interopRequireDefault(_reactNativeTabNavigator);

exports.default = _reactNativeTabNavigator2.default.Item;
}, 770, null, "react-native-elements/src/tabs/Tab.js");
__d(/* react-native-elements/src/grid/Grid.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\grid\\Grid.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Row = require(772    ); // 772 = ./Row

var _Row2 = babelHelpers.interopRequireDefault(_Row);

var Grid = function (_Component) {
  babelHelpers.inherits(Grid, _Component);

  function Grid() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, Grid);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Grid.__proto__ || Object.getPrototypeOf(Grid)).call.apply(_ref, [this].concat(args))), _this), _this.styles = _reactNative.StyleSheet.create({
      container: {
        flex: 1,
        flexDirection: _this.isRow() ? 'column' : 'row'
      }
    }), _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(Grid, [{
    key: 'isRow',
    value: function isRow() {
      var isRow = false;
      _react2.default.Children.forEach(this.props.children, function (child) {
        if (child && child.type === _Row2.default) {
          isRow = true;
        }
      });

      return isRow;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          onPress = _props.onPress,
          activeOpacity = _props.activeOpacity,
          containerStyle = _props.containerStyle;


      if (onPress) {
        return _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { activeOpacity: activeOpacity, onPress: onPress, __source: {
              fileName: _jsxFileName,
              lineNumber: 30
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            babelHelpers.extends({
              style: [this.styles.container, containerStyle && containerStyle]
            }, this.props, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 31
              }
            }),
            this.props.children
          )
        );
      }

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({
          style: [this.styles.container, containerStyle && containerStyle]
        }, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 42
          }
        }),
        this.props.children
      );
    }
  }]);
  return Grid;
}(_react.Component);

Grid.propTypes = {
  containerStyle: _propTypes2.default.any,
  onPress: _propTypes2.default.func,
  activeOpacity: _propTypes2.default.number,
  children: _propTypes2.default.any
};

Grid.defaultProps = {
  activeOpacity: 1
};

exports.default = Grid;
}, 771, null, "react-native-elements/src/grid/Grid.js");
__d(/* react-native-elements/src/grid/Row.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\grid\\Row.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var Row = function Row(props) {
  var containerStyle = props.containerStyle,
      size = props.size,
      onPress = props.onPress,
      activeOpacity = props.activeOpacity;


  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: size ? size : containerStyle && containerStyle.height ? 0 : 1,
      flexDirection: 'row'
    }
  });

  if (onPress) {
    return _react2.default.createElement(
      _reactNative.TouchableOpacity,
      {
        style: [styles.container, containerStyle && containerStyle],
        activeOpacity: activeOpacity,
        onPress: onPress,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 17
        }
      },
      _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        }),
        props.children
      )
    );
  }

  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 30
      }
    }),
    props.children
  );
};

Row.propTypes = {
  size: _propTypes2.default.number,
  containerStyle: _propTypes2.default.any,
  onPress: _propTypes2.default.func,
  activeOpacity: _propTypes2.default.number,
  children: _propTypes2.default.any
};

Row.defaultProps = {
  activeOpacity: 1
};

exports.default = Row;
}, 772, null, "react-native-elements/src/grid/Row.js");
__d(/* react-native-elements/src/grid/Col.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\grid\\Col.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var Col = function Col(props) {
  var containerStyle = props.containerStyle,
      size = props.size,
      onPress = props.onPress,
      activeOpacity = props.activeOpacity;


  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: size ? size : containerStyle && containerStyle.width ? 0 : 1,
      flexDirection: 'column'
    }
  });

  if (onPress) {
    return _react2.default.createElement(
      _reactNative.TouchableOpacity,
      {
        style: [styles.container, containerStyle && containerStyle],
        activeOpacity: activeOpacity,
        onPress: onPress,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 17
        }
      },
      _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        }),
        props.children
      )
    );
  }

  return _react2.default.createElement(
    _reactNative.View,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 30
      }
    }),
    props.children
  );
};

Col.propTypes = {
  size: _propTypes2.default.number,
  containerStyle: _propTypes2.default.any,
  onPress: _propTypes2.default.func,
  activeOpacity: _propTypes2.default.number,
  children: _propTypes2.default.any
};

Col.defaultProps = {
  activeOpacity: 1
};

exports.default = Col;
}, 773, null, "react-native-elements/src/grid/Col.js");
__d(/* react-native-elements/src/tile/Tile.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\tile\\Tile.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _Icon = require(753            ); // 753 = ../icons/Icon

var _Icon2 = babelHelpers.interopRequireDefault(_Icon);

var _FeaturedTile = require(775             ); // 775 = ./FeaturedTile

var _FeaturedTile2 = babelHelpers.interopRequireDefault(_FeaturedTile);

var Tile = function Tile(props) {
  var featured = props.featured,
      imageSrc = props.imageSrc,
      icon = props.icon,
      title = props.title,
      children = props.children,
      caption = props.caption,
      titleStyle = props.titleStyle,
      onPress = props.onPress,
      activeOpacity = props.activeOpacity,
      overlayContainerStyle = props.overlayContainerStyle,
      captionStyle = props.captionStyle,
      iconContainerStyle = props.iconContainerStyle,
      imageContainerStyle = props.imageContainerStyle,
      containerStyle = props.containerStyle,
      contentContainerStyle = props.contentContainerStyle,
      attributes = babelHelpers.objectWithoutProperties(props, ['featured', 'imageSrc', 'icon', 'title', 'children', 'caption', 'titleStyle', 'onPress', 'activeOpacity', 'overlayContainerStyle', 'captionStyle', 'iconContainerStyle', 'imageContainerStyle', 'containerStyle', 'contentContainerStyle']);
  var width = props.width,
      height = props.height;


  if (!width) {
    width = _reactNative.Dimensions.get('window').width;
  }

  if (!height) {
    height = width * 0.8;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: height
    },
    imageContainer: {
      alignItems: 'center',
      justifyContent: 'center',
      resizeMode: 'cover',
      backgroundColor: '#ffffff',
      flex: 2
    },
    text: {
      backgroundColor: 'rgba(0,0,0,0)',
      marginBottom: 5
    },
    contentContainer: {
      paddingTop: 15,
      paddingBottom: 5,
      paddingLeft: 15,
      paddingRight: 15
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center',
      alignSelf: 'center'
    }
  });

  if (featured) {
    var featuredProps = {
      title: title,
      icon: icon,
      caption: caption,
      imageSrc: imageSrc,
      onPress: onPress,
      activeOpacity: activeOpacity,
      containerStyle: containerStyle,
      imageContainerStyle: imageContainerStyle,
      overlayContainerStyle: overlayContainerStyle,
      titleStyle: titleStyle,
      captionStyle: captionStyle,
      width: width,
      height: height
    };
    return _react2.default.createElement(_FeaturedTile2.default, babelHelpers.extends({}, featuredProps, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 90
      }
    }));
  }

  return _react2.default.createElement(
    _reactNative.TouchableOpacity,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 94
      }
    }),
    _react2.default.createElement(
      _reactNative.Image,
      {
        source: imageSrc,
        style: [styles.imageContainer, imageContainerStyle && imageContainerStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 98
        }
      },
      _react2.default.createElement(
        _reactNative.View,
        {
          style: [styles.iconContainer, iconContainerStyle && iconContainerStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 105
          }
        },
        icon && _react2.default.createElement(_Icon2.default, babelHelpers.extends({}, icon, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 111
          }
        }))
      )
    ),
    _react2.default.createElement(
      _reactNative.View,
      {
        style: [styles.contentContainer, contentContainerStyle && contentContainerStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 114
        }
      },
      _react2.default.createElement(
        _Text2.default,
        { h4: true, style: [styles.text, titleStyle && titleStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 120
          }
        },
        title
      ),
      children
    )
  );
};

Tile.propTypes = {
  title: _propTypes2.default.string,
  icon: _propTypes2.default.object,
  caption: _propTypes2.default.string,
  imageSrc: _reactNative.Image.propTypes.source.isRequired,
  onPress: _propTypes2.default.func,
  activeOpacity: _propTypes2.default.number,
  containerStyle: _reactNative.View.propTypes.style,
  imageContainerStyle: _reactNative.View.propTypes.style,
  iconContainerStyle: _reactNative.View.propTypes.style,
  overlayContainerStyle: _reactNative.View.propTypes.style,
  titleStyle: _reactNative.Text.propTypes.style,
  captionStyle: _reactNative.Text.propTypes.style,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number,
  featured: _propTypes2.default.bool,
  children: _propTypes2.default.any,
  contentContainerStyle: _reactNative.View.propTypes.style
};

exports.default = Tile;
}, 774, null, "react-native-elements/src/tile/Tile.js");
__d(/* react-native-elements/src/tile/FeaturedTile.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\tile\\FeaturedTile.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var _Icon = require(753            ); // 753 = ../icons/Icon

var _Icon2 = babelHelpers.interopRequireDefault(_Icon);

var FeaturedTile = function FeaturedTile(props) {
  var title = props.title,
      icon = props.icon,
      caption = props.caption,
      imageSrc = props.imageSrc,
      containerStyle = props.containerStyle,
      imageContainerStyle = props.imageContainerStyle,
      overlayContainerStyle = props.overlayContainerStyle,
      iconContainerStyle = props.iconContainerStyle,
      titleStyle = props.titleStyle,
      captionStyle = props.captionStyle,
      attributes = babelHelpers.objectWithoutProperties(props, ['title', 'icon', 'caption', 'imageSrc', 'containerStyle', 'imageContainerStyle', 'overlayContainerStyle', 'iconContainerStyle', 'titleStyle', 'captionStyle']);
  var width = props.width,
      height = props.height;


  if (!width) {
    width = _reactNative.Dimensions.get('window').width;
  }
  if (!height) {
    height = width * 0.8;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: height
    },
    imageContainer: {
      alignItems: 'center',
      justifyContent: 'center',
      resizeMode: 'cover',
      backgroundColor: '#ffffff',
      width: width,
      height: height
    },
    overlayContainer: {
      flex: 1,
      alignItems: 'center',
      backgroundColor: 'rgba(0,0,0,0.2)',
      alignSelf: 'stretch',
      justifyContent: 'center',
      paddingLeft: 25,
      paddingRight: 25,
      paddingTop: 45,
      paddingBottom: 40,
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    },
    text: {
      color: '#ffffff',
      backgroundColor: 'rgba(0,0,0,0)',
      marginBottom: 15,
      textAlign: 'center'
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center',
      alignSelf: 'center'
    }
  });

  return _react2.default.createElement(
    _reactNative.TouchableOpacity,
    babelHelpers.extends({
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 81
      }
    }),
    _react2.default.createElement(
      _reactNative.Image,
      {
        source: imageSrc,
        style: [styles.imageContainer, imageContainerStyle && imageContainerStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 85
        }
      },
      _react2.default.createElement(
        _reactNative.View,
        {
          style: [styles.overlayContainer, overlayContainerStyle && overlayContainerStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 92
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.iconContainer, iconContainerStyle && iconContainerStyle],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 98
            }
          },
          icon && _react2.default.createElement(_Icon2.default, babelHelpers.extends({}, icon, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 104
            }
          }))
        ),
        _react2.default.createElement(
          _Text2.default,
          { h4: true, style: [styles.text, titleStyle && titleStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 106
            }
          },
          title
        ),
        _react2.default.createElement(
          _Text2.default,
          { style: [styles.text, captionStyle && captionStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 109
            }
          },
          caption
        )
      )
    )
  );
};

FeaturedTile.propTypes = {
  title: _propTypes2.default.string,
  icon: _propTypes2.default.object,
  caption: _propTypes2.default.string,
  imageSrc: _reactNative.Image.propTypes.source.isRequired,
  onPress: _propTypes2.default.func,
  containerStyle: _reactNative.View.propTypes.style,
  iconContainerStyle: _reactNative.View.propTypes.style,
  imageContainerStyle: _reactNative.View.propTypes.style,
  overlayContainerStyle: _reactNative.View.propTypes.style,
  titleStyle: _reactNative.Text.propTypes.style,
  captionStyle: _reactNative.Text.propTypes.style,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number
};

exports.default = FeaturedTile;
}, 775, null, "react-native-elements/src/tile/FeaturedTile.js");
__d(/* react-native-elements/src/slider/Slider.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\slider\\Slider.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var TRACK_SIZE = 4;
var THUMB_SIZE = 20;

var DEFAULT_ANIMATION_CONFIGS = {
  spring: {
    friction: 7,
    tension: 100
  },
  timing: {
    duration: 150,
    easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
    delay: 0
  }
};

function Rect(x, y, width, height) {
  this.x = x;
  this.y = y;
  this.width = width;
  this.height = height;
}

Rect.prototype.containsPoint = function (x, y) {
  return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;
};

var Slider = function (_Component) {
  babelHelpers.inherits(Slider, _Component);

  function Slider(props) {
    babelHelpers.classCallCheck(this, Slider);

    var _this = babelHelpers.possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));

    _this.state = {
      containerSize: { width: 0, height: 0 },
      trackSize: { width: 0, height: 0 },
      thumbSize: { width: 0, height: 0 },
      allMeasured: false,
      value: new _reactNative.Animated.Value(props.value)
    };
    return _this;
  }

  babelHelpers.createClass(Slider, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: this.handleStartShouldSetPanResponder.bind(this),
        onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder.bind(this),
        onPanResponderGrant: this.handlePanResponderGrant.bind(this),
        onPanResponderMove: this.handlePanResponderMove.bind(this),
        onPanResponderRelease: this.handlePanResponderEnd.bind(this),
        onPanResponderTerminationRequest: this.handlePanResponderRequestEnd.bind(this),
        onPanResponderTerminate: this.handlePanResponderEnd.bind(this)
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var newValue = nextProps.value;

      if (this.props.value !== newValue) {
        if (this.props.animateTransitions) {
          this.setCurrentValueAnimated(newValue);
        } else {
          this.setCurrentValue(newValue);
        }
      }
    }
  }, {
    key: 'setCurrentValue',
    value: function setCurrentValue(value) {
      this.state.value.setValue(value);
    }
  }, {
    key: 'setCurrentValueAnimated',
    value: function setCurrentValueAnimated(value) {
      var animationType = this.props.animationType;
      var animationConfig = babelHelpers.extends({}, DEFAULT_ANIMATION_CONFIGS[animationType], this.props.animationConfig, {
        toValue: value
      });

      _reactNative.Animated[animationType](this.state.value, animationConfig).start();
    }
  }, {
    key: 'handleMoveShouldSetPanResponder',
    value: function handleMoveShouldSetPanResponder() {
      return false;
    }
  }, {
    key: 'handlePanResponderGrant',
    value: function handlePanResponderGrant() {
      this._previousLeft = this.getThumbLeft(this.getCurrentValue());
      this.fireChangeEvent('onSlidingStart');
    }
  }, {
    key: 'handlePanResponderMove',
    value: function handlePanResponderMove(e, gestureState) {
      if (this.props.disabled) {
        return;
      }

      this.setCurrentValue(this.getValue(gestureState));
      this.fireChangeEvent('onValueChange');
    }
  }, {
    key: 'handlePanResponderRequestEnd',
    value: function handlePanResponderRequestEnd() {
      return false;
    }
  }, {
    key: 'handlePanResponderEnd',
    value: function handlePanResponderEnd(e, gestureState) {
      if (this.props.disabled) {
        return;
      }

      this.setCurrentValue(this.getValue(gestureState));
      this.fireChangeEvent('onSlidingComplete');
    }
  }, {
    key: 'thumbHitTest',
    value: function thumbHitTest(e) {
      var nativeEvent = e.nativeEvent;
      var thumbTouchRect = this.getThumbTouchRect();
      return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);
    }
  }, {
    key: 'handleStartShouldSetPanResponder',
    value: function handleStartShouldSetPanResponder(e) {
      return this.thumbHitTest(e);
    }
  }, {
    key: 'fireChangeEvent',
    value: function fireChangeEvent(event) {
      if (this.props[event]) {
        this.props[event](this.getCurrentValue());
      }
    }
  }, {
    key: 'getTouchOverflowSize',
    value: function getTouchOverflowSize() {
      var state = this.state;
      var props = this.props;

      var size = {};
      if (state.allMeasured === true) {
        size.width = Math.max(0, props.thumbTouchSize.width - state.thumbSize.width);
        size.height = Math.max(0, props.thumbTouchSize.height - state.containerSize.height);
      }

      return size;
    }
  }, {
    key: 'getTouchOverflowStyle',
    value: function getTouchOverflowStyle() {
      var _getTouchOverflowSize = this.getTouchOverflowSize(),
          width = _getTouchOverflowSize.width,
          height = _getTouchOverflowSize.height;

      var touchOverflowStyle = {};
      if (width !== undefined && height !== undefined) {
        var verticalMargin = -height / 2;
        touchOverflowStyle.marginTop = verticalMargin;
        touchOverflowStyle.marginBottom = verticalMargin;

        var horizontalMargin = -width / 2;
        touchOverflowStyle.marginLeft = horizontalMargin;
        touchOverflowStyle.marginRight = horizontalMargin;
      }

      if (this.props.debugTouchArea === true) {
        touchOverflowStyle.backgroundColor = 'orange';
        touchOverflowStyle.opacity = 0.5;
      }

      return touchOverflowStyle;
    }
  }, {
    key: 'handleMeasure',
    value: function handleMeasure(name, x) {
      var _x$nativeEvent$layout = x.nativeEvent.layout,
          width = _x$nativeEvent$layout.width,
          height = _x$nativeEvent$layout.height;

      var size = { width: width, height: height };

      var storeName = '_' + name;
      var currentSize = this[storeName];
      if (currentSize && width === currentSize.width && height === currentSize.height) {
        return;
      }
      this[storeName] = size;

      if (this._containerSize && this._trackSize && this._thumbSize) {
        this.setState({
          containerSize: this._containerSize,
          trackSize: this._trackSize,
          thumbSize: this._thumbSize,
          allMeasured: true
        });
      }
    }
  }, {
    key: 'measureContainer',
    value: function measureContainer(x) {
      this.handleMeasure('containerSize', x);
    }
  }, {
    key: 'measureTrack',
    value: function measureTrack(x) {
      this.handleMeasure('trackSize', x);
    }
  }, {
    key: 'measureThumb',
    value: function measureThumb(x) {
      this.handleMeasure('thumbSize', x);
    }
  }, {
    key: 'getValue',
    value: function getValue(gestureState) {
      var length = this.state.containerSize.width - this.state.thumbSize.width;
      var thumbLeft = this._previousLeft + gestureState.dx;

      var ratio = thumbLeft / length;

      if (this.props.step) {
        return Math.max(this.props.minimumValue, Math.min(this.props.maximumValue, this.props.minimumValue + Math.round(ratio * (this.props.maximumValue - this.props.minimumValue) / this.props.step) * this.props.step));
      } else {
        return Math.max(this.props.minimumValue, Math.min(this.props.maximumValue, ratio * (this.props.maximumValue - this.props.minimumValue) + this.props.minimumValue));
      }
    }
  }, {
    key: 'getCurrentValue',
    value: function getCurrentValue() {
      return this.state.value.__getValue();
    }
  }, {
    key: 'getRatio',
    value: function getRatio(value) {
      return (value - this.props.minimumValue) / (this.props.maximumValue - this.props.minimumValue);
    }
  }, {
    key: 'getThumbLeft',
    value: function getThumbLeft(value) {
      var ratio = this.getRatio(value);
      return ratio * (this.state.containerSize.width - this.state.thumbSize.width);
    }
  }, {
    key: 'getThumbTouchRect',
    value: function getThumbTouchRect() {
      var state = this.state;
      var props = this.props;
      var touchOverflowSize = this.getTouchOverflowSize();

      return new Rect(touchOverflowSize.width / 2 + this.getThumbLeft(this.getCurrentValue()) + (state.thumbSize.width - props.thumbTouchSize.width) / 2, touchOverflowSize.height / 2 + (state.containerSize.height - props.thumbTouchSize.height) / 2, props.thumbTouchSize.width, props.thumbTouchSize.height);
    }
  }, {
    key: 'renderDebugThumbTouchRect',
    value: function renderDebugThumbTouchRect(thumbLeft) {
      var thumbTouchRect = this.getThumbTouchRect();
      var positionStyle = {
        left: thumbLeft,
        top: thumbTouchRect.y,
        width: thumbTouchRect.width,
        height: thumbTouchRect.height
      };
      return _react2.default.createElement(_reactNative.Animated.View, { style: positionStyle, pointerEvents: 'none', __source: {
          fileName: _jsxFileName,
          lineNumber: 334
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          minimumValue = _props.minimumValue,
          maximumValue = _props.maximumValue,
          minimumTrackTintColor = _props.minimumTrackTintColor,
          maximumTrackTintColor = _props.maximumTrackTintColor,
          thumbTintColor = _props.thumbTintColor,
          containerStyle = _props.containerStyle,
          style = _props.style,
          trackStyle = _props.trackStyle,
          thumbStyle = _props.thumbStyle,
          debugTouchArea = _props.debugTouchArea,
          other = babelHelpers.objectWithoutProperties(_props, ['minimumValue', 'maximumValue', 'minimumTrackTintColor', 'maximumTrackTintColor', 'thumbTintColor', 'containerStyle', 'style', 'trackStyle', 'thumbStyle', 'debugTouchArea']);
      var _state = this.state,
          value = _state.value,
          containerSize = _state.containerSize,
          trackSize = _state.trackSize,
          thumbSize = _state.thumbSize,
          allMeasured = _state.allMeasured;


      var mainStyles = containerStyle || styles;
      var thumbLeft = value.interpolate({
        inputRange: [minimumValue, maximumValue],
        outputRange: [0, containerSize.width - thumbSize.width]
      });

      var valueVisibleStyle = {};
      if (!allMeasured) {
        valueVisibleStyle.opacity = 0;
      }

      var minimumTrackStyle = babelHelpers.extends({
        position: 'absolute',
        width: _reactNative.Animated.add(thumbLeft, thumbSize.width / 2),
        marginTop: -trackSize.height,
        backgroundColor: minimumTrackTintColor
      }, valueVisibleStyle);

      var touchOverflowStyle = this.getTouchOverflowStyle();
      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, other, {
          style: [mainStyles.container, style],
          onLayout: this.measureContainer.bind(this),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 382
          }
        }),
        _react2.default.createElement(_reactNative.View, {
          style: [{ backgroundColor: maximumTrackTintColor }, mainStyles.track, trackStyle],
          onLayout: this.measureTrack.bind(this),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 387
          }
        }),
        _react2.default.createElement(_reactNative.Animated.View, {
          style: [mainStyles.track, trackStyle, minimumTrackStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 395
          }
        }),
        _react2.default.createElement(_reactNative.Animated.View, {
          onLayout: this.measureThumb.bind(this),
          style: [{ backgroundColor: thumbTintColor }, mainStyles.thumb, thumbStyle, babelHelpers.extends({
            transform: [{ translateX: thumbLeft }, { translateY: -(trackSize.height + thumbSize.height) / 2 }]
          }, valueVisibleStyle)],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 398
          }
        }),
        _react2.default.createElement(
          _reactNative.View,
          babelHelpers.extends({
            style: [styles.touchArea, touchOverflowStyle]
          }, this.panResponder.panHandlers, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 413
            }
          }),
          debugTouchArea === true && this.renderDebugThumbTouchRect(thumbLeft)
        )
      );
    }
  }]);
  return Slider;
}(_react.Component);

exports.default = Slider;


Slider.propTypes = {
  value: _propTypes2.default.number,

  disabled: _propTypes2.default.bool,

  minimumValue: _propTypes2.default.number,

  maximumValue: _propTypes2.default.number,

  step: _propTypes2.default.number,

  minimumTrackTintColor: _propTypes2.default.string,

  maximumTrackTintColor: _propTypes2.default.string,

  thumbTintColor: _propTypes2.default.string,

  thumbTouchSize: _propTypes2.default.shape({
    width: _propTypes2.default.number,
    height: _propTypes2.default.number
  }),

  onValueChange: _propTypes2.default.func,

  onSlidingStart: _propTypes2.default.func,

  onSlidingComplete: _propTypes2.default.func,

  style: _reactNative.View.propTypes.style,

  trackStyle: _reactNative.View.propTypes.style,

  thumbStyle: _reactNative.View.propTypes.style,

  debugTouchArea: _propTypes2.default.bool,

  animateTransitions: _propTypes2.default.bool,

  animationType: _propTypes2.default.oneOf(['spring', 'timing']),

  animationConfig: _propTypes2.default.object,
  containerStyle: _reactNative.View.propTypes.style
};

Slider.defaultProps = {
  value: 0,
  minimumValue: 0,
  maximumValue: 1,
  step: 0,
  minimumTrackTintColor: '#3f3f3f',
  maximumTrackTintColor: '#b3b3b3',
  thumbTintColor: 'red',
  thumbTouchSize: { width: 40, height: 40 },
  debugTouchArea: false,
  animationType: 'timing'
};

var styles = _reactNative.StyleSheet.create({
  container: {
    height: 40,
    justifyContent: 'center'
  },
  track: {
    height: TRACK_SIZE,
    borderRadius: TRACK_SIZE / 2
  },
  thumb: {
    position: 'absolute',
    width: THUMB_SIZE,
    height: THUMB_SIZE,
    borderRadius: THUMB_SIZE / 2,
    top: 22
  },
  touchArea: {
    position: 'absolute',
    backgroundColor: 'transparent',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  debugThumbTouchArea: {
    position: 'absolute',
    backgroundColor: 'green',
    opacity: 0.5
  }
});
}, 776, null, "react-native-elements/src/slider/Slider.js");
__d(/* react-native-elements/src/avatar/Avatar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\avatar\\Avatar.js';

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Icon = require(753            ); // 753 = ../icons/Icon

var _Icon2 = babelHelpers.interopRequireDefault(_Icon);

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var Avatar = function Avatar(props) {
  var component = props.component,
      onPress = props.onPress,
      onLongPress = props.onLongPress,
      containerStyle = props.containerStyle,
      icon = props.icon,
      iconStyle = props.iconStyle,
      source = props.source,
      small = props.small,
      medium = props.medium,
      large = props.large,
      xlarge = props.xlarge,
      avatarStyle = props.avatarStyle,
      rounded = props.rounded,
      title = props.title,
      titleStyle = props.titleStyle,
      overlayContainerStyle = props.overlayContainerStyle,
      activeOpacity = props.activeOpacity,
      attributes = babelHelpers.objectWithoutProperties(props, ['component', 'onPress', 'onLongPress', 'containerStyle', 'icon', 'iconStyle', 'source', 'small', 'medium', 'large', 'xlarge', 'avatarStyle', 'rounded', 'title', 'titleStyle', 'overlayContainerStyle', 'activeOpacity']);
  var width = props.width,
      height = props.height;


  if (small) {
    width = 34;
    height = 34;
  } else if (medium) {
    width = 50;
    height = 50;
  } else if (large) {
    width = 75;
    height = 75;
  } else if (xlarge) {
    width = 150;
    height = 150;
  } else if (!width && !height) {
    width = 34;
    height = 34;
  } else if (!width) {
    width = height;
  } else if (!height) {
    height = width;
  }

  var titleSize = width / 2;
  var iconSize = width / 2;

  var Component = onPress || onLongPress ? _reactNative.TouchableOpacity : _reactNative.View;
  if (component) {
    Component = component;
  }

  var renderContent = function renderContent() {
    if (source) {
      return _react2.default.createElement(_reactNative.Image, {
        style: [styles.avatar, rounded && { borderRadius: width / 2 }, avatarStyle && avatarStyle],
        source: source,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 70
        }
      });
    } else if (title) {
      return _react2.default.createElement(
        _Text2.default,
        { style: [styles.title, titleStyle && titleStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 81
          }
        },
        title
      );
    } else if (icon) {
      return _react2.default.createElement(_Icon2.default, {
        style: iconStyle && iconStyle,
        color: icon.color || 'white',
        name: icon.name || 'user',
        size: icon.size || iconSize,
        type: icon.type && icon.type,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87
        }
      });
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingTop: 10,
      paddingRight: 10,
      paddingBottom: 10,
      backgroundColor: 'transparent'
    },
    avatar: {
      width: width,
      height: height
    },
    overlayContainer: {
      flex: 1,
      alignItems: 'center',
      backgroundColor: 'rgba(0,0,0,0.2)',
      alignSelf: 'stretch',
      justifyContent: 'center',
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      width: width,
      height: height
    },
    title: {
      color: '#ffffff',
      fontSize: titleSize,
      backgroundColor: 'rgba(0,0,0,0)',
      textAlign: 'center'
    }
  });

  return _react2.default.createElement(
    Component,
    babelHelpers.extends({
      onPress: onPress,
      onLongPress: onLongPress,
      activeOpacity: activeOpacity,
      style: [styles.container, containerStyle && containerStyle]
    }, attributes, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 132
      }
    }),
    _react2.default.createElement(
      _reactNative.View,
      {
        style: [styles.overlayContainer, rounded && { borderRadius: width / 2 }, overlayContainerStyle && overlayContainerStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 139
        }
      },
      renderContent()
    )
  );
};

Avatar.propTypes = {
  component: _propTypes2.default.func,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number,
  onPress: _propTypes2.default.func,
  onLongPress: _propTypes2.default.func,
  containerStyle: _propTypes2.default.any,
  source: _reactNative.Image.propTypes.source,
  avatarStyle: _propTypes2.default.any,
  rounded: _propTypes2.default.bool,
  title: _propTypes2.default.string,
  titleStyle: _reactNative.Text.propTypes.style,
  overlayContainerStyle: _propTypes2.default.any,
  activeOpacity: _propTypes2.default.number,
  icon: _propTypes2.default.object,
  iconStyle: _reactNative.Text.propTypes.style,
  small: _propTypes2.default.bool,
  medium: _propTypes2.default.bool,
  large: _propTypes2.default.bool,
  xlarge: _propTypes2.default.bool
};

exports.default = Avatar;
}, 777, null, "react-native-elements/src/avatar/Avatar.js");
__d(/* react-native-elements/src/rating/Rating.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\rating\\Rating.js';

var _lodash = require(779           ); // 779 = lodash.times

var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

var _propTypes = require(511         ); // 511 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Text = require(558           ); // 558 = ../text/Text

var _Text2 = babelHelpers.interopRequireDefault(_Text);

var STAR_IMAGE = require(780                ); // 780 = ./images/star.png
var HEART_IMAGE = require(781                 ); // 781 = ./images/heart.png
var ROCKET_IMAGE = require(782                  ); // 782 = ./images/rocket.png
var BELL_IMAGE = require(783                ); // 783 = ./images/bell.png

var STAR_WIDTH = 60;

var TYPES = {
  star: {
    source: STAR_IMAGE,
    color: '#f1c40f',
    backgroundColor: 'white'
  },
  heart: {
    source: HEART_IMAGE,
    color: '#e74c3c',
    backgroundColor: 'white'
  },
  rocket: {
    source: ROCKET_IMAGE,
    color: '#2ecc71',
    backgroundColor: 'white'
  },
  bell: {
    source: BELL_IMAGE,
    color: '#f39c12',
    backgroundColor: 'white'
  }
};

var Rating = function (_Component) {
  babelHelpers.inherits(Rating, _Component);

  function Rating(props) {
    babelHelpers.classCallCheck(this, Rating);

    var _this = babelHelpers.possibleConstructorReturn(this, (Rating.__proto__ || Object.getPrototypeOf(Rating)).call(this, props));

    var onFinishRating = _this.props.onFinishRating;


    var position = new _reactNative.Animated.ValueXY();
    var newValue = new _reactNative.Animated.ValueXY();
    newValue.setValue({ x: 0, y: 500 });

    var panResponder = _reactNative.PanResponder.create({
      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
        return true;
      },
      onPanResponderMove: function onPanResponderMove(event, gesture) {
        position.setValue({ x: gesture.dx, y: gesture.dy });
        _this.setState({ value: gesture.dx });
      },
      onPanResponderRelease: function onPanResponderRelease(event) {
        onFinishRating(_this.getCurrentRating());
      }
    });

    _this.state = { panResponder: panResponder, position: position };
    return _this;
  }

  babelHelpers.createClass(Rating, [{
    key: 'getPrimaryViewStyle',
    value: function getPrimaryViewStyle() {
      var position = this.state.position;
      var _props = this.props,
          imageSize = _props.imageSize,
          ratingCount = _props.ratingCount,
          type = _props.type;


      var color = TYPES[type].color;

      var width = position.x.interpolate({
        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],
        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],
        extrapolate: 'clamp'
      });

      return {
        backgroundColor: color,
        width: width,
        height: width ? imageSize : 0
      };
    }
  }, {
    key: 'getSecondaryViewStyle',
    value: function getSecondaryViewStyle() {
      var position = this.state.position;
      var _props2 = this.props,
          imageSize = _props2.imageSize,
          ratingCount = _props2.ratingCount,
          type = _props2.type;


      var backgroundColor = TYPES[type].backgroundColor;

      var width = position.x.interpolate({
        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],
        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],
        extrapolate: 'clamp'
      });

      return {
        backgroundColor: backgroundColor,
        width: width,
        height: width ? imageSize : 0
      };
    }
  }, {
    key: 'renderRatings',
    value: function renderRatings() {
      var _props3 = this.props,
          imageSize = _props3.imageSize,
          ratingCount = _props3.ratingCount,
          type = _props3.type;

      var source = TYPES[type].source;

      return (0, _lodash2.default)(ratingCount, function (index) {
        return _react2.default.createElement(
          _reactNative.View,
          { key: index, style: styles.starContainer, __source: {
              fileName: _jsxFileName,
              lineNumber: 130
            }
          },
          _react2.default.createElement(_reactNative.Image, {
            source: source,
            style: { width: imageSize, height: imageSize },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 131
            }
          })
        );
      });
    }
  }, {
    key: 'getCurrentRating',
    value: function getCurrentRating() {
      var value = this.state.value;
      var _props4 = this.props,
          imageSize = _props4.imageSize,
          ratingCount = _props4.ratingCount;

      var startingValue = ratingCount / 2;
      var currentRating = 0;

      if (value > ratingCount * imageSize / 2) {
        currentRating = ratingCount;
      } else if (value > imageSize) {
        currentRating = Math.ceil(startingValue + value / imageSize);
      } else if (value < -ratingCount * imageSize / 2) {
        currentRating = 0;
      } else if (value < imageSize) {
        currentRating = Math.ceil(startingValue + value / imageSize);
      } else {
        currentRating = Math.ceil(startingValue);
      }

      return currentRating;
    }
  }, {
    key: 'displayCurrentRating',
    value: function displayCurrentRating() {
      var _props5 = this.props,
          ratingCount = _props5.ratingCount,
          type = _props5.type;


      var color = TYPES[type].color;

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.ratingView, __source: {
            fileName: _jsxFileName,
            lineNumber: 166
          }
        },
        _react2.default.createElement(
          _Text2.default,
          { style: styles.ratingText, __source: {
              fileName: _jsxFileName,
              lineNumber: 167
            }
          },
          'Rating: '
        ),
        _react2.default.createElement(
          _Text2.default,
          { style: [styles.currentRatingText, { color: color }], __source: {
              fileName: _jsxFileName,
              lineNumber: 168
            }
          },
          this.getCurrentRating()
        ),
        _react2.default.createElement(
          _Text2.default,
          { style: styles.maxRatingText, __source: {
              fileName: _jsxFileName,
              lineNumber: 171
            }
          },
          '/',
          ratingCount
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props6 = this.props,
          type = _props6.type,
          ratingImage = _props6.ratingImage,
          ratingColor = _props6.ratingColor,
          ratingBackgroundColor = _props6.ratingBackgroundColor,
          style = _props6.style,
          showRating = _props6.showRating;


      if (type === 'custom') {
        var custom = {
          source: ratingImage,
          color: ratingColor,
          backgroundColor: ratingBackgroundColor
        };
        TYPES.custom = custom;
      }

      return _react2.default.createElement(
        _reactNative.View,
        { style: style, __source: {
            fileName: _jsxFileName,
            lineNumber: 196
          }
        },
        showRating && this.displayCurrentRating(),
        _react2.default.createElement(
          _reactNative.View,
          babelHelpers.extends({
            style: styles.starsWrapper
          }, this.state.panResponder.panHandlers, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 198
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            { style: styles.starsInsideWrapper, __source: {
                fileName: _jsxFileName,
                lineNumber: 202
              }
            },
            _react2.default.createElement(_reactNative.Animated.View, { style: this.getPrimaryViewStyle(), __source: {
                fileName: _jsxFileName,
                lineNumber: 203
              }
            }),
            _react2.default.createElement(_reactNative.Animated.View, { style: this.getSecondaryViewStyle(), __source: {
                fileName: _jsxFileName,
                lineNumber: 204
              }
            })
          ),
          this.renderRatings()
        )
      );
    }
  }]);
  return Rating;
}(_react.Component);

Rating.defaultProps = {
  type: 'star',
  ratingImage: require(780                ), // 780 = ./images/star.png
  ratingColor: '#f1c40f',
  ratingBackgroundColor: 'white',
  ratingCount: 5,
  imageSize: STAR_WIDTH,
  onFinishRating: function onFinishRating() {
    return console.log('Attach a function here.');
  }
};
exports.default = Rating;


var styles = _reactNative.StyleSheet.create({
  starsWrapper: {
    flexDirection: 'row'
  },
  starsInsideWrapper: {
    position: 'absolute',
    top: 0,
    left: 0,
    flexDirection: 'row'
  },
  ratingView: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    paddingBottom: 5
  },
  ratingText: {
    fontSize: 15,
    textAlign: 'center',
    fontFamily: _reactNative.Platform.OS === 'ios' ? 'Trebuchet MS' : null,
    color: '#34495e'
  },
  currentRatingText: {
    fontSize: 30,
    textAlign: 'center',
    fontFamily: _reactNative.Platform.OS === 'ios' ? 'Trebuchet MS' : null
  },
  maxRatingText: {
    fontSize: 18,
    textAlign: 'center',
    fontFamily: _reactNative.Platform.OS === 'ios' ? 'Trebuchet MS' : null,
    color: '#34495e'
  }
});

Rating.propTypes = {
  type: _propTypes2.default.string,
  ratingImage: _reactNative.Image.propTypes.source,
  ratingColor: _propTypes2.default.string,
  ratingBackgroundColor: _propTypes2.default.string,
  ratingCount: _propTypes2.default.number,
  imageSize: _propTypes2.default.number,
  onFinishRating: _propTypes2.default.func,
  showRating: _propTypes2.default.bool,
  style: _reactNative.View.propTypes.style
};
}, 778, null, "react-native-elements/src/rating/Rating.js");
__d(/* lodash.times/index.js */function(global, require, module, exports) {
var INFINITY = 1 / 0,
    MAX_SAFE_INTEGER = 9007199254740991,
    MAX_INTEGER = 1.7976931348623157e+308,
    NAN = 0 / 0;

var MAX_ARRAY_LENGTH = 4294967295;

var symbolTag = '[object Symbol]';

var reTrim = /^\s+|\s+$/g;

var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

var reIsBinary = /^0b[01]+$/i;

var reIsOctal = /^0o[0-7]+$/i;

var freeParseInt = parseInt;

function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

var objectProto = Object.prototype;

var objectToString = objectProto.toString;

var nativeMin = Math.min;

function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

function isSymbol(value) {
  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
}

function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? remainder ? result - remainder : result : 0;
}

function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

function identity(value) {
  return value;
}

function times(n, iteratee) {
  n = toInteger(n);
  if (n < 1 || n > MAX_SAFE_INTEGER) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH,
      length = nativeMin(n, MAX_ARRAY_LENGTH);

  iteratee = typeof iteratee == 'function' ? iteratee : identity;
  n -= MAX_ARRAY_LENGTH;

  var result = baseTimes(length, iteratee);
  while (++index < n) {
    iteratee(index);
  }
  return result;
}

module.exports = times;
}, 779, null, "lodash.times/index.js");
__d(/* react-native-elements/src/rating/images/star.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-native-elements/src/rating/images","width":50,"height":50,"scales":[1],"hash":"004c2bbb035d8d06bb830efc4673c886","name":"star","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 780, null, "react-native-elements/src/rating/images/star.png");
__d(/* react-native-elements/src/rating/images/heart.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-native-elements/src/rating/images","width":50,"height":50,"scales":[1],"hash":"2327736b3ea09c41abfb69be1221f430","name":"heart","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 781, null, "react-native-elements/src/rating/images/heart.png");
__d(/* react-native-elements/src/rating/images/rocket.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-native-elements/src/rating/images","width":50,"height":50,"scales":[1],"hash":"51671417ef20e0bbc32f0a2bc6edfa95","name":"rocket","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 782, null, "react-native-elements/src/rating/images/rocket.png");
__d(/* react-native-elements/src/rating/images/bell.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-native-elements/src/rating/images","width":50,"height":50,"scales":[1],"hash":"a7b9dc9de5f8f1fb1afbef917619a5ac","name":"bell","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 783, null, "react-native-elements/src/rating/images/bell.png");
__d(/* react-native-elements/src/swipedeck/SwipeDeck.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\node_modules\\react-native-elements\\src\\swipedeck\\SwipeDeck.js';

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var SCREEN_WIDTH = _reactNative.Dimensions.get('window').width;
var SWIPE_THRESHOLD = 0.4 * SCREEN_WIDTH;

var SwipeDeck = function (_Component) {
  babelHelpers.inherits(SwipeDeck, _Component);

  function SwipeDeck(props) {
    babelHelpers.classCallCheck(this, SwipeDeck);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeDeck.__proto__ || Object.getPrototypeOf(SwipeDeck)).call(this, props));

    var position = new _reactNative.Animated.ValueXY();

    var panResponder = _reactNative.PanResponder.create({
      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
        return true;
      },
      onPanResponderMove: function onPanResponderMove(event, gesture) {
        position.setValue({ x: gesture.dx, y: gesture.dy });
      },
      onPanResponderRelease: function onPanResponderRelease(event, gesture) {
        if (gesture.dx > SWIPE_THRESHOLD) {
          _this.forceSwipe('right');
        } else if (gesture.dx < -SWIPE_THRESHOLD) {
          _this.forceSwipe('left');
        } else {
          _this.resetPosition();
        }
      }
    });

    _this.state = { panResponder: panResponder, position: position, index: 0 };
    return _this;
  }

  babelHelpers.createClass(SwipeDeck, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.data !== this.props.data) {
        this.setState({ index: 0 });
      }
    }
  }, {
    key: 'componentWillUpdate',
    value: function componentWillUpdate() {
      _reactNative.UIManager.setLayoutAnimationEnabledExperimental && _reactNative.UIManager.setLayoutAnimationEnabledExperimental(true);
      _reactNative.LayoutAnimation.spring();
    }
  }, {
    key: 'forceSwipe',
    value: function forceSwipe(direction) {
      var _this2 = this;

      var x = direction === 'right' ? SCREEN_WIDTH : -SCREEN_WIDTH;

      _reactNative.Animated.timing(this.state.position, {
        toValue: { x: x * 2, y: direction === 'right' ? -x : x },
        duration: 750
      }).start(function () {
        return _this2.onSwipeComplete(direction);
      });
    }
  }, {
    key: 'onSwipeComplete',
    value: function onSwipeComplete(direction) {
      var _props = this.props,
          onSwipeRight = _props.onSwipeRight,
          onSwipeLeft = _props.onSwipeLeft,
          data = _props.data;

      var item = data[this.state.index];

      direction === 'right' ? onSwipeRight(item) : onSwipeLeft(item);
      this.state.position.setValue({ x: 0, y: 0 });
      this.setState({ index: this.state.index + 1 });
    }
  }, {
    key: 'resetPosition',
    value: function resetPosition() {
      _reactNative.Animated.spring(this.state.position, {
        toValue: { x: 0, y: 0 }
      }).start();
    }
  }, {
    key: 'getCardStyle',
    value: function getCardStyle() {
      var position = this.state.position;

      var rotate = position.x.interpolate({
        inputRange: [-SCREEN_WIDTH * 2, 0, SCREEN_WIDTH * 2],
        outputRange: ['-60deg', '0deg', '60deg']
      });

      return babelHelpers.extends({}, this.state.position.getLayout(), {
        transform: [{ rotate: rotate }]
      });
    }
  }, {
    key: 'renderCards',
    value: function renderCards() {
      var _this3 = this;

      if (this.state.index >= this.props.data.length) {
        return this.props.renderNoMoreCards();
      }

      return this.props.data.map(function (item, i) {
        if (i < _this3.state.index) {
          return null;
        } else if (i === _this3.state.index) {
          return _react2.default.createElement(
            _reactNative.Animated.View,
            babelHelpers.extends({
              key: item.id,
              style: [_this3.getCardStyle(), styles.cardStyle]
            }, _this3.state.panResponder.panHandlers, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            }),
            _this3.props.renderCard(item)
          );
        }

        return _react2.default.createElement(
          _reactNative.Animated.View,
          { key: item.id, style: styles.cardStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 116
            }
          },
          _this3.props.renderCard(item)
        );
      }).reverse();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 126
          }
        },
        this.renderCards()
      );
    }
  }]);
  return SwipeDeck;
}(_react.Component);

SwipeDeck.defaultProps = {
  onSwipeRight: function onSwipeRight() {},
  onSwipeLeft: function onSwipeLeft() {}
};
exports.default = SwipeDeck;


var styles = _reactNative.StyleSheet.create({
  cardStyle: {
    position: 'absolute',
    width: SCREEN_WIDTH
  }
});

SwipeDeck.propTypes = {
  data: _react.PropTypes.any,
  renderCard: _react.PropTypes.any,
  renderNoMoreCards: _react.PropTypes.any,
  onSwipeRight: _react.PropTypes.any,
  onSwipeLeft: _react.PropTypes.any
};
}, 784, null, "react-native-elements/src/swipedeck/SwipeDeck.js");
__d(/* Student_Counter/src/screens/Home.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\Home.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNavigation = require(490               ); // 490 = react-navigation

var _Header = require(786                   ); // 786 = ../components/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _HomeContent = require(789                        ); // 789 = ../components/HomeContent

var _HomeContent2 = babelHelpers.interopRequireDefault(_HomeContent);

var _Drawer = require(802                   ); // 802 = ../components/Drawer

var _Drawer2 = babelHelpers.interopRequireDefault(_Drawer);

var _Lesson = require(806       ); // 806 = ./Lesson

var _Lesson2 = babelHelpers.interopRequireDefault(_Lesson);

var _LessonCreate = require(812             ); // 812 = ./LessonCreate

var _LessonCreate2 = babelHelpers.interopRequireDefault(_LessonCreate);

var _Subject = require(813        ); // 813 = ./Subject

var _Subject2 = babelHelpers.interopRequireDefault(_Subject);

var _Teacher = require(815        ); // 815 = ./Teacher

var _Teacher2 = babelHelpers.interopRequireDefault(_Teacher);

var _Student = require(816        ); // 816 = ./Student

var _Student2 = babelHelpers.interopRequireDefault(_Student);

var _Class = require(817      ); // 817 = ./Class

var _Class2 = babelHelpers.interopRequireDefault(_Class);

var _CameraScreen = require(417                            ); // 417 = ../components/CameraScreen.js

var _CameraScreen2 = babelHelpers.interopRequireDefault(_CameraScreen);

var Home = function (_React$Component) {
    babelHelpers.inherits(Home, _React$Component);

    function Home() {
        babelHelpers.classCallCheck(this, Home);
        return babelHelpers.possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).apply(this, arguments));
    }

    babelHelpers.createClass(Home, [{
        key: "render",
        value: function render() {
            var navigate = this.props.navigation.navigate;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 31
                    }
                },
                _react2.default.createElement(_Header2.default, { navigate: navigate, text: "Teachelp", __source: {
                        fileName: _jsxFileName,
                        lineNumber: 32
                    }
                }),
                _react2.default.createElement(_HomeContent2.default, { navigate: navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 33
                    }
                })
            );
        }
    }]);
    return Home;
}(_react2.default.Component);

Home.navigationOptions = {
    drawerLabel: "Home"
};


var MyApp = (0, _reactNavigation.DrawerNavigator)({
    Home: {
        screen: Home
    },
    Lesson: {
        screen: _Lesson2.default
    },
    LessonCreate: {
        screen: _LessonCreate2.default
    },
    Subject: {
        screen: _Subject2.default
    },
    Teacher: {
        screen: _Teacher2.default
    },
    Student: {
        screen: _Student2.default
    },
    Class: {
        screen: _Class2.default
    },
    Camera: {
        screen: _CameraScreen2.default
    }
}, {
    drawerWidth: _reactNative.Dimensions.get("window").width * 3 / 4,
    contentComponent: function contentComponent(props) {
        return _react2.default.createElement(_Drawer2.default, { navigate: props.navigation.navigate, __source: {
                fileName: _jsxFileName,
                lineNumber: 66
            }
        });
    }
});

exports.default = MyApp;
}, 785, null, "Student_Counter/src/screens/Home.js");
__d(/* Student_Counter/src/components/Header.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\Header.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var Header = function (_React$Component) {
    babelHelpers.inherits(Header, _React$Component);

    function Header(props) {
        babelHelpers.classCallCheck(this, Header);
        return babelHelpers.possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));
    }

    babelHelpers.createClass(Header, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: _Styles2.default.homeHeader, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 11
                    }
                },
                _react2.default.createElement(
                    _reactNative.TouchableHighlight,
                    { hitSlop: { top: 10, bottom: 10, left: 10, right: 10 }, underlayColor: "white", onPress: function onPress() {
                            return _this2.props.navigate("DrawerOpen");
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 12
                        }
                    },
                    _react2.default.createElement(_reactNative.Image, {
                        style: _Styles2.default.hamburger,
                        source: require(788                     ), __source: { // 788 = ../icons/hamburger.png
                            fileName: _jsxFileName,
                            lineNumber: 13
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: _Styles2.default.headerTitle, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 17
                        }
                    },
                    this.props.text
                ),
                _react2.default.createElement(_reactNative.Image, {
                    style: [_Styles2.default.hamburger, _Styles2.default.hidden],
                    source: require(788                     ), __source: { // 788 = ../icons/hamburger.png
                        fileName: _jsxFileName,
                        lineNumber: 18
                    }
                })
            );
        }
    }]);
    return Header;
}(_react2.default.Component);

exports.default = Header;
}, 786, null, "Student_Counter/src/components/Header.js");
__d(/* Student_Counter/src/styles/Styles.js */function(global, require, module, exports) {var _reactNative = require(46            ); // 46 = react-native

module.exports = _reactNative.StyleSheet.create({
    hamburger: {
        width: 20,
        height: 20

    },
    hidden: {
        opacity: 0
    },
    homeHeader: {
        flexDirection: "row",
        justifyContent: "space-between",
        alignItems: "center",
        marginLeft: 25,
        marginRight: 25,
        marginTop: 25
    },

    homeContent: {
        flexDirection: "column",
        marginLeft: 35,
        marginRight: 35
    },

    twoCardsInRow: {
        flexDirection: "row",
        justifyContent: "space-between",
        width: _reactNative.Dimensions.get("window").width - 70,
        marginTop: 15
    },

    oneCardInRow: {
        marginTop: 15
    },

    smallCard: {
        alignItems: "center",
        justifyContent: "center",
        width: (_reactNative.Dimensions.get("window").width - 70 - 12.5) / 2,
        borderRadius: 5,
        paddingTop: 30,
        paddingBottom: 30
    },

    bigCard: {
        alignItems: "center",
        justifyContent: "center",
        width: _reactNative.Dimensions.get("window").width - 70,
        borderRadius: 5,
        paddingTop: 30,
        paddingBottom: 30
    },

    cardInner: {
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center"
    },

    cardImage: {
        width: 75,
        height: 75
    },

    cardTitle: {
        fontFamily: "MedulaOne",
        fontSize: 25,
        color: "black",
        marginTop: 10
    },

    headerTitle: {
        fontSize: 30,
        fontFamily: "MedulaOne",
        color: "black"
    },

    drawer: {
        height: _reactNative.Dimensions.get("window").height,
        width: _reactNative.Dimensions.get("window").width * 3 / 4,
        marginTop: 30
    },

    drawerHeader: {
        flexDirection: "column"
    },

    drawerIcon: {
        flexDirection: "row",
        justifyContent: "flex-end",
        marginRight: 25
    },
    drawerUserInfo: {
        flexDirection: "row",
        alignItems: "center",
        marginTop: 10,
        marginLeft: 25,
        marginRight: 25
    },

    userInfoPic: {
        width: 75,
        height: 75,
        borderRadius: 100
    },

    userAbout: {
        flexDirection: "column",
        marginLeft: 20
    },

    userAboutName: {
        fontFamily: "MedulaOne",
        fontSize: 30,
        color: "black"
    },

    userAboutOccupation: {
        fontSize: 15
    },

    drawerContent: {
        marginTop: 30,
        flexDirection: "column"
    },

    drawerTab: {
        flexDirection: "row",
        alignItems: "center",
        marginLeft: 47.5,
        marginBottom: 7
    },

    drawerTabIcon: {
        width: 30,
        height: 30
    },

    drawerTabText: {
        fontSize: 18,
        marginLeft: 42.5,
        color: "black"
    },

    lessonContent: {
        flexDirection: "row",
        flexWrap: "wrap",
        marginTop: 15,
        marginLeft: 35,
        marginRight: 35
    },

    lessonItem: {
        flexDirection: "column",
        width: (_reactNative.Dimensions.get("window").width - 70 - 12.5) / 2,
        padding: 10,
        borderRadius: 4,
        marginBottom: 12.5
    },

    lessonItemTime: {
        fontFamily: "MedulaOne",
        fontSize: 30
    },

    lessonItemDate: {
        fontFamily: "MedulaOne",
        fontSize: 20
    },

    lessonSubject: {
        marginTop: 15,
        marginBottom: 15,
        flexDirection: "row"
    },

    lessonSubjectImage: {
        width: 25,
        height: 25,
        marginRight: 10
    },

    lessonSubjectName: {
        fontSize: 16
    },

    lessonItemDelete: {
        width: 25,
        height: 25,
        alignSelf: "flex-end"
    },

    subjectContent: {
        flexWrap: "wrap",
        marginTop: 15,
        marginLeft: 35,
        marginRight: 35
    },

    subjectItem: {
        flexDirection: "row",
        justifyContent: "space-between",
        padding: 10,
        borderRadius: 4,
        marginBottom: 12.5
    },

    subjectItemText: {
        fontSize: 16,
        color: "black"
    },

    teacherContent: {
        marginTop: 15,
        marginLeft: 35,
        marginRight: 35
    },

    teacherImage: {
        height: 200,
        width: 200,
        borderRadius: 200,
        alignSelf: "center",
        marginBottom: 10,
        marginTop: 50
    },

    teacherInfo: {
        flexDirection: "row",
        alignItems: "center",
        justifyContent: "center",
        marginBottom: 10
    },

    teacherInfoText: {
        fontFamily: "MedulaOne",
        fontSize: 40,
        color: "black",
        marginRight: 15
    },

    teacherNumbers: {
        flexDirection: "row",
        alignItems: "center",
        justifyContent: "space-between",
        marginTop: 20
    },

    teacherNumberIcon: {
        width: 40,
        height: 40
    },

    teacherNumberText: {
        fontSize: 20,
        color: "black"
    }
});
}, 787, null, "Student_Counter/src/styles/Styles.js");
__d(/* Student_Counter/src/icons/hamburger.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"18c27a1b912fc39bdf32c3d12d5998ab","name":"hamburger","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 788, null, "Student_Counter/src/icons/hamburger.png");
__d(/* Student_Counter/src/components/HomeContent.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\HomeContent.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _Card = require(790                 ); // 790 = ../components/Card

var _Card2 = babelHelpers.interopRequireDefault(_Card);

var HomeContent = function (_React$Component) {
    babelHelpers.inherits(HomeContent, _React$Component);

    function HomeContent(props) {
        babelHelpers.classCallCheck(this, HomeContent);

        var _this = babelHelpers.possibleConstructorReturn(this, (HomeContent.__proto__ || Object.getPrototypeOf(HomeContent)).call(this, props));

        _this.state = {
            height: 0
        };
        return _this;
    }

    babelHelpers.createClass(HomeContent, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: _Styles2.default.homeContent, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 16
                    }
                },
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    { height: _reactNative.Dimensions.get("window").height - 90, showsVerticalScrollIndicator: false, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 17
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.twoCardsInRow, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 18
                            }
                        },
                        _react2.default.createElement(_Card2.default, { size: "small", icon: "lesson", title: "Lesson", color: "#EF9A9A", navigate: this.props.navigate, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 19
                            }
                        }),
                        _react2.default.createElement(_Card2.default, { size: "small", icon: "subject", title: "Subject", color: "#90CAF9", navigate: this.props.navigate, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 20
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.oneCardInRow, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 22
                            }
                        },
                        _react2.default.createElement(_Card2.default, { size: "big", icon: "teacher", title: "Teacher", color: "#C5E1A5", navigate: this.props.navigate, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 23
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.twoCardsInRow, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 25
                            }
                        },
                        _react2.default.createElement(_Card2.default, { size: "small", icon: "student", title: "Student", color: "#FFAB91", navigate: this.props.navigate, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 26
                            }
                        }),
                        _react2.default.createElement(_Card2.default, { size: "small", icon: "class", title: "Class", color: "#9FA8DA", navigate: this.props.navigate, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 27
                            }
                        })
                    )
                )
            );
        }
    }]);
    return HomeContent;
}(_react2.default.Component);

exports.default = HomeContent;
}, 789, null, "Student_Counter/src/components/HomeContent.js");
__d(/* Student_Counter/src/components/Card.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\Card.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _icons = require(791                ); // 791 = ../icons/icons.js

var _icons2 = babelHelpers.interopRequireDefault(_icons);

var Card = function (_React$Component) {
    babelHelpers.inherits(Card, _React$Component);

    function Card(props) {
        babelHelpers.classCallCheck(this, Card);
        return babelHelpers.possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).call(this, props));
    }

    babelHelpers.createClass(Card, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 13
                    }
                },
                _react2.default.createElement(
                    _reactNative.TouchableHighlight,
                    {
                        underlayColor: "" + this.props.color,
                        style: [this.props.size === "small" ? _Styles2.default.smallCard : _Styles2.default.bigCard, { backgroundColor: this.props.color }],
                        onPress: function onPress() {
                            return _this2.props.navigate(_this2.props.title);
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 14
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.cardInner, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 18
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default[this.props.icon], style: _Styles2.default.cardImage, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 19
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.cardTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 20
                                }
                            },
                            this.props.title
                        )
                    )
                )
            );
        }
    }]);
    return Card;
}(_react2.default.Component);

exports.default = Card;
}, 790, null, "Student_Counter/src/components/Card.js");
__d(/* Student_Counter/src/icons/icons.js */function(global, require, module, exports) {module.exports = {
    "lesson": require(792           ), // 792 = ./lesson.png
    "hamburger": require(788              ), // 788 = ./hamburger.png
    "subject": require(793            ), // 793 = ./subject.png
    "student": require(794            ), // 794 = ./student.png
    "teacher": require(795            ), // 795 = ./teacher.png
    "class": require(796          ), // 796 = ./class.png
    "closeMenu": require(797              ), // 797 = ./closeMenu.png
    "userPic": require(798            ), // 798 = ./userPic.jpg
    "home": require(799         ), // 799 = ./home.png
    "presence": require(800             ), // 800 = ./presence.png
    "garbage": require(801            ) // 801 = ./garbage.png
};
}, 791, null, "Student_Counter/src/icons/icons.js");
__d(/* Student_Counter/src/icons/lesson.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"586098e70f39d738b0ed9a562dffee10","name":"lesson","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 792, null, "Student_Counter/src/icons/lesson.png");
__d(/* Student_Counter/src/icons/subject.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"02406e3db384be0b03888a848cab80d7","name":"subject","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 793, null, "Student_Counter/src/icons/subject.png");
__d(/* Student_Counter/src/icons/student.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"e566ecb78c7fd112ecb2172af4e08ce7","name":"student","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 794, null, "Student_Counter/src/icons/student.png");
__d(/* Student_Counter/src/icons/teacher.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"cadd545c28d1e18dbd38168295bbf462","name":"teacher","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 795, null, "Student_Counter/src/icons/teacher.png");
__d(/* Student_Counter/src/icons/class.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"1a9d1fbb1e1992ae007aab8fc2d80e8e","name":"class","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 796, null, "Student_Counter/src/icons/class.png");
__d(/* Student_Counter/src/icons/closeMenu.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"e2c5f1c0d190ed6f6faec7ab4804ac04","name":"closeMenu","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 797, null, "Student_Counter/src/icons/closeMenu.png");
__d(/* Student_Counter/src/icons/userPic.jpg */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":180,"height":180,"scales":[1],"hash":"6d33c578dbc1ffa749b60cabbcd6bf70","name":"userPic","type":"jpg"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 798, null, "Student_Counter/src/icons/userPic.jpg");
__d(/* Student_Counter/src/icons/home.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"dc7932cec06e8b3a9194d6afbfa6d4ab","name":"home","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 799, null, "Student_Counter/src/icons/home.png");
__d(/* Student_Counter/src/icons/presence.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"c6701defe238681419fa4e04351b751c","name":"presence","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 800, null, "Student_Counter/src/icons/presence.png");
__d(/* Student_Counter/src/icons/garbage.png */function(global, require, module, exports) {module.exports = require(278                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/icons","width":512,"height":512,"scales":[1],"hash":"47349b6e2e2b35811240d3e7edfaca77","name":"garbage","type":"png"}); // 278 = react-native/Libraries/Image/AssetRegistry
}, 801, null, "Student_Counter/src/icons/garbage.png");
__d(/* Student_Counter/src/components/Drawer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\Drawer.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNativeElements = require(554                    ); // 554 = react-native-elements

var _reactNative = require(46            ); // 46 = react-native

var _DrawerHeader = require(803             ); // 803 = ./DrawerHeader

var _DrawerHeader2 = babelHelpers.interopRequireDefault(_DrawerHeader);

var _DrawerContent = require(804              ); // 804 = ./DrawerContent

var _DrawerContent2 = babelHelpers.interopRequireDefault(_DrawerContent);

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var Drawer = function (_React$Component) {
    babelHelpers.inherits(Drawer, _React$Component);

    function Drawer(props) {
        babelHelpers.classCallCheck(this, Drawer);
        return babelHelpers.possibleConstructorReturn(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call(this, props));
    }

    babelHelpers.createClass(Drawer, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: _Styles2.default.drawer, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 21
                    }
                },
                _react2.default.createElement(_DrawerHeader2.default, { navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 22
                    }
                }),
                _react2.default.createElement(_DrawerContent2.default, { navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 23
                    }
                })
            );
        }
    }]);
    return Drawer;
}(_react2.default.Component);

exports.default = Drawer;
}, 802, null, "Student_Counter/src/components/Drawer.js");
__d(/* Student_Counter/src/components/DrawerHeader.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\DrawerHeader.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _icons = require(791                ); // 791 = ../icons/icons.js

var _icons2 = babelHelpers.interopRequireDefault(_icons);

var DrawerHeader = function (_React$Component) {
    babelHelpers.inherits(DrawerHeader, _React$Component);

    function DrawerHeader() {
        babelHelpers.classCallCheck(this, DrawerHeader);
        return babelHelpers.possibleConstructorReturn(this, (DrawerHeader.__proto__ || Object.getPrototypeOf(DrawerHeader)).apply(this, arguments));
    }

    babelHelpers.createClass(DrawerHeader, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: _Styles2.default.drawerHeader, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 9
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: _Styles2.default.drawerIcon, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 10
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableHighlight,
                        { hitSlop: { top: 10, bottom: 10, left: 10, right: 10 }, underlayColor: "white", onPress: function onPress() {
                                return _this2.props.navigate("DrawerClose");
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 11
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default["closeMenu"], style: _Styles2.default.hamburger, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 12
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: _Styles2.default.drawerUserInfo, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 15
                        }
                    },
                    _react2.default.createElement(_reactNative.Image, { source: _icons2.default.userPic, style: _Styles2.default.userInfoPic, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 16
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.userAbout, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 17
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.userAboutName, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 18
                                }
                            },
                            "John Doe"
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.userAboutOccupation, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 19
                                }
                            },
                            "Professor"
                        )
                    )
                )
            );
        }
    }]);
    return DrawerHeader;
}(_react2.default.Component);

exports.default = DrawerHeader;
}, 803, null, "Student_Counter/src/components/DrawerHeader.js");
__d(/* Student_Counter/src/components/DrawerContent.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\DrawerContent.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _DrawerTab = require(805          ); // 805 = ./DrawerTab

var _DrawerTab2 = babelHelpers.interopRequireDefault(_DrawerTab);

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var DrawerContent = function (_React$Component) {
    babelHelpers.inherits(DrawerContent, _React$Component);

    function DrawerContent(props) {
        babelHelpers.classCallCheck(this, DrawerContent);
        return babelHelpers.possibleConstructorReturn(this, (DrawerContent.__proto__ || Object.getPrototypeOf(DrawerContent)).call(this, props));
    }

    babelHelpers.createClass(DrawerContent, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: _Styles2.default.drawerContent, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 12
                    }
                },
                _react2.default.createElement(_DrawerTab2.default, { text: "Home", icon: "home", navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 13
                    }
                }),
                _react2.default.createElement(_DrawerTab2.default, { text: "Lesson", icon: "lesson", navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 14
                    }
                }),
                _react2.default.createElement(_DrawerTab2.default, { text: "Subject", icon: "subject", navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 15
                    }
                }),
                _react2.default.createElement(_DrawerTab2.default, { text: "Teacher", icon: "teacher", navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 16
                    }
                }),
                _react2.default.createElement(_DrawerTab2.default, { text: "Student", icon: "student", navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 17
                    }
                }),
                _react2.default.createElement(_DrawerTab2.default, { text: "Class", icon: "class", navigate: this.props.navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 18
                    }
                })
            );
        }
    }]);
    return DrawerContent;
}(_react2.default.Component);

exports.default = DrawerContent;
}, 804, null, "Student_Counter/src/components/DrawerContent.js");
__d(/* Student_Counter/src/components/DrawerTab.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\DrawerTab.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _icons = require(791                ); // 791 = ../icons/icons.js

var _icons2 = babelHelpers.interopRequireDefault(_icons);

var DrawerTab = function (_React$Component) {
    babelHelpers.inherits(DrawerTab, _React$Component);

    function DrawerTab(props) {
        babelHelpers.classCallCheck(this, DrawerTab);
        return babelHelpers.possibleConstructorReturn(this, (DrawerTab.__proto__ || Object.getPrototypeOf(DrawerTab)).call(this, props));
    }

    babelHelpers.createClass(DrawerTab, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.TouchableHighlight,
                { underlayColor: "white", onPress: function onPress() {
                        return _this2.props.navigate(_this2.props.text);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 12
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: _Styles2.default.drawerTab, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 13
                        }
                    },
                    _react2.default.createElement(_reactNative.Image, { source: _icons2.default[this.props.icon], style: _Styles2.default.drawerTabIcon, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 14
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: _Styles2.default.drawerTabText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 15
                            }
                        },
                        this.props.text
                    )
                )
            );
        }
    }]);
    return DrawerTab;
}(_react2.default.Component);

exports.default = DrawerTab;
}, 805, null, "Student_Counter/src/components/DrawerTab.js");
__d(/* Student_Counter/src/screens/Lesson.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\Lesson.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNavigation = require(490               ); // 490 = react-navigation

var _Header = require(786                   ); // 786 = ../components/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _LessonItem = require(807                          ); // 807 = ../components/LessonItem.js

var _LessonItem2 = babelHelpers.interopRequireDefault(_LessonItem);

var _Lesson = require(808               ); // 808 = ../lib/Lesson.js

var _Lesson2 = babelHelpers.interopRequireDefault(_Lesson);

var _Subject = require(809                ); // 809 = ../lib/Subject.js

var _Subject2 = babelHelpers.interopRequireDefault(_Subject);

var Lesson = function (_React$Component) {
    babelHelpers.inherits(Lesson, _React$Component);

    function Lesson() {
        babelHelpers.classCallCheck(this, Lesson);

        var _this = babelHelpers.possibleConstructorReturn(this, (Lesson.__proto__ || Object.getPrototypeOf(Lesson)).call(this));

        _this.state = {
            lessons: _react2.default.createElement(_reactNative.Text, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 27
                }
            })
        };
        return _this;
    }

    babelHelpers.createClass(Lesson, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.getLessonItems();
        }
    }, {
        key: "getAllLessons",
        value: function getAllLessons() {
            return new Promise(function (resolve, reject) {
                _Lesson2.default.all().then(function (lessons) {
                    return resolve(lessons);
                }).catch(function (err) {
                    return reject(err);
                });
            });
        }
    }, {
        key: "getLessonItems",
        value: function getLessonItems() {
            var _this2 = this;

            this.getAllLessons().then(function (lessons) {
                var pos = 1;
                var all = lessons.map(function (lesson) {
                    return _Subject2.default.retrieve(lesson.subjectId).then(function (subject) {
                        console.log(subject);
                        return subject;
                    });
                });
                Promise.all(all).then(function (subjects) {
                    var lessonItems = lessons.map(function (lesson, index) {
                        var nDate = new Date(lesson.startDate);
                        var date = nDate.getDate() + "/" + nDate.getMonth() + "/" + nDate.getFullYear();
                        var time = nDate.getHours() + ":" + nDate.getMinutes();
                        pos == 0 ? pos = 1 : pos = 0;
                        return _react2.default.createElement(_LessonItem2.default, { key: lesson.id, id: lesson.id, time: time, date: date, pos: pos, subjectName: subjects[index].acronym, subjectId: subjects[index].id, color: "#ef9a9a", __source: {
                                fileName: _jsxFileName,
                                lineNumber: 54
                            }
                        });
                    });
                    _this2.setState({
                        lessons: lessonItems
                    });
                });
            }).catch(function (err) {
                console.log(err);
            });
        }
    }, {
        key: "render",
        value: function render() {
            var navigate = this.props.navigation.navigate;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 68
                    }
                },
                _react2.default.createElement(_Header2.default, { navigate: navigate, text: "Lesson", __source: {
                        fileName: _jsxFileName,
                        lineNumber: 69
                    }
                }),
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    { height: _reactNative.Dimensions.get("window").height - 90, showsVerticalScrollIndicator: false, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 71
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.lessonContent, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 72
                            }
                        },
                        this.state.lessons
                    )
                )
            );
        }
    }]);
    return Lesson;
}(_react2.default.Component);

Lesson.navigationOptions = {
    drawerLabel: undefined
};
exports.default = Lesson;
}, 806, null, "Student_Counter/src/screens/Lesson.js");
__d(/* Student_Counter/src/components/LessonItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\LessonItem.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _icons = require(791                ); // 791 = ../icons/icons.js

var _icons2 = babelHelpers.interopRequireDefault(_icons);

var LessonItem = function (_React$Component) {
    babelHelpers.inherits(LessonItem, _React$Component);

    function LessonItem(props) {
        babelHelpers.classCallCheck(this, LessonItem);
        return babelHelpers.possibleConstructorReturn(this, (LessonItem.__proto__ || Object.getPrototypeOf(LessonItem)).call(this, props));
    }

    babelHelpers.createClass(LessonItem, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.TouchableHighlight,
                { underlayColor: "white", onPress: function onPress() {
                        return alert(_this2.props.id);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 12
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_Styles2.default.lessonItem, { backgroundColor: this.props.color }, this.props.pos == 0 ? {} : { marginLeft: 12.5 }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 13
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: _Styles2.default.lessonItemTime, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 14
                            }
                        },
                        this.props.time
                    ),
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: _Styles2.default.lessonItemDate, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 15
                            }
                        },
                        this.props.date
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.lessonSubject, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 16
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default.subject, style: _Styles2.default.lessonSubjectImage, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 17
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.lessonSubjectName, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 18
                                }
                            },
                            this.props.subjectName
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableHighlight,
                        { underlayColor: this.props.color, onPress: function onPress() {
                                return alert("Apagar");
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 20
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default.garbage, style: _Styles2.default.lessonItemDelete, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 21
                            }
                        })
                    )
                )
            );
        }
    }]);
    return LessonItem;
}(_react2.default.Component);

exports.default = LessonItem;
}, 807, null, "Student_Counter/src/components/LessonItem.js");
__d(/* Student_Counter/src/lib/Lesson.js */function(global, require, module, exports) {var _firebase = require(419       ); // 419 = firebase

var firebase = babelHelpers.interopRequireWildcard(_firebase);

var Subject = require(809        ); // 809 = ./Subject
var Teacher = require(810        ); // 810 = ./Teacher

var namespaces = require(811           ).namespaces; // 811 = ./namespaces

var Lesson = function () {
    function Lesson(teacherId, subjectId, startDate, endDate, photo, summary) {
        babelHelpers.classCallCheck(this, Lesson);

        this.teacherId = teacherId;
        this.subjectId = subjectId;
        this.startDate = startDate;
        this.endDate = endDate;
        this.photo = photo || "No Photo";
        this.summary = summary || "";
    }

    babelHelpers.createClass(Lesson, [{
        key: "save",
        value: function save() {
            var _this = this;

            if (this.id) {
                return firebase.database().ref(namespaces.lessons + this.id).update({
                    teacherId: this.teacherId,
                    subjectId: this.subjectId,
                    startDate: this.startDate,
                    endDate: this.endDate,
                    photo: this.photo,
                    summary: this.summary
                });
            } else {
                return new Promise(function (resolve, reject) {
                    var obj = firebase.database().ref(namespaces.lessons).push(_this);
                    _this.id = obj.key;
                    resolve(_this.id);
                });
            }
        }
    }, {
        key: "delete",
        value: function _delete() {
            firebase.database().ref(namespaces.lessons + this.id).remove();
        }
    }, {
        key: "getSubject",
        value: function getSubject() {
            return regeneratorRuntime.async(function getSubject$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            _context.next = 2;
                            return regeneratorRuntime.awrap(Subject.retrieve(this.subjectId));

                        case 2:
                            return _context.abrupt("return", _context.sent);

                        case 3:
                        case "end":
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: "getTeacher",
        value: function getTeacher() {
            return regeneratorRuntime.async(function getTeacher$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            _context2.next = 2;
                            return regeneratorRuntime.awrap(Teacher.retrieve(this.teacherId));

                        case 2:
                            return _context2.abrupt("return", _context2.sent);

                        case 3:
                        case "end":
                            return _context2.stop();
                    }
                }
            }, null, this);
        }
    }], [{
        key: "all",
        value: function all() {
            return firebase.database().ref(namespaces.lessons).once("value").then(function (snapshot) {
                var lessons = [];
                snapshot.forEach(function (lessonValues) {
                    var id = lessonValues.key;
                    var endDate = lessonValues.val().endDate;
                    var photo = lessonValues.val().photo;
                    var startDate = lessonValues.val().startDate;
                    var subjectId = lessonValues.val().subjectId;
                    var summary = lessonValues.val().summary;
                    var teacherId = lessonValues.val().teacherId;
                    var lesson = new Lesson(teacherId, subjectId, startDate, endDate, photo, summary);
                    lesson.id = id;
                    lessons.push(lesson);
                });
                return lessons;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return value;
            });
        }
    }, {
        key: "retrieve",
        value: function retrieve(id) {
            return new Promise(function (resolve, reject) {
                firebase.database().ref(namespaces.lessons + id).once('value').then(function (snapshot) {
                    var teacherId = snapshot.val().teacherId;
                    var subjectId = snapshot.val().subjectId;
                    var startDate = snapshot.val().startDate;
                    var endDate = snapshot.val().endDate;
                    var photo = snapshot.val().photo;
                    var summary = snapshot.val().summary;
                    var lesson = new Lesson(teacherId, subjectId, startDate, endDate, photo, summary);
                    lesson.id = id;
                    resolve(lesson);
                });
            });
        }
    }]);
    return Lesson;
}();

module.exports = Lesson;
}, 808, null, "Student_Counter/src/lib/Lesson.js");
__d(/* Student_Counter/src/lib/Subject.js */function(global, require, module, exports) {var _firebase = require(419       ); // 419 = firebase

var firebase = babelHelpers.interopRequireWildcard(_firebase);

var Teacher = require(810        ); // 810 = ./Teacher

var namespaces = require(811           ).namespaces; // 811 = ./namespaces

var Subject = function () {
    function Subject(name, acronym, overseersIds) {
        babelHelpers.classCallCheck(this, Subject);

        this.name = name;
        this.acronym = acronym;
        this.overseersIds = overseersIds;
    }

    babelHelpers.createClass(Subject, [{
        key: "save",
        value: function save() {
            var _this = this;

            if (this.id) {
                return firebase.database().ref(namespaces.subjects + this.id).update({
                    name: this.name,
                    acronym: this.acronym,
                    overseersIds: this.overseersIds
                });
            } else {
                return new Promise(function (resolve, reject) {
                    var obj = firebase.database().ref(namespaces.subjects).push(_this);
                    _this.id = obj.key;
                    resolve(_this.id);
                });
            }
        }
    }, {
        key: "delete",
        value: function _delete() {
            firebase.database().ref(namespaces.subjects + this.id).remove();
        }
    }, {
        key: "getOverseers",
        value: function getOverseers() {
            var array, _iterator, _isArray, _i, _ref, overseerId;

            return regeneratorRuntime.async(function getOverseers$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            array = [];
                            _iterator = this.overseersIds, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();

                        case 2:
                            if (!_isArray) {
                                _context.next = 8;
                                break;
                            }

                            if (!(_i >= _iterator.length)) {
                                _context.next = 5;
                                break;
                            }

                            return _context.abrupt("break", 20);

                        case 5:
                            _ref = _iterator[_i++];
                            _context.next = 12;
                            break;

                        case 8:
                            _i = _iterator.next();

                            if (!_i.done) {
                                _context.next = 11;
                                break;
                            }

                            return _context.abrupt("break", 20);

                        case 11:
                            _ref = _i.value;

                        case 12:
                            overseerId = _ref;
                            _context.t0 = array;
                            _context.next = 16;
                            return regeneratorRuntime.awrap(Teacher.retrieve(overseerId));

                        case 16:
                            _context.t1 = _context.sent;

                            _context.t0.push.call(_context.t0, _context.t1);

                        case 18:
                            _context.next = 2;
                            break;

                        case 20:
                            return _context.abrupt("return", array);

                        case 21:
                        case "end":
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: "getLessonsAsync",
        value: function getLessonsAsync() {
            console.log("l76", Lesson);
            console.log("l77", Teacher);
            return firebase.database().ref(namespaces.lessons).once("value").then(function (snapshot) {
                var lessons = [];
                snapshot.forEach(function (lessonValues) {
                    if (lessonValues.subjectId === this.id) {
                        var id = lessonValues.key;
                        var endDate = lessonValues.val().endDate;
                        var photo = lessonValues.val().photo;
                        var startDate = lessonValues.val().startDate;
                        var subjectId = lessonValues.val().subjectId;
                        var summary = lessonValues.val().summary;
                        var teacherId = lessonValues.val().teacherId;
                        var lesson = new Lesson(teacherId, subjectId, startDate, endDate, photo, summary);
                        lesson.id = id;
                        lessons.push(lesson);
                    }
                });
                return lessons;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return value;
            });
        }
    }], [{
        key: "all",
        value: function all() {
            return firebase.database().ref(namespaces.subjects).once("value").then(function (snapshot) {
                var subjects = [];
                snapshot.forEach(function (subjectValues) {
                    var id = subjectValues.key;
                    var name = subjectValues.val().name;
                    var acronym = subjectValues.val().acronym;
                    var overseersIds = subjectValues.val().overseersIds;
                    var subject = new Subject(name, acronym, overseersIds);
                    subject.id = id;
                    subjects.push(subject);
                });
                return subjects;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return value;
            });
        }
    }, {
        key: "retrieve",
        value: function retrieve(id) {
            return new Promise(function (resolve, reject) {
                firebase.database().ref(namespaces.subjects + id).once('value').then(function (snapshot) {
                    var name = snapshot.val().name;
                    var acronym = snapshot.val().acronym;
                    var overseersIds = snapshot.val().overseersIds;
                    var subject = new Subject(name, acronym, overseersIds);
                    subject.id = id;
                    resolve(subject);
                });
            });
        }
    }]);
    return Subject;
}();

module.exports = Subject;
}, 809, null, "Student_Counter/src/lib/Subject.js");
__d(/* Student_Counter/src/lib/Teacher.js */function(global, require, module, exports) {var _firebase = require(419       ); // 419 = firebase

var firebase = babelHelpers.interopRequireWildcard(_firebase);


var namespaces = require(811           ).namespaces; // 811 = ./namespaces

var Teacher = function () {
    function Teacher(name, email, birthDate, photo) {
        babelHelpers.classCallCheck(this, Teacher);

        this.name = name;
        this.email = email;
        this.birthDate = birthDate || new Date(1900, 1, 1);
        this.photo = photo || "no photo";
    }

    babelHelpers.createClass(Teacher, [{
        key: "save",
        value: function save() {
            var _this = this;

            if (this.id) {
                return firebase.database().ref(namespaces.teachers + this.id).update({
                    name: this.name,
                    email: this.email,
                    birthDate: this.birthDate,
                    photo: this.photo
                });
            } else {
                return new Promise(function (resolve, reject) {
                    var obj = firebase.database().ref(namespaces.teachers).push(_this);
                    _this.id = obj.key;
                    resolve(_this.id);
                });
            }
        }
    }, {
        key: "delete",
        value: function _delete() {
            firebase.database().ref(namespaces.teachers + this.id).remove();
        }
    }], [{
        key: "all",
        value: function all() {
            return firebase.database().ref(namespaces.teachers).once("value").then(function (snapshot) {
                var teachers = [];
                snapshot.forEach(function (teacherValues) {
                    var id = teacherValues.key;
                    var name = teacherValues.val().name;
                    var email = teacherValues.val().email;
                    var birthDate = teacherValues.val().birthDate;
                    var photo = teacherValues.val().birthDate;
                    var teacher = new Teacher(name, email, birthDate, photo);
                    teacher.id = id;
                    teachers.push(teacher);
                });
                return teachers;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return value;
            });
        }
    }, {
        key: "retrieve",
        value: function retrieve(id) {
            return new Promise(function (resolve, reject) {
                firebase.database().ref(namespaces.teachers + id).once('value').then(function (snapshot) {
                    var name = snapshot.val().name;
                    var email = snapshot.val().email;
                    var birthDate = snapshot.val().birthDate;
                    var photo = snapshot.val().photo;
                    var teacher = new Teacher(name, email, birthDate, photo);
                    teacher.id = id;
                    resolve(teacher);
                });
            });
        }
    }]);
    return Teacher;
}();

module.exports = Teacher;
}, 810, null, "Student_Counter/src/lib/Teacher.js");
__d(/* Student_Counter/src/lib/namespaces.js */function(global, require, module, exports) {exports.namespaces = {
    classes: "/classes/",
    lessons: "/lessons/",
    presences: "/presences/",
    students: "/students/",
    subjects: "/subjects/",
    teachers: "/teachers/",
    lessonCreate: "/lessonCreate/"
};
}, 811, null, "Student_Counter/src/lib/namespaces.js");
__d(/* Student_Counter/src/screens/LessonCreate.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\LessonCreate.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNavigation = require(490               ); // 490 = react-navigation

var _Header = require(786                   ); // 786 = ../components/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _Teacher = require(810                ); // 810 = ../lib/Teacher.js

var _Teacher2 = babelHelpers.interopRequireDefault(_Teacher);

var Lesson = function (_React$Component) {
    babelHelpers.inherits(Lesson, _React$Component);

    function Lesson() {
        babelHelpers.classCallCheck(this, Lesson);

        var _this = babelHelpers.possibleConstructorReturn(this, (Lesson.__proto__ || Object.getPrototypeOf(Lesson)).call(this));

        _this.state = {};
        return _this;
    }

    babelHelpers.createClass(Lesson, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.getLessonItems();
        }
    }, {
        key: "teacherPicker",
        value: function teacherPicker() {
            return _react2.default.createElement(
                Picker,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 43
                    }
                },
                this.getTeachers().map(function (t) {
                    return _react2.default.createElement(Picker.Item, { label: t.name, value: t.id, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 44
                        }
                    });
                })
            );
        }
    }, {
        key: "render",
        value: function render() {
            var navigate = this.props.navigation.navigate;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 52
                    }
                },
                _react2.default.createElement(_Header2.default, { navigate: navigate, text: "Lesson", __source: {
                        fileName: _jsxFileName,
                        lineNumber: 53
                    }
                }),
                _react2.default.createElement(_reactNative.Button, { onPress: navigate("Lesson"), title: "Go back to lessons", __source: {
                        fileName: _jsxFileName,
                        lineNumber: 54
                    }
                }),
                _react2.default.createElement(_reactNative.TextInput, {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 55
                    }
                })
            );
        }
    }], [{
        key: "getTeachers",
        value: function getTeachers() {
            var teachers;
            return regeneratorRuntime.async(function getTeachers$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            _context.next = 2;
                            return regeneratorRuntime.awrap(_Teacher2.default.all());

                        case 2:
                            teachers = _context.sent;
                            return _context.abrupt("return", teachers.map(function (t) {
                                return t.id;
                            }));

                        case 4:
                        case "end":
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }]);
    return Lesson;
}(_react2.default.Component);

Lesson.navigationOptions = {
    drawerLabel: undefined
};
exports.default = Lesson;
}, 812, null, "Student_Counter/src/screens/LessonCreate.js");
__d(/* Student_Counter/src/screens/Subject.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\Subject.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNavigation = require(490               ); // 490 = react-navigation

var _Header = require(786                   ); // 786 = ../components/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _SubjectItem = require(814                           ); // 814 = ../components/SubjectItem.js

var _SubjectItem2 = babelHelpers.interopRequireDefault(_SubjectItem);

var _Subject = require(809             ); // 809 = ../lib/Subject

var _Subject2 = babelHelpers.interopRequireDefault(_Subject);

var Subject = function (_React$Component) {
    babelHelpers.inherits(Subject, _React$Component);

    function Subject() {
        babelHelpers.classCallCheck(this, Subject);

        var _this = babelHelpers.possibleConstructorReturn(this, (Subject.__proto__ || Object.getPrototypeOf(Subject)).call(this));

        _this.state = {
            subjects: undefined
        };
        return _this;
    }

    babelHelpers.createClass(Subject, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.getSubjects();
        }
    }, {
        key: "getSubjects",
        value: function getSubjects() {
            var _this2 = this;

            _Subject2.default.all().then(function (subjects) {
                var color = 1;
                var subjs = subjects.map(function (subject) {
                    color == 1 ? color = 0 : color = 1;
                    return _react2.default.createElement(_SubjectItem2.default, { key: subject.id, name: subject.acronym, color: color == 0 ? "#90CAF9" : "#b1d9fa", __source: {
                            fileName: _jsxFileName,
                            lineNumber: 37
                        }
                    });
                });
                _this2.setState({
                    subjects: subjs
                });
            });
        }
    }, {
        key: "render",
        value: function render() {
            var navigate = this.props.navigation.navigate;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 47
                    }
                },
                _react2.default.createElement(_Header2.default, { navigate: navigate, text: "Subject", __source: {
                        fileName: _jsxFileName,
                        lineNumber: 48
                    }
                }),
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    { height: _reactNative.Dimensions.get("window").height - 90, showsVerticalScrollIndicator: false, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 49
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.subjectContent, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 50
                            }
                        },
                        this.state.subjects
                    )
                )
            );
        }
    }]);
    return Subject;
}(_react2.default.Component);

Subject.navigationOptions = {
    drawerLabel: "Subject"
};
exports.default = Subject;
}, 813, null, "Student_Counter/src/screens/Subject.js");
__d(/* Student_Counter/src/components/SubjectItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\components\\SubjectItem.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _icons = require(791                ); // 791 = ../icons/icons.js

var _icons2 = babelHelpers.interopRequireDefault(_icons);

var SubjectItem = function (_React$Component) {
    babelHelpers.inherits(SubjectItem, _React$Component);

    function SubjectItem(props) {
        babelHelpers.classCallCheck(this, SubjectItem);
        return babelHelpers.possibleConstructorReturn(this, (SubjectItem.__proto__ || Object.getPrototypeOf(SubjectItem)).call(this, props));
    }

    babelHelpers.createClass(SubjectItem, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                _reactNative.TouchableHighlight,
                { underlayColor: "white", onPress: function onPress() {
                        return alert("Subject");
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 12
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_Styles2.default.subjectItem, { backgroundColor: this.props.color }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 13
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: _Styles2.default.subjectItemText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 14
                            }
                        },
                        this.props.name
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableHighlight,
                        { underlayColor: this.props.color, onPress: function onPress() {
                                return alert("Delete");
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 15
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default.garbage, style: _Styles2.default.lessonItemDelete, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 16
                            }
                        })
                    )
                )
            );
        }
    }]);
    return SubjectItem;
}(_react2.default.Component);

exports.default = SubjectItem;
}, 814, null, "Student_Counter/src/components/SubjectItem.js");
__d(/* Student_Counter/src/screens/Teacher.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\Teacher.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNavigation = require(490               ); // 490 = react-navigation

var _Header = require(786                   ); // 786 = ../components/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _Styles = require(787                  ); // 787 = ../styles/Styles.js

var _Styles2 = babelHelpers.interopRequireDefault(_Styles);

var _icons = require(791                ); // 791 = ../icons/icons.js

var _icons2 = babelHelpers.interopRequireDefault(_icons);

var Teacher = function (_React$Component) {
    babelHelpers.inherits(Teacher, _React$Component);

    function Teacher() {
        babelHelpers.classCallCheck(this, Teacher);
        return babelHelpers.possibleConstructorReturn(this, (Teacher.__proto__ || Object.getPrototypeOf(Teacher)).apply(this, arguments));
    }

    babelHelpers.createClass(Teacher, [{
        key: "render",
        value: function render() {
            var navigate = this.props.navigation.navigate;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 24
                    }
                },
                _react2.default.createElement(_Header2.default, { navigate: navigate, text: "Teacher", __source: {
                        fileName: _jsxFileName,
                        lineNumber: 25
                    }
                }),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: _Styles2.default.teacherContent, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 26
                        }
                    },
                    _react2.default.createElement(_reactNative.Image, { source: require(798                   ), style: _Styles2.default.teacherImage, __source: { // 798 = ../icons/userPic.jpg
                            fileName: _jsxFileName,
                            lineNumber: 27
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.teacherInfo, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 28
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.teacherInfoText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 29
                                }
                            },
                            "John Doe"
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.teacherInfoText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 30
                                }
                            },
                            "21"
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _Styles2.default.teacherNumbers, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 32
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default.subject, style: _Styles2.default.teacherNumberIcon, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 33
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.teacherNumberText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 34
                                }
                            },
                            "99"
                        ),
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default.class, style: _Styles2.default.teacherNumberIcon, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 35
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.teacherNumberText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 36
                                }
                            },
                            "99"
                        ),
                        _react2.default.createElement(_reactNative.Image, { source: _icons2.default.student, style: _Styles2.default.teacherNumberIcon, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 37
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _Styles2.default.teacherNumberText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 38
                                }
                            },
                            "99"
                        )
                    )
                )
            );
        }
    }]);
    return Teacher;
}(_react2.default.Component);

Teacher.navigationOptions = {
    drawerLabel: "Teacher"
};
exports.default = Teacher;
}, 815, null, "Student_Counter/src/screens/Teacher.js");
__d(/* Student_Counter/src/screens/Student.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\Student.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNavigation = require(490               ); // 490 = react-navigation

var _Header = require(786                   ); // 786 = ../components/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var Student = function (_React$Component) {
    babelHelpers.inherits(Student, _React$Component);

    function Student() {
        babelHelpers.classCallCheck(this, Student);
        return babelHelpers.possibleConstructorReturn(this, (Student.__proto__ || Object.getPrototypeOf(Student)).apply(this, arguments));
    }

    babelHelpers.createClass(Student, [{
        key: "render",
        value: function render() {
            var navigate = this.props.navigation.navigate;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 22
                    }
                },
                _react2.default.createElement(_Header2.default, { navigate: navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 23
                    }
                }),
                _react2.default.createElement(
                    _reactNative.Text,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 24
                        }
                    },
                    "Student Screen"
                )
            );
        }
    }]);
    return Student;
}(_react2.default.Component);

Student.navigationOptions = {
    drawerLabel: "Student"
};
exports.default = Student;
}, 816, null, "Student_Counter/src/screens/Student.js");
__d(/* Student_Counter/src/screens/Class.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = "C:\\Users\\Ricardo Morais\\Documents\\Student_Counter2\\Student_Counter\\src\\screens\\Class.js";

var _react = require(13     ); // 13 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(46            ); // 46 = react-native

var _reactNavigation = require(490               ); // 490 = react-navigation

var _Header = require(786                   ); // 786 = ../components/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var Class = function (_React$Component) {
    babelHelpers.inherits(Class, _React$Component);

    function Class() {
        babelHelpers.classCallCheck(this, Class);
        return babelHelpers.possibleConstructorReturn(this, (Class.__proto__ || Object.getPrototypeOf(Class)).apply(this, arguments));
    }

    babelHelpers.createClass(Class, [{
        key: "render",
        value: function render() {
            var navigate = this.props.navigation.navigate;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 22
                    }
                },
                _react2.default.createElement(_Header2.default, { navigate: navigate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 23
                    }
                }),
                _react2.default.createElement(
                    _reactNative.Text,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 24
                        }
                    },
                    "Class Screen"
                )
            );
        }
    }]);
    return Class;
}(_react2.default.Component);

Class.navigationOptions = {
    drawerLabel: "Class"
};
exports.default = Class;
}, 817, null, "Student_Counter/src/screens/Class.js");
__d(/* Student_Counter/src/lib/Class.js */function(global, require, module, exports) {var _firebase = require(419       ); // 419 = firebase

var firebase = babelHelpers.interopRequireWildcard(_firebase);

var Student = require(819        ); // 819 = ./Student
var Subject = require(809        ); // 809 = ./Subject

var namespaces = require(811           ).namespaces; // 811 = ./namespaces

var Class = function () {
    function Class(name, studentIds, subjectIds) {
        babelHelpers.classCallCheck(this, Class);

        this.name = name;
        this.studentIds = studentIds;
        this.subjectIds = subjectIds;
    }

    babelHelpers.createClass(Class, [{
        key: "save",
        value: function save() {
            return firebase.database().ref(namespaces.classes + this.name).set({
                studentIds: this.studentIds,
                subjectIds: this.subjectIds
            });
        }
    }, {
        key: "delete",
        value: function _delete() {
            firebase.database().ref(namespaces.classes + this.name).remove();
        }
    }, {
        key: "getStudents",
        value: function getStudents() {
            var array, _iterator, _isArray, _i, _ref, studentId;

            return regeneratorRuntime.async(function getStudents$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            array = [];
                            _iterator = this.studentIds, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();

                        case 2:
                            if (!_isArray) {
                                _context.next = 8;
                                break;
                            }

                            if (!(_i >= _iterator.length)) {
                                _context.next = 5;
                                break;
                            }

                            return _context.abrupt("break", 20);

                        case 5:
                            _ref = _iterator[_i++];
                            _context.next = 12;
                            break;

                        case 8:
                            _i = _iterator.next();

                            if (!_i.done) {
                                _context.next = 11;
                                break;
                            }

                            return _context.abrupt("break", 20);

                        case 11:
                            _ref = _i.value;

                        case 12:
                            studentId = _ref;
                            _context.t0 = array;
                            _context.next = 16;
                            return regeneratorRuntime.awrap(Student.retrieve(studentId));

                        case 16:
                            _context.t1 = _context.sent;

                            _context.t0.push.call(_context.t0, _context.t1);

                        case 18:
                            _context.next = 2;
                            break;

                        case 20:
                            return _context.abrupt("return", array);

                        case 21:
                        case "end":
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: "getSubjects",
        value: function getSubjects() {
            var array, _iterator2, _isArray2, _i2, _ref2, subjectId;

            return regeneratorRuntime.async(function getSubjects$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            array = [];
                            _iterator2 = this.subjectIds, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();

                        case 2:
                            if (!_isArray2) {
                                _context2.next = 8;
                                break;
                            }

                            if (!(_i2 >= _iterator2.length)) {
                                _context2.next = 5;
                                break;
                            }

                            return _context2.abrupt("break", 20);

                        case 5:
                            _ref2 = _iterator2[_i2++];
                            _context2.next = 12;
                            break;

                        case 8:
                            _i2 = _iterator2.next();

                            if (!_i2.done) {
                                _context2.next = 11;
                                break;
                            }

                            return _context2.abrupt("break", 20);

                        case 11:
                            _ref2 = _i2.value;

                        case 12:
                            subjectId = _ref2;
                            _context2.t0 = array;
                            _context2.next = 16;
                            return regeneratorRuntime.awrap(Subject.retrieve(subjectId));

                        case 16:
                            _context2.t1 = _context2.sent;

                            _context2.t0.push.call(_context2.t0, _context2.t1);

                        case 18:
                            _context2.next = 2;
                            break;

                        case 20:
                            return _context2.abrupt("return", array);

                        case 21:
                        case "end":
                            return _context2.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: "numberOfregisteredStudentsAsync",
        value: function numberOfregisteredStudentsAsync() {
            var that = this;
            return firebase.database().ref(namespaces.students).once("value").then(function (snapshot) {
                var numberStudents = 0;
                snapshot.forEach(function (student) {
                    if (that.studentIds.includes(student.key)) {
                        numberStudents++;
                    }
                });
                return numberStudents;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return {
                    name: that.name,
                    numberStudents: value
                };
            });
        }
    }, {
        key: "getClassAssiduity",
        value: function getClassAssiduity() {}
    }], [{
        key: "all",
        value: function all() {
            return firebase.database().ref(namespaces.classes).once("value").then(function (snapshot) {
                var classes = [];
                snapshot.forEach(function (classValues) {
                    var name = classValues.key;
                    var studentId = classValues.val().studentIds;
                    var subjectIds = classValues.val().subjectIds;
                    classes.push(new Class(name, studentId, subjectIds));
                });
                return classes;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return value;
            });
        }
    }, {
        key: "retrieve",
        value: function retrieve(name) {
            return new Promise(function (resolve, reject) {
                firebase.database().ref(namespaces.classes + name).once('value').then(function (snapshot) {
                    var studentIds = snapshot.val().studentIds;
                    var subjectIds = snapshot.val().subjectIds;
                    var clazz = new Class(name, studentIds, subjectIds);
                    resolve(clazz);
                });
            });
        }
    }]);
    return Class;
}();

module.exports = Class;
}, 818, null, "Student_Counter/src/lib/Class.js");
__d(/* Student_Counter/src/lib/Student.js */function(global, require, module, exports) {var _firebase = require(419       ); // 419 = firebase

var firebase = babelHelpers.interopRequireWildcard(_firebase);


var Presence = require(820         ); // 820 = ./Presence

var namespaces = require(811           ).namespaces; // 811 = ./namespaces

var Student = function () {
    function Student(number, name, birthDate, email, photo) {
        babelHelpers.classCallCheck(this, Student);

        this.number = number;
        this.name = name;
        this.birthDate = birthDate;
        this.email = email;
        this.photo = photo || "no photo";
    }

    babelHelpers.createClass(Student, [{
        key: "save",
        value: function save() {
            return firebase.database().ref(namespaces.students + this.number).set({
                name: this.name,
                email: this.email,
                birthDate: this.birthDate,
                photo: this.photo
            });
        }
    }, {
        key: "delete",
        value: function _delete() {
            firebase.database().ref(namespaces.students + this.number).remove();
        }
    }, {
        key: "getPresencesAsync",
        value: function getPresencesAsync(subjectId) {
            return firebase.database().ref(namespaces.presences).once("value").then(function (snapshot) {
                var numberPresences = 0;
                var numberAbsences = 0;
                var numberDelays = 0;
                var promises = [];
                snapshot.forEach(function (presence) {
                    var promise = firebase.database().ref(namespaces.lessons + presence.val().lessonId).once("value").then(function (snapshot2) {
                        if (snapshot2.val().subjectId === subjectId) {
                            presence.val().present ? numberPresences += 1 : numberAbsences += 1;
                            numberDelays += presence.val().delay ? 1 : 0;
                        }
                    }, function (error) {
                        console.log("error fetching presences:", error);
                    });
                    promises.push(promise);
                });
                return Promise.all(promises).then(function () {
                    return {
                        presences: numberPresences,
                        absences: numberAbsences,
                        delays: numberDelays
                    };
                });
            }, function (error) {
                console.error(error);
            }).then(function (values) {
                return values;
            });
        }
    }], [{
        key: "all",
        value: function all() {
            return firebase.database().ref(namespaces.students).once("value").then(function (snapshot) {
                var students = [];
                snapshot.forEach(function (studentValues) {
                    var number = studentValues.key;
                    var name = studentValues.val().name;
                    var email = studentValues.val().email;
                    var birthDate = studentValues.val().birthDate;
                    var photo = studentValues.val().photo;
                    var student = new Student(number, name, birthDate, email, photo);
                    students.push(student);
                });
                return students;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return value;
            });
        }
    }, {
        key: "retrieve",
        value: function retrieve(number) {
            return new Promise(function (resolve, reject) {
                firebase.database().ref(namespaces.students + number).once('value').then(function (snapshot) {
                    var name = snapshot.val().name;
                    var email = snapshot.val().email;
                    var birthDate = snapshot.val().birthDate;
                    var photo = snapshot.val().photo;
                    var student = new Student(number, name, birthDate, email, photo);
                    resolve(student);
                });
            });
        }
    }]);
    return Student;
}();

module.exports = Student;
}, 819, null, "Student_Counter/src/lib/Student.js");
__d(/* Student_Counter/src/lib/Presence.js */function(global, require, module, exports) {var _firebase = require(419       ); // 419 = firebase

var firebase = babelHelpers.interopRequireWildcard(_firebase);

var Student = require(819        ); // 819 = ./Student
var Lesson = require(808       ); // 808 = ./Lesson

var namespaces = require(811           ).namespaces; // 811 = ./namespaces

var Presence = function () {
    function Presence(studentId, lessonId, present, delay) {
        babelHelpers.classCallCheck(this, Presence);

        this.studentId = studentId;
        this.lessonId = lessonId;
        this.present = present;
        this.delay = present ? delay : false;
    }

    babelHelpers.createClass(Presence, [{
        key: "save",
        value: function save() {
            var _this = this;

            if (this.id) {
                return firebase.database().ref(namespaces.presences + this.id).update({
                    studentId: this.studentId,
                    lessonId: this.lessonId,
                    present: this.present,
                    delay: this.delay
                });
            } else {
                return new Promise(function (resolve, reject) {
                    var obj = firebase.database().ref(namespaces.presences).push(_this);
                    _this.id = obj.key;
                    resolve(_this.id);
                });
            }
        }
    }, {
        key: "delete",
        value: function _delete() {
            firebase.database().ref(namespaces.presences + this.id).remove();
        }
    }, {
        key: "getStudent",
        value: function getStudent() {
            return regeneratorRuntime.async(function getStudent$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            _context.next = 2;
                            return regeneratorRuntime.awrap(Student.retrieve(this.studentId));

                        case 2:
                            return _context.abrupt("return", _context.sent);

                        case 3:
                        case "end":
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: "getLesson",
        value: function getLesson() {
            return regeneratorRuntime.async(function getLesson$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            _context2.next = 2;
                            return regeneratorRuntime.awrap(Lesson.retrieve(this.lessonId));

                        case 2:
                            return _context2.abrupt("return", _context2.sent);

                        case 3:
                        case "end":
                            return _context2.stop();
                    }
                }
            }, null, this);
        }
    }], [{
        key: "all",
        value: function all() {
            return firebase.database().ref(namespaces.presences).once("value").then(function (snapshot) {
                var presences = [];
                snapshot.forEach(function (presenceValues) {
                    var id = presenceValues.key;
                    var delay = presenceValues.val().delay;
                    var present = presenceValues.val().present;
                    var lessonId = presenceValues.val().lessonId;
                    var studentId = presenceValues.val().studentId;
                    var presence = new Presence(studentId, lessonId, present, delay);
                    presence.id = id;
                    presences.push(presence);
                });
                return presences;
            }, function (error) {
                console.error(error);
            }).then(function (value) {
                return value;
            });
        }
    }, {
        key: "retrieve",
        value: function retrieve(id) {
            return new Promise(function (resolve, reject) {
                firebase.database().ref(namespaces.presences + id).once('value').then(function (snapshot) {
                    var studentId = snapshot.val().studentId;
                    var lessonId = snapshot.val().lessonId;
                    var present = snapshot.val().present;
                    var delay = snapshot.val().delay;
                    var lesson = new Lesson(studentId, lessonId, present, delay);
                    lesson.id = id;
                    resolve(lesson);
                });
            });
        }
    }]);
    return Presence;
}();

module.exports = Presence;
}, 820, null, "Student_Counter/src/lib/Presence.js");
;require(139);
;require(0);
//# sourceMappingURL=/index.android.map?platform=android